{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stopWordFilter"]},"docs":[{"location":"About_us/","title":"\u5173\u4e8e\u6211\u4eec","text":"","tags":["bullettech"]},{"location":"About_us/#1","title":"1 \u56e2\u961f\u7b80\u4ecb","text":"<p>\u5927\u5bb6\u597d\uff0c\u8fd9\u91cc\u662fBulletTech\uff01</p> <p>\u6211\u4eec\u7684\u56e2\u961f\u4e2d\u6709\u591a\u540d\u6d88\u8d39\u91d1\u878d\u884c\u4e1a\u7684\u6570\u636e\u5206\u6790\u5e08\u3001\u6570\u636e\u79d1\u5b66\u5bb6\u3002\u56e0\u4e3a\u70ed\u7231\u6570\u636e\u79d1\u5b66\u3001\u5584\u4e8e\u89c2\u5bdf\u751f\u6d3b\u3001\u603b\u7ed3\u7ecf\u9a8c\uff0c\u5e76\u4e14\u60f3\u901a\u8fc7\u6587\u5b57\u5c06\u6211\u4eec\u7684\u6240\u89c1\u6240\u95fb\u5206\u4eab\u7ed9\u66f4\u591a\u4eba\uff0c\u6211\u4eec\u805a\u5230\u4e86\u4e00\u8d77\uff0c\u5e76\u521b\u529e\u4e86BulletTech\u3002</p>","tags":["bullettech"]},{"location":"About_us/#2","title":"2 \u5185\u5bb9\u6982\u89c8","text":"<p>\u6211\u4eec\u4f1a\u70f9\u996a\u7f8e\u5473\u53c8\u8425\u517b\u7684\u79d1\u6280\u5185\u5bb9\u7ed9\u5927\u5bb6\uff0c\u4e3b\u8981\u5305\u542b\u4e24\u79cd\u4f73\u80b4\uff1a</p> <ul> <li>\u79d1\u6280\u6b63\u9910\uff1a\u805a\u7126\u7f16\u7a0b\u3001\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\uff0c\u5b9a\u671f\u66f4\u65b0\u539f\u521b\u7cbe\u534e\u3001\u70ed\u70b9\u8d44\u8baf\u3002</li> <li>\u79d1\u6280\u751c\u70b9\uff1a\u4e13\u6ce8\u4e8e\u5206\u4eab\u65e5\u5e38\u751f\u6d3b\u4e2d\u7684\u79d1\u6280\u4ea7\u54c1\u4f53\u9a8c\u3001app\u4f7f\u7528\u6280\u5de7\u3001\u6570\u636e\u79d1\u5b66\u5de5\u4f5c\u7ecf\u9a8c\u3001\u9762\u8bd5\u6280\u5de7\u7b49\u3002</li> </ul> <p>\u6211\u4eec\u4f1a\u575a\u6301\u5206\u4eab\u5bf9\u5927\u5bb6\u6709\u7528\u7684\uff0c\u751f\u6d3b\u4e2d\u6709\u8da3\u7684\u5185\u5bb9\uff0c\u5e0c\u671b\u5404\u4f4d\u4fdd\u6301\u5173\u6ce8\uff0c\u8c22\u8c22\uff01</p>","tags":["bullettech"]},{"location":"About_us/#3","title":"3 \u8054\u7cfb\u6211\u4eec","text":"<p>\u5982\u60f3\u8be6\u7ec6\u4ea4\u6d41\uff0c\u8bf7\u626b\u7801\u6dfb\u52a0\u7ba1\u7406\u5458\u5fae\u4fe1\u3002</p> BulletTech \u5fae\u4fe1\u5ba2\u670d","tags":["bullettech"]},{"location":"Dessert_blog_intro/","title":"\u79d1\u6280\u751c\u70b9\u7b80\u4ecb","text":"<p>\u5728\u8fd9\u4e2a\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u4f1a\u5206\u4eab\u65e5\u5e38\u751f\u6d3b\u3001\u5de5\u4f5c\u4e2d\u5b9e\u7528\u3001\u6709\u8da3\u7684\u6240\u89c1\u6240\u95fb\u4ee5\u53ca\u7ecf\u9a8c\u548c\u6280\u5de7\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u5de5\u4f5c\u4f53\u9a8c</li> <li>\u79d1\u6280\u4ea7\u54c1\u7684\u4f7f\u7528\u4f53\u9a8c</li> <li>\u79d1\u6280\u4ea7\u54c1\u3001\u8f6f\u4ef6\u3001Apps\u4f7f\u7528\u6280\u5de7</li> <li>\u5176\u4ed6\u4efb\u4f55\u6709\u8da3\u7684\u4e8b\u60c5\uff08\u704c\u6c34\uff09</li> </ul> <p>\u5982\u679c\u4f60\u6709\u60f3\u770b\u7684\u5185\u5bb9\uff0c\u4e0d\u59a8\u5728\u5e95\u90e8\u7684\u8bc4\u8bba\u533a\u544a\u8bc9\u6211\u4eec\u3002 \u5982\u679c\u6211\u4eec\u61c2\uff0c\u4e0b\u6b21\u4e00\u5b9a\u5199  </p>"},{"location":"Main_course_blog_intro/","title":"\u79d1\u6280\u6b63\u9910\u7b80\u4ecb","text":"<p>\u5728\u8fd9\u4e2a\u677f\u5757\u4e2d\uff0c\u6211\u4eec\u4f1a\u5206\u4eab\u5173\u4e8e\u7f16\u7a0b\u3001\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7684\u7ecf\u9a8c\u6280\u5de7\u3001\u548c\u76f8\u5173\u70ed\u70b9\u8d44\u8baf\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u7f16\u7a0b\u6280\u5de7\u5b9e\u6218: Python\uff0cSQL\uff0cSpark\u7b49</li> <li>\u6570\u636e\u5206\u6790\u7ecf\u9a8c\u6280\u5de7\u5206\u4eab</li> <li>\u6570\u636e\u5efa\u6a21\u5b9e\u6218\uff1a\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49</li> <li>\u70ed\u70b9\u8d44\u8baf\uff1a\u7f16\u7a0b\u8bed\u8a00\u3001\u5f00\u53d1\u6846\u67b6\u65b0\u7248\u672c\u3001\u65b0\u7279\u6027\u4ecb\u7ecd\u7b49\uff08\u704c\u6c34\uff09</li> </ul> <p>\u5982\u679c\u4f60\u6709\u60f3\u770b\u7684\u5185\u5bb9\uff0c\u4e0d\u59a8\u5728\u5e95\u90e8\u7684\u8bc4\u8bba\u533a\u544a\u8bc9\u6211\u4eec\u3002 \u5982\u679c\u6211\u4eec\u61c2\uff0c\u4e0b\u6b21\u4e00\u5b9a\u5199  </p>"},{"location":"Our_story/","title":"\u6211\u4eec\u7684\u6545\u4e8b","text":"<p>\u8fd9\u7bc7\u4ecb\u7ecd\u81ea\u5df1\u7684\u6587\u7ae0\u89c4\u5212\u4e86\u5f88\u4e45\uff0c\u9996\u5148\u4e0d\u77e5\u5927\u5bb6\u662f\u5426\u7231\u770b\uff0c\u540c\u65f6\u4e5f\u5728\u659f\u914c\u5982\u4f55\u8ba9\u5927\u5bb6\u660e\u767d\u6211\u4eec\u505aBulletTech\u7684\u52a8\u673a\u548c\u76ee\u6807\u3002\u6700\u7ec8\u6211\u4eec\u51b3\u5b9a\u7528\u8bb2\u6545\u4e8b\u7684\u65b9\u5f0f\u548c\u5927\u5bb6\u804a\u804a\u8fd9\u4e2a\u56e2\u961f\u548c\u6bcf\u4e2a\u56e2\u961f\u6210\u5458\uff0c\u8fd9\u6837\u7684\u65b9\u5f0f\u5e94\u8be5\u66f4\u5bb9\u6613\u88ab\u5927\u5bb6\u63a5\u53d7\u3002\u8bf7\u6ce8\u610f\uff0c\u6587\u4e2d\u4f7f\u7528\u201c\u6211\u4eec\u201d\u4ee3\u6307\u56e2\u961f\uff0c\u800c\u201c\u6211\u201d\u5728\u6bcf\u4e2a\u5c0f\u6807\u9898\u4e0b\u4ee3\u6307\u6807\u9898\u4e2d\u7684\u4eba\u3002</p>","tags":["bullettech"]},{"location":"Our_story/#bullettech","title":"\u5173\u4e8eBulletTech","text":"<p>\u5fd7\u540c\u9053\u5408\u7684\u4eba\u5728\u7279\u5b9a\u5951\u673a\u4e0b\u4f1a\u805a\u5728\u4e00\u8d77\u4e3a\u76f8\u540c\u7684\u76ee\u6807\u5de5\u4f5c\uff0c\u5c06\u60f3\u6cd5\u53d8\u4e3a\u5b9e\u9645\u884c\u52a8\u3002\u5bf9\u4e8e\u6211\u4eec\uff0c\u5951\u673a\u4e3b\u8981\u662f\u5bb6\u5ead\u5173\u7cfb\u7684\u53d8\u5316\u3001\u75ab\u60c5\u7684\u5f71\u54cd\u3001\u884c\u4e1a\u5927\u73af\u5883\u7684\u53d8\u5316\u3001\u804c\u4e1a\u8fdb\u7a0b\u7684\u6539\u53d8\u3001\u670b\u53cb\u6765\u5f80\u7b49\u3002\u8fd9\u4e9b\u4e8b\u60c5\u8ba9\u6211\u4eec\u601d\u8003\u5982\u4f55\u5c06\u81ea\u5df1\u6240\u89c1\u6240\u5f97\u5206\u4eab\u7ed9\u66f4\u591a\u4eba\u3001\u4e3a\u4ed6\u4eba\u63d0\u4f9b\u5e2e\u52a9\uff0c\u540c\u65f6\u4e5f\u5bf9\u81ea\u5df1\u8fdb\u884c\u4e00\u756a\u5386\u7ec3\uff0c\u770b\u770b\u4ece\u96f6\u5f00\u59cb\u80fd\u5426\u505a\u70b9\u50cf\u6837\u7684\u4e1c\u897f\u51fa\u6765\u3002</p> <p>\u7531\u4e8e\u56e2\u961f\u6210\u5458\u90fd\u4ece\u4e8b\u6570\u636e\u79d1\u5b66\u7684\u5de5\u4f5c\uff0c\u5206\u4eab\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u77e5\u8bc6\u3001\u6280\u80fd\u548c\u79d1\u6280\u4ea7\u54c1\u987a\u7406\u6210\u7ae0\u5730\u6210\u4e3a\u4e86\u9996\u9009\u3002\u4e0d\u6b62\u4e8e\u81ea\u5a92\u4f53\uff0c\u66f4\u8fdb\u4e00\u6b65\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u80fd\u6363\u9f13\u51fa\u70b9\u5b9e\u9645\u7684\uff0c\u6253\u9020\u4e00\u4e9b\u89e3\u51b3\u65e5\u5e38\u751f\u6d3b\u75db\u70b9\u3001\u6709\u76ca\u8eab\u5fc3\u5065\u5eb7\u7684\u6570\u636e\u4ea7\u54c1\u3002\u5728\u7b79\u5907\u9879\u76ee\u65f6\uff0c\u6211\u4eec\u5236\u5b9a\u4e86\u5404\u4e2a\u53d1\u5c55\u9636\u6bb5\u7684\u8ba1\u5212\u3001\u7814\u7a76\u4e86\u8bb8\u591a\u540c\u7c7b\u578b\u7684\u56e2\u961f\u3001\u642d\u5efa\u4e86\u56e2\u961f\u534f\u4f5c\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u57282021\u5e745\u670823\u65e5\u6b63\u5f0f\u5f00\u542f\u4e86\u5f81\u9014\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5f88\u660e\u786e\uff1a</p> <ul> <li> \u521b\u5efa\u9ad8\u8d28\u91cf\u7684\u79d1\u6280&amp;\u6570\u636e\u79d1\u5b66\u8f93\u51fa\u9891\u9053\uff0c\u5206\u4eab\u5b9e\u7528\u3001\u6709\u8da3\u7684\u77e5\u8bc6\u548c\u6280\u80fd</li> <li> \u6253\u9020\u597d\u7528\u3001\u6709\u8da3\u7684\u6570\u636e\u4ea7\u54c1\uff0c\u89e3\u51b3\u7528\u6237\u75db\u70b9</li> <li> \u4e0e\u66f4\u591a\u7684\u7528\u6237\u5efa\u7acb\u7d27\u5bc6\u8fde\u63a5\u3001\u6269\u5927\u5bf9\u7528\u6237\u79ef\u6781\u6b63\u9762\u7684\u5f71\u54cd</li> <li> \u7ed3\u8bc6\u66f4\u591a\u5fd7\u540c\u9053\u5408\u7684\u4eba\u3001\u5171\u540c\u53d1\u5c55\u8fd9\u9879\u4e8b\u4e1a</li> </ul> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u3001\u6211\u4eec\u5efa\u7acb\u4e86\u5982\u4e0b\u6e20\u9053\uff1a</p> <ul> <li>GitHub\uff0cBulletTech Organization\uff0c\u5728\u6b64\u6211\u4eec\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u535a\u5ba2\uff0c\u5206\u4eab\u6570\u636e\u79d1\u5b66\u7684\u77e5\u8bc6&amp;\u4ee3\u7801\u4ee5\u53ca\u79d1\u6280\u4ea7\u54c1\u7684\u4f53\u9a8c</li> <li>Wechat\u5fae\u4fe1\u516c\u4f17\u53f7\uff0cBulletTech\uff0c\u4e3b\u6218\u573a</li> <li>\u77e5\u4e4e\uff0cBulletTech\uff0c\u5185\u5bb9\u5206\u53d1\u6e20\u9053\uff0c\u5c06\u540c\u6b65\u53d1\u8868\u5fae\u4fe1\u516c\u4f17\u53f7\u91cc\u7684\u6587\u7ae0</li> <li>\u4eca\u65e5\u5934\u6761\uff0cBulletTech\uff0c\u5185\u5bb9\u5206\u53d1\u6e20\u9053\uff0c\u5c06\u540c\u6b65\u53d1\u8868\u5fae\u4fe1\u516c\u4f17\u53f7\u91cc\u7684\u6587\u7ae0</li> <li>CSDN\uff0cBulletTech\uff0c\u5185\u5bb9\u5206\u53d1\u6e20\u9053\uff0c\u5c06\u540c\u6b65\u53d1\u8868\u5fae\u4fe1\u516c\u4f17\u53f7\u91cc\u504f\u6280\u672f\u578b\u7684\u6587\u7ae0</li> <li>\u5c0f\u7ea2\u4e66\uff0cBulletTech\uff0c\u5185\u5bb9\u5206\u53d1\u6e20\u9053\uff0c\u5c06\u540c\u6b65\u53d1\u8868\u5fae\u4fe1\u516c\u4f17\u53f7\u91cc\u7684\u77ed\u89c6\u9891</li> </ul> <p>\u8fd9\u4e9b\u6e20\u9053\u7684\u53cd\u9988\u5bf9\u4e8e\u6211\u4eec\u7684\u53d1\u5c55\u90fd\u81f3\u5173\u91cd\u8981\uff0c\u5185\u5bb9\u8f93\u51fa\u7684\u91cd\u70b9\u5c06\u6839\u636e\u7528\u6237\u7684\u58f0\u97f3\u8fdb\u884c\u5feb\u901f\u8c03\u6574\uff0c\u786e\u4fdd\u5185\u5bb9\u5bf9\u5927\u5bb6\u662f\u6709\u7528\u7684\u3002</p>","tags":["bullettech"]},{"location":"Our_story/#tina","title":"Tina\u7684\u6545\u4e8b","text":"Tina <p>\u56e0\u4e3a\u672c\u79d1\u5b66\u7684\u662f\u7535\u5b50\u5546\u52a1\u4e13\u4e1a\uff0c\u5b66\u4e86\u56db\u5e74\u4e0b\u6765\uff0c\u611f\u89c9\u8fd9\u95e8\u4e13\u4e1a\u5f88\u6742\u3002\u65e2\u5b66\u4e86\u70b9\u8ba1\u7b97\u673a\u8bfe\u7a0b\uff0c\u53c8\u5b66\u4e9b\u5546\u4e1a\u7684\u8bfe\u7a0b\uff0c\u4f46\u81ea\u5df1\u5e76\u6ca1\u6709\u5f88\u7cbe\u901a\u4efb\u4f55\u4e00\u4e2a\u65b9\u5411,\u6240\u4ee5\u51b3\u5b9a\u7ee7\u7eed\u9009\u62e9\u4e00\u4e2a\u65b9\u5411\u653b\u8bfb\u7814\u7a76\u751f\u3002\u56de\u60f3\u8d77\u6765\u611f\u89c9\u633a\u597d\u7b11\u7684\uff0c\u6700\u4e00\u5f00\u59cb\u6211\u9009\u62e9\u7684\u662f\u53bb\u7f8e\u56fd\u8bfb\u5e02\u573a\u8425\u9500\u4e13\u4e1a\uff0c\u5f53\u65f6\u5c31\u6709\u4e00\u4f4d\u524d\u8f88\u63a2\u8ba8\u65f6\u4ed6\u6559\u4f1a\u6211\u5206\u6790\u81ea\u8eab\u7684\u5229\u5f0a\u53bb\u9009\u62e9\u771f\u6b63\u9002\u5408\u81ea\u5df1\u7684\u4e13\u4e1a\u3002\u56e0\u4e3a\u5b66\u4e86\u4e00\u4e9bSQL\u8bfe\u7a0b\u548cJava\u7406\u8bba\u57fa\u7840\uff0c\u611f\u89c9\u548c\u4ee3\u7801\u6253\u4ea4\u9053\u53ef\u4ee5\u8ba9\u81ea\u5df1\u9759\u4e0b\u5fc3\u6765\uff0c\u751a\u81f3\u8fd8\u80fd\u611f\u89c9\u5230\u6ee1\u8db3\u611f\uff0c\u800c\u5b66\u4e60\u5e02\u573a\u8425\u9500\u5bf9\u8bed\u8a00\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u518d\u7ed3\u5408\u5bf9\u5f53\u65f6\u5c31\u4e1a\u524d\u666f\u7684\u5206\u6790\uff0c\u6700\u7ec8\u9009\u62e9\u4e86\u5546\u4e1a\u5206\u6790\u4e0e\u9879\u76ee\u7ba1\u7406\u4e13\u4e1a\u3002\u5176\u5b9e\u5546\u4e1a\u5206\u6790\u4e0e\u6570\u636e\u5206\u6790\u8fd8\u662f\u6709\u5f88\u5927\u5dee\u522b\u7684\uff0c\u90a3\u6211\u662f\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u4e0e\u6570\u636e\u5206\u6790\u6709\u66f4\u591a\u7684\u63a5\u89e6\u7684\u5462\uff1f\u6162\u6162\u5f80\u4e0b\u770b\u54af\u3002</p> <p>\u6211\u7406\u89e3\u7684\u5546\u4e1a\u5206\u6790\u662f\u4ee5\u5546\u4e1a\u4e1a\u52a1\u4e3a\u4e3b\u5bfc\uff0c\u901a\u8fc7\u5efa\u7acb\u4e00\u7cfb\u5217\u76f8\u5173\u7684\u6570\u636e\u6a21\u578b\uff0c\u53ef\u89c6\u5316\u56fe\u5f62\u6700\u7ec8\u6765\u9884\u6d4b\u5546\u4e1a\u7684\u53d1\u5c55\u8d8b\u52bf\u6216\u8005\u6709\u4ef7\u503c\u7684\u5546\u4e1a\u89c1\u89e3\u3002\u53ef\u662f\uff0c\u6570\u636e\u5206\u6790\u5c31\u66f4\u504f\u5411\u4e8e\u6570\u636e\u7ed3\u6784\uff0c\u6570\u636e\u6316\u6398\u548c\u6570\u636e\u6e05\u7406\u7b49\u4e00\u4e9b\u5de5\u4f5c\uff0c\u66f4\u504f\u5411\u4e8e\u540e\u7aef\u6280\u672f\u4e00\u70b9\u3002\u5728\u6211\u6f5c\u610f\u8bc6\u91cc\uff0c\u6211\u89c9\u5f97\u6280\u672f\u597d\u662f\u4e00\u4ef6\u5f88\u9177\u70ab\u7684\u4e8b\u60c5\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f1a\u5229\u7528\u8bfe\u4f59\u65f6\u95f4\u63a5\u89e6\u540e\u8005\u3002\u4e4b\u540e\u81ea\u5df1\u4e0d\u65ad\u5730\u79ef\u7d2f\u548c\u5b66\u4e60\u90a3\u4e9b\u9884\u6d4b\u6a21\u578b\uff0c\u673a\u5668\u5b66\u4e60\uff0c\u6570\u636e\u7ed3\u6784\u7b49\u57fa\u7840\u77e5\u8bc6\uff0c\u6162\u6162\u5730\u8e0f\u4e0a\u4e86\u8fd9\u6761\u8def\u3002\u4e5f\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e9b\u52aa\u529b\u548c\u673a\u9047\uff0c\u81ea\u5df1\u6709\u5e78\u83b7\u5f97\u4eba\u751f\u4e2d\u7b2c\u4e00\u4efd\u5173\u4e8e\u6570\u636e\u5206\u6790\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u4e5f\u8ba4\u8bc6\u4e86\u4e00\u4e9b\u5fd7\u540c\u9053\u5408\u7684\u5927\u795e\u4eec\uff0c\u591a\u4e8f\u4e86\u4ed6\u4eec\u7684\u5f15\u9886\u548c\u6307\u5bfc\uff0c\u6211\u624d\u6210\u4e86\u73b0\u5728\u7684\u6211\u3002</p> <p>\u6570\u636e\u5206\u6790\u8fd9\u9886\u57df\u4e8e\u6211\u800c\u8a00\uff0c\u8d8a\u63a5\u89e6\u8d8a\u89c9\u5f97\u5b83\u795e\u79d8\uff0c\u89c9\u5f97\u5b83\u503c\u5f97\u6211\u4e0d\u65ad\u5730\u79ef\u7d2f\uff0c\u63a2\u7d22\uff0c\u5230\u5e95\u6700\u7ec8\u80fd\u62b5\u8fbe\u5230\u54ea\u91cc\u5462\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u5148\u8d70\u7740\u5457\uff0c\u8def\u4e0a\u9047\u5230\u4e86\u4e00\u7fa4\u5c0f\u4f19\u4f34\u5c31\u4e00\u8d77\u8d70\u7740\uff0c\u4e00\u8d77\u505a\u4e00\u4e9b\u6709\u8da3\u7684\u5c1d\u8bd5\uff0c\u5f88\u6709\u53ef\u80fd\u6211\u4eec\u5c31\u505a\u6210\u4e0d\u53ef\u601d\u8bae\u7684\u4e8b\u60c5\u4e86\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\uff01</p>","tags":["bullettech"]},{"location":"Our_story/#echo","title":"Echo\u7684\u6545\u4e8b","text":"Echo <p>\u4e00\u76f4\u90fd\u662f\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7231\u597d\u7684\u4eba\u3002\u8fd9\u4e00\u70b9\u4e5f\u4f53\u73b0\u5728\u4e86\u9009\u4e13\u4e1a\u4e0a\u3002\u672c\u79d1\u61f5\u61c2\u5730\u9009\u4e86\u4e13\u4e1a\uff0c\u8bfb\u4e86\u7edf\u8ba1\u5b66\u3002\u4e5f\u4e0d\u786e\u5b9a\u662f\u4e0d\u662f\u81ea\u5df1\u559c\u6b22\u7684\uff0c\u4f46\u662f\u8bfb\u4e0b\u6765\u611f\u89c9\u597d\u50cf\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u597d\uff0c\u7d22\u6027\u575a\u6301\u4e86\u4e0b\u6765\uff0c\u7814\u7a76\u751f\u8bfb\u4e86\u5e94\u7528\u7edf\u8ba1\u548c\u5b9a\u91cf\u91d1\u878d\u7684\u53cc\u5b66\u4f4d\u3002\u4e5f\u7b97\u662f\u201c\u79d1\u73ed\u51fa\u8eab\u201d\u4e86\u3002</p> <p>\u771f\u6b63\u4f53\u9a8c\u5230\u5feb\u4e50\uff0c\u53ef\u80fd\u662f\u5b66\u751f\u65f6\u4ee3\u53c2\u52a0\u4e86\u5404\u79cd\u6570\u5b66\u5efa\u6a21\u548c\u7edf\u8ba1\u5efa\u6a21\u7ade\u8d5b\u3002\u8fc7\u7a0b\u5f88\u75db\u82e6\uff0c\u4f46\u662f\u90a3\u79cd\u548c\u5fd7\u540c\u9053\u5408\u7684\u961f\u53cb\u4e00\u8d77\u8fde\u809d\u4e09\u5929\uff0c\u4ece\u9009\u9898\u5230\u6570\u636e\u5904\u7406\u5230\u8ba8\u8bba\u7528\u4ec0\u4e48\u6a21\u578b\u600e\u4e48\u89e3\u51b3\u95ee\u9898\uff0c\u518d\u5230\u6a21\u578b\u5b9e\u73b0\u548c\u8bba\u6587\u64b0\u5199\uff0c\u6700\u540e\u5728\u6b7b\u7ebf\u524d\u63d0\u4ea4\u5b8c\u7ed3\u679c\uff0c\u5927\u7761\u4e00\u5929\u3002\u4e09\u56db\u5929\u7684\u65f6\u95f4\u91cc\u4eff\u4f5b\u7ecf\u5386\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002\u81f3\u4eca\u5370\u8c61\u6df1\u523b\u7684\u662f\u67d0\u5e74\u4e00\u9053\u6d74\u7f38\u6c34\u6e29\u6a21\u578b\u9898\uff0c\u73a9\u574f\u4e86\u5168\u6dd8\u5b9d\u7684\u536b\u6d74\u5ba2\u670d\uff08\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u8bf7\u81ea\u884c\u641c\u7d22\u201c\u7f8e\u8d5b+\u6d74\u7f38\u201d\uff09\u3002\u90a3\u65f6\u4eff\u4f5b\u80fd\u4f53\u9a8c\u5230\uff0c\u5e73\u5e38\u5b66\u7684\u7406\u8bba\u548c\u6a21\u578b\uff0c\u5728\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u4e0b\uff0c\u53ef\u4ee5\u53d1\u6325\u51fa\u795e\u5947\u7684\u4f5c\u7528\u3002\u51a5\u51a5\u4e4b\u4e2d\u4e5f\u5f71\u54cd\u4e86\u6700\u540e\u7684\u804c\u4e1a\u9009\u62e9\u3002</p> <p>\u8fd9\u4e9b\u5e74\u5927\u6570\u636e\u4e00\u6d3e\u706b\u70ed\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u8d8b\u4e4b\u82e5\u9e5c\uff0c\u6211\u5c31\u8fd9\u4e48\u88ab\u88f9\u631f\u7740\u524d\u884c\uff0c\u6bd5\u4e1a\u8fdb\u4e86\u4e00\u5bb6\u5916\u4f01\u7ee7\u7eed\u505a\u6570\u636e\u5206\u6790\u3002\u8d8a\u6765\u8d8a\u89c9\u5f97\u6570\u636e\u79d1\u5b66\u7684\u9b45\u529b\u5728\u4e8e\u7406\u8bba\u548c\u5b9e\u8df5\u7684\u78b0\u649e\uff0c\u6570\u636e\u6765\u81ea\u4e8e\u4e0d\u540c\u7684\u4e1a\u52a1\uff0c\u5bf9\u4e1a\u52a1\u6570\u636e\u7684\u5206\u6790\u7ed3\u679c\u6700\u7ec8\u5728\u73b0\u5b9e\u4e2d\u5f97\u5230\u5e94\u7528\uff0c\u5e94\u7528\u7684\u7ed3\u679c\u518d\u4f5c\u4e3a\u8f93\u5165\u53cd\u9988\u7ed9\u5206\u6790\uff0c\u5224\u65ad\u5206\u6790\u7684\u597d\u574f\u548c\u505a\u8fdb\u4e00\u6b65\u6539\u8fdb\uff0c\u5c42\u5c42\u8fed\u4ee3\uff0c\u6700\u7ec8\u5f62\u6210\u5b8c\u7f8e\u7684\u95ed\u73af\u3002</p> <p>\u4ee5\u524d\u4e5f\u5f88\u7fa1\u6155\u5c0f\u4f19\u4f34\u6709\u613f\u610f\u4e3a\u4e4b\u71c3\u70e7\u70ed\u60c5\u548c\u957f\u4e45\u4ed8\u51fa\u7684\u7231\u597d\uff0c\u4f46\u73b0\u5728\u79bb\u8bfb\u5927\u5b66\u65f6\u521a\u63a5\u89e6\u7edf\u8ba1\u5b66\u548c\u6570\u5206\u5df2\u7ecf\u516b\u5e74\u8fc7\u53bb\u4e86\uff0c\u84e6\u7136\u56de\u9996\uff0c\u5ffd\u7136\u53d1\u73b0\u4e86\u7ec6\u6c34\u957f\u6d41\u7684\u7f8e\u597d\u3002\u8fd9\u4e00\u8def\u4e0a\u975e\u5e38\u5e78\u8fd0\uff0c\u9047\u5230\u4e86\u5f88\u591a\u6709\u8da3\u7684\u5c0f\u4f19\u4f34\u3002\u6211\u60f3\u6211\u8fd8\u53ef\u4ee5\u5728\u8fd9\u6761\u8def\u4e0a\u8d70\u7684\u518d\u8fdc\u4e00\u70b9\u3002\u670b\u53cb\u4eec\uff0c\u4e00\u8d77\u5417\uff1f</p>","tags":["bullettech"]},{"location":"Our_story/#jeremy","title":"Jeremy\u7684\u6545\u4e8b","text":"Jeremy <p>\u5c0f\u7684\u65f6\u5019\u5f88\u7231\u73a9\uff0c\u5c24\u5176\u5bf9\u4e24\u4ef6\u4e8b\u60c5\u6bd4\u8f83\u7740\u8ff7\uff0c\u54ea\u4e24\u4ef6\u4e8b\u5462?\u7535\u8111\u6e38\u620f\u548c\u56f4\u68cb\u3002\u559c\u6b22\u7535\u8111\u6e38\u620f\u5927\u6982\u662f\u5927\u90e8\u5206\u7537\u751f\u7684\u5171\u901a\u70b9\u5427\uff0c\u4e0d\u591a\u8bf4\u4e86\uff0c\u800c\u6211\u5927\u6982\u5c31\u662f\u53c8\u83dc\u53c8\u7231\u73a9\u7684\u6c34\u5e73\uff0cWAR3\u6ca1\u8d62\u8fc7\u4e2d\u7b49\u96be\u5ea6\u7535\u8111\u3002 \u559c\u6b22\u56f4\u68cb\u662f\u56e0\u4e3a\u6e05\u695a\u5730\u8bb0\u5f97\u56f4\u68cb\u8001\u5e08\u8ddf\u6211\u4eec\u8bf4\uff0c\u56f4\u68cb\u662f\u975e\u5e38\u590d\u6742\u7684\u6e38\u620f\uff0c\u6709\u65e0\u6570\u7684\u53d8\u5316\uff0c\u6700\u5389\u5bb3\u7684\u7535\u8111\u8f6f\u4ef6\u80fd\u4e0b\u8d62\u4e16\u754c\u4e0a\u6700\u5389\u5bb3\u7684\u56fd\u9645\u8c61\u68cb\u9009\u624b\uff0c\u4f46\u662f\u4e0b\u4e0d\u8d62\u7a0d\u5fae\u5389\u5bb3\u70b9\u7684\u56f4\u68cb\u4e1a\u4f59\u7231\u597d\u8005\u3002\u542c\u5b8c\u8fd9\u756a\u8bdd\u6211\u6697\u81ea\u4e0b\u51b3\u5fc3\uff0c\u6709\u4e00\u5929\u6211\u4e5f\u8981\u8ba9\u7535\u8111\u5c1d\u5c1d\u88ab\"\u4eba\u7c7b\u652f\u914d\u7684\u6050\u60e7\"\u3002 \u540e\u6765\uff0c\u6211\u786e\u5b9e\u6709\u4e00\u6bb5\u65f6\u95f4\u505a\u5230\u4e86\u4e0b\u8d62\u6211\u80fd\u514d\u8d39\u4f7f\u7528\u7684\u6700\u5389\u5bb3\u7684\u56f4\u68cb\u8f6f\u4ef6\u2014\u2014\u76f4\u52302016\u5e74Alpha-Go\u5f7b\u5e95\u652f\u914d\u4e86\u4eba\u7c7b\u6700\u9876\u5c16\u7684\u56f4\u68cb\u804c\u4e1a\u9009\u624b\uff0c\u8ba9\u6211\u76f8\u4fe1\u672a\u6765\u662f\u5c5e\u4e8e\u4eba\u5de5\u667a\u80fd\u7684\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\"\u4eba\u5de5\u667a\u80fd\"\u8fd9\u4e2a\u6982\u5ff5\u5728\u6211\u5fc3\u91cc\u6084\u6084\u57cb\u4e0b\u4e86\u79cd\u5b50\u3002</p> <p>\u7814\u7a76\u751f\u65f6\u671f\uff0c\u6709\u5e78\u5b66\u9662\u91cc\u5f00\u8bbe\u4e86\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u8bfe\u7a0b\uff0c\u6211\u8d77\u521d\u662f\u62b1\u7740\u5c1d\u8bd5\u7684\u5fc3\u6001\u53c2\u4e0e\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u4ec0\u4e48\u7f16\u7a0b\u57fa\u7840\uff0c\u540c\u65f6\u8865\u7ebf\u4ee3\u6982\u7387\u8bba\u8fd8\u8981\u7406\u89e3\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u7684\u4e00\u5929\u5929\u8ba9\u6211\u60f3\u76f4\u63a5\u4ece\u5165\u95e8\u5230\u653e\u5f03\uff0c\u597d\u5728\u6709\u4e00\u7fa4\u6bd4\u6211\u806a\u660e\u52e4\u594b\u7684\u540c\u5b66\u548c\u6211\u4e00\u8d77\u4ece\u96f6\u5f00\u59cb\uff0c\u5728\u76f8\u4e92\u966a\u4f34\u548c\u8ba8\u8bba\u4e0b\u4e0d\u5c11\u4eba\u575a\u6301\u4e86\u4e0b\u6765\u3002\u7814\u4e00\u7ed3\u675f\u65f6\uff0c\u53ea\u5b66\u4e86\u4e00\u95e8\u6570\u636e\u79d1\u5b66\u8bfe\u7684\u6211\u51b3\u5b9a\u8bd5\u7740\u627e\u627e\u76f8\u5173\u5c97\u4f4d\u7684\u5b9e\u4e60\u3002</p> <p>\u4f46\u662f\u6211\u548c\u79d1\u73ed\u51fa\u8eab\u7684\u540c\u5b66\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u4e0d\u662f\u4e00\u4e24\u8282\u8bfe\u5c31\u53ef\u4ee5\u5f25\u8865\u7684\u3002\u5728\u627e\u5b9e\u4e60\u671f\u95f4\u624d\u53d1\u73b0\u6570\u636e\u79d1\u5b66\u76f8\u5173\u7684\u5c97\u4f4d\u95e8\u69db\uff0c\u4e0d\u662f\u4e00\u4e2a\u4e09\u4e2a\u6708\u5165\u95e8\u7684\u6211\u53ef\u4ee5\u591f\u5f97\u4e0a\u7684\u3002\u9000\u800c\u6c42\u5176\u6b21\uff0c\u6211\u9009\u62e9\u4e86\u5148\"\u5165\u884c\"\uff0c\u8fdb\u5165\u4f9d\u6258\u8ba1\u7b97\u673a\u548c\u6570\u636e\u53d1\u5c55\u7684\u4e92\u8054\u7f51\u884c\u4e1a\u7684\u975e\u6280\u672f\u5c97\u4f4d\u3002\u6211\u8fdb\u5165\u7684\u516c\u53f8\u4e0d\u5927\u4f46\u5374\"\u4e94\u810f\u4ff1\u5168\"\uff0c\u4e0d\u8bba\u54ea\u4e2a\u90e8\u95e8\u90fd\u6709\u7740\u4e00\u7fa4\u4e13\u4e1a\uff0c\u6709\u8da3\uff0c\u53cb\u597d\u7684\u540c\u4e8b\u3002\u6211\u4e5f\u6709\u5e78\u80fd\u5411\u7b97\u6cd5/\u6570\u636e\u90e8\u95e8\u7684\u540c\u4e8b\u751a\u81f3\u8d1f\u8d23\u4eba\u8bf7\u6559\u95ee\u9898\uff0c\u4e3a\u81ea\u5df1\u4e4b\u540e\u7684\u5b66\u4e60\u8def\u7ebf\u8bbe\u8ba1\u65b9\u5411\u3002</p> <p>\u8d8a\u662f\u63a5\u89e6\uff0c\u8d8a\u662f\u53d1\u73b0\u8fd9\u4e2a\u6570\u636e\u79d1\u5b66\u662f\u4e00\u7247\u5e7f\u9614\u4e14\u8fb9\u7f18\u5728\u4e0d\u65ad\u6269\u5f20\u7684\u4ea4\u53c9\u9886\u57df\u3002\u515c\u515c\u8f6c\u8f6c\uff0c\u6211\u6709\u5e78\u6765\u5230\u4e86\u76ee\u524d\u6240\u5728\u7684\u91d1\u878d\u884c\u4e1a\u516c\u53f8\u505a\u6570\u636e\u5206\u6790\uff0c\u7136\u800c\u5373\u4fbf\u662f\u540c\u4e00\u4e2atitle\uff0c\u516c\u53f8\u5185\u5404\u4f4d\u540c\u4e8b\u7684\u5de5\u4f5c\u6027\u8d28\u4e5f\u4e0d\u5c3d\u76f8\u540c\u3002\u66f4\u8ba9\u6211\u60ca\u559c\u7684\u662f\uff0c\u516c\u53f8\u95f4\u540c\u4e8b\u7684\u6c1b\u56f4\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u66f4\u50cf\u662f\u540c\u5b66\uff0c\u9047\u5230\u4e86\u4e0d\u5c11\u6291\u6216\u662f\u6709\u8da3\u6291\u6216\u662f\u76ee\u6807\u76f8\u8fd1\uff0c\u7ecf\u9a8c\u4e30\u5bcc\u7684\u540c\u7ea7\u540c\u4e8b\u548cseniors\u3002\u548c\u4ed6\u4eec\u5de5\u4f5c\u4e2d\u548c\u5de5\u4f5c\u5916\u7684\u4ea4\u6d41\uff0c\u7ed9\u6211\u63d0\u4f9b\u4e86\u4e0d\u5c11\u4e13\u4e1a\u4e0a\u4ee5\u53ca\u4e13\u4e1a\u65b9\u5411\u4ee5\u5916\u7684\u6307\u5f15\uff0c\u4e5f\u8ba9\u6211\u81ea\u8eab\u7684\u5b9a\u4f4d\u548c\u5bf9\u672a\u6765\u7684\u89c4\u5212\u6e10\u6e10\u6e05\u6670\u3002</p>","tags":["bullettech"]},{"location":"Our_story/#void","title":"Void\u7684\u6545\u4e8b","text":"Void <p>\u672c\u79d1\u8bfb\u7684\u7269\u7406\uff0c\u4fee\u4e86\u91d1\u878d\u7684\u53cc\u5b66\u4f4d\uff0c\u7814\u7a76\u751f\u4f9d\u65e7\u662f\u7ecf\u6d4e\u5927\u7c7b\u3002\u6709\u7740\u5947\u5947\u602a\u602a\u7684\u590d\u5408\u80cc\u666f\uff0c\u4f46\u4f3c\u4e4e\u548c\u5199\u4ee3\u7801\u6ca1\u6709\u592a\u5927\u7684\u5173\u7cfb\u3002 \u53ea\u662f\u7531\u4e8e\u5927\u56db\u7684\u65f6\u5019\u505a\u4e86\u4e00\u4efd\u91cf\u5316\u6295\u8d44\u79c1\u52df\u7684\u5b9e\u4e60\uff0c\u4ece\u6b64\u4fbf\u7b80\u5355\u7684\u76f8\u4fe1\u81ea\u5df1\u4e00\u5b9a\u4f1a\u6210\u4e3a\u4e00\u4e2a\u201c\u4f18\u79c0\u201d\u7684Quant\u3002\u53bb\u8fc7\u5927\u5927\u5c0f\u5c0f\u7684\u79c1\u52df\u3001\u5238\u5546\u3001\u57fa\u91d1\u5b9e\u4e60\uff0c\u4f9d\u65e7\u662f\u4e00\u4e2a\u4e0d\u4f1a\u6295\u8d44\u7684\u5c0f\u97ed\u83dc\u3002\u53ea\u662f\u89c9\u5f97\u5199\u4ee3\u7801\u5f88\u6709\u610f\u601d\uff0c\u5f88\u6709\u6210\u5c31\u611f\uff0c\u81ea\u5df1\u5199\u7684\u4e5f\u4e0d\u662f\u592a\u5dee\uff0c\u4e8e\u662f\u5728\u6700\u540e\u4e00\u4e2a\u6691\u671f\u201c\u8270\u96be\u201d\u8f6c\u884c\u3002  </p> <p>\u867d\u7136\u4f5c\u4e3aQuant\u7684\u65e5\u5e38\u4e5f\u6709\u5199\u4ee3\u7801\u3001\u770bpaper\uff0c\u4f46\u4ece\u6211\u6709\u9650\u7684\u7ecf\u5386\u6765\u770b\uff0c\u8fd8\u662f\u5f88\u4f20\u7edf\u7684\u4e92\u8054\u7f51\u6709\u8bb8\u591a\u4e0d\u540c\u3002</p> <ul> <li>\u6570\u636e\u91cf\u4e0d\u7b97\u5927\u3002A\u80a1\u4e00\u5171\u53ea\u67093000\u591a\u5bb6\u4e0a\u5e02\u516c\u53f8\u3002\u65e0\u8bba\u9ad8\u4f4e\u9891\u8fd8\u662f\u8d22\u62a5\u3001\u884c\u60c5\u6570\u636e\u751a\u81f3\u53ef\u4ee5\u5b58\u5728\u4e2a\u4eba\u7684\u7535\u8111\u91cc\u3002</li> <li>\u65b9\u6cd5\u8bba\u4e0d\u540c\u3002</li> <li>\u6570\u636e\u7684\u5927\u5c0f\u5141\u8bb8\u505a\u4e00\u4e9b\u6bd4\u8f83\u7cbe\u7ec6\u7684\u7279\u5f81\u5de5\u7a0b\u3002</li> <li>\u4f1a\u4f7f\u7528\u4e00\u4e9b\u8ba1\u91cf\u548c\u7edf\u8ba1\u7684\u5de5\u5177\uff0c\u5982\u534f\u6574\u3001\u534f\u65b9\u5dee\u4f30\u8ba1\u7b49\u7b49\u3002</li> <li>fancy\u7684\u6a21\u578b\u672a\u5fc5\u6709\u7528\u3002</li> <li>\u7f3a\u5c11\u6b63\u53cd\u9988  </li> </ul> <p>\u4ee5\u4e0a\u53ea\u662f\u4e00\u4e2a\u95e8\u5916\u6c49\u7684\u4e2a\u4eba\u89c2\u70b9\u3002\u53ef\u80fd\u662f\u81ea\u5df1\u8fd8\u6ca1\u771f\u6b63\u5165\u884c\uff0c\u603b\u89c9\u5f97\u91cf\u5316\u6709\u633a\u591a\u5c60\u9f99\u4e4b\u672f\uff0c\u827a\u672f\u5927\u4e8e\u79d1\u5b66\u3002</p> <p>\u9010\u6e10\u89c9\u5f97\u4e92\u8054\u7f51\u7684\u4e1a\u52a1\u66f4\u6709\u5438\u5f15\u529b\uff0c\u80fd\u7ed9\u4f60\u5f88\u660e\u786e\u7684\u6b63\u53cd\u9988\uff0c\u5c31\u50cf\u73a9\u6e38\u620f\u4e00\u6837\u3002\u8f6c\u884c\u7684\u60f3\u6cd5\u840c\u751f\u7684\u6bd4\u8f83\u665a\u3002\u867d\u7136\u4e4b\u524d\u4e5f\u6709\u4e00\u4e9b\u79ef\u7d2f\uff0c\u4f1a\u642d\u6570\u636e\u5e93\uff0c\u5199\u4e86\u4e0d\u5c11\u7279\u5f81\uff0c\u4e5f\u7528\u5404\u79cd\u6a21\u578b\u6597\u80c6\u5728\u91d1\u878d\u5e02\u573a\u91cc\u505a\u4e9b\u8bb8\u9884\u6d4b\u3002\u4f46\u662f\u8f6c\u884c\u7684\u8fc7\u7a0b\u5e76\u4e0d\u7b97\u5341\u5206\u987a\u5229\u3002\u6700\u7ec8\uff0c\u6709\u5e78\u52a0\u5165\u4e00\u5bb6\u5916\u4f01\u505a\u6570\u636e\u5206\u6790\u3002\u8ba4\u8bc6\u4e86\u4e0d\u5c11\u5e38\u8054\u7cfb\u7684\u597d\u670b\u53cb\uff0c\u5f00\u59cb\u4e86\u6570\u636e\u79d1\u5b66\u7684\u804c\u4e1a\u751f\u6daf\u3002</p> <p>\u4e00\u8def\u4e0a\u5f97\u5230\u4e86\u5f88\u591a\u6307\u5bfc\uff0c\u5f88\u591a\u5e2e\u52a9\u3002\u611f\u8c22\u5404\u4f4d\u95ea\u95ea\u53d1\u5149\u7684\u5c0f\u4f19\u4f34\u4eec\u7684\u65e0\u79c1\u6307\u5bfc\u4e0e\u771f\u8bda\u76f8\u52a9\u3002\u8fc7\u53bb\u7684\u70b9\u70b9\u6ef4\u6ef4\u65e0\u8bba\u597d\u574f\u90fd\u5851\u9020\u6210\u4e86\u5982\u4eca\u7684\u6211\u3002\u611f\u8c22\u6240\u6709\u7ecf\u5386\u3002</p>","tags":["bullettech"]},{"location":"Our_story/#_2","title":"\u8881\u5b50\u5f39\u7684\u6545\u4e8b","text":"\u8881\u5b50\u5f39 <p>2011\u5e74\u8bfb\u672c\u79d1\u65f6\uff0c\u6211\u4e3b\u4fee\u571f\u5efa\u5927\u7c7b\u4e0b\u7684\u7ed9\u6392\u6c34\u4e13\u4e1a\uff0c\u90a3\u4f1a\u513f\u5174\u8fd9\u4e2a\uff0c\u4e00\u5230\u590f\u5929\u57ce\u5e02\u88ab\u6c34\u6df9\u4e86\u5c31\u80fd\u7acb\u9a6c\u611f\u53d7\u5230\u8fd9\u4e13\u4e1a\u7684\u91cd\u8981\u6027\u548c\u53d1\u5c55\u524d\u666f\uff08\u72d7\u5934\uff09\u30022015\u5e74\u6765\u4e0a\u6d77\u8bfb\u7814\u7a76\u751f\u65f6\uff0c\u7814\u7a76\u996e\u7528\u6c34\u5904\u7406\uff0c\u90a3\u662f\u5b66\u6821\u6700\u5f3a\u7684\u4e13\u4e1a\u4e4b\u4e00\uff0c\u5bfc\u5e08\u4e5f\u63d0\u4f9b\u4e86\u5f88\u591a\u7814\u7a76\u548c\u953b\u70bc\u7684\u673a\u4f1a\uff0c\u73b0\u5728\u56de\u9996\u4ecd\u4e0d\u751a\u611f\u6fc0\u3002\u4f46\u5f7c\u65f6\u5bf9\u8ba1\u7b97\u673a\u3001\u4e92\u8054\u7f51\u3001\u6570\u636e\u79d1\u5b66\u4e0d\u751a\u611f\u5192\uff0c\u5355\u7eaf\u4e0d\u660e\u89c9\u5389\u3002\u8f6c\u673a\u6765\u6e90\u4e8e\u7814\u7a76\u751f\u4e00\u5e74\u7ea7\u7684\u4e00\u4e9b\u7ecf\u5386\uff0c\u5f53\u65f6\u6709\u673a\u4f1a\u53c2\u4e0e\u4e86\u4e00\u4e9b\u5de5\u7a0b\u516c\u53f8\u7684\u5b9e\u4e60\uff0c\u6e10\u6e10\u5730\u610f\u8bc6\u5230\u5de5\u7a0b\u8bbe\u8ba1\u3001\u54a8\u8be2\u4e0d\u662f\u6211\u6700\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5bf9\u6211\u800c\u8a00\uff0c\u90a3\u6837\u7684\u73af\u5883\u8ba9\u4eba\u96be\u4ee5\u5145\u6ee1\u6fc0\u60c5\u548c\u521b\u9020\u529b\u3002\u6bcf\u5929\u53bb\u5b9e\u4e60\u7684\u8def\u4e0a\uff0c\u534a\u8def\u60f3\u6389\u5934\u56de\u5b66\u6821\uff0c\u8fd9\u79cd\u611f\u89c9\u8ba9\u6211\u610f\u8bc6\u5230\u5e94\u8be5\u505a\u4e00\u4e9b\u6539\u53d8\u4e86\u3002</p> <p>\u5f88\u5de7\u7684\u662f\uff0c\u4e0a\u6d77\u6709\u633a\u591a\u4e92\u8054\u7f51\u516c\u53f8\u62db\u6536\u5b9e\u4e60\u751f\u3002\u4f46\u5bf9\u4e8e\u6beb\u65e0\u7ecf\u9a8c\u3001\u4e13\u4e1a\u80cc\u666f\u6beb\u4e0d\u76f8\u5173\u7684\u6211\u6765\u8bf4\uff0c\u521a\u5f00\u59cb\u53bb\u4e92\u8054\u7f51\u521b\u4e1a\u516c\u53f8\u505a\u975e\u6280\u672f\u5c97\u7684\u6210\u529f\u7387\u66f4\u5927\uff0c\u901a\u8fc7\u4e00\u756a\u52aa\u529b\u6700\u7ec8\u5f88\u5e78\u8fd0\u5730\u8fdb\u5165\u4e86\u4e00\u5bb6\u603b\u90e8\u5728\u7f8e\u56fd\u7845\u8c37\u7684\u4e92\u8054\u7f51\u516c\u53f8\u4ece\u4e8b\u5e73\u53f0\u8fd0\u8425\u7684\u5de5\u4f5c\u3002\u8fd9\u91cc\u7684\u5de5\u4f5c\u4f53\u9a8c\u548c\u5de5\u7a0b\u7c7b\u516c\u53f8\u5927\u76f8\u5f84\u5ead\uff0c\u7531\u4e8e\u662f\u521b\u4e1a\u516c\u53f8\uff0c\u8eab\u8fb9\u7684\u6210\u5458\u90fd\u80fd\u72ec\u5f53\u4e00\u9762\u3001\u751a\u81f3\u8eab\u517c\u6570\u804c\u3002\u5de5\u4f5c\u6c1b\u56f4\u5341\u5206\u7075\u6d3b\u3001\u654f\u6377\uff0c\u540c\u4e8b\u5173\u7cfb\u5f88\u878d\u6d3d\u548c\u7b80\u5355\uff0c\u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u5168\u65b0\u7684\u4f53\u9a8c\u3002\u540c\u65f6\uff0c\u4f5c\u4e3a\u5b9e\u4e60\u751f\uff0c\u5728\u8fd9\u91cc\u7684\u804c\u8d23\u4e5f\u5341\u5206\u591a\u6837\u548c\u7075\u6d3b\uff0c\u5728\u7ebf\u8425\u9500\u3001\u5ba3\u4f20\u8bbe\u8ba1\u3001\u7f16\u5199\u4ee3\u7801\uff0c\u54ea\u91cc\u9700\u8981\u5c31\u53bb\u54ea\u91cc\uff0c\u9700\u8981\u4ec0\u4e48\u5c31\u5f97\u5b66\u4ec0\u4e48\uff0c\u8fd9\u662f\u6211\u5b66\u751f\u9636\u6bb5\u5de5\u4f5c\u6700\u5f00\u5fc3\u3001\u6700\u5145\u5b9e\u7684\u65f6\u5019\uff0c\u4e5f\u662f\u771f\u6b63\u8ba9\u6211\u4e0b\u5b9a\u51b3\u5fc3\u52a0\u5165\u8fd9\u4e2a\u65b0\u5174\u884c\u4e1a\u7684\u5173\u952e\u65f6\u523b\u3002\u4f46\u662f\u4f34\u968f\u7740\u521b\u4e1a\u516c\u53f8\u7684\uff0c\u5f80\u5f80\u8fd8\u6709\u53d8\u5316\uff0c\u516c\u53f8\u53d1\u5c55\u6218\u7565\u548c\u7ec4\u7ec7\u67b6\u6784\u7684\u66f4\u8fed\u8ba9\u6211\u96be\u4ee5\u77ed\u65f6\u95f4\u5185\u9002\u5e94\uff0c\u6211\u79bb\u5f00\u4e86\u8fd9\u5bb6\u516c\u53f8\uff0c\u524d\u5f80\u4e0b\u4e00\u7ad9\u3002</p> <p>\u673a\u7f18\u5de7\u5408\u4e4b\u4e0b\uff0c\u6211\u8fdb\u5165\u4e86\u4e00\u5bb6\u89c4\u6a21\u66f4\u5927\u7684\u4e92\u8054\u7f51\u516c\u53f8\uff0c\u62c5\u4efb\u4ea7\u54c1\u7ecf\u7406\u5b9e\u4e60\u751f\u3002\u8fd9\u91cc\u7684\u5de5\u4f5c\u66f4\u52a0\u89c4\u8303\u548c\u660e\u786e\uff0c\u5de5\u4f5c\u4e3b\u8981\u5185\u5bb9\u662f\u7406\u89e3\u5ba2\u6237\u9700\u6c42\u3001\u534f\u8c03\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u5e08\u3001\u5f00\u53d1\u5de5\u7a0b\u5e08\u548c\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u5b8c\u6210\u4ea7\u54c1\u4e1a\u52a1\u903b\u8f91\u7684\u68b3\u7406\u548c\u4ea7\u54c1\u529f\u80fd\u7684\u8bbe\u8ba1\u3002\u73b0\u5728\u56de\u770b\uff0c\u8fd9\u4efd\u5de5\u4f5c\u5f88\u6709\u6311\u6218\uff0c\u56e0\u4e3a\u8bbe\u8ba1\u3001\u5f00\u53d1\u3001\u6d4b\u8bd5\u90fd\u6709\u5404\u4e2a\u9886\u57df\u66f4\u4e13\u4e1a\u7684\u540c\u4e8b\uff0c\u800c\u6211\u7684\u5de5\u4f5c\u5374\u9700\u8981\u628a\u8fd9\u4e9b\u4e13\u5bb6\u6709\u673a\u5730\u7ed3\u5408\u5728\u4e00\u8d77\u5b8c\u6210\u76ee\u6807\u3002\u6240\u4ee5\u5de5\u4f5c\u524d\u671f\u5341\u5206\u8270\u96be\u3001\u5904\u5904\u78b0\u58c1\uff0c\u8981\u63a5\u6d3d\u3001\u7406\u89e3\u5404\u79cd\u5404\u6837\u7684\u9700\u6c42\u3001\u8bbe\u8ba1\u5e08\u4f1a\u6311\u6218\u4ea7\u54c1\u539f\u578b\u4e0d\u7b26\u5408\u8bbe\u8ba1\u89c4\u8303\uff0c\u5f00\u53d1\u4f1a\u8d28\u7591\u4e1a\u52a1\u903b\u8f91\u3001\u4ea4\u4e92\u903b\u8f91\u3001\u5f00\u53d1\u8d44\u6e90\u4e5f\u96be\u4ee5\u534f\u8c03\uff0c\u6d4b\u8bd5\u4f1a\u8d23\u5907\u7528\u4f8b\u4e0d\u660e\u786e\u3001\u6587\u6863\u4e0d\u89c4\u8303\u3002\u6bcf\u5929\u90fd\u5728\u4e0d\u65ad\u7684\u8e29\u5751\u548c\u626f\u76ae\u4e2d\u5ea6\u8fc7\uff0c\u4f46\u4e5f\u80fd\u611f\u89c9\u5230\u6bcf\u4e2a\u65b9\u9762\u90fd\u5728\u9010\u6b65\u63d0\u5347\uff0c\u7279\u522b\u662f\u5e94\u7528\u5f00\u53d1\u6280\u80fd\uff0c\u56e0\u4e3a\u6280\u672f\u95e8\u5916\u6c49\u548c\u6280\u672f\u4eba\u5458\u6c9f\u901a\u5f88\u8d39\u529b\uff0c\u5bfc\u81f4\u5de5\u4f5c\u5f00\u5c55\u5f88\u56f0\u96be\u3002\u6240\u4ee5\u6211\u5f00\u59cb\u81ea\u5b66\u8bbe\u8ba1\u3001\u5f00\u53d1\u4ea7\u54c1\uff0c\u4ee5\u4fbf\u66f4\u6d41\u7545\u5730\u548c\u540c\u4e8b\u534f\u4f5c\u3002\u8fd9\u6bb5\u7ecf\u5386\u5bf9\u6211\u6700\u5927\u7684\u542f\u53d1\u662f\u4f18\u79c0\u7684\u4ea7\u54c1\u7ecf\u7406\u5e94\u662f\u4e00\u4e2a\u5584\u4e8e\u53d1\u73b0\u6839\u672c\u95ee\u9898\u3001\u6280\u80fd\u5168\u9762\u3001\u5177\u5907\u826f\u597d\u9879\u76ee\u7ba1\u7406\u80fd\u529b\u7684\u4eba\uff0c\u800c\u8fd9\u6837\u7684\u89d2\u8272\uff0c\u4e00\u4e2a\u975e\u4efb\u4f55\u76f8\u5173\u4e13\u4e1a\u51fa\u8eab\u7684\u5e94\u5c4a\u6bd5\u4e1a\u751f\u7740\u5b9e\u96be\u627f\u5176\u91cd\u3002\u56e0\u6b64\u6211\u9009\u62e9\u7b2c\u4e00\u4efd\u6b63\u5f0f\u5de5\u4f5c\u5148\u79ef\u7d2f\u4e13\u4e1a\u6280\u80fd\uff0c\u4e3a\u65e5\u540e\u53d1\u5c55\u6253\u57fa\u7840\u3002</p> <p>\u6bd5\u4e1a\u540e\uff0c\u7b2c\u4e00\u4efd\u6b63\u5f0f\u5de5\u4f5c\u662f\u6d88\u8d39\u91d1\u878d\u884c\u4e1a\u7684\u6570\u636e\u5206\u6790\u5e08\uff0c\u5bf9\u6211\u800c\u8a00\uff0c\u8fd9\u53c8\u662f\u4e00\u6b21\u5de8\u5927\u7684\u8f6c\u53d8\uff0c\u4f46\u5728\u4e92\u8054\u7f51\u516c\u53f8\u4e00\u5e74\u591a\u7684\u5386\u7ec3\uff0c\u8ba9\u8fd9\u4e00\u6b21\u7684\u8f6c\u53d8\u66f4\u52a0\u4ece\u5bb9\u3002\u8fd9\u5bb6\u5927\u516c\u53f8\u63d0\u4f9b\u4e86\u66f4\u5e7f\u9614\u7684\u5e73\u53f0\uff0c\u9886\u5bfc\u4e5f\u63d0\u4f9b\u4e86\u5168\u65b9\u4f4d\u7684\u652f\u6301\uff0c\u81ea\u5df1\u521b\u9020\u4e86\u8bb8\u591a\u4e50\u5728\u5176\u4e2d\u7684\u5de5\u4f5c\uff0c\u9047\u5230\u4e86\u4e09\u4e24\u5fd7\u540c\u9053\u5408\u7684\u4eba\uff0c\u4e0b\u73ed\u540e\u4e5f\u6709\u65f6\u95f4\u966a\u5bb6\u4eba\u3001\u53d1\u5c55\u5174\u8da3\u7231\u597d\uff0c\u4e5f\u7b97\u662f\u4e00\u79cd\u5e78\u8fd0\uff0c\u5e76\u4e14\u8fd9\u4efd\u5e78\u8fd0\u8fd8\u5728\u7ee7\u7eed\u3002</p>","tags":["bullettech"]},{"location":"Our_story/#_3","title":"\u603b\u7ed3","text":"<p>\u6211\u4eec\u8fd9\u4e00\u8def\u4e0a\u6709\u5f88\u591a\u8d35\u4eba\u76f8\u52a9\uff0c\u81ea\u5df1\u4e5f\u8e29\u4e86\u5f88\u591a\u5751\uff0c\u6709\u5e78\u90fd\u633a\u4e86\u8fc7\u6765\u3002\u73b0\u5728\uff0c\u5229\u7528\u7a7a\u95f2\u65f6\u95f4\u548c\u56e2\u961f\u4e00\u8d77\u5e76\u80a9\u4f5c\u6218\uff0c\u628a\u66f4\u591a\u5b9e\u7528\u3001\u6709\u8da3\u7684\u77e5\u8bc6\u53ca\u4ea7\u54c1\u5206\u4eab\u7ed9\u66f4\u591a\u4eba\u6210\u4e3a\u4e86\u65b0\u7684\u4f7f\u547d\u548c\u4e50\u8da3\uff0c\u672a\u6765\u4f1a\u5982\u4f55\u53d1\u5c55\uff0c\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\u3002</p>","tags":["bullettech"]},{"location":"tags/","title":"\u6587\u7ae0\u6807\u7b7e\u7cfb\u7edf","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u6807\u7b7e\u641c\u7d22\u672c\u7ad9\u6240\u6709\u7684\u6587\u7ae0\uff1a</p>"},{"location":"tags/#analytics","title":"analytics","text":"<ul> <li>\u6d45\u8c08Google Analytics</li> <li>SnowFlake\u67b6\u6784\u6982\u89c8</li> <li>SnowFlake\u6743\u9650\u6982\u89c8</li> <li>\u53cc\u91cd\u5dee\u5206\u5c0f\u4ecb</li> <li>A/B\u6d4b\u8bd5\u5b9e\u6218\u9879\u76ee</li> <li>SQL Tips\uff08\u4e00\uff09</li> <li>\u5229\u7528\u9012\u5f52\u601d\u60f3\u5904\u7406\u534a\u7ed3\u6784\u5316\u6570\u636e</li> <li>SQL Tips\uff08\u4e8c\uff09</li> <li>PySpark\u5c0f\u4ecb</li> <li>\u6d45\u8c08\u6570\u636e\u7684\u641c\u7d22\u548c\u6392\u5e8f</li> <li>\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u9009\u53d6</li> <li>\u65b9\u5dee\u5206\u6790</li> <li>Discussing Google Analytics</li> <li>Overview of SnowFlake Architecture</li> <li>SnowFlake Permission Overview</li> <li>Introduction to Difference-in-Differences</li> <li>A/B Test Practical Case Sharing, Facing Examiner's Questions with Confidence</li> <li>SQL tips</li> <li>Using Recursive Thinking to Process Semi-Structured Data</li> <li>SQL Tips</li> <li>Introduction to PySpark</li> <li>A Brief Discussion on Data Search and Sorting</li> <li>Efficacy Analysis - Selection of Minimum Sample Size n</li> <li>Analysis of Variance (ANOVA)</li> </ul>"},{"location":"tags/#app","title":"app","text":"<ul> <li>\u4e2a\u4eba\u7b14\u8bb0\u5e94\u7528 - Notion</li> <li>\u88c5\u673a\u5fc5\u5907\u4e4b\u5b9e\u7528\u7535\u8111\u8f6f\u4ef6</li> <li>Paste - \u526a\u5207\u677f\u5de5\u5177</li> <li>Copilot\u6d4b\u8bd5\u7248\u672c\u4f53\u9a8c</li> <li>PicGo\u56fe\u5e8a\uff0c\u529f\u80fd\u521a\u521a\u597d</li> <li>iOS Shortcuts\u6377\u5f84</li> <li>\u6709\u8da3\u7684API\u4ecb\u7ecd1.0</li> <li>Apache\u9879\u76ee\u4ecb\u7ecd</li> <li>Z-Library\uff0c\u4f18\u8d28\u79d1\u7814\u7535\u5b50\u4e66\u4e0b\u8f7d\u5e73\u53f0</li> <li>\u514d\u8d39\u5b9e\u9a8c\u5e73\u53f0 - Amazon SageMaker Studio Lab</li> <li>Powerful and Visually Appealing Personal Note App - Notion</li> <li>Let's get rid of my bookmarks - Practical computer software for installing machines</li> <li>Paste - Clipboard Tool</li> <li>2021 07 19 Copilot</li> <li>PicGo Image Hosting, Just Right</li> <li>iOS Shortcuts - The Automation Artifact</li> <li>Interesting API Introduction</li> <li>Introduction to Apache Projects</li> <li>Z-Library, a high-quality platform for downloading scientific e-books</li> <li>Free Experiment Platform - Amazon SageMaker Studio Lab</li> </ul>"},{"location":"tags/#automation","title":"automation","text":"<ul> <li>\u6dd8\u5b9d\u81ea\u52a8\u62a2\u5355</li> <li>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u722c\u866b</li> <li>\u722c\u53d6\u5e76\u4e0b\u8f7dURL\u4e0d\u53d8\u7684pdf\u6587\u4ef6</li> <li>PayPal\u804c\u4f4d\u722c\u866b</li> <li>12306\u667a\u80fd\u8ba2\u7968</li> <li>Build a Taobao Robotic Purchasing Tool in Two Minutes</li> <li>WeChat Mini Program Spider</li> <li>Crawl and download PDF files with unchanged URLs</li> <li>Python Web Scraping Application - Scraping PayPal Job Positions</li> <li>Intelligent Ticket Booking for Train 12306</li> </ul>"},{"location":"tags/#blockchain","title":"blockchain","text":"<ul> <li>Python\u5b9e\u73b0\u7b80\u5355\u533a\u5757\u94fe\u8d27\u5e01</li> <li>\u5229\u7528\u663e\u5361\u5b9e\u73b0\u5496\u5561\u81ea\u7531</li> <li>Using Graphics Cards to Achieve Daily Manner Freedom, You Can Too!</li> </ul>"},{"location":"tags/#bullettech","title":"bullettech","text":"<ul> <li>\u5173\u4e8eBulletTech</li> <li>\u6211\u4eec\u7684\u6545\u4e8b</li> <li>\u201c\u5e74\u7ec8\u201d\u6587\u7ae0\u56de\u987e\u53ca\u65b0\u83dc\u5355\u53d1\u5e03</li> <li>\"Year-end\" Article Review and New Menu Release</li> </ul>"},{"location":"tags/#cnn","title":"cnn","text":"<ul> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#database","title":"database","text":"<ul> <li>SnowFlake\u67b6\u6784\u6982\u89c8</li> <li>SnowFlake\u6743\u9650\u6982\u89c8</li> <li>SQL Tips\uff08\u4e00\uff09</li> <li>SQL Tips\uff08\u4e8c\uff09</li> <li>Overview of SnowFlake Architecture</li> <li>SnowFlake Permission Overview</li> <li>SQL tips</li> <li>SQL Tips</li> </ul>"},{"location":"tags/#deep-learning","title":"deep learning","text":"<ul> <li>Keras\u5404\u79cdCallbacks\u4ecb\u7ecd</li> <li>\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b</li> <li>\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow</li> <li>\u7b97\u6cd5\u4e2d\u7684multi\u5bb6\u65cf</li> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TabNet\u6a21\u578b\u4ecb\u7ecd</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>\u4f7f\u7528TensorFlow Decision Forests\u6784\u5efa\u6811\u6a21\u578b</li> <li>TensorFlow Playground\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Introduction to various Keras Callbacks</li> <li>Customizing Models with tf.keras</li> <li>Installing TensorFlow on Apple Silicon Macs</li> <li>The Multi-Family in Algorithms</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Reading \"30 Days to Eat TensorFlow2\"</li> <li>TensorFlow Recommender System (Part 1)</li> <li>Introduction to TabNet</li> <li>TensorFlow Recommendation System (2)</li> <li>2022 04 16 TF Text Classification</li> <li>Building Tree Models with TensorFlow Decision Forests</li> <li>Introduction to TensorFlow Playground</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#docker","title":"docker","text":"<ul> <li>Docker\u521d\u4f53\u9a8c</li> <li>\u6559\u4f60\u6210\u529f\u5728Win10\u7cfb\u7edf\u4e2d\u8fd0\u884cdocker</li> <li>\u4f7f\u7528GitHub Action\u81ea\u52a8\u63a8\u9001Docker\u955c\u50cf</li> <li>Docker\u4e4b\u6570\u636e\u7684\u6301\u7eed\u6027\u5316</li> <li>Docker\u8e29\u5751\u65e5\u8bb0</li> <li>First Experience with Docker</li> <li>Teaching You to Successfully Run Docker on Win10 System</li> <li>Automatically Build and Push Docker Image with GitHub Action</li> <li>Persisting Data in Docker</li> <li>Notes on Docker Pitfalls</li> </ul>"},{"location":"tags/#experience","title":"experience","text":"<ul> <li>\u5982\u4f55\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u6587\u7ae0</li> <li>How to Write a Beautiful Article at the Fastest Speed</li> </ul>"},{"location":"tags/#git","title":"git","text":"<ul> <li>\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub</li> <li>Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8</li> <li>GitHub\u4e5f\u53ef\u4ee5\u5f88\u597d\u73a9</li> <li>\u7528GitHub\u505a\u4e00\u4efd\u7cbe\u7f8e\u7684\u5728\u7ebf\u7b80\u5386</li> <li>GitHub Action\u6982\u89c8</li> <li>\u4f7f\u7528GitHub Action\u81ea\u52a8\u63a8\u9001Docker\u955c\u50cf</li> <li>How to Use GitHub without Writing a Single Line of Code</li> <li>A List of Common Git Commands</li> <li>Explore GitHub</li> <li>Creating a Beautiful Online Resume using GitHub</li> <li>GitHub Action Overview</li> <li>Automatically Build and Push Docker Image with GitHub Action</li> </ul>"},{"location":"tags/#hardware","title":"hardware","text":"<ul> <li>\u6362\u79cd\u59ff\u52bf\uff0c\u5728\u5bb6\u529e\u516c - \u7f57\u6280MX Keys + M720\u4e3b\u89c2\u8bc4\u6d4b</li> <li>\u521d\u8bc62020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u672a\u6765\u53ef\u671f</li> <li>Apple Watch S5 \u4f7f\u7528\u4e00\u5e74\u611f\u53d7 - \u4e0d\u540e\u6094\uff01</li> <li>M1 Mac mini \u4f7f\u7528\u534a\u5e74\u4f53\u9a8c - Mac\u7684\u65b0\u672a\u6765</li> <li>Working from Home with a Different Posture - Logitech MX Keys + M720 Subjective Review</li> <li>2020 04 05 iPad Pro</li> <li>One Year's Use of Apple Watch S5 - No Regrets!</li> <li>Half-year Experience of M1 Mac mini - The New Future of Mac</li> </ul>"},{"location":"tags/#knowledge-graph","title":"knowledge graph","text":"<ul> <li>\u521d\u8bc6\u56fe\u6570\u636e\u5e93</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e00\uff09 - \u642d\u5efa\u5206\u6790\u73af\u5883</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e8c\uff09 - \u51c6\u5907\u6570\u636e</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e09\uff09 - \u8bc6\u522b\u72af\u7f6a\u56e2\u4f19</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u56db\uff09 - \u98ce\u9669\u8bc4\u5206</li> <li>Introduction to Graph Databases</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (Part 1) - Building Analysis Environment</li> <li>Neo4J Graph Database Anti-Fraud Analysis in Practice (Part 2) - Prepare Data</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (III) - Identifying Criminal Groups</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (Part 4) - Risk Scoring</li> </ul>"},{"location":"tags/#machine-learning","title":"machine learning","text":"<ul> <li>\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b</li> <li>\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0a\uff09</li> <li>\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0b\uff09</li> <li>\u5929\u6c60\u96f6\u57fa\u7840\u91d1\u878d\u98ce\u63a7\u6bd4\u8d5b\u5c0f\u7ed3</li> <li>Kaggle tips</li> <li>Kaggle Optiver</li> <li>\u51b3\u7b56\u6811\u5b66\u4e60\u7b14\u8bb0</li> <li>Kaggle Jane Street</li> <li>\u795e\u7ecf\u7f51\u7edc\u8c03\u53c2\u6280\u5de7</li> <li>\u91d1\u878d\u98ce\u63a7\u7279\u5f81\u5de5\u7a0b</li> <li>\u7279\u5f81\u9009\u62e9\u5c0f\u4ecb</li> <li>KDD Cup2021\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u603b\u7ed3</li> <li>\u7279\u5f81\u9009\u62e9\u4e4bPermutation Importance</li> <li>\u96c6\u6210\u5b66\u4e60\u5c0f\u4ecb</li> <li>Kaggle\u91cf\u5316\u7ade\u8d5bTop\u65b9\u6848</li> <li>\u56e0\u679c\u63a8\u65ad\u4e4bUplift Model</li> <li>Machine Learning\u5b66\u4e60\u8d44\u6599\u6c47\u603b</li> <li>AMEX - Default Prediction Kaggle\u7ade\u8d5b\u7cbe\u534e\u603b\u7ed3</li> <li>Time Series Anomaly Detection</li> <li>Reflections on \"Rules of Machine Learning\" (Part 1)</li> <li>Reflections on \"Rules of Machine Learning\" (Part 2)</li> <li>Summary of Tianchi Zero-based Financial Risk Control Competition</li> <li>Kaggle Tips</li> <li>Notes on Decision Tree Learning</li> <li>Kaggle Jane Street Competition</li> <li>Tips for Tuning Neural Networks</li> <li>Summary of Feature Engineering in Financial Risk Control</li> <li>Summary of KDD Cup2021 Time Series Anomaly Detection Competition</li> <li>Permutation Importance for Feature Selection</li> <li>Introduction to Ensemble Learning</li> <li>Top Solutions for Kaggle Quantitative Competitions</li> <li>Uplift Model in Causal Inference</li> <li>Summary of Machine Learning Learning Resources (Continuously Updated)</li> <li>AMEX - Default Prediction Kaggle Competition Summary</li> </ul>"},{"location":"tags/#nlp","title":"nlp","text":"<ul> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>2022 04 16 TF Text Classification</li> </ul>"},{"location":"tags/#python","title":"python","text":"<ul> <li>\u6709\u8da3\u7684API\u4ecb\u7ecd1.0</li> <li>\u514d\u8d39\u5b9e\u9a8c\u5e73\u53f0 - Amazon SageMaker Studio Lab</li> <li>\u597d\u7528\u7684Python\u5305</li> <li>Python\u5143\u7ec4\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u5217\u8868\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u5b57\u5178\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u95ed\u5305\u6d45\u6790</li> <li>\u8bed\u6cd5\u89e3\u6790\u5de5\u5177sqlparse</li> <li>\u547d\u4ee4\u884c\u4ea4\u4e92\u5de5\u5177argparse</li> <li>Python\u98ce\u683c\u6700\u4f73\u5b9e\u8df5</li> <li>\u6dd8\u5b9d\u81ea\u52a8\u62a2\u5355</li> <li>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u722c\u866b</li> <li>\u722c\u53d6\u5e76\u4e0b\u8f7dURL\u4e0d\u53d8\u7684pdf\u6587\u4ef6</li> <li>PayPal\u804c\u4f4d\u722c\u866b</li> <li>PySpark\u5c0f\u4ecb</li> <li>\u6d45\u8c08\u6570\u636e\u7684\u641c\u7d22\u548c\u6392\u5e8f</li> <li>\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u9009\u53d6</li> <li>\u65b9\u5dee\u5206\u6790</li> <li>AMEX - Default Prediction Kaggle\u7ade\u8d5b\u7cbe\u534e\u603b\u7ed3</li> <li>\u57fa\u4e8eFlaskBB\u81ea\u5efa\u8bba\u575b</li> <li>\u89e3\u8bfbFlaskBB\u6e90\u7801</li> <li>12306\u667a\u80fd\u8ba2\u7968</li> <li>\u83b7\u53d6\u57fa\u91d1\u884c\u60c5\u6570\u636e</li> <li>\u79df\u623f\u4fe1\u606f\u83b7\u53d6</li> <li>Interesting API Introduction</li> <li>Free Experiment Platform - Amazon SageMaker Studio Lab</li> <li>Useful Python Packages</li> <li>Tips for Common Operations with Python Tuples</li> <li>Tips for Common Operations on Python Lists</li> <li>Tips for Common Operations on Python Dictionaries</li> <li>Understanding Python Closures</li> <li>SQL Parsing Tool: sqlparse</li> <li>Introduction to Python argparse module</li> <li>Build a Taobao Robotic Purchasing Tool in Two Minutes</li> <li>WeChat Mini Program Spider</li> <li>Crawl and download PDF files with unchanged URLs</li> <li>Python Web Scraping Application - Scraping PayPal Job Positions</li> <li>Introduction to PySpark</li> <li>A Brief Discussion on Data Search and Sorting</li> <li>Efficacy Analysis - Selection of Minimum Sample Size n</li> <li>Analysis of Variance (ANOVA)</li> <li>AMEX - Default Prediction Kaggle Competition Summary</li> <li>Building a forum based on FlaskBB</li> <li>Interpreting FlaskBB Source Code</li> <li>Intelligent Ticket Booking for Train 12306</li> <li>Obtaining Fund Market Data</li> <li>Obtaining rental housing data</li> </ul>"},{"location":"tags/#recommendation","title":"recommendation","text":"<ul> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>TensorFlow Recommender System (Part 1)</li> <li>TensorFlow Recommendation System (2)</li> </ul>"},{"location":"tags/#server","title":"server","text":"<ul> <li>\u57df\u540d\u6ce8\u518c\u53ca\u5907\u6848\u5168\u6d41\u7a0b</li> <li>Domain Registration and Filing Process</li> </ul>"},{"location":"tags/#tensorflow","title":"tensorflow","text":"<ul> <li>Keras\u5404\u79cdCallbacks\u4ecb\u7ecd</li> <li>\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b</li> <li>\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow</li> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TabNet\u6a21\u578b\u4ecb\u7ecd</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>\u4f7f\u7528TensorFlow Decision Forests\u6784\u5efa\u6811\u6a21\u578b</li> <li>TensorFlow Playground\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Introduction to various Keras Callbacks</li> <li>Customizing Models with tf.keras</li> <li>Installing TensorFlow on Apple Silicon Macs</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Reading \"30 Days to Eat TensorFlow2\"</li> <li>TensorFlow Recommender System (Part 1)</li> <li>Introduction to TabNet</li> <li>TensorFlow Recommendation System (2)</li> <li>2022 04 16 TF Text Classification</li> <li>Building Tree Models with TensorFlow Decision Forests</li> <li>Introduction to TensorFlow Playground</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#time-series","title":"time series","text":"<ul> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b</li> <li>KDD Cup2021\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u603b\u7ed3</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Time Series Anomaly Detection</li> <li>Summary of KDD Cup2021 Time Series Anomaly Detection Competition</li> </ul>"},{"location":"tags/#usa","title":"usa","text":"<ul> <li>L\u7b7e\u8bc1\u6301\u6709\u8005\u5165\u5883\u7f8e\u56fd\u5907\u5fd8\u5f55</li> <li>\u8003\u53d6\u7f8e\u56fd\u9a7e\u7167\u7cbe\u7b80\u6307\u5357</li> <li>Memo for L Visa Holders to Enter the United States</li> <li>A Simplified Guide to Obtaining a US Driver's License</li> </ul>"},{"location":"Dessert/Apps/2021-06-06-Notion/","title":"\u529f\u80fd\u5f3a\u5927\uff0c\u989c\u503c\u5728\u7ebf\u7684\u4e2a\u4eba\u7b14\u8bb0\u5e94\u7528 - Notion","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-06-06\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u65e0\u8bba\u5728\u5b66\u6821\u8fd8\u662f\u5de5\u4f5c\u4e2d\uff0c\u8bb0\u7b14\u8bb0\u90fd\u662f\u8ba9\u751f\u6d3b\u9ad8\u6548\u6709\u5e8f\u7684\u6709\u6548\u65b9\u5f0f\u3002  </p> <p>\u5e38\u89c1\u7684\u4e2a\u4eba\u7b14\u8bb0\u8f6f\u4ef6\u5305\u62ec\uff1a</p> <ul> <li>\u5fae\u8f6f\u7684<code>OneNote</code></li> <li>\u56fd\u4ea7\u7684<code>\u5370\u8c61\u7b14\u8bb0</code></li> </ul> <p>\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u8981\u4ecb\u7ecd\u4e00\u6b3eiOS\u6241\u5e73\u98ce\u7684\u5b9d\u85cfApp - Notion\u3002\u672c\u6587\u662f\u4e00\u7bc7\u4e2a\u4eba\u5411\u7684\u70b9\u8bc4\uff0c\u4ece\u5b9e\u9645\u4f7f\u7528\u53ca\u4e2a\u4eba\u504f\u597d\u51fa\u53d1\uff0c\u4ec5\u4ee3\u8868\u4e2a\u4eba\u89c2\u70b9\u3002  </p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#1-onenote","title":"1 OneNote","text":"<p>\u4f5c\u4e3a\u5fae\u8f6f\u51fa\u54c1\uff0c\u5b83\u6709\u7740\u4e00\u5982\u65e2\u5f80\u7684Office\u98ce\u683c\uff0c\u8bf4\u4e0d\u4e0a\u4e11\u4e5f\u8bf4\u4e0d\u4e0a\u597d\u770b\u3002\u53ef\u4e2a\u4eba\u4f7f\u7528\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u4f01\u4e1a\u56e2\u961f\u534f\u4f5c\u6216\u77e5\u8bc6\u5171\u4eab\u7684\u5e73\u53f0\u3002\u529f\u80fd\u4e0d\u7b97\u5f3a\u5927\uff0c\u7b97\u662f\u4e00\u6b3e\u65e0\u529f\u65e0\u8fc7\u7684\u4f01\u4e1a\u7ea7\u6807\u51c6\u4ea7\u54c1\u3002  </p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#2-evernote","title":"2 \u5370\u8c61\u7b14\u8bb0\uff08Evernote\uff09","text":"<p>\u4f5c\u4e3a\u4e00\u6b3e\u56fd\u4ea7\u4e2a\u4eba\u7b14\u8bb0\u4ea7\u54c1\uff0c\u77e5\u540d\u5ea6\u8f83\u9ad8\uff0c\u53d7\u4f17\u8f83\u5927\u3002\u4f46\u662f\u4e00\u6253\u5f00\u4e3b\u9875\u5c31\u6765\u4e86\u4e00\u6ce2\u201c\u4f1a\u54585\u6298\u4e703\u5e74\u201d\u7684\u5e7f\u544a\uff0c\u4e0d\u514d\u6709\u70b9\u201c\u5370\u8c61\u6263\u5206\u201d\u3002  </p> <p>\u7b14\u8bb0\u5206\u4e3a\u4e24\u79cd\uff1a\u666e\u901a\u7684\u548c\u8d85\u7ea7\u7b14\u8bb0\u3002\u8d85\u7ea7\u7b14\u8bb0\u548cNotion\u60ca\u4eba\u7684\u76f8\u4f3c\uff0c\u90fd\u662f\u7531\u4e00\u4e2a\u4e2a\u6a21\u5757\uff08Block\uff09\u6784\u6210\uff0c\u5982\u4ee3\u7801\u5757\uff0c\u8868\u683c\u7b49\u3002\u4f46\u4ee4\u4eba\u7a92\u606f\u7684\u662f\u4e0d\u5c11\u6a21\u5757\u90fd\u662f\u4ed8\u8d39\u8d26\u53f7\u4e13\u4eab\u3002\u666e\u901a\u7b14\u8bb0\u786e\u5b9e\u5f88\u666e\u901a\uff0c\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u7528\u6237\u7684\u57fa\u7840\u9700\u6c42\u3002\u4f46\u5728\u7ec6\u8282\u65b9\u9762\u6709\u70b9\u4e4f\u5584\u53ef\u9648\uff0c\u6bd4\u5982\u4ee3\u7801\u5757\u4e2d\u7f3a\u5c11\u4ee3\u7801\u9ad8\u4eae\uff0c\u6587\u5b57\u7f16\u8f91\u4e5f\u6ca1\u6709\u683c\u5f0f\u5237\u6216\u8005\u7eaf\u6587\u672c\u683c\u5f0f\u7b49\u5b9e\u7528\u7684\u5c0f\u7ec6\u8282\u3002  </p> <p>\u53e6\u5916\uff0c\u5ba3\u4f20\u7684\u56e2\u961f\u534f\u4f5c\u529f\u80fd\u63a8\u51fa\u4e0d\u4e45\uff0c\u5e76\u6ca1\u6709\u592a\u591a\u7684\u5b58\u5728\u611f\u3002  </p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#3-notion","title":"3 Notion","text":"<p>Notion\u662f\u7845\u8c37\u521d\u521b\u516c\u53f8\u7814\u53d1\u7684\u4e00\u6b3e\u7b14\u8bb0\u5e94\u7528\u3002\u5b98\u7f51\u7ed9\u4eba\u7684\u7b2c\u4e00\u5370\u8c61\u662f\u7f8e\u89c2\u7b80\u6d01\u7684\u63d2\u753b\u98ce\u683c\uff0c\u53ef\u4ee5\u770b\u51fa\u56e2\u961f\u662f\u5728\u7528\u5fc3\u505a\u4ea7\u54c1\u7684\u3002</p> Notion <p>\u53e3\u53f7\u4e3b\u6253\u7684\u662f\u56e2\u961f\u534f\u4f5c\u7684\u5de5\u4f5c\u7a7a\u95f4\uff0c\u652f\u6301\u79fb\u52a8\u7aef\uff0c\u7f51\u9875\u7aef\u4ee5\u53ca\u672c\u5730\u5ba2\u6237\u7aef\u3002\u6536\u8d39\u65b9\u9762\uff0c\u514d\u8d39\u7684\u4e2a\u4eba\u8d26\u6237\u57fa\u672c\u80fd\u591f\u6ee1\u8db3\u4e2a\u4eba\u4f7f\u7528\u7684\u9700\u6c42\u3002</p> Pricing <p>\u6253\u5f00Notion\uff0c\u7b2c\u4e00\u7bc7getting started\u5c31\u53ef\u4ee5\u8bf4\u662f\u4e00\u7bc7\u5145\u5206\u5c55\u793a\u5176\u529f\u80fd\u7684\u4f18\u79c0\u7b14\u8bb0\u3002\u5305\u62ec\uff0c\u53ef\u4ee5\u4ea4\u4e92\u7684to-do list\uff0c\u7f51\u9875\u94fe\u63a5\uff0c\u63d2\u5165\u89c6\u9891\u7b49\u7b49\u3002  </p> Getting Started","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#31-page","title":"3.1 Page","text":"<p>Notion\u4e2d\u7684\u6bcf\u4e00\u4e2aPage\uff08\u9875\u9762\uff09\u540c\u65f6\u626e\u6f14\u4e86\u7b14\u8bb0\u548c\u6587\u4ef6\u5939\u7684\u89d2\u8272\u3002Page\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u5d4c\u5957\uff0c\u5f62\u6210\u6811\u72b6\u7ed3\u6784\uff0c\u4fbf\u4e8e\u5f52\u7eb3\u6574\u7406\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#32-block","title":"3.2 Block","text":"<p>Page\u7531\u4e00\u4e2a\u4e2a\u5f3a\u5927\u548c\u7c7b\u578b\u4e30\u5bcc\u7684Blocks\uff08\u7ec4\u4ef6\uff09\u6784\u6210\u3002\u5982\u6587\u672c\u5757\uff0c\u4ee3\u7801\u5757\uff0cto-do list\uff0c\u5217\u8868\u7b49\u3002\u751a\u81f3\u53ef\u4ee5\u63d2\u5165\u5730\u56fe\uff0c\u89c6\u9891\u7b49\u3002\u8fd9\u4e9bBlocks\u53ef\u4ee5\u81ea\u7531\u7684\u62d6\u52a8\u3001\u8f6c\u6362\uff0c\u7075\u6d3b\u5b9e\u73b0\u5404\u79cd\u5448\u73b0\u6548\u679c\u3002\u518d\u642d\u914d\u4e0a\u6241\u5e73\u98ce\u7684emoji\uff0c\u53ef\u4ee5\u8bf4\u65e0\u8bba\u5728\u7f8e\u89c2\u8fd8\u662f\u7ec6\u8282\u65b9\u9762\u90fd\u8fbe\u5230\u4e86\u5f88\u9ad8\u7684\u6c34\u51c6\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 / \uff0c\u5982 /code\uff08\u4ee3\u7801\u5757\uff09\u7b49\u6307\u4ee4\uff0c\u5f88\u65b9\u4fbf\u5730\u63d2\u5165\u76f8\u5e94\u7684Block\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cNotion\u7684\u4ee3\u7801\u5757\u8fd8\u6709\u652f\u6301\u591a\u79cd\u8bed\u8a00\u7684\u4ee3\u7801\u9ad8\u4eae\u529f\u80fd\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#33","title":"3.3 \u6587\u5b57\u7f16\u8f91","text":"<p>Notion\u4e5f\u652f\u6301Markdown\u8bed\u6cd5\u3002\u5728\u522b\u7684App\u4e2d\u5b8c\u6210\u7684Markdown\u6587\u5b57\u5185\u5bb9\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u5230Notion\u4e2d\uff0c\u5b8c\u6210\u6392\u7248\u52a0\u5de5\u548c\u6574\u7406\u5de5\u4f5c\u3002Less is more\uff0c\u4ec5\u6709\u7684\u51e0\u79cd\u6587\u5b57\u683c\u5f0f\u65e2\u907f\u514d\u4e86\u683c\u5f0f\u7684\u4e0d\u7edf\u4e00\uff0c\u53c8\u7b80\u7ea6\u7f8e\u89c2\u5145\u6ee1\u7985\u610f\uff0c\u63d0\u9ad8\u4e86\u7b14\u8bb0\u6548\u7387\u3002  </p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#34","title":"3.4 \u6a21\u677f","text":"<p>\u53e6\u5916\uff0cNotion\u8fd8\u670950+\u5185\u7f6e\u6a21\u677f\u4ee5\u6ee1\u8db3\u4e0d\u540c\u5e94\u7528\u573a\u666f\u7684\u9700\u6c42\uff0c\u5982\u8bb0\u5f55\u9879\u76ee\u8fdb\u5ea6\u7684<code>\u770b\u677f</code>:   </p> KanBan <p>\u4e00\u5e94\u4ff1\u5168\u7684<code>\u4e2a\u4eba\u4e3b\u9875</code>\u7b49\u7b49:  </p> Personal Home <p>\u4f7f\u7528\u65f6\uff0c\u53ea\u9700\u8981\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684Templates\uff0c\u7136\u540e\u9009\u62e9\u76f8\u5e94\u7684\u6a21\u677f\u3002</p> \u4f7f\u7528\u6a21\u677f <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5236\u6a21\u677f\uff0c\u4fbf\u4e8e\u8c03\u7528\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5728Meeting Notes\u8fd9\u4e2a\u9875\u9762\u4e2d\uff0c\u81ea\u5236\u4e86Project Review\u8fd9\u4e00\u6a21\u677f\u3002\u6211\u4eec\u5728\u6279\u91cf\u4f7f\u7528\u65f6\uff0c\u53ea\u9700\u8981\u5728\u5176\u4e2d\u586b\u5145\u5185\u5bb9\u5373\u53ef\u3002</p> \u81ea\u5236\u6a21\u677f","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#35","title":"3.5 \u56e2\u961f\u534f\u4f5c","text":"<p>\u6211\u4eec\u4e5f\u5c1d\u8bd5\u8fc7Notion\u7684\u56e2\u961f\u534f\u4f5c\u529f\u80fd\u3002\u9664\u4e86\u53ef\u4ee5\u5171\u4eab\u7b14\u8bb0\uff0c\u77e5\u8bc6\u5206\u4eab\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\u5b9e\u65f6\u7684\u66f4\u65b0\u3001\u8bc4\u8bba\u6216\u5229\u7528\u770b\u677f\uff0c\u6ee1\u8db3\u90e8\u5206\u9879\u76ee\u7ba1\u7406\u7684\u9700\u6c42\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#36","title":"3.6 \u5176\u4ed6","text":"<p>\u4e3a\u4e86\u4fbf\u4e8e\u8fc1\u79fb\uff0cNotion\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5bfc\u5165\u529f\u80fd\uff0c\u5305\u62ec\u6765\u81ea\u5e38\u7528\u7684\u5370\u8c61\u7b14\u8bb0\uff0cWord\u7b49\u8f6f\u4ef6\u3002\u5bfc\u5165\u540e\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528Blocks\u7b49\u5bf9\u5185\u5bb9\u8fdb\u884c\u6392\u7248\u3002\u6b64\u5916\uff0c\u4e4b\u524d\u88ab\u7528\u6237\u8bdf\u75c5\u7684\u4e2d\u6587\u641c\u7d22\u5dee\uff0c\u8fde\u63a5\u4e0d\u7a33\u5b9a\u7b49\u95ee\u9898\u5df2\u7ecf\u5f97\u5230\u5f88\u597d\u7684\u89e3\u51b3\u3002  </p> Import ways","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#37","title":"3.7 \u4e0d\u8db3","text":"<p>\u7f8e\u4e2d\u4e0d\u8db3\u7684\u662f\uff0c</p> <ul> <li>Notion\u7684\u754c\u9762\u76ee\u524d\u53ea\u652f\u6301\u82f1\u6587\u548c\u97e9\u6587\u3002</li> <li>Notion\u5c06\u8868\u683c\u8868\u73b0\u4e3aDatabase\uff08\u62e5\u6709\u6392\u5e8f\u3001\u7b5b\u9009\u7b49\u529f\u80fd\uff09\uff0c\u529f\u80fd\u5f88\u5f3a\u5927\uff0c\u4f46\u662f\u65e0\u6cd5\u4f5c\u4e3a\u6700\u666e\u901a\u7684\u8868\u683c\u4f7f\u7528\u3002</li> <li>Block\u65e0\u6cd5\u5d4c\u5957\u4f7f\u7528\uff0c\u5982\u4ee3\u7801\u5757\u4e2d\u65e0\u6cd5\u5d4c\u5957\u5217\u8868\u3002</li> <li>\u4e0a\u624b\u96be\u5ea6\u7565\u9ad8\u4e8eOneNote\u548c\u5370\u8c61\u7b14\u8bb0\u3002  </li> </ul>","tags":["app"]},{"location":"Dessert/Apps/2021-06-06-Notion/#4","title":"4. \u603b\u7ed3","text":"<p>\u603b\u800c\u8a00\u4e4b\uff0cNotion\u662f\u4e00\u6b3e\u989c\u503c\u6e05\u65b0\uff0c\u529f\u80fd\u5f3a\u5927\uff0c\u751a\u81f3\u6709\u4e00\u4e22\u4e22\u201c\u82b1\u91cc\u80e1\u54e8\u201d\u7684\u4f18\u79c0\u7b14\u8bb0\u5e94\u7528\u3002\u60f3\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\uff0c\u5c06\u8bb0\u7b14\u8bb0\u53d8\u6210\u751f\u6d3b\u4e2d\u4e00\u4ef6<code>\u6709\u8da3\u7684\u5c0f\u786e\u5e78</code>\u7684\u7528\u6237\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e0b\u5b83\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/","title":"\u53bb\u6211\u7684\u6536\u85cf\u5939\u5403\u7070\u5427 - \u88c5\u673a\u5fc5\u5907\u4e4b\u5b9e\u7528\u7535\u8111\u8f6f\u4ef6","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTeam\uff0c\u53d1\u5e03\u4e8e2021-06-15\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u603b\u6709\u90a3\u4e48\u4e00\u4e9b\u795e\u5947\u7684\u8f6f\u4ef6\u80fd\u6ee1\u8db3\u4f60\u5404\u5f0f\u5404\u6837\u7684\u9700\u6c42\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#_1","title":"\u901a\u7528\u7bc7","text":"","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#1","title":"1 \u706b\u7ed2","text":"<p>\u867d\u71362021\u5e74\u7684\u4eca\u5929\uff0c\u78b0\u5230\u8ba1\u7b97\u673a\u75c5\u6bd2\u5df2\u7ecf\u662f\u6781\u5176\u7a00\u7f55\u7684\u4e8b\u60c5\u4e86\u3002\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4e00\u6b3e\u5b89\u5168\u8f6f\u4ef6\uff0c\u6ee1\u8db3\u5783\u573e\u6e05\u7406\u3001\u6f0f\u6d1e\u5b89\u88c5\u7b49\u65e5\u5e38\u9700\u6c42\u3002\u5b8c\u5168\u6ca1\u6709\u5f39\u7a97\u7684\u706b\u7ed2\u5c06\u6210\u4e3a\u4f60\u9ed8\u9ed8\u5b88\u62a4\u7684\u201c\u5b88\u62a4\u795e\u201d\u3002</p> \u706b\u7ed2","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#2-smallpdf","title":"2 Smallpdf","text":"<p>Smallpdf\u80fd\u6ee1\u8db3\u6240\u6709\u4e0epdf\u76f8\u5173\u7684\u9700\u6c42\uff0c\u5305\u62ecpdf\u538b\u7f29\u3001Office(Word\u3001Excel\u3001PowerPoint)\u4e0epdf\u4e92\u8f6c\u3001pdf\u8f6c\u56fe\u7247\u3001pdf\u5408\u5e76\u3001pdf\u89e3\u9501\u4e0e\u4fdd\u62a4\u7b49\u3002 \u5728\u5c1d\u8bd5\u8fc7\u4e0d\u5c11\u5728\u7ebf\u7684pdf\u670d\u52a1\u540e\uff0cSmallpdf\u65e0\u8bba\u5728\u670d\u52a1\u8303\u56f4\u8fd8\u662f\u8f6c\u6362\u8d28\u91cf\u7b49\u65b9\u9762\u90fd\u8fdc\u8fdc\u80dc\u51fa\u3002</p> Smallpdf","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#windows","title":"Windows\u7bc7","text":"","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#1-everything","title":"1 Everything","text":"<p>Everything\u662fWindows\u4e0a\u7684\u4e00\u6b3e\u641c\u7d22\u5f15\u64ce\uff0c\u5b83\u80fd\u591f\u57fa\u4e8e\u6587\u4ef6\u540d\u5feb\u901f\u5b9a\u4f4d\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u4f4d\u7f6e\u3002\u6709\u4e86Everything\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u627e\u4e0d\u5230\u6587\u4ef6\u4e86\u3002</p> Everything","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#2-internet-download-manager","title":"2 Internet Download Manager","text":"<p>Internet Download Manager\u53f7\u79f0\u901f\u5ea6\u6700\u5feb\u7684\u4e0b\u8f7d\u5668\u3002\u9664\u4e86\u901f\u5ea6\u98de\u5feb\uff0c\u4e0e\u4f17\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u53ef\u4ee5\u4e0b\u8f7d\u7f51\u9875\u4e0a\u7684\u5404\u79cd\u5185\u5bb9\uff0c\u5305\u62ec\u56fe\u7247\u3001\u89c6\u9891\u7b49\u7b49\u3002\u66fe\u7ecf\u6709\u4e00\u6b21\u5728\u8fc5\u96f7\u65e0\u52a8\u4e8e\u8877\u65f6\uff0c\u53ea\u6709Internet Download Manager\u5e2e\u6211\u4e0b\u8f7d\u4e86\u6240\u9700\u7684pdf\u6587\u4ef6\u3002</p> Internet Download Manager","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#3-grammarly","title":"3 Grammarly","text":"<p>Grammarly\u53ef\u4ee5\u7b97\u662f\u6211\u7684\u79c1\u4eba\u8bed\u6cd5\u8001\u5e08\u4e86\u3002\u4ed6\u662f\u4e00\u6b3e\u82f1\u8bed\u5199\u4f5c\u6da6\u8272\u8f6f\u4ef6\uff0c\u63d0\u4f9b\u5ba2\u6237\u7aef\uff0cMS Office\u5957\u4ef6\uff0cChrome/Edge\u6d4f\u89c8\u5668\uff0c\u624b\u673a/Pad\u7b49\u573a\u666f\u7684\u4f7f\u7528\u3002\u4ed6\u53ef\u4ee5\u5e2e\u52a9\u4f60\u68c0\u67e5\u62fc\u5199\uff0c\u8bed\u6cd5\u9519\u8bef\uff0c\u4fee\u6539\u53e5\u5f0f\u6846\u67b6\uff0c\u4ed8\u8d39\u7248\uff08Premium\uff09\u8fd8\u4f1a\u7ed3\u5408\u8bed\u5883\u5206\u6790\u7528\u8bcd\u7684\u51c6\u786e\u6027\uff0c\u63d0\u51fa\u53ef\u80fd\u66f4\u5408\u9002\u4e0a\u4e0b\u6587\u7684\u7528\u8bcd\u5efa\u8bae\u7b49\u7b49\u3002\u6709\u4e86\u8fd9\u4e2a\u8f6f\u4ef6\u65e0\u65f6\u65e0\u523b\u7684\u6559\u4f60\u8bed\u6cd5\uff0c\u4f60\u7684\u82f1\u6587\u5199\u4f5c\u80fd\u529b\u4f1a\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u83b7\u5f97\u63d0\u5347\u3002</p> Grammarly","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#mac","title":"Mac\u7bc7","text":"","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#1-spark","title":"1 Spark","text":"<p>Spark\u662f\u6211\u6700\u559c\u6b22\u7684\u90ae\u4ef6\u5ba2\u6237\u7aef\uff0c\u7531Readdle\u5f00\u53d1\uff0c\u514d\u8d39\u7684\u529f\u80fd\u80fd\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u4f7f\u7528\u9700\u6c42\u3002\u5176\u4e3b\u8981\u4f18\u70b9\u5305\u62ec\uff1a\u7528\u6237\u754c\u9762\u6e05\u723d\u3001\u529f\u80fd\u5e03\u5c40\u5408\u7406\u3001\u5b9e\u7528\u7684\u667a\u80fd\u6536\u4ef6\u7bb1\u3001\u4e30\u5bcc\u7684\u5feb\u6377\u952e\u3001\u7075\u6d3b\u7684\u6536\u4ef6\u7bb1\u89c4\u5219\u548c\u641c\u7d22\u3001\u591a\u5e73\u53f0\u540c\u6b65\u8fc5\u901f\u3001\u652f\u6301\u591a\u79cd\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u4e2a\u4eba\u7248\u514d\u8d39\u7b49\u3002\u8fd9\u662f\u4e00\u6b3e\u770b\u7b2c\u4e00\u773c\u5c31\u8ba9\u4eba\u60f3\u63a5\u7740\u7528\u7684\u4ea7\u54c1\u3002\u7f8e\u4e2d\u4e0d\u8db3\u7684\u662f\u7f51\u6613\u5c4f\u853d\u4e86Spark\u7b49\u7b2c\u4e09\u65b9\u90ae\u4ef6\u5ba2\u6237\u7aef\uff0c\u914d\u7f6e\u7684\u65f6\u5019\u7565\u663e\u9ebb\u70e6\uff0c\u4f46\u8fd9\u662f\u4e0dSpark\u7684\u7f3a\u70b9\uff0c\u662f\u7f51\u6613\u7684\u3002</p> Spark","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#2-pdf-expert","title":"2 PDF Expert","text":"<p>macOS\u4e0a\u7684PDF Expert\u662fPDF\u8f6f\u4ef6\u7684\u72ec\u4e00\u6863\uff0c\u540c\u6837\u7531Readdle\u5f00\u53d1\u3002\u9605\u8bfb\u3001\u6279\u6ce8 PDF\uff0c\u7f16\u8f91\u6587\u672c\uff0c\u6dfb\u52a0\u7167\u7247\uff0c\u586b\u5199\u8868\u5355\uff0c\u7b7e\u7f72\u5408\u540c\u7b49\u4f60\u80fd\u60f3\u5230\u7684\u64cd\u4f5c\uff0cPDF Expert\u90fd\u7ed9\u4f60\u63d0\u4f9b\u65e0\u6bd4\u6d41\u7545\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u9009\u5b83\u7edd\u5bf9\u4e0d\u4f1a\u9519\u3002</p> PDF Expert","tags":["app"]},{"location":"Dessert/Apps/2021-06-15-Hotapps/#3-vectornator","title":"3 Vectornator","text":"<p>BulletTech\u6240\u6709\u7684\u56fe\u5f62\u8bbe\u8ba1\u5747\u4f7f\u7528Vectornator\u5b8c\u6210\uff0c\u8fd9\u6b3e\u8f6f\u4ef6\u4e13\u4e1a\u6027\u4e0d\u5982Adobe Illustrator\uff0c\u4f46\u5176\u529f\u80fd\u76f8\u5bf9\u4e8e\u975e\u4e13\u4e1a\u8bbe\u8ba1\u4eba\u58eb\u5df2\u7136\u8db3\u591f\uff0c\u4f5c\u4e3a\u8f7b\u91cf\u7ea7\u7684\u56fe\u5f62\u8bbe\u8ba1\u8f6f\u4ef6\uff0c\u4e0d\u59a8\u4f5c\u4e3a\u5b66\u4e60\u548c\u5de5\u4f5c\u7684\u5165\u95e8\u9009\u62e9\uff0c\u7b49\u6280\u80fd\u5a34\u719f\u4e4b\u540e\u518d\u4f7f\u7528\u66f4\u4e13\u4e1a\u7684\u8f6f\u4ef6\u3002</p> Vectornator","tags":["app"]},{"location":"Dessert/Apps/2021-07-12-Paste/","title":"Paste - \u526a\u5207\u677f\u5de5\u5177","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-07-12\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea60\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-12-Paste/#_1","title":"\u4f7f\u7528\u6280\u5de7","text":"<p>\u8bf7\u76f4\u63a5\u67e5\u770b\u5fae\u4fe1\u516c\u4f17\u53f7\u7684\u89c6\u9891\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/","title":"\u544a\u522b\u9762\u5411Google\u7f16\u7a0b\uff0cCopilot\u6d4b\u8bd5\u7248\u672c\u4f53\u9a8c","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-07-19\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u6700\u8fd1OpenAI\u548cGitHub\u8054\u5408\u53d1\u5e03\u4e86\u4e00\u4e2a\u540d\u4e3aCopilot\u4ee3\u7801\u751f\u6210\u5de5\u5177\u3002\u8fd9\u4e2a\u5de5\u5177\u57fa\u4e8eGPT-3\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\u5f00\u53d1\uff0c\u5e76\u4f7f\u7528GitHub\u4e0a\u7684\u6570\u5341\u4ebf\u884c\u4ee3\u7801\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\uff0c\u5b9e\u73b0\u5728\u5199\u4ee3\u7801\u65f6\u81ea\u52a8\u63d0\u4f9b\u4ee3\u7801\u5efa\u8bae\u7684\u529f\u80fd\u3002</p> <p>\u76ee\u524d\u8be5\u4ea7\u54c1\u5df2\u7ecf\u5728Vscode extenison\u4e2d\u4e0a\u7ebf\u3002\u4f5c\u4e3a\u957f\u671f\u9762\u5411Google\u7f16\u7a0b\u7684\u5c0f\u767d\uff0c\u5f53\u7136\u662f\u5077\u61d2\u7b49\u4e0d\u4e86\u660e\u5929\uff0c\u65e9\u65e9\u5728\u5b98\u7f51\u6392\u961f\u7b49\u5f85\u8bd5\u7528\u540d\u989d\uff0c\u5e78\u8fd0\u5730\u5728\u4e00\u4e24\u5468\u524d\u83b7\u5f97\u4e86\u8bd5\u7528\u673a\u4f1a\u3002</p> <p>\u4e00\u5468\u7684\u4f53\u9a8c\u4e0b\u6765\uff0c\u6211\u8ba4\u4e3aCopilot\u7684\u529f\u80fd\u76f8\u8f83\u4e8e\u5176\u4ed6\u4ee3\u7801\u8865\u9f50\u5de5\u5177\u800c\u8a00\u66f4\u52a0\u5f3a\u5927\uff0c\u66f4\u52a0\u7075\u6d3b\uff0c\u751a\u81f3\u6709\u65f6\u8ba9\u6211\u6709\u79cd\u4eff\u4f5bCopilot\u771f\u7684\u80fd\u8bfb\u61c2\u6211\u7684\u60f3\u6cd5\u548c\u4ee3\u7801\uff0c\u5e76\u4e14\u5c06\u5176\u5b9e\u73b0\u7684\u611f\u89c9\u3002\u663e\u8457\u63d0\u9ad8\u4e86\u5199\u7801\u6548\u7387\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/#1-copilotgtp-3","title":"1 Copilot\u80cc\u540e\u7684\u6a21\u578bGTP-3","text":"<p>\u5927\u5bb6\u5bf9GPT-3\u5e76\u4e0d\u964c\u751f - \u6216\u8bb8\u662f2020\u5e74\u6700\u706b\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6a21\u578b\uff0c\u8bad\u7ec3\u6210\u672c\u63a5\u8fd1500\u4e07\u5143\uff0c\u6a21\u578b\u53c2\u6570\u8d85\u8fc71750\u4ebf\u4e2a\u3002\u4ed6\u662f\u4e00\u4e2a\u81ea\u56de\u5f52\u6a21\u578b\uff0c\u901a\u4fd7\u7406\u89e3\u5c31\u662f\u8f93\u5165\u4e00\u6bb5\u6587\u672c\u7684\u524d\u4e00\u90e8\u5206\uff0c\u9884\u6d4b\u63a5\u4e0b\u6765\u7684\u6587\u672c\u7684\u6982\u7387\u5206\u5e03\u3002GTP-3 \u81ea\u95ee\u4e16\u4ee5\u6765\u5c31\u88ab\u5f00\u53d1\u6210\u51e0\u5341\u4e2a\u5927\u5927\u5c0f\u5c0f\u7684\u4e0d\u540c\u5e94\u7528\uff0c\u4f8b\u5982\u8fdb\u884c\u4e00\u4e9b\u521b\u4f5c\u6027\u5199\u4f5c\uff08\u8bd7\u6b4c\uff0c\u5c0f\u8bf4\u7b49\uff09\uff0c\u7f16\u5199\u524d\u7aef\u4ee3\u7801\uff08debuild.co\uff09\u7b49\u7b49\u3002</p> <p>\u9c81\u8fc5\u66fe\u7ecf\u8bf4\u8fc7\uff0cXXX\u662f\u6700\u597d\u7684\u8bed\u8a00\uff0c\u65e2\u7136GTP-3\u5728\u8bed\u8a00\u65b9\u9762\u5982\u6b64\u6709\u5929\u8d4b\uff0c\u90a3\u4e48\u5728\u5199\u4ee3\u7801\u65b9\u9762\u5e94\u8be5\u4e5f\u4f1a\u6709\u6240\u5efa\u6811\u5427\u3002\u679c\u7136CodeX - \u57fa\u4e8eGTP-3\u5fae\u8c03\u540e\u7684\u7f16\u7a0b\u8bed\u8a00\u7248\u672c\u4e5f\u5728\u4e0d\u4e45\u540e\u95ee\u4e16\uff0c\u800cCopilot\u6b63\u662fCodeX\u7684\u7b2c\u4e00\u4e2a\u5546\u4e1a\u5316\u5e94\u7528\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/#2-copilot","title":"2 Copilot\u8bd5\u7528\u4f53\u9a8c","text":"<p>Copilot\u5b98\u7f51\u4e2d\u5217\u4e3e\u4e86Copilot\u7684\u56db\u4e2a\u4f7f\u7528\u65b9\u5411\uff1a * \u5c06\u6ce8\u91ca\u8f6c\u5316\u6210\u4ee3\u7801 * \u81ea\u52a8\u586b\u5145\u91cd\u590d\u4ee3\u7801 * \u81ea\u52a8\u7f16\u5199\u6d4b\u8bd5 * \u63d0\u4f9b\u591a\u79cd\u4ee3\u7801\u65b9\u6848</p> <p>\u53ef\u4ee5\u8bf4\uff0c\u5982\u679c\u771f\u7684\u80fd\u5b9e\u73b0\u4e0a\u8ff0\u6240\u8bf4\u7684\u56db\u70b9\uff0c\u90a3\u4e48\u771f\u7684\u662f\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u9ad8\u4ee3\u7801\u7f16\u5199\u6548\u7387\uff0c\u5728\u62ff\u5230\u8bd5\u7528\u8d44\u683c\u540e\uff0c\u6211\u5c31\u5982\u4e0a\u51e0\u70b9\u8fdb\u884c\u4e86\u4f53\u9a8c\u548c\u6d4b\u8bd5\uff0c\u7a76\u7adf\u80fd\u4e0d\u80fd\u8fbe\u5230\u5b98\u7f51\u4e0a\u6240\u8bf4\u7684\u795e\u5947\u6548\u679c\u5462\uff1f</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/#21","title":"2.1 \u4ece\u96f6\u5f00\u59cb\u5199\u7a0b\u5e8f","text":"<p>\u9996\u5148\u6211\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\uff0c\u6b63\u5de7\u5f53\u65f6\u6253\u7b97\u7784\u4e00\u773c\u6bd4\u7279\u5e01\u7684\u4ef7\u683c\uff0c\u5bf9\u4e86\uff0c\u8981\u4e0d\u8ba9Copilot\u5e2e\u6211\u5199\u4e00\u4e2a\u5427\uff01\u6211\u5728\u6ce8\u91ca\u4e2d\u5b9a\u4e49\u4e86\u60f3\u8981\u7684\u51fd\u6570\uff0c\u770b\u770bCopilot\u80fd\u4e0d\u80fd\u8bfb\u61c2\u6211\u7684\u610f\u601d\u5462\uff1f</p> <p>\u67e5\u770b\u5fae\u4fe1\u516c\u4f17\u53f7\u7684\u89c6\u9891\uff1a[]</p> <p>\u7b2c\u4e00\u6b21\u8fd0\u884c\u7684\u65f6\u5019\u6211\u5b9e\u5b9e\u5728\u5728\u5730\u88ab\u201c\u60ca\u5413\u201d\u5230\u4e86\uff0cCopilot\u4f3c\u4e4e\u662f\u7406\u89e3\u4e86\u6211\u7684\u6ce8\u91ca\uff0c\u521a\u5f00\u59cb\u5b9a\u4e49\u51fd\u6570\uff0cCopilot\u5c31\u8feb\u4e0d\u53ca\u5f85\u7ed9\u6211\u63a8\u8350\u4e86\u4f20\u5165\u7684\u53c2\u6570\uff0c\u7d27\u63a5\u7740\u53c8\u63a8\u8350\u4e86\u5b8c\u6574\u7684\u51fd\u6570\u4ee3\u7801\u3002\u867d\u7136\u4e4b\u524d\u4e5f\u5b58\u5728\u7c7b\u4f3c\u8bed\u8a00\u8f6c\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u4e1d\u6ed1\u7a0b\u5ea6\u548c\u751f\u6210\u4ee3\u7801\u7684\u51c6\u786e\u5ea6\u4e0a\uff0c\u4e2a\u4eba\u611f\u89c9Copilot\u90fd\u9065\u9065\u9886\u5148\u4e8e\u5176\u4ed6\u5de5\u5177\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/#22","title":"2.2 \u5df2\u6709\u9879\u76ee\u4e0a\u7ee7\u7eed\u7f16\u5199\u4ee3\u7801","text":"<p>\u66f4\u591a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5728\u5df2\u6709\u4ee3\u7801\u4e0a\u8fdb\u884c\u6dfb\u52a0\u6216\u8005\u4fee\u6539\uff0c\u5176\u4e2d\u4e0d\u4e4f\u9700\u8981\u5199\u4e00\u4e9b\u529f\u80fd\uff0c\u683c\u5f0f\u8f83\u4e3a\u76f8\u4f3c\u7684\u51fd\u6570\u3002\u6709\u65f6\u6211\u4f1a\u9009\u62e9\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u51fd\u6570\u7136\u540e\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u662f\u4e00\u65e6\u9700\u8981\u4fee\u6539\u7684\u53d8\u91cf\u8f83\u591a\uff0c\u5f80\u5f80\u4f1a\u9057\u6f0f\u5bfc\u81f4\u6d4b\u8bd5\u65f6\u62a5\u9519\u3002\u90a3\u4e48\u5728\u7c7b\u4f3c\u573a\u666f\u4e0b\uff0cCopilot\u662f\u5426\u80fd\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u66f4\u5408\u9002\u7684\u201c\u53c2\u8003\u7b54\u6848\u201d\u5462\uff1f</p> <p>\u6211\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u4e86\u4e00\u4e2a\u7b80\u5355\u6d4b\u8bd5\uff0c\u5728DeepaiImageApi\u6a21\u5757\u4e2d\uff0c\u6211\u60f3\u8981\u901a\u8fc7\u4e24\u4e2a\u4e0d\u540c\u51fd\u6570\u5206\u522b\u5b9e\u73b0\u5c06\u56fe\u7247\u6570\u636e\u548c\u56fe\u7247url\u4f20\u7ed9DeepAI\u63d0\u4f9b\u7684API\u63a5\u53e3\u3002\u5728\u6211\u5b9a\u4e49\u4e86\u7b2c\u4e00\u4e2a\u51fd\u6570\u65b9\u6cd5\u4e4b\u540e\uff0c\u6765\u770b\u770bCopilot\u662f\u5426\u80fd\u6839\u636e\u6211\u7684\u6ce8\u91ca\u76f4\u63a5\u751f\u6210\u6211\u60f3\u8981\u7684\u4ee3\u7801\u5427:</p> \u586b\u5145\u91cd\u590d\u6027\u4ee3\u7801 <p>\u7ed3\u679c\u662f\u975e\u5e38Amazing\u554a\uff0c\u53ef\u4ee5\u770b\u51faCopilot\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u7b26\u5408\u8303\u5f0f\u7684\u51fd\u6570\u540d\uff0c\u4ee3\u7801\u4ee5\u53ca\u7b26\u5408\u9879\u76ee\u4ee3\u7801\u7684\u53c2\u6570\u8c03\u7528\uff0c\u5e76\u4e14\u5bf9\u51fd\u6570\u5185\u5bb9\u4e5f\u6709\u76f8\u5bf9\u5e94\u7684\u6539\u52a8(request.post\u4e2d\u4f20\u5165\u7684files\u53c2\u6570\u7531image\u53d8\u6210\u4e86url\uff09\u3002\u8bf4\u660ecopilot\u7684\u786e\u5c06\u672c\u5730\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u4f5c\u4e3a\u4e86\u6a21\u578b\u7684\u8f93\u5165\u503c\uff0c\u5e76\u4e14\u5f88\u597d\u5730\u201c\u7406\u89e3\u201d\u4e86\u4ee3\u7801\u4e2d\u7684\u91cd\u8981\u7279\u5f81\uff0c\u5982\u683c\u5f0f\uff0c\u89c4\u8303\uff0c\u7ed3\u6784\u7b49\u7b49\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-07-19-Copilot/#3","title":"3 \u76f4\u89c2\u611f\u53d7","text":"<p>\u603b\u4f53\u800c\u8a00\uff0c\u867d\u7136Copilot\u751f\u6210\u7684\u4ee3\u7801\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u8fd8\u9700\u8981\u68c0\u67e5\u548c\u8c03\u6574\uff0c\u4f46\u662f\u4ed6\u9769\u547d\u6027\u7684\u4ee3\u7801\u751f\u6210\u6548\u679c\u8fd8\u662f\u628a\u521d\u6b65\u63a5\u89e6Copilot\u7684\u6211\u60ca\u8273\u5230\u4e86\uff0c\u6709\u65f6\u5c31\u7b97\u7a0b\u5e8f\u5df2\u7ecf\u5199\u597d\uff0c\u6211\u8fd8\u662f\u4f1a\u7279\u610f\u6309\u4e0bCtrl+Enter\u67e5\u770bcopilot\u63d0\u4f9b\u7684\u4e0d\u540c\u601d\u8def\u548c\u65b9\u6cd5\u3002</p> <p>\u6700\u540e\u5939\u5e26\u4e00\u70b9\u70b9\u4e2a\u4eba\u89c2\u70b9\uff0c\u6709\u4eba\u8d28\u7591Copilot\u6210\u719f\u4ee5\u540e\u6216\u8bb8\u4f1a\u62a2\u8d70\u90e8\u5206\u7a0b\u5e8f\u5458\u7684\u996d\u7897\uff0c\u6216\u8005\u8ba9\u7a0b\u5e8f\u5458\u81ea\u4e3b\u601d\u8003\u7684\u80fd\u529b\u9010\u6e10\u9000\u5316\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5165\u95e8\u7801\u519c\u6765\u8bf4\u6211\u76ee\u524d\u89c9\u5f97\u5e76\u4e0d\u9700\u8981\u62c5\u5fc3\u3002Copilot\u7ed9\u6211\u7684\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u4e13\u95e8\u63d0\u4f9b\u7ed9\u7a0b\u5e8f\u5458\u7684Google\uff0c\u6216\u662f\u4e00\u5957\u6574\u7406\u9f50\u5168\uff0c\u7d22\u5f15\u5b8c\u5907\u7684\u4ee3\u7801\u7b54\u6848\u5e93\uff0c\u5728\u9762\u5bf9\u591a\u6570\u4eba\u9047\u5230\u8fc7\u7684\u7c7b\u4f3c\u95ee\u9898\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u63d0\u9ad8\u7f16\u7a0b\u6548\u7387\uff0c\u51cf\u5c11\u9762\u5411Google\u7f16\u7a0b\u65f6\u641c\u7d22\u5408\u9002\u7b54\u6848\u7684\u65f6\u95f4\u3002</p> <p>\u800c\u53e6\u4e00\u65b9\u9762\uff0cGTP-3\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u81ea\u56de\u5f52\u6a21\u578b\uff0c\u6211\u4eec\u65e0\u6cd5\u4f9d\u8d56\u5176\u63d0\u4f9b\u7ed9\u6211\u4eec\u66f4\u52a0\u521b\u65b0\u7684\u7b97\u6cd5\u6216\u4ee3\u7801\u65b9\u6848\uff0c\u5f53\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u4ece\u91cd\u590d\u4e14\u67af\u71e5\u7684\u4ee3\u7801\u4e2d\u89e3\u653e\u51fa\u6765\u7684\u65f6\u5019\uff0c\u6216\u8bb8\u4f1a\u5c31\u6709\u66f4\u591a\u7684\u4eba\u7c7b\u667a\u6167\u88ab\u5229\u7528\u5728\u521b\u65b0\u6027\u7684\u5de5\u4f5c\u4e2d\uff0c\u4ece\u800c\u52a0\u901f\u884c\u4e1a\u7684\u8fdb\u6b65\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-23-PicGo/","title":"PicGo\u56fe\u5e8a\uff0c\u529f\u80fd\u521a\u521a\u597d","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-23\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-23-PicGo/#1","title":"1 \u524d\u8a00","text":"<p>\u81ea\u5a92\u4f53\u5de5\u4f5c\u6d41\u91cc\u56fe\u7247\u4e0d\u53ef\u6216\u7f3a\uff0c\u6709\u4e00\u4e2a\u597d\u7684\u56fe\u5e8a\u80fd\u5f88\u65b9\u4fbf\u5730\u7ba1\u7406\u3001\u5f15\u7528\u56fe\u7247\uff0c\u5728\u5982\u4f55\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u516c\u4f17\u53f7\u6587\u7ae0 \u8fd9\u7bc7\u6587\u7ae0\u91cc\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u6709\u6548\u7684\u5de5\u4f5c\u6d41\uff0c\u4f46\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\uff0cmdnice\u91cc\u7684GitHub\u56fe\u5e8a\u5df2\u7ecf\u65e0\u6cd5\u4f7f\u7528\uff0c\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684\u5b9e\u7528\u56fe\u5e8a\u5de5\u5177 - PicGo\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-23-PicGo/#2-picgo","title":"2 \u5b89\u88c5PicGo","text":"<p>PicGo\u652f\u6301Windows\uff0cmacOS\u548cLinux\u5e73\u53f0\uff0c\u53ef\u4ee5\u4ece\u5176GitHub\u5b98\u7f51\u4e0b\u8f7d\u5bf9\u4e8e\u5e73\u53f0\u7684\u5b89\u88c5\u6587\u4ef6\u8fdb\u884c\u5b89\u88c5\u3002</p> \u4e0b\u8f7dPicGo <p>\u5b89\u88c5\u5b8c\u540e\u5373\u53ef\u770b\u5230PicGo\u7684\u4e3b\u754c\u9762\uff1a</p> PicGo\u4e3b\u754c\u9762 <p>\u5de6\u4fa7\u53ef\u4ee5\u5207\u6362\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5982\u56fe\u6240\u793a\u662f\u4e0a\u4f20\u533a\uff0c\u5c06\u56fe\u7247\u62d6\u4f4f\u8fdb\u6846\u91cc\u5c31\u53ef\u4ee5\u751f\u6210\u5bf9\u5e94\u7684\u56fe\u7247\u5f15\u7528\u94fe\u63a5\u3002\u76f8\u518c\u91cc\u5219\u6709\u6240\u6709\u4e0a\u4f20\u8fc7\u7684\u56fe\u7247\uff0c\u914d\u7f6e\u533a\u5728\u4e0b\u6587\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-23-PicGo/#3-github","title":"3 \u914d\u7f6eGitHub\u56fe\u5e8a","text":"<p>PicGo\u652f\u6301\u591a\u79cd\u56fe\u5e8a\uff0c\u5982SMMS\u3001\u4e03\u725b\u56fe\u5e8a\u3001\u817e\u8baf\u4e91COS\u3001\u53c8\u62cd\u4e91\u3001GitHub\u56fe\u5e8a\u3001\u963f\u91cc\u4e91OSS\u3001Imgur\u56fe\u5e8a\u7b49\u591a\u79cd\u56fe\u5e8a\uff0c\u672c\u6559\u7a0b\u4ee5\u514d\u8d39\u7684GitHub\u56fe\u5e8a\u4e3a\u4f8b\u8bb2\u8ff0\u914d\u7f6e\u8fc7\u7a0b\u3002</p> <p>\u9996\u5148\u9700\u8981GitHub\u8d26\u53f7\uff0c\u5e76\u719f\u6089\u57fa\u672c\u7684GitHub\u64cd\u4f5c\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub\u8fd9\u7bc7\u6587\u7ae0\u8fdb\u884c\u5b66\u4e60\u3002\u6ce8\u518c\u5b8cGitHub\u4e4b\u540e\uff0c\u5728<code>\u4e2a\u4eba\u8bbe\u7f6e</code> -&gt; <code>\u5f00\u53d1\u8005\u8bbe\u5b9a</code>\u91cc\u751f\u6210Personal access tokens\uff0c\u53ea\u9700\u8981\u628arepo\u7684\u52fe\u6253\u4e0a\u5373\u53ef\u751f\u6210token\uff0c\u56e0\u4e3a\u5b83\u53ea\u663e\u793a\u4e00\u6b21\uff0c\u6240\u4ee5\u8bf7\u52a1\u5fc5\u5b58\u4e0b\u8fd9\u4e2atoken\u4ee5\u5907\u540e\u7eed\u4f7f\u7528\u3002</p> Personal access tokens <p>\u7136\u540e\u6309\u7167\u5982\u4e0b\u793a\u4f8b\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff1a</p> \u914d\u7f6ePicGo <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u9009\u62e9main\u5206\u652f\u5373\u53ef\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u6700\u597d\u6307\u5b9a\u5b58\u50a8\u8def\u5f84\u5230\u4e00\u4e2a\u6587\u4ef6\u5939\u91cc\uff0c\u800c\u975e\u5168\u90e8\u5806\u653e\u5728\u5206\u652f\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u540c\u65f6\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u57df\u540d\u80fd\u591f\u52a0\u901f\u56fe\u7247\u52a0\u8f7d\uff0c\u5982BulletTech\u4f7f\u7528<code>https://cdn.jsdelivr.net/gh/BulletTech2021/Pics</code>\u3002</p> <p>\u914d\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u62d6\u62fd\u56fe\u7247\u5230\u4e0a\u4f20\u533a\u4e4b\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u56fe\u7247\u5c31\u4f1a\u81ea\u52a8\u4e0a\u4f20\u5230GitHub\uff0c\u540c\u65f6\u56fe\u7247\u5f15\u7528\u94fe\u63a5\uff08<code>https://cdn.jsdelivr.net/gh/BulletTech2021/Pics/img/Pics_in_github.png</code>\uff09\u81ea\u52a8\u88ab\u590d\u5236\u5230\u4e86\u526a\u5207\u677f\uff0c\u5728\u5404\u4e2a\u5e73\u53f0\u5f15\u7528\u8be5\u94fe\u63a5\u5373\u53ef\u663e\u793a\u56fe\u7247\u3002</p> \u56fe\u7247\u5df2\u7ecf\u4e0a\u4f20\u81f3GitHub","tags":["app"]},{"location":"Dessert/Apps/2021-10-23-PicGo/#4","title":"4 \u603b\u7ed3","text":"<p>PicGo\u5f00\u6e90\u514d\u8d39\uff0c\u5b9e\u6d4b\u4e0b\u6765\uff0c\u8f6f\u4ef6\u8d28\u91cf\u7a33\u5b9a\u53ef\u9760\uff0c\u5e76\u4e14\u5f00\u53d1\u8005\u4ecd\u7136\u5728\u6301\u7eed\u66f4\u65b0\u8f6f\u4ef6\uff0c\u540c\u65f6\u4f60\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u5176\u57fa\u7840\u81ea\u5df1\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u8fd9\u4e2a\u5b9e\u7528\u5de5\u5177\u80fd\u663e\u8457\u63d0\u9ad8\u81ea\u5a92\u4f53\u5de5\u4f5c\u8005\u7684\u6548\u7387\uff01</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-29-iOS-Shortcuts/","title":"iOS Shortcuts\u6377\u5f84 - \u81ea\u52a8\u5316\u795e\u5668","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-29\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea60\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2021-10-29-iOS-Shortcuts/#shortcuts","title":"Shortcuts\u6377\u5f84\u4f7f\u7528\u6280\u5de7","text":"<p>\u8bf7\u76f4\u63a5\u67e5\u770b\u5fae\u4fe1\u516c\u4f17\u53f7\u91cc\u7684\u6377\u5f84\uff08Shortcuts\uff09\u89c6\u9891\u3002</p> <ul> <li>\u5feb\u901f\u6253\u5f00\u5065\u5eb7\u7801\uff1a</li> <li>\u5feb\u901f\u5220\u9664\u622a\u56fe\uff1a</li> <li>\u5145\u7535\u5b8c\u6210\u540e\u81ea\u52a8\u63d0\u793a\uff1a</li> </ul>","tags":["app"]},{"location":"Dessert/Apps/2021-11-26-APIintro/","title":"\u6709\u8da3\u7684 API \u4ecb\u7ecd","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aEcho\uff0c\u53d1\u5e03\u4e8e 2021-11-26\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app","python"]},{"location":"Dessert/Apps/2021-11-26-APIintro/#1","title":"1 \u524d\u8a00","text":"<p>\u670b\u53cb\u4eec\uff0c\u53c8\u5230\u4e86\u7f8e\u597d\u7684\u5468\u672b\uff0c\u8fd9\u5468\u8fc7\u7684\u5f00\u5fc3\u5417\uff1f\u88ab\u5938\u4e86\u5417\uff1f\u60f3\u597d\u505a\u4ec0\u4e48\u6765\u6b22\u5ea6\u5468\u672b\u4e86\u5417\uff1f\u4eca\u5929\u8ba9\u6211\u4eec\u4ece\u8fd9\u4e9b\u95ee\u9898\u5f00\u59cb\uff0c\u804a\u804a\u6570\u636e\u79d1\u5b66\u5e26\u7ed9\u6211\u4eec\u7684\u6d6a\u6f2b\u4e0e\u6c99\u96d5\u7684\u5feb\u4e50\u3002</p>","tags":["app","python"]},{"location":"Dessert/Apps/2021-11-26-APIintro/#2-api","title":"2 \u4e24\u4e2a\u6c99\u96d5\u53c8\u6709\u8da3\u7684API","text":"<p>\u4e5f\u8bb8\u5de5\u4f5c/\u5b66\u4e60\u4e86\u4e00\u5468\uff0c\u73b0\u5728\u7684\u4f60\u5f88\u75b2\u60eb\uff1b\u4e5f\u8bb8\u5165\u51ac\u4e86\uff0c\u5bd2\u51b7\u4e14\u8981\u4e0a\u73ed\u8ba9\u4eba\u53d8\u5f97\u4e0d\u5f00\u5fc3\uff1b\u4e5f\u8bb8\u5750\u4e45\u4e86\u53c8\u5403\u591a\u4e86\uff0c\u6bd5\u7adf\u6bcf\u5929\u90fd\u662fcheating day\uff0c\u80a9\u8180\u7684\u9178\u75db\u548c\u6c89\u7538\u7538\u7684\u8102\u80aa\u8ba9\u4eba\u6709\u70b9\u5fc3\u7d2f\u3002\u90a3\u4e48\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u7b2c\u4e00\u4e2a\u6c99\u96d5API\uff0c\u53ef\u4ee5\u81ea\u52a8\u968f\u673a\u751f\u6210\u571f\u5473\u60c5\u8bdd\u9017\u4f60\u5f00\u5fc3\u3002 \u8bdd\u4e0d\u591a\u8bf4\u5148\u4e0a\u7ed3\u679c\u3002</p> \u571f\u5473\u60c5\u8bdd\u793a\u4f8b <p>\u6bcf\u9022\u5468\u672b\u90fd\u8981\u601d\u8003\u5e72\u70b9\u4ec0\u4e48\u597d\uff0c\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u540c\u6837\u7684\u56f0\u6270\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u4e0b\u9762\u8fd9\u4e2aboredAPI\u4e5f\u8bb8\u53ef\u4ee5\u5e2e\u5230\u4f60\u3002\u5b83API\u5982\u5176\u540d\uff0c\u6bcf\u5f53\u4f60\u65e0\u804a\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u4ee5\u968f\u673a\u751f\u6210\u4e00\u4e9b\u6d3b\u52a8\u4f9b\u4f60\u53c2\u8003\u3002\u5305\u62ec\u6d3b\u52a8\u5185\u5bb9\uff0c\u79cd\u7c7b\uff0c\u53c2\u4e0e\u4eba\u6570\uff0c\u4ef7\u683c\u6602\u8d35\u7a0b\u5ea6\uff0c\u94fe\u63a5\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u548c\u53ef\u884c\u6027\u3002\u6bd4\u5982\u6211\u65e9\u4e0a\u65e0\u804a\u968f\u673a\u751f\u6210\u4e86\u4e00\u4e0b\uff0c\u73b0\u5728\u6b63\u5728\u505a\u5b83\u63a8\u8350\u7ed9\u6211\u7684\u7b2c\u4e94\u4ef6\u4e8b :)</p> \u6d3b\u52a8\u63a8\u8350\u793a\u4f8b <p>\u5f53\u7136\uff0c\u4f60\u8fd8\u53ef\u4ee5\u6309\u81ea\u5df1\u7684\u5fc3\u610f\u4fee\u6539\u5b83\u3002\u4e0b\u9762\u662fboredAPI\u7684\u6d3b\u52a8\u53c2\u6570\u7684\u53c2\u8003\u3002\u8fd9\u91cc\u4e5f\u9644\u4e0aboredAPI\u7684\u5b98\u65b9\u53c2\u8003\u6587\u6863\u3002\u4f60\u53ef\u4ee5\u9650\u5b9a\u81ea\u5df1\u559c\u6b22\u7684\u79cd\u7c7b\uff0c\u53c2\u4e0e\u4eba\u6570\uff0c\u4ef7\u683c\u6602\u8d35\u7a0b\u5ea6\u548c\u53ef\u884c\u6027\u7a0b\u5ea6\u7b49\uff0c\u8ba9\u5b83\u66f4\u52a0\u7b26\u5408\u4f60\u7684\u9700\u6c42\u3002\u6bd4\u5982\u54ea\u5929\u6211\u594b\u53d1\u56fe\u5f3a\u4e86\uff0c\u9650\u5b9a\u53ea\u770beducation\u7c7b\u7684\u6d3b\u52a8\uff0c\u793a\u4f8b\u5982\u4e0b\u3002\u6211\u4eec\u60ca\u4eba\u5730\u53d1\u73b0\uff0c\u5b66\u4e60\u7c7b\u6d3b\u52a8\u771f\u7684\u662f\u51e0\u4e4e\u96f6\u6210\u672c\uff0c\u968f\u65f6\u4e0a\u624b\uff0c\u5e76\u4e14\u4e00\u4eba\u53ef\u884c\u3002\u518d\u4e5f\u627e\u4e0d\u5230\u4e0d\u5b66\u4e60\u7684\u7406\u7531\u4e86\u2026\u2026</p> \u5b66\u4e60\u7c7b\u6d3b\u52a8\u793a\u4f8b \u6d3b\u52a8\u53c2\u6570\u53c2\u8003","tags":["app","python"]},{"location":"Dessert/Apps/2021-11-26-APIintro/#3","title":"3 \u4ee3\u7801\u5b9e\u73b0","text":"<p>API(Application Programming Interface)\u662f\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\u3002\u8ba9\u6211\u4eec\u4e0d\u7528\u91cd\u590d\u9020\u8f6e\u5b50\uff0c\u53ef\u4ee5\u53ea\u4f7f\u7528\u7b80\u5355\u7684\u51e0\u884c\u4ee3\u7801\u5b9e\u73b0\u5404\u79cd\u6709\u8da3\u7684\u529f\u80fd\u3002\u5728\u4ee5\u4e0bdemo\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u8c03\u7528\u4e86\u4e24\u4e2aAPI\u6765\u968f\u673a\u751f\u6210\u571f\u5473\u60c5\u8bdd\u548c\u6d3b\u52a8\u63a8\u8350\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u91cd\u65b0run\u4e00\u904d\u3002\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import requests\nimport json\nimport random\nimport time\nimport pandas as pd\n\nuser_agents = [\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60',\n    'Opera/8.0 (Windows NT 5.1; U; en)',\n    'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',\n    'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n    'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 ',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36',\n    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14\",\n    \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)\"\n]\n\ndef getHeaders():\n    user_agent = user_agents[random.randint(0, len(user_agents)-1)]\n    headers = {\n        'User-Agent': user_agent\n    }\n    return headers\n\n# \u7d2f\u4e86\uff0c\u542c\u542c\u4eca\u65e5\u4efd\u5f69\u8679\u5c41\nsweet_words = []\nurl1 = 'https://chp.shadiao.app/api.php'\nfor i in range(5):\n    time.sleep(random.uniform(0.1,1))\n    response1 = requests.get(url1, headers=getHeaders())\n    sweet_words.append(response1.text)\ntruth = pd.DataFrame(sweet_words,columns=['\u522b\u770b\u4e86\u8bf4\u7684\u5c31\u662f\u4f60'])\ntruth\n\n\n# \u770b\u770b\u5468\u672b\u5e72\u70b9\u4ec0\u4e48\u597d\u5462\ntodo = []\n#\u968f\u673a\u751f\u6210\u6d3b\u52a8\nurl2 = 'http://www.boredapi.com/api/activity/'\n#\u968f\u673a\u751f\u6210\u6307\u5b9a\u7c7b\u578b\u6d3b\u52a8\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u4e3a\u6559\u80b2\u7c7b\u3002\n# url2 = 'http://www.boredapi.com/api/activity?type=education'\nfor i in range(5):\n    time.sleep(random.uniform(0.1,1))\n    response2 = requests.get(url2, headers=getHeaders())\n    item = json.loads(response2.text)\n    todo.append((item[\"activity\"],item[\"type\"],item[\"participants\"],item[\"price\"],item[\"link\"],item[\"accessibility\"]))\ntodo_list = pd.DataFrame(todo,columns=['\u4e8b\u9879','\u7c7b\u522b','\u53c2\u4e0e\u4eba\u6570','\u4ef7\u683c(0-1)','\u94fe\u63a5','\u53ef\u884c\u6027(0-1)'])\ntodo_list['\u53ef\u884c\u6027(0-1)'] = 1-todo_list['\u53ef\u884c\u6027(0-1)']\ntodo_list\n</code></pre>","tags":["app","python"]},{"location":"Dessert/Apps/2021-11-26-APIintro/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u4eca\u5929\u4ecb\u7ecd\u7684\u4e24\u4e2aAPI\u90fd\u975e\u5e38\u5bb9\u6613\u4e0a\u624b\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u7f51\u7edc\u4ee4\u724c\u6216API\u5bc6\u94a5\uff0c\u6ca1\u6709\u6ce8\u518c\u65f6\u9690\u79c1\u6cc4\u9732\u548c\u5e7f\u544a\u7684\u70e6\u607c\u3002\u53ea\u8981\u4f60\u6709Python\u7684\u73af\u5883\uff0c\u65e0\u8111\u8fd0\u884c\u4e00\u4e0bcode\uff0c\u53ef\u4ee5\u6bcf\u6b21\u90fd\u83b7\u5f97\u4e0d\u4e00\u6837\u7684\u4fe1\u606f\u54e6\u3002\u5e0c\u671b\u80fd\u7ed9\u5927\u5bb6\u5e26\u6765\u4e00\u70b9\u7b11\u5bb9\u548c\u6b22\u4e50\u3002\u90a3\u4e48\u4ee5\u4e0a\uff0c\u795d\u5927\u5bb6\u5468\u672b\u6109\u5feb\uff01</p>","tags":["app","python"]},{"location":"Dessert/Apps/2021-12-25-Apache/","title":"Apache\u9879\u76ee\u4ecb\u7ecd","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e 2021-12-25\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#1","title":"1 \u524d\u8a00","text":"<p>Apache\u8f6f\u4ef6\u57fa\u91d1\u4f1a(Apache Software Foundation)\u662f\u4e00\u4e2a\u4e3a\u8fd0\u4f5c\u5f00\u6e90\u8f6f\u4ef6\u9879\u76ee\u7684\u56e2\u4f53\u63d0\u4f9b\u652f\u6301\u7684\u975e\u8425\u5229\u6027\u7ec4\u7ec7\u3002 \u4ece\u6700\u5f00\u59cb\u7684\u5f00\u53d1\u8005\u4eec\u6280\u672f\u4ea4\u6d41\u7684\u793e\u533a\uff0c\u5230\u5982\u4ecaApache\u5df2\u7ecf\u6210\u4e3a\u5168\u4e16\u754c\u6700\u5927\u7684\u5f00\u6e90\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u3002\u5176\u6240\u5b75\u5316\u7684\u5404\u79cd\u5f00\u6e90\u8f6f\u4ef6\u5df2\u7ecf\u670d\u52a1\u4e8e\u5168\u7403\u7684\u5404\u884c\u5404\u4e1a\uff0c\u6df1\u5165\u6211\u4eec\u7684\u751f\u6d3b\u4e4b\u4e2d\u3002</p> <p>\u672c\u6587\u5c06\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b(\u6211)\u5e38\u89c1\u7684Apache\u9876\u7ea7\u9879\u76ee\u3002\u6240\u8c13\u9876\u7ea7\u9879\u76ee\uff0c\u662f\u6307\u7ecf\u8fc7\u5b75\u5316\uff0c\u6ee1\u8db3\u4e00\u5b9a\u8d28\u91cf\u8981\u6c42\u7684\u6bd5\u4e1a\u9879\u76ee\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#2-airflow","title":"2 Airflow","text":"<p>Apache Airflow\u662f\u7528Python\u7f16\u5199\u7684\u5904\u7406data pipeline\u5de5\u4f5c\u6d41\u7684\u8c03\u5ea6\u548c\u76d1\u63a7\u7684\u5e73\u53f0\u3002\u5b83\u662f\u901a\u8fc7DAG(Directed acyclic graph\uff0c\u6709\u5411\u65e0\u73af\u56fe)\u6765\u6784\u5efa\u5de5\u4f5c\u6d41\u7684\u3002 \u901a\u8fc7\u53ef\u89c6\u5316\u7684\u7f51\u9875\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u89c2\u5bdf\u4f9d\u8d56\u5173\u7cfb\uff0c\u76d1\u63a7\u8fdb\u5ea6\uff0c\u7ba1\u7406\u4efb\u52a1\u7b49\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#3-arrow","title":"3 Arrow","text":"<p>Apache Arrow\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5185\u5b58\u6570\u636e\u5904\u7406\u3001\u4ea4\u6362\u7684\u683c\u5f0f\u3002 \u5b83\u91c7\u7528\u4e86\u5217\u5f0f\u5b58\u50a8\uff0c\u5e76\u4e14\u7531\u4e8e\u4e0d\u540c\u5e73\u53f0\u4f7f\u7528\u540c\u4e00\u4e2a\u5185\u5b58\u683c\u5f0f\uff0c\u4ece\u800c\u51cf\u5c11\u7cfb\u7edf\u95f4\u901a\u4fe1\u7684\u5f00\u9500\u3002</p> <p>\u4f7f\u7528Python\u8bfb\u53d6\u5927\u6570\u636e\u6587\u4ef6\u5f80\u5f80\u8017\u65f6\u8f83\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Pyarrow\u5927\u5927\u51cf\u5c11\u8fd9\u4e00\u8017\u65f6\u3002 Feather\u662fApache Arrow\u9879\u76ee\u4e2d\u5305\u542b\u7684\u4e00\u79cd\u6570\u636e\u683c\u5f0f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06Dataframe\u5b58\u50a8\u6210feather\u6587\u4ef6\u5e76\u8bfb\u53d6\u5b83\u3002</p> <pre><code>df.to_feather(path, compression, compression_level)\ndf = pd.read_feather('data.feather')\n</code></pre>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#4-avro","title":"4 Avro","text":"<p>Apache Avro\u662f\u4e00\u79cd\u4e0e\u7f16\u7a0b\u8bed\u8a00\u65e0\u5173\u7684\u5e8f\u5217\u5316\u683c\u5f0f\u3002\u5b83\u53ef\u4ee5\u4e0eHadoop\u751f\u6001\u7cfb\u7edf\u7ed3\u5408\uff0cHive\u8868\u5b9a\u4e49\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528Avro schema\u6765\u58f0\u660e\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#5-flink","title":"5 Flink","text":"<p>Apache Flink\u662f\u4e00\u4e2a\u6d41\u5904\u7406\u6846\u67b6\u3002\u5b83\u4ee5\u6570\u636e\u5e76\u884c\u548c\u6d41\u6c34\u7ebf\u65b9\u5f0f\u6267\u884c\u4efb\u610f\u6d41\u6570\u636e\u7a0b\u5e8f\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c2019\u5e74\u963f\u91cc\u5df4\u5df4\u4ee51\u4ebf\u7f8e\u91d1\u6536\u8d2d\u4e86Flink\u3002\u53ef\u89c1Flink\u5f88\u597d\u7684\u6ee1\u8db3\u4e86\u963f\u91cc\u9700\u8981\u590d\u6742\u5b9e\u65f6\u8ba1\u7b97\u7684\u8fd9\u4e00\u9700\u6c42\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#6-hadoop","title":"6 Hadoop","text":"<p>Apache Hadoop\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u57fa\u7840\u67b6\u6784\uff0c\u662f\u5f53\u4eca\u4e0d\u53ef\u6216\u7f3a\u7684\u5927\u6570\u636e\u751f\u6001\u4e4b\u4e00\u3002 Hadoop\u6846\u67b6\u6700\u6838\u5fc3\u7684\u8bbe\u8ba1\u5c31\u662f\uff1aHDFS(Hadoop Distributed FileSystem)\u548cMapReduce\u3002HDFS\u4e3a\u6d77\u91cf\u7684\u6570\u636e\u63d0\u4f9b\u4e86\u5b58\u50a8\uff0c\u800cMapReduce\u5219\u4e3a\u6d77\u91cf\u7684\u6570\u636e\u63d0\u4f9b\u4e86\u8ba1\u7b97\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#7-hive","title":"7 Hive","text":"<p>Apache Hive\u662f\u57fa\u4e8eHadoop\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u6570\u636e\u4ed3\u5e93\u7cfb\u7edf\u3002\u5b83\u53ef\u4ee5\u5c06SQL\u8bed\u8a00\u7ffb\u8bd1\u6210MapReduce\u7a0b\u5e8f\uff0c\u4e22\u7ed9\u8ba1\u7b97\u5f15\u64ce\u53bb\u8ba1\u7b97\u3002Hive\u6d3b\u8dc3\u5728\u5927\u5927\u5c0f\u5c0f\u7684\u4e92\u8054\u7f51\u516c\u53f8\u4e4b\u4e2d\uff0c\u4e5f\u662f\u6bcf\u5929\u966a\u4f34\u6211\u7684\u8001\u670b\u53cb\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#8-http-server","title":"8 HTTP Server","text":"<p>Apache HTTP Server\u662f\u5f53\u4eca\u6700\u6700\u6d41\u884c\u7684\u7f51\u9875\u670d\u52a1\u5668\u3002\u4e0d\u9700\u8981\u592a\u591a\u8d58\u8ff0\u3002Apache\u57fa\u91d1\u4f1a\u4e5f\u662f\u8d77\u6e90\u4e8e\u8fd9\u4e00\u9879\u76ee\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#9-kafka","title":"9 Kafka","text":"<p>Apache Kafka\u662f\u4e00\u79cd\u9ad8\u541e\u5410\u91cf\u7684\u5206\u5e03\u5f0f\u53d1\u5e03\u8ba2\u9605\u6d88\u606f\u7cfb\u7edf\uff0c\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u52a8\u4f5c\u6d41\u6570\u636e\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#10-pig","title":"10 Pig","text":"<p>Apache Pig\u4e5f\u662f\u57fa\u4e8eHadoop\u751f\u6001\uff0c\u5b83\u63d0\u4f9b\u7684\u7c7bSQL\u8bed\u8a00\u53ebPig Latin\uff0c\u5b83\u4f1a\u628a\u7c7bSQL\u7684\u6570\u636e\u5206\u6790\u8bf7\u6c42\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7ecf\u8fc7\u4f18\u5316\u5904\u7406\u7684MapReduce\u8fd0\u7b97\u3002\u6211\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u4e5f\u7ecf\u5e38\u7528\u5230\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#11-spark","title":"11 Spark","text":"<p>Apache Spark\u53c8\u662f\u4e00\u4e2a\u5927\u540d\u9f0e\u9f0e\u7684\u9879\u76ee\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u6570\u636e\u5904\u7406\u5e73\u53f0\u3002\u5b83\u5177\u6709\u7c7bHadoop MapReduce\u7684\u901a\u7528\u5e76\u884c\u6846\u67b6\uff0c\u4f46\u53c8\u6709\u6240\u4f18\u5316\u3002\u5b83\u5305\u62ecSpark Core\uff0cSpark SQL\uff0cSpark Streaming\uff0cMLlib\u7b49\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#12-tez","title":"12 Tez","text":"<p>Apache Tez\u901a\u8fc7\u5141\u8bb8Apache Hive\u548cApache Pig\u8fd9\u6837\u7684\u9879\u76ee\u8fd0\u884c\u590d\u6742\u7684DAG\u4efb\u52a1\uff0c\u6784\u5efa\u4e86\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#13-zookeeper","title":"13 ZooKeeper","text":"<p>Apache ZooKeeper\u662f\u7528\u6765\u7ba1Hadoop(\u5927\u8c61)\uff0cHive(\u871c\u8702)\uff0cPig(\u5c0f\u732a)\u7684\u52a8\u7269\u7ba1\u7406\u5458\u3002\u5b83\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u3001\u5f00\u6e90\u7684\u7a0b\u5e8f\u534f\u8c03\u670d\u52a1\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a\u914d\u7f6e\u7ba1\u7406\u3001\u540d\u5b57\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u9501\u3001\u96c6\u7fa4\u7ba1\u7406\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2021-12-25-Apache/#14","title":"14 \u5c0f\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230Apache\u57fa\u91d1\u4f1a\u5b75\u5316\u4e86\u8bb8\u8bb8\u591a\u591a\u5927\u540d\u9f0e\u9f0e\u7684\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u8fd0\u7528\u4e8e\u5404\u5f0f\u5404\u6837\u7684\u8f6f\u4ef6\u4e4b\u4e2d\uff0c\u670d\u52a1\u4e8e\u6211\u4eec\u751f\u6d3b\u7684\u65b9\u65b9\u9762\u9762\u3002\u611f\u8c22\u8fd9\u4e9b\u5f00\u6e90\u5927\u4f6c\u7684\u8d21\u732e\uff01</p>","tags":["app"]},{"location":"Dessert/Apps/2022-01-04-Z-Library/","title":"Z-Library\uff0c\u4f18\u8d28\u79d1\u7814\u7535\u5b50\u4e66\u4e0b\u8f7d\u5e73\u53f0","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-01-04\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app"]},{"location":"Dessert/Apps/2022-01-04-Z-Library/#1","title":"1 \u524d\u8a00","text":"<p>\u5ff5\u5927\u5b66\u548c\u7814\u7a76\u751f\u65f6\uff0c\u5b66\u6821\u9986\u85cf\u4e30\u5bcc\uff0c\u603b\u80fd\u501f\u5230\u81ea\u5df1\u60f3\u770b\u7684\u4e66\uff0c\u4e0d\u77e5\u662f\u4e00\u4ef6\u5e78\u4e8b\u3002\u53c2\u52a0\u5de5\u4f5c\u540e\uff0c\u56e0\u56fe\u65b9\u4fbf\uff0c\u8bfb\u7684\u66f4\u591a\u7684\u53cd\u800c\u662f\u7535\u5b50\u4e66\u4e86\u3002\u56e0\u6b64\u6709\u4e00\u4e2a\u627e\u7535\u5b50\u4e66\u7684\u597d\u53bb\u5904\u7701\u5374\u4e86\u8bb8\u591a\u65f6\u95f4\u548c\u7cbe\u529b\uff0c\u6240\u4ee5\u4eca\u5929\u7ed9\u559c\u6b22\u770b\u7535\u5b50\u4e66\u7684\u670b\u53cb\u5206\u4eab\u4e00\u4e2a\u514d\u8d39\u7684\u7535\u5b50\u4e66\u4e0b\u8f7d\u5e73\u53f0\uff1aZ-Libray\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2022-01-04-Z-Library/#2-z-libray","title":"2 Z-Libray","text":"<p>Z-Libray\u7684\u7f51\u5740\u4e3a\uff1ahttps://zh.u1lib.org\u3002\u622a\u81f32022\u5e741\u67084\u65e5\uff0c\u8be5\u7ad9\u6536\u5f55\u4e66\u7c4d<code>9,354,602</code>\u672c\uff0c\u6587\u7ae0<code>84,837,646</code>\u7bc7\u3002\u8fdb\u5165\u9996\u9875\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e66\u7c4d\u540d\u79f0\u3001\u4f5c\u8005\u3001ISBN\u3001\u51fa\u7248\u793e\u3001MD5\u7b49\u5173\u952e\u8bcd\u641c\u7d22\u3002</p> <p>Tip</p> <p>\u56e0\u4e3a\u5404\u79cd\u590d\u6742\u7684\u539f\u56e0\uff0c\u73b0\u5728\u4f7f\u7528Z-Libray\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u66ff\u4ee3\u94fe\u63a5\uff1a</p> <ul> <li>clibrary </li> <li>\u5b89\u5a1c\u7684\u6863\u6848</li> </ul> Z-Libray\u4e3b\u9875 <p>\u641c\u7d22\u5b8c\u6210\u540e\u70b9\u51fb\u611f\u5174\u8da3\u7684\u4e66\u7c4d\uff0c\u8fdb\u5165\u7ed3\u679c\u9875\u9762\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u4e66\u7c4d\u3001\u5728\u7ebf\u9884\u89c8\u3001\u53d1\u9001\u5230Kindle\u6216\u90ae\u7bb1\uff08\u9700\u767b\u5f55\uff09\uff1a</p> \u56fe\u4e66\u4e0b\u8f7d\u3001\u9884\u89c8\u3001\u53d1\u9001\u5230\u4e2a\u4eba\u8bbe\u5907 <p>\u5b9e\u6d4b\u4e0b\u6765\u53d1\u73b0\uff0c\u5e38\u7528\u7684\u4e2d\u82f1\u6587\u4e66\u7c4d\u90fd\u80fd\u627e\u5230\uff0c\u4f46\u5728\u7ebf\u9884\u89c8\u7684\u901f\u5ea6\u8f83\u6162\uff0c\u5efa\u8bae\u76f4\u63a5\u4e0b\u8f7d\u6216\u8005\u53d1\u9001\u5230\u8bbe\u5907\u3002\u672c\u4eba\u5e38\u7528\u7684\u529e\u6cd5\u662f\u76f4\u63a5\u5728iOS\u79fb\u52a8\u8bbe\u5907\u4e0a\u4e0b\u8f7d\uff0c\u5728Books\u5e94\u7528\u4e2d\u6253\u5f00\uff0c\u8fd9\u672c\u4e66\u5219\u4f1a\u81ea\u52a8\u540c\u6b65\u5230\u6240\u6709\u7684Apple\u8bbe\u5907\u4e0a\uff0c\u975e\u5e38\u8212\u5fc3\uff01</p> \u624b\u673a\u4e0b\u8f7d\u5b8c\u76f4\u63a5\u770b\u4e66","tags":["app"]},{"location":"Dessert/Apps/2022-01-04-Z-Library/#3-ipfs","title":"3 \u57fa\u4e8eIPFS\u7f51\u7edc\u7684\u65b9\u6cd5","text":"<p>\u901a\u8fc7\u8bbf\u95eehttps://zlib.knat.network\uff0c\u7136\u540e\u67e5\u8be2\u4e66\u7c4d\u3002\u7136\u540e\u83b7\u53d6\u6700\u65b0\u53ef\u7528\u7684IPFS\u7f51\u5173\uff0c\u63a8\u8350\u5982\u4e0b\u4e24\u4e2a\u7f51\u7ad9\uff1a</p> <ul> <li>https://ipfs.github.io/public-gateway-checker</li> <li>https://ipfs-checker.1kbtool.com/</li> </ul> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <p>1\u3001\u901a\u8fc7https://zlib.knat.network\u641c\u7d22 \u201c\u6258\u9a6c\u65af\uff65\u7d22\u7ef4\u5c14\u201d\u7684\u201c\u77e5\u8bc6\u5206\u5b50\u4e0e\u793e\u4f1a\u201d\u5f97\u5230\u5bf9\u5e94\u7684IPFS CID\u4e3a: <code>bafk2bzacean2aoojxovgmf7557mtrdyufo3t4bidc6haghxcbtbxznmwaaij2</code></p> <p>2\u3001\u901a\u8fc7https://ipfs.github.io/public-gateway-checker\u5f97\u5230cloudflare\u63d0\u4f9b\u7684IPFS\u7f51\u5173\u4e3a https://cloudflare-ipfs.com/ipfs/bafybeifx7yeb55armcsxwwitkymga5xf53dxiarykms3ygqic223w5sk3m#x-ipfs-companion-no-redirect</p> <p>\u4f7f\u7528\u201c\u77e5\u8bc6\u5206\u5b50\u4e0e\u793e\u4f1a\u201d\u5f97\u5230\u5bf9\u5e94\u7684IPFS CID\u66ff\u6362cloudflare\u7684\u793a\u4f8bIPFS CID\uff0c\u4e5f\u5373\uff1a</p> <p>https://cloudflare-ipfs.com/ipfs/bafk2bzacean2aoojxovgmf7557mtrdyufo3t4bidc6haghxcbtbxznmwaaij2</p> <p>\u8bbf\u95ee\u8be5\u94fe\u63a5\u5373\u53ef\u4e0b\u8f7d\u4e66\u7c4d\u3002</p>","tags":["app"]},{"location":"Dessert/Apps/2022-01-04-Z-Library/#4","title":"4 \u603b\u7ed3","text":"<p>\u4f53\u9a8c\u5982\u6b64\u4e1d\u6ed1\u53c8\u514d\u8d39\u7684\u7535\u5b50\u4e66\u4e0b\u8f7d\u5e73\u53f0Z-Libray\uff0c\u4e14\u7528\u4e14\u73cd\u60dc\uff0c\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01</p>","tags":["app"]},{"location":"Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/","title":"\u514d\u8d39\u5b9e\u9a8c\u5e73\u53f0 - Amazon SageMaker Studio Lab","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-05-28\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["app","python"]},{"location":"Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/#1-sagemaker-studio-lab","title":"1 SageMaker Studio Lab","text":"<p>\u672c\u4eba\u4e00\u76f4\u662fGoogle Colab\u7684\u5fe0\u5b9e\u7528\u6237\uff0c\u5176\u514d\u8d39\u7684GPU\u5bf9\u4e8e\u6570\u636e\u79d1\u5b66\u7814\u7a76\u4eba\u5458\u662f\u975e\u5e38\u5b9e\u7528\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u4f46\u662fColab\u7684\u57fa\u7840\u514d\u8d39\u7248\u53ea\u80fd\u540c\u65f6\u4f7f\u7528\u4e00\u4e2a\u8fd0\u884c\u65f6\uff0c\u5e76\u4e14\u5fc5\u987b\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u8bbf\u95ee\u4ea7\u54c1\u3002\u800cAmazon\u6700\u8fd1\u63a8\u51fa\u7684SageMaker Studio Lab\u53ef\u8c13\u662fGoogle Colab\u7684\u540c\u7c7b\u4ea7\u54c1\uff0cAmazon\u4e5f\u5341\u5206\u6177\u6168\u5730\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u7b97\u529b\uff08\u6709CPU\u548cGPU\u4f9b\u9009\u62e9\uff09\u3002\u6ce8\u518c\u8d26\u53f7\u4e4b\u540e\u5373\u53ef\u5728Web\u7aef\u968f\u65f6\u5f00\u5c55\u5b9e\u9a8c\uff0c\u65e0\u9700\u79d1\u5b66\u4e0a\u7f51\uff01</p> Amazon SageMaker Studio Lab <p>\u6ce8\u610f\uff0c\u7b14\u8005\u5728\u4f7f\u7528CPU\u548cGPU\u9879\u76ee\u8fc7\u7a0b\u4e2d<code>\u5076\u5c14\u4f1a\u78b0\u5230\u5f53\u524d\u540c\u65f6\u4f7f\u7528\u4eba\u6570\u8fc7\u591a\u3001\u65e0\u6cd5\u542f\u52a8\u9879\u76ee\u7684\u63d0\u793a</code>\uff0cGPU\u7684\u8d44\u6e90\u76f8\u6bd4\u4e8eGoogle Colab\u66f4\u52a0\u7d27\u5f20\u3002\u5982\u9047\u5230\u6b64\u7c7b\u72b6\u51b5\uff0c\u53ef\u4ee5\u7a0d\u5019\u51e0\u5206\u949f\uff0c\u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u542f\u52a8\uff0c\u53ea\u80fd\u4f7f\u7528\u522b\u7684\u73af\u5883\u8fdb\u884c\u5b9e\u9a8c\uff0c\u8fd9\u4e00\u72b6\u51b5\u5728Google Colab\u91cc\u662f\u4ece\u672a\u9047\u89c1\u7684\uff0c\u4e0d\u77e5\u65e5\u540e\u6b64\u7c7b\u72b6\u51b5\u4f1a\u5426\u6709\u6539\u8fdb\u3002</p> <p>\u8fdb\u5165\u9879\u76ee\u540e\uff0c\u8f6f\u4ef6\u754c\u9762\u548c\u539f\u751f\u7684JupyterLab\u975e\u5e38\u7c7b\u4f3c\uff0c\u5982\u679c\u6709\u7c7b\u4f3c\u7ecf\u9a8c\u7684\u8bdd\u7acb\u9a6c\u5c31\u53ef\u4e0a\u624b\u3002\u540c\u65f6\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4ee3\u7801\u6587\u4ef6\uff0c\u8fd9\u662fAmazon SageMaker Studio Lab\u76f8\u5bf9\u4e8eGoogle Colab\u7684\u4f18\u52bf\u3002</p> Jupyter\u7528\u6237\u754c\u9762 <p>\u6587\u4ef6\u5728\u9879\u76ee\u5173\u95ed\u540e\u4ecd\u7136\u4f1a\u50a8\u5b58\u5728\u7cfb\u7edf\u91cc\uff0c\u65b9\u4fbf\u4e0b\u6b21\u7ee7\u7eed\u4f7f\u7528\u3002\u603b\u7684\u6765\u8bf4\uff0cAmazon SageMaker Studio Lab\u7684\u4f53\u9a8c\u4e0e\u539f\u751f\u7684JupyterLab\u57fa\u672c\u65e0\u5f02\u3002</p>","tags":["app","python"]},{"location":"Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/#2","title":"2 \u5176\u4ed6\u76f8\u5173\u5b66\u4e60\u8d44\u6e90","text":"<p>Amazon SageMaker Studio Lab\u5728\u9879\u76ee\u4e3b\u9875\u5c55\u793a\u4e86\u4e00\u4e9b\u53c2\u8003\u7684\u9879\u76ee\uff0c\u5982<code>Dive into Deep Learning (D2L)</code>\uff0c<code>Hugging Face</code>\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f\u5f88\u597d\u7684\u5b66\u4e60\u8d44\u6e90\uff0c\u70b9\u51fb\u8be6\u60c5\u53ef\u4ee5\u5c06\u9879\u76ee\u590d\u5236\u5230\u81ea\u5df1\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\u8fdb\u884c\u5b9e\u8df5\u3002</p> <p>\u5176\u4e2d<code>Dive into Deep Learning (D2L)</code>\u7531Amazon\u7684<code>Sr. Principal Scientist\u674e\u6c90</code>\u4e3b\u5bfc\uff0c\u6c90\u795e\u5728\u591a\u4e2a\u5e73\u53f0\u514d\u8d39\u5730\u6559\u6388\u6df1\u5ea6\u5b66\u4e60\u7684\u8bfe\u7a0b\uff1a</p> <ul> <li>\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b\u7535\u5b50\u4e66\uff1ahttps://zh-v2.d2l.ai/</li> <li>Bilibili @\u8ddf\u674e\u6c90\u5b66AI\uff1ahttps://space.bilibili.com/1567748478/channel/seriesdetail?sid=358497</li> </ul> <p>\u611f\u5174\u8da3\u5730\u4e0d\u59a8\u524d\u5f80\u76f8\u5e94\u7684\u5e73\u53f0\u5b66\u4e60\u548c\u5b9e\u8df5\uff01\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["app","python"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/","title":"\u6362\u79cd\u59ff\u52bf\uff0c \u5728\u5bb6\u529e\u516c - \u7f57\u6280MX Keys + M720\u4e3b\u89c2\u8bc4\u6d4b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2020-03-14\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea69\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/#_1","title":"\u5de5\u4f5c\u73af\u5883\u6539\u53d8\uff0c\u9700\u8981\u952e\u9f20\u8bbe\u5907","text":"<p>\u672c\u4eba\u4ece\u4e8b\u6570\u636e\u79d1\u5b66\u7684\u5de5\u4f5c\uff0c\u516c\u53f8\u4f7f\u7528\u7684\u53f0\u5f0f\u673a\u53ca\u53cc\u5c4f\uff0c\u914d\u5907\u4e86\u60e0\u666e\u7684\u5e38\u89c4\u952e\u76d8\u9f20\u6807\uff0c\u5728\u5bb6\u4f7f\u7528\u7684\u7535\u8111\u662f2015 \u6b3e13\u82f1\u5bf8\u7684MacBook Pro\uff0c\u56e0\u4e3a\u4e00\u76f4\u4e60\u60ef\u4f7f\u7528Mac\u81ea\u5e26\u7684\u952e\u76d8\u548c\u89e6\u63a7\u677f\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u989d\u5916\u7684\u952e\u76d8\u9f20\u6807\u3002\u5f80\u5e38\u5728\u5bb6\u4f7f\u7528\u7535\u8111\u7684\u65f6\u95f4\u4e0d\u957f\uff0c\u6240\u4ee5\u4e5f\u672a\u66fe\u60f3\u8fc7\u5347\u7ea7\u7535\u8111\u53ca\u914d\u5957\u7684\u8bbe\u5907\u3002 \u8fd1\u671f\u516c\u53f8\u5b89\u6392\u5728\u5bb6\u5de5\u4f5c\uff0c\u6bcf\u65e5\u4f7f\u7528\u7535\u8111\u7684\u65f6\u95f4\u76f8\u6bd4\u4ee5\u524d\u589e\u52a0\u4e86\u633a\u591a\uff0c\u7528\u7b14\u8bb0\u672c\u5199\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u81ea\u89c9\u5730\u4f1a\u8111\u888b\u524d\u503e\uff0c\u4e45\u800c\u4e45\u4e4b\u8116\u5b50\u4f1a\u5341\u5206\u9178\u75db\uff0c\u56e0\u6b64\u8d2d\u5165\u4e86\u4e00\u4e2a\u652f\u67b6\u628a\u7535\u8111\u67b6\u4e86\u8d77\u6765\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u8eaf\u5e72\u5c3d\u53ef\u80fd\u4fdd\u6301\u6b63\u76f4\uff0c\u4f46\u67b6\u8d77\u7535\u8111\u540e\u53d1\u73b0\u4f7f\u7528\u89e6\u63a7\u677f\u548c\u7535\u8111\u81ea\u5e26\u952e\u76d8\u65f6\u95f4\u4e45\u4e86\u4e4b\u540e\uff0c\u56e0\u4e3a\u624b\u8155\u7684\u59ff\u52bf\u4e0d\u81ea\u7136\u5bfc\u81f4\u624b\u8155\u5173\u8282\u9178\u75db\uff0c\u8feb\u4e8e\u65e0\u5948\u5f00\u59cb\u7269\u8272\u952e\u9f20\u4e86\uff1a\uff09</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/#_2","title":"\u8bbe\u5907\u9700\u6c42","text":"<p>\u76f8\u8f83\u4e8e\u5f88\u591a\u7a0b\u5e8f\u5458\u800c\u8a00\uff0c\u672c\u4eba\u5bf9\u673a\u68b0\u952e\u76d8\u5174\u8da3\u4e0d\u5927\uff0c\u4f46\u4e5f\u6709\u51e0\u4e2a\u5f88\u91cd\u8981\u7684\u9700\u6c42\u662f\u8bbe\u5907\u5fc5\u987b\u6ee1\u8db3\u7684\uff1a</p> <ul> <li>\u952e\u76d8\u5e03\u5c40\u5bf9macOS\u53cb\u597d</li> <li>\u65e0\u7ebf</li> <li>\u65b9\u4fbf\u8fdb\u884c\u591a\u8bbe\u5907\u5207\u6362\uff0c\u56e0\u4e3a\u4e60\u60ef\u5728iPad\u4e0a\u5b8c\u6210\u8f7b\u91cf\u7ea7\u5de5\u4f5c</li> <li>\u989c\u503c\u5728\u7ebf</li> </ul> <p>\u5f53\u7136\uff0c\u672c\u4eba\u5e76\u6ca1\u6709\u82b1\u8fc7\u591a\u7684\u65f6\u95f4\u53bb\u505a\u529f\u8bfe\u7814\u7a76\u5e02\u9762\u4e0a\u6ee1\u8db3\u8981\u6c42\u7684\u952e\u76d8\uff0c\u5e76\u4e14\u4e3b\u8981\u662f\u529e\u516c\u9700\u6c42\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u5c31\u5728\u7f57\u6280\u7684\u952e\u76d8\u91cc\u9009\u4e86\u3002\u7f57\u6280\u7684\u952e\u76d8\u786e\u5b9e\u4e94\u82b1\u516b\u95e8\uff0c\u4ef7\u683c\u4ece100\u591a\u52301000\u591a\u4e0d\u7b49\uff0c\u80fd\u6ee1\u8db3\u5927\u591a\u6570\u4eba\u7684\u9700\u6c42\u3002\u56e0\u4e3a\u5728\u65e5\u540e\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u4e0d\u4f1a\u5347\u7ea7\u952e\u76d8\uff0c\u6240\u4ee5\u6253\u7b97\u4e00\u6b21\u5230\u4f4d\uff0c\u56e0\u6b64\u76f4\u63a5\u6309\u4ef7\u683c\u5012\u5e8f\u67e5\u770b\uff0c\u6709\u4e24\u4f4d\u9009\u624b\u8131\u9896\u800c\u51fa\uff1a</p> <ul> <li>\u7f57\u6280Craft</li> <li>\u7f57\u6280MX Keys</li> </ul> <p>\u73b0\u5728\u8fd9\u4e24\u4e2a\u952e\u76d8\u5728\u4eac\u4e1c\u81ea\u8425\u5e97\u7684\u4ef7\u683c\u5dee\u5728100~200\u4e4b\u95f4\uff0c\u4e00\u5f00\u59cb\u949f\u610fCraft\uff0c2017\u5e74\u53d1\u552e\u4ef71700\uff0c\u73b0\u5728\u4ef7\u4f4d\u4e5f\u7a33\u5b9a\u4e86\uff0c\u521b\u610f\u65cb\u94ae\u4e5f\u5341\u5206\u7279\u522b\uff0c\u770b\u8d77\u6765\u5f88\u9999\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cMX Keys \u57282019\u5e749\u6708\u53d1\u5e03\uff0c\u50cf\u662f\u53bb\u9664\u4e86\u521b\u610f\u65cb\u94ae\u7684Craft\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5176\u5b9e\u5bf9\u4e8e\u5199\u4ee3\u7801\u7684\u4eba\u6765\u8bf4\u521b\u610f\u65cb\u94ae\u9700\u8981\u989d\u5916\u7684\u5b66\u4e60\u6210\u672c\u800c\u4e14\u7528\u5904\u4e0d\u5927\u3002\u540c\u65f6\u7531\u4e8e\u53bb\u9664\u4e86\u521b\u610f\u65cb\u94ae\uff0cMX Keys\u7684\u9020\u578b\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\u3001\u7d27\u51d1\u3002\u5728\u5f00\u542f\u80cc\u5149\u529f\u80fd\u4e0b\uff0c\u7eed\u822a\u6bd4Craft\u957f\u4e24\u5929\uff0c\u8fd8\u517c\u5bb9iOS\u548ciPadOS\u3002</p> MX Keys \u548c Craft \u53c2\u6570\u5bf9\u6bd4\u3010\u6765\u6e90\uff1a\u7f57\u6280\u5b98\u7f51\u3011","tags":["hardware"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/#mx-keys-m720","title":"MX Keys + M720","text":"<p>\u82e5\u4e0d\u662f\u7279\u522b\u949f\u610f\u521b\u610f\u65cb\u94ae\uff0c\u9009\u62e9MX Keys\u53ef\u80fd\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002\u56e0\u6b64\u6539\u53d8\u4e3b\u610f\u4ee5899\u5143\u952e\u76d8+59\u5143\u4e09\u5e74\u6362\u65b0=958\u5143\u8d2d\u5165\u4e86MX Keys\u3002</p> \u7f57\u6280MX Keys \u5185\u5305\u88c5\u76d2 <p>\u6625\u8282\u540e\u7269\u6d41\u901f\u5ea6\u57fa\u672c\u6062\u590d\uff0c\u4e0b\u5355\u540e\u4e24\u5929\u5230\u624b\u4e86\uff0c\u5305\u88c5\u4e0d\u6389\u4ef7\uff0c\u6bd5\u7adf\u6ca1\u6709\u4e70\u8fc7\u5176\u4ed6\u7684\u952e\u76d8\uff0c\u4e0d\u597d\u4f5c\u6bd4\u8f83\uff0c\u4f46\u4e2a\u4eba\u611f\u89c9MX Keys\u5305\u88c5\u8fd8\u4e0d\u9519\u3002\u56e0\u4e3aMX Keys\u662f\u4e0eMX Master 3\u4e00\u8d77\u53d1\u5e03\u7684\uff0c\u6240\u4ee5\u5305\u88c5\u76d2\u4e0a\u4e5f\u660e\u786e\u63a8\u8350\u4e86\u548cMX Master 3\u642d\u914d\u4f7f\u7528\uff0c\u53d1\u6325\u51fa\u8fd9\u5957\u88c5\u5907\u7684\u6700\u9ad8\u6027\u80fd\u3002\u4f46\u662f\uff0c\u8fd9\u4e00\u523b\u72b9\u8c6b\u4e86\uff0c\u56e0\u8d2d\u5165\u4e86\u51e0\u5341\u5757\u7684\u652f\u67b6\u67b6\u9ad8\u4e86\u7535\u8111\uff0c\u5bfc\u81f4\u4e70\u4e86\u4e24\u5343\u7684\u952e\u9f20\uff0c\u611f\u89c9\u88ab\u81ea\u5df1\u5751\u4e86\uff0c\u6240\u4ee5\u627e\u4e86\u4e00\u5708MX Master 3\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u770b\u4e86\u51e0\u4e2a2020\u5e74\u7684\u9f20\u6807\u63a8\u8350\u89c6\u9891\uff0c\u6700\u7ec8\u9009\u62e9\u4e86\u6781\u5177\u6027\u4ef7\u6bd4\u7684\u7f57\u6280M720\uff0c\u5e76\u5728\u4eac\u4e1c\u81ea\u8425\u4ee5199\u7684\u4ef7\u683c\u62ff\u4e0b\u3002\u9009\u62e9M720\u539f\u56e0\u5982\u4e0b\uff1a</p> <ul> <li>\u9f20\u6807\u9020\u578b\u9971\u6ee1\uff0c\u63e1\u6301\u611f\u4e0d\u9519</li> <li>\u529f\u80fd\u952e\u9f50\u5168\uff0c\u5bf9macOS\u548ciOS\u3001iPadOS\u517c\u5bb9\u6027\u597d</li> <li>\u80fd\u5feb\u901f\u5207\u6362\u8bbe\u5907</li> <li>\u7406\u8bba\u7eed\u822a2\u5e74\uff0c\u4f7f\u7528\u53ef\u66f4\u63625\u53f7\u5e72\u7535\u6c60</li> <li>\u6027\u4ef7\u6bd4-\u6027\u4ef7\u6bd4-\u6027\u4ef7\u6bd4\uff1a\uff09</li> </ul>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/#_3","title":"\u5b9e\u9645\u4f53\u9a8c","text":"<p>\u8fd9\u5957\u952e\u9f20\u8bbe\u5907\u5b89\u6392\u4e0a\u4e4b\u540e\uff0c\u8116\u5b50\u548c\u624b\u8155\u518d\u4e5f\u6ca1\u6709\u75bc\u8fc7\u4e86\u3002\u4e0eMac\u548ciPad\u642d\u914d\u4f7f\u7528\u7684\u786e\u6bd4\u4e4b\u524d\u6548\u7387\u63d0\u9ad8\u4e86\u4e0d\u5c11\u3002</p> MX Keys \u548c M720 <p>MX Keys\u548cM720\u90fd\u652f\u6301\u84dd\u7259\u8fde\u63a53\u4e2a\u8bbe\u5907\uff0c\u7b2c\u4e00\u6b21\u8fde\u63a5\u540e\uff0c\u6309\u4e0b\u952e\u76d8\u548c\u9f20\u6807\u4e0a\u76841\u30012\u30013\u952e\u5373\u53ef\u5feb\u901f\u5207\u6362\u8bbe\u5907\uff0c\u5e76\u4e14\u952e\u9f20\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u63a5\u6536\u5668\u8fde\u63a5\u7535\u8111\u3002\u5b9e\u9645\u64cd\u4f5c\u4e0b\u6765\u53d1\u73b0\uff0c\u8bbe\u5907\u5207\u6362\u51e0\u4e4e\u65e0\u5ef6\u8fdf\uff0c\u4f46\u662f\u81ea\u5b9a\u4e49\u7684\u8bbe\u7f6e\u5982\u9f20\u6807\u6ed1\u52a8\u901f\u5ea6\u9700\u89811\u79d2\u5de6\u53f3\u7684\u65f6\u95f4\u624d\u4f1a\u66f4\u65b0\u3002\u81ea\u5b9a\u4e49\u529f\u80fd\u65b9\u9762\uff0c\u5728\u5b98\u7f51\u4e0b\u8f7d\u7f57\u6280Options\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0d\u540c\u5e94\u7528\u91cc\u7684\u81ea\u5b9a\u4e49\u6309\u952e\u529f\u80fd\uff0c\u4f46\u662f\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\u53ea\u80fd\u4ece\u7f57\u6280\u9884\u8bbe\u7684\u5217\u8868\u91cc\u9009\u62e9\u3002</p> \u7f57\u6280Options \u81ea\u5b9a\u4e49\u6309\u952e\u7684\u529f\u80fd <p>\u7f57\u6280Options\u652f\u6301\u8d26\u53f7\u8bbe\u7f6e\u4e91\u540c\u6b65\uff0c\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\u767b\u5f55\u540c\u6837\u7684\u8d26\u53f7\uff0c\u5373\u53ef\u540c\u6b65\u6240\u6709\u7684\u8bbe\u7f6e\uff0c\u7701\u53bb\u4e86\u91cd\u65b0\u8c03\u6574\u7684\u9ebb\u70e6\u3002\u603b\u4f53\u6765\u8bf4\uff0c\u8f6f\u4ef6\u529f\u80fd\u662f\u591f\u7528\u7684\u3002\u786c\u4ef6\u7684\u5236\u4f5c\u6c34\u5e73\u4e5f\u4fdd\u6301\u4e86\u4e00\u8d2f\u7684\u9ad8\u6c34\u51c6\uff1a</p> MX Keys \u80cc\u5149 <p>\u952e\u5e3d\u4e2d\u95f4\u662f\u7565\u5fae\u51f9\u9677\u7684\uff0c\u76f8\u6bd4\u4e8eMac\u81ea\u5e26\u7684\u952e\u76d8\u8bef\u89e6\u51e0\u7387\u66f4\u5c0f\uff0c\u4e24\u8005\u952e\u7a0b\u662f\u51e0\u4e4e\u76f8\u540c\uff0c\u4f46\u662fMX Keys\u7684\u6309\u952e\u56de\u5f39\u66f4\u52a0\u5229\u843d\uff0c\u603b\u4f53\u6765\u8bf4\uff0c\u6253\u5b57\u4f53\u9a8c\u6bd4Mac\u81ea\u5e26\u952e\u76d8\u8981\u66f4\u597d\u3002\u8fd9\u6b3e\u952e\u76d8\u7684\u989c\u503c\u4e5f\u5728\u7ebf\uff0c\u767d\u8272\u80cc\u5149\u5728\u6697\u5149\u73af\u5883\u4e0b\u4e5f\u5341\u5206\u5b9e\u7528\uff0c\u4e2a\u4eba\u4e5f\u6bd4\u8f83\u949f\u610f\u952e\u5e3d\u5468\u56f4\u7684\u73af\u7ed5\u5149\uff1a\uff09\u3002</p> <p>MX Keys\u5177\u5907\u7269\u4f53\u8bc6\u522b\u529f\u80fd\uff0c\u5728\u5f00\u542f\u80cc\u5149\u529f\u80fd\u540e\uff0c\u952e\u76d8\u5728\u611f\u77e5\u5230\u6709\u7269\u4f53\u63a5\u8fd1\u65f6\u4f1a\u81ea\u52a8\u4eae\u8d77\u80cc\u5149\u706f\uff0c\u5f53\u7269\u4f53\u8fdc\u79bb\u540e\u80cc\u5149\u4f1a\u81ea\u52a8\u5173\u95ed\u3002\u4f46\u662f\u5f00\u542f\u80cc\u5149\u540e\uff0c\u7406\u8bba\u7eed\u822a\u4ece50\u5929\u4e0b\u964d\u81f37\u5929\uff0c\u7535\u6c60\u8017\u5c3d\u540e\u53ef\u4ee5\u4f7f\u7528\u968f\u673a\u9644\u8d60\u7684USB-C\u8f6cUSB-A\u6570\u636e\u7ebf\u5145\u7535\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u7eed\u822a\u672c\u4eba\u5173\u95ed\u4e86\u80cc\u5149\u529f\u80fd\uff0c\u5149\u7ebf\u5145\u8db3\u7684\u60c5\u51b5\u4e0b\u662f\u5b8c\u5168\u4e0d\u5f71\u54cd\u4f7f\u7528\u7684\u3002</p> MX Keys \u5168\u5c3a\u5bf8\u952e\u76d8 <p>\u4f5c\u4e3a\u4e00\u6b3e\u5168\u5c3a\u5bf8\u952e\u76d8\uff0c\u9664\u4e86\u591a\u51fa\u4e86\u4f20\u7edf\u7684\u529f\u80fd\u952e\u548c\u6570\u5b57\u952e\u5916\uff0c\u6570\u5b57\u952e\u4e0a\u65b9\u7684\u591a\u529f\u80fd\u952e\u4e5f\u975e\u5e38\u65b9\u4fbf\u4f7f\u7528\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u5206\u522b\u662f\u8c03\u51fa\u8ba1\u7b97\u5668\u3001\u5c4f\u5e55\u622a\u56fe\u3001\u67e5\u8be2\u5b9a\u4e49\u548c\u9501\u5b9a\u5c4f\u5e55\uff0c\u5f53\u7136\u8fd9\u4e9b\u6309\u952e\u529f\u80fd\u4e5f\u662f\u652f\u6301\u5728\u7f57\u6280Options\u91cc\u66f4\u6539\u7684\u3002</p> M720 \u4fa7\u8fb9\u529f\u80fd\u952e <p>MX Keys\u642d\u914dM720\u5728macOS\u91cc\u4f7f\u7528\u6548\u7387\u975e\u5e38\u9ad8\uff0c\u9f20\u6807\u7684\u4fa7\u8fb9\u529f\u80fd\u952e\u642d\u914d\u62d6\u52a8\u80fd\u5b9e\u73b0\u5927\u591a\u6570Mac\u89e6\u63a7\u677f\u7684\u624b\u52bf\uff0c\u5e76\u4e14\u591a\u51fa\u7684\u5b9e\u4f53\u6309\u952e\u8fd8\u80fd\u66f4\u52a0\u5feb\u6377\u5730\u5b9e\u73b0\u66f4\u591a\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u6d4f\u89c8\u7f51\u9875\u65f6\u7684\u524d\u8fdb\u3001\u540e\u9000\u7b49\u3002\u552f\u4e00\u4e0d\u592a\u65b9\u4fbf\u7684\u662f\u7f29\u653e\uff0c\u9ed8\u8ba4\u91c7\u7528fn+\u9f20\u6807\u4e0a\u4e0b\u62d6\u52a8\u5b8c\u6210\uff0c\u4e0d\u8fc7\u672c\u4eba\u4e0d\u5e38\u4f7f\u7528\u7f29\u653e\u529f\u80fd\uff0c\u6240\u4ee5\u5bf9\u4f53\u9a8c\u5f71\u54cd\u4e0d\u5927\u3002</p> <p>\u5728iPadOS\u4e0a\uff0c\u7531\u4e8e\u8fde\u63a5\u4e86\u5916\u7f6e\u7684\u9f20\u6807\u548c\u952e\u76d8\uff0c\u865a\u62df\u952e\u76d8\u53ea\u4f1a\u663e\u793a\u76ee\u524d\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u4f1a\u5c06\u952e\u76d8\u663e\u793a\u51fa\u6765\uff0c\u907f\u514d\u4e86\u906e\u6321\u5c4f\u5e55\u5185\u5bb9\u3002</p> iPad \u8fde\u63a5\u5916\u7f6e\u952e\u76d8\u6253\u5b57 <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u952e\u76d8\u548c\u9f20\u6807\u4e0a\u7684\u529f\u80fd\u952e\u5982\u5207\u6362Apps\uff0c\u8c03\u8282\u97f3\u91cf\uff0c\u5feb\u901f\u622a\u56fe\u7b49\u529f\u80fd\u540c\u6837\u9002\u7528\uff0c\u8fd9\u65e0\u7591\u65b9\u4fbf\u4e86\u8bb8\u591a\uff0ciPadOS + \u5916\u7f6e\u9f20\u6807\u952e\u76d8\u8ba9iPad\u6709\u7115\u7136\u4e00\u65b0\u7684\u611f\u89c9\uff0c\u6709\u79cd\u628a\u82b1\u51fa\u53bb\u7684\u94b1\u53c8\u8d5a\u56de\u6765\u7684\u9519\u89c9\u3002\u867d\u7136\u6ca1\u6709\u4f53\u9a8c\u7f57\u6280\u7740\u529b\u5ba3\u4f20\u7684\u8de8\u8bbe\u5907\u6587\u4ef6\u4f20\u8f93Flow\u529f\u80fd\uff0c\u4f46\u5176\u4f59\u529f\u80fd\u548c\u4f53\u9a8c\u90fd\u4ee4\u4eba\u6ee1\u610f</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-03-14-MX-Keys/#_4","title":"\u7ed3\u8bba","text":"<p>\u603b\u7684\u6765\u8bf4\uff0cMX Keys + M720 \u662f\u4e00\u5957\u517c\u5177\u6548\u7387\u548c\u6027\u4ef7\u6bd4\u7684\u7ec4\u5408\uff0c\u5b8c\u5168\u53ef\u4ee5\u6ee1\u8db3\u65e5\u5e38\u529e\u516c\u9700\u6c42\uff0c\u7406\u8bba\u4e0a\u5728macOS\u3001iPadOS\u3001iOS\u548cWindows\u4e0a\u7684\u90fd\u6709\u4e0d\u9519\u7684\u4f53\u9a8c\uff0c\u786c\u4ef6\u8d28\u91cf\u9760\u8c31\uff0c\u8f6f\u4ef6\u4e0a\u4e5f\u7ed9\u4e88\u4e86\u7528\u6237\u4e00\u5b9a\u7684\u4e2a\u6027\u5316\u7a7a\u95f4\uff0c\u57282020\u5e743\u6708\u8fd9\u4e2a\u65f6\u95f4\u8282\u70b9\u4e0a\u4f9d\u7136\u662f\u975e\u5e38\u597d\u7684\u9009\u62e9\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/","title":"\u521d\u8bc62020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u672a\u6765\u53ef\u671f","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2020-04-05\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea615\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>2020\u5e743\u6708\uff0cApple\u5728\u5b98\u7f51\u6084\u7136\u4e0a\u7ebf\u4e86\u65b0\u6b3eiPad Pro\uff0c\u8ba9\u4f17\u591a\u7b49\u5f85\u5df2\u4e45\u7684\u7c89\u4e1d\u5174\u594b\u4e0d\u5df2\uff0c\u56e0\u4e3a\u8ddd\u79bb\u4e0a\u4e00\u6b21iPad Pro\u7684\u66f4\u65b0\uff0c\u5df2\u6709\u4e00\u5e74\u534a\u65f6\u95f4\u4e86\u3002\u5de7\u7684\u662f\uff0c\u8fd9\u4e5f\u662fiPad\u4ea7\u54c1\u7ebf\u7684\u7b2c\u5341\u4e2a\u5e74\u5934\u3002</p> <p>\u65b0\u54c1\u52a0\u91cf\u8fd8\u964d\u4ef7\uff0c\u57fa\u7840\u5b58\u50a8\u5bb9\u91cf\u6269\u5c55\u5230128Gb\uff0c\u5168\u7cfb\u6807\u914d6G\u8fd0\u5b58\uff0c\u786c\u4ef6\u65b9\u9762\u6700\u5927\u7684\u4eae\u70b9\u65e0\u7591\u662f\u5728Apple\u4ea7\u54c1\u7ebf\u4e0a\u9996\u6b21\u642d\u8f7d\u7684LiDAR\u6fc0\u5149\u4f20\u611f\u5668\uff0c\u4e3a\u672a\u6765AR\u5e94\u7528\u7684\u53d1\u5c55\u63d0\u4f9b\u4e86\u5f3a\u608d\u7684\u786c\u4ef6\u57fa\u7840\u3002\u800c\u66f4\u8ba9\u4eba\u671f\u5f85\u7684\u662f\uff0c\u968f\u65b0iPad Pro\u4e00\u540c\u7684iPadOS 13.4 \u9996\u6b21\u5bf9\u9f20\u6807/\u89e6\u63a7\u677f\u63d0\u4f9b\u4e86\u7cfb\u7edf\u7ea7\u7684\u652f\u6301\u3002\u8fd9\u4e00\u5207\u90fd\u6697\u793a\u4e86Apple\u7684\u613f\u666f\uff0c\u6216\u8bb8\u672a\u6765\u771f\u7684\u5c31\u50cf\u5ba3\u4f20\u6807\u8bed\u6240\u8bf4\u7684\u90a3\u6837\uff0ciPad\u53ef\u80fd\u4f1a\u6210\u4e3a\u5f88\u591a\u4eba\u7684\u4e0b\u4e00\u53f0\u201c\u7535\u8111\u201d\u3002</p> <p>\u5728\u8ba2\u8d2d\u65b0iPad Pro\u524d\uff0c\u672c\u4eba\u62e5\u6709\u7684\u4e00\u53f0\u975e\u5e38\u7ecf\u5178\u7684iPad Air 2\uff0c2G\u7684\u8fd0\u5b58\u52a0\u4e0a\u5f53\u65f6\u6700\u5f3a\u7684\u79fb\u52a8\u8bbe\u5907\u82af\u7247\uff0c\u8ba9\u642d\u8f7diPadOS\u7684\u5b83\u5230\u4eca\u5929\u4e3a\u6b62\uff0c\u5728\u7edd\u5927\u591a\u6570\u4efb\u52a1\u4e0a\u90fd\u8868\u73b0\u5f97\u5341\u5206\u6d41\u7545\u3002\u4f46\u76f8\u8f83\u4e8e\u65b0\u6b3eiPad Pro\u800c\u8a00\uff0c\u8f83\u5c0f\u7684\u5c4f\u5e55\u548c\u76f8\u5bf9\u8f83\u5f31\u7684\u6027\u80fd\u4f7f\u5f97\u5b83\u4f3c\u4e4e\u6709\u4e9b\u548c\u4e00\u76f4\u88ab\u70ed\u8bae\u7684iPad\u751f\u4ea7\u529b\u6e10\u884c\u6e10\u8fdc\u4e86\u3002\u56e0\u4e3a\u5e73\u65e5\u5de5\u4f5c\u4e5f\u5e38\u5728iPad\u4e0a\u770b\u6587\u732e\u3001\u5199\u90ae\u4ef6\u3001\u4e66\u5199\u7b14\u8bb0\uff0c\u5bf9\u4e8e\u4f7f\u7528\u4e86\u591a\u5e74\u8001\u8bbe\u5907\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e00\u6b21\u7684\u5347\u7ea7\u8db3\u591f\u6709\u8bda\u610f\uff0c\u6240\u4ee5\u770b\u5230\u65b0\u54c1\u53d1\u5e03\u6beb\u4e0d\u72b9\u8c6b\u4e0b\u5355\u4e86\u3002</p> 2020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u6df1\u7a7a\u7070\u8272","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#1","title":"1 \u786c\u4ef6\u4f53\u9a8c","text":"<p>\u7b49\u5f85\u6536\u8d27\u7684\u65e5\u5b50\u91cc\uff0c\u770b\u4e86\u8bb8\u591a\u53ef\u4ee5\u642d\u914diPad Pro\u4f7f\u7528\u7684\u914d\u4ef6\u548c\u5916\u8bbe\uff0c\u952e\u76d8\u9f20\u6807\u5728iPad\u53d1\u5e03\u524d\u5c31\u8d2d\u4e70\u4e86\uff0c\u9009\u62e9\u4e86\u7f57\u6280\u7684MX Keys\u548cM720\uff0c\u8be6\u7ec6\u4f53\u9a8c\u53ef\u53c2\u8003\u94fe\u63a5\uff1a</p> <p>\u5176\u4f59\u5916\u8bbe\u5305\u62ec\uff1a</p> <ul> <li>\u8d1d\u5c14\u91d1USB-C\u96c6\u7ebf\u5668\uff08\u578b\u53f7F4U092\uff09</li> <li>Anker 60W \u53ccType-C PD\u5feb\u5145\u5934</li> <li>\u5fae\u8f6fXbox \u65e0\u7ebf\u624b\u67c4</li> <li>ESR\u4fdd\u62a4\u58f3\u548c\u9644\u8d60\u7684\u94a2\u5316\u819c</li> <li>Apple Pencil 2</li> </ul> <p>\u5916\u8bbe\u90fd\u5230\u4e86\u4e4b\u540eiPad\u624d\u5230\uff0c\u5728\u516c\u53f8\u5c31\u8feb\u4e0d\u53ca\u5f85\u628a\u5305\u88c5\u62c6\u4e86\uff0c\u5168\u9762\u5c4f\u7684\u8bbe\u8ba1\u975e\u5e38\u60ca\u8273\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e60\u60ef\u4e86\u50bb\u5927\u9ed1\u7c97\u8fb9\u6846\u7684\u4eba\u6765\u8bf4\u592a\u9707\u64bc\u4e86\u3002</p> iPad Pro \u5305\u88c5\u76d2 12.9\u82f1\u5bf8iPad Pro\u6b63\u9762 12.9\u82f1\u5bf8iPad Pro\u80cc\u9762 <p>11\u82f1\u5bf8\u548c12.9\u82f1\u5bf8\u7248\u672c\u7684\u552f\u4e00\u533a\u522b\u53ea\u6709\u5c4f\u5e55\u5c3a\u5bf8\uff0c\u672c\u4eba\u5728\u8d2d\u4e70\u4e4b\u524d\u53bbApple Store\u4f53\u9a8c\u4e86\u4e00\u756a\uff0c\u4e2a\u4eba\u611f\u89c912.9\u82f1\u5bf8\u7248\u672c\u5bf9\u4e8e\u6709\u6587\u5b57\u8f93\u5165\u9700\u6c42\u7684\u7528\u6237\u6765\u8bf4\u66f4\u52a0\u53cb\u597d\uff0c\u5373\u4fbf\u662f\u5206\u5c4f\u72b6\u6001\u4e0b\uff0c\u4e24\u8fb9\u7684\u5c4f\u5e55\u663e\u793a\u7684\u5185\u5bb9\u4e5f\u80fd\u770b\u5f97\u6bd4\u8f83\u6e05\u695a\u3002\u5bb9\u91cf\u9009\u62e9128Gb\u56e0\u4e3a\u672c\u4eba\u4f1a\u53ca\u65f6\u8f6c\u79fb\u591a\u5a92\u4f53\u6587\u4ef6\u5230\u5916\u7f6e\u786c\u76d8\u91cc\uff0c\u4e5f\u8ba2\u9605\u4e86iCloud\u7a7a\u95f4\uff0c\u5982\u679c\u5927\u5bb6\u89c9\u5f97\u9ebb\u70e6\u4e5f\u53ef\u4ee5\u4e0a\u5927\u5bb9\u91cf\u7684\u3002</p> \u7a81\u5982\u5176\u6765\u7684\u7a0b\u5e8f\u5458\u8d34\u7eb8 <p>\u4ece\u53c2\u6570\u6765\u770b\uff0c\u8fd9\u5757\u5c4f\u5e55\u7684\u7d20\u8d28\u548c2018\u6b3e\u7684iPad Pro\u57fa\u672c\u76f8\u540c\uff0c\u4f9d\u7136\u662f**\u76ee\u524d\u79fb\u52a8\u8bbe\u5907\u4e0a\u6700\u597d\u7684\u663e\u793a\u5c4f**\u3002\u5bf9\u4e8e\u975ePro\u7ea7\u522b\u7684iPad\uff0c\u6700\u660e\u663e\u7684\u533a\u522b\u5728\u4e8eProMotion\u6280\u672f\u5e26\u6765\u7684\u4e1d\u6ed1\u4f53\u9a8c\uff0c\u65e0\u8bba\u662f\u7528\u624b\u6307\u6216\u8005Pencil_\u9f20\u6807_\u89e6\u63a7\u677f\u65f6\u90fd\u80fd\u7ed9\u4f60\u660e\u663e\u80dc\u4e8e\u5176\u4ed6iPad\u7684\u4f53\u9a8c\u3002\u914d\u5907\u4e86\u56db\u4e2a\u626c\u58f0\u5668\u7684iPad Pro\u5728\u770b\u7535\u5f71\u3001\u73a9\u6e38\u620f\u7b49\u5a31\u4e50\u4f53\u9a8c\u4e0a\u4e5f\u6709\u8f83\u5927\u4f18\u52bf\u3002</p> iPad Pro \u5c4f\u5e55\u6280\u672f\uff0c\u56fe\u7247\u6765\u6e90\uff1aApple\u5b98\u7f51  <p>\u65e5\u5e38\u4f7f\u7528\u4e2d\uff0cFaceID\u5e26\u6765\u4e86\u8bb8\u591a\u4fbf\u5229\uff0c\u5728\u89e3\u9501\u673a\u5668\u3001\u8d2d\u4e70\u5e94\u7528\u3001\u9009\u62e9\u94a5\u5319\u4e32\u5bc6\u7801\u7b49\u9700\u8981\u9a8c\u8bc1\u65f6\uff0c\u4f60\u51e0\u4e4e\u611f\u89c9\u4e0d\u5230\u5b83\u7684\u5b58\u5728\uff0c\u56e0\u4e3a\u5b83\u5b9e\u5728\u662f\u592a\u5feb\u4e86\uff0c\u5e76\u4e14\u51e0\u4e4e\u6b63\u5e38\u4f7f\u7528\u7684\u5404\u79cd\u89d2\u5ea6\u90fd\u80fd\u591f\u8fc5\u901f\u89e3\u9501\uff0c\u76f8\u6bd4\u4e8eTouchID\u65b9\u4fbf\u4e86\u5f88\u591a\u3002\u5982\u679c\u4f60\u540c\u65f6\u642d\u914d\u5916\u7f6e\u952e\u76d8\u548c\u9f20\u6807/\u89e6\u63a7\u677f\u4f7f\u7528\u65f6\uff0cFaceID\u5e26\u6765\u7684\u4f53\u9a8c\u8fde\u8d2f\u6027\u4f1a\u66f4\u52a0\u660e\u663e\uff0c\u56e0\u4e3a\u4f60\u7684\u624b\u65e0\u9700\u9891\u7e41\u5730\u89e6\u63a7\u5c4f\u5e55\u5b8c\u6210\u9a8c\u8bc1\uff0c\u4e00\u5207\u90fd\u5728\u4e0d\u7ecf\u610f\u95f4\u5b8c\u6210\uff0c\u5341\u5206\u671f\u5f85\u8fd9\u4e00\u6280\u672f\u65e9\u65e5\u5e94\u7528\u5728Mac\u4e0a\uff01</p> 2020 iPad Pro \u540e\u7f6e\u6444\u50cf\u5934\u6a21\u7ec4  Apple Measure \u5e94\u7528  <p>\u76ee\u524dLiDAR\u5728AR\u5e94\u7528\u4e2d\u5e26\u6765\u7684\u6700\u76f4\u89c2\u7684\u63d0\u5347\u5c31\u662f\u51c6\u786e\u6027\u548c\u8bc6\u522b\u901f\u5ea6\u7684\u63d0\u5347\uff0c\u672c\u4eba\u4f7f\u7528Apple\u5f00\u53d1\u7684Measure\u5e94\u7528\u6d4b\u91cf\u7269\u4f53\u5c3a\u5bf8\uff0c\u54cd\u5e94\u975e\u5e38\u8fc5\u901f\uff0c\u5bf9\u4e8e\u5f62\u72b6\u89c4\u6574\u7684\u7269\u4f53\uff0c\u5bf9\u51c6\u88ab\u6d4b\u7269\u4f53\u65e0\u9700\u591a\u4e45\uff0c\u5c4f\u5e55\u4e0a\u5c31\u80fd\u591f\u663e\u793a\u51fa\u6d4b\u91cf\u7684\u6570\u636e\u3002\u5b9c\u5bb6\u7684IKEA Place AR\u5e94\u7528\u4e2d\uff0c\u9009\u597d\u5bb6\u5177\u540e\uff0c\u8f6f\u4ef6\u4e5f\u80fd\u8fc5\u901f\u6d4b\u91cf\u597d\u623f\u95f4\u7684\u7a7a\u95f4\u6570\u636e\u7136\u540e\u8fdb\u884c\u6e32\u67d3\u5c55\u793a\uff0c\u8868\u73b0\u5341\u5206\u60ca\u8273\u3002\u8fd9\u4e00\u65b0\u786c\u4ef6\u6beb\u65e0\u7591\u95ee\u80fd\u5728\u672a\u6765\u7ed9iPad\u5e26\u6765\u66f4\u591a\u7684\u53ef\u80fd\u6027\u3002</p> <p>\u62cd\u7167\u65b9\u9762\uff0ciPad\u7684\u6444\u50cf\u5934\u62cd\u7167\u7d20\u8d28\u4e0d\u5982iPhone\uff0c\u5728\u6b64\u4e5f\u4e0d\u8d58\u8ff0\u4e86\uff0c\u6bd5\u7adf\u5f88\u5c11\u4eba\u62ff\u7740\u534a\u65a4\u91cd\u7684\u5927\u677f\u5b50\u5728\u5916\u62cd\u7167\uff0c\u95ea\u5149\u706f\u4e0d\u4eae\u7684\u95ee\u9898\u5df2\u7ecf\u5728iPadOS 13.4.1\u4e2d\u4fee\u590d\u3002</p> <p>\u7eed\u822a\u5ef6\u7eed\u4e86iPad\u4e00\u8d2f\u7684\u4f18\u79c0\u8868\u73b0\uff0c\u6b63\u5e38\u5b66\u4e60\u5de5\u4f5c\u5927\u534a\u5929\u6ca1\u95ee\u9898\uff0c\u4f46\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u4e70\u4e00\u4e2aPD\u5feb\u5145\u5934\u52a0\u5feb\u5145\u7535\u901f\u5ea6\uff0c\u672c\u4eba\u7528\u7684Anker 60W \u53ccType-C PD\u5feb\u5145\u5934\uff0c\u7ed9iPad Pro\u5145\u7535\u65f6**\u6807\u79f0**\u8f93\u51fa\u529f\u7387\u572830W\u5de6\u53f3\u3002\u6ee1\u7535\u5f00\u59cb\u7528\uff0c\u4e0a\u5348\u7528\u534a\u5929\u5230\u4e2d\u5348\u53ef\u80fd\u8fd8\u526940~50%\u7535\u91cf\uff0c\u4e2d\u5348\u505a\u996d\u3001\u5403\u996d\u7684\u524d\u63d2\u4e0a\u7535\u6e90\u5145\u7535\uff0c\u5403\u5b8c\u996d\u57fa\u672c\u7535\u5c31\u6ee1\u4e86\uff0c\u4e0d\u4f1a\u803d\u8bef\u4f7f\u7528\u3002</p> <p>\u603b\u4f53\u6765\u8bf4\uff0c\u786c\u4ef6\u53c2\u6570\u76f8\u8f83\u4e8e2018\u6b3ePro\u6ca1\u6709\u660e\u663e\u63d0\u5347\uff0c\u4f46\u76f8\u6bd4\u4e8e\u5176\u4ed6\u672a\u914d\u5907FaceID\u7684iPad\u6765\u8bf4\uff0c\u5982\u679c\u6709\u5347\u7ea7\u9700\u6c42\uff0c2020\u6b3eiPad Pro\u51b3\u4e0d\u4f1a\u8ba9\u4f60\u5931\u671b\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#2","title":"2 \u8f6f\u4ef6\u4f53\u9a8c","text":"<p>\u8fd1\u4e9b\u5e74\uff0c\u672c\u4eba\u8d8a\u6765\u8d8a\u559c\u6b22\u770bWWDC\u4e86\uff0c\u4e00\u65b9\u9762\u662f\u56e0\u4e3a\u8fd1\u4e9b\u5e74\u53d1\u5e03\u7684iOS\uff0ciPadOS\u548cmacOS\u90fd\u7740\u5b9e\u5e26\u6765\u4e86\u8bb8\u591a\u7528\u6237\u5e0c\u671b\u770b\u5230\u7684\u529f\u80fd\u548c\u7279\u6027\uff0c\u5982iOS\u548ciPadOS\u4e0a\u7684\u9ed1\u6697\u6a21\u5f0f\u3001\u5bf9\u9f20\u6807/\u89e6\u63a7\u677f\u7684\u652f\u6301\uff0cmacOS\u4e0a\u7684\u9ed1\u6697\u6a21\u5f0f\u3001\u968f\u822a\u7b49\u529f\u80fd\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u524d\u4e9b\u5e74\u4e70\u7684\u8bbe\u5907\u8fd0\u884c\u6700\u65b0\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u5c11\u6709\u5361\u987f\uff0c\u53cd\u800c\u540c\u6837\u80fd\u548c\u6700\u65b0\u7684\u8bbe\u5907\u4e00\u6837\u4f53\u9a8c\u6700\u5148\u8fdb\u7684\u529f\u80fd\uff0c\u8fd9\u5bf9\u60f3\u4f53\u9a8c\u65b0\u529f\u80fd\u4f46\u8981\u7ecf\u8fc7\u8001\u5a46\u5c42\u5c42\u5ba1\u6279\u7684\u7537\u540c\u80de\u4eec\u662f\u6781\u4e3a\u53cb\u597d\u7684\uff1a\uff09</p> <p>\u867d\u662f\u5f00\u73a9\u7b11\uff0c\u4f46\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u5bf9\u4e8eiPad\u800c\u8a00\uff0ciPadOS\u7684\u63a8\u51fa\u8ba9\u5b83\u6709\u4e86\u66f4\u591a\u6f5c\u80fd\uff0c\u800ciPadOS 13.4\uff0c\u8ba9\u8fd9\u4e9b\u53ef\u80fd\u66f4\u52a0\u73b0\u5b9e\u4e86\u3002iPadOS 13.4\u6700\u5927\u7684\u4eae\u70b9\u65e0\u7591\u662f\u5bf9\u9f20\u6807\u548c\u89e6\u63a7\u7248\u7684\u7cfb\u7edf\u7ea7\u652f\u6301\u3002\u5b98\u7f51\u4e0a\u7528\u4e86 \u5f88\u591a\u7bc7\u5e45 \u6765\u4ecb\u7ecd\u8fd9\u4e00\u6700\u65b0\u7684\u7279\u6027\uff1a</p> iPad \u652f\u6301\u89e6\u63a7\u677f <p>\u603b\u5f97\u6765\u8bf4\uff0c\u89e6\u63a7\u677f\u6bd4\u9f20\u6807\u7684\u4f53\u9a8c\u66f4\u597d\uff0c\u56e0\u4e3a\u5f88\u591a\u89e6\u63a7\u677f\u7684\u624b\u52bf\u9f20\u6807\u65e0\u6cd5\u8f7b\u6613\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u9053\u7406\u5c31\u548c\u5728Mac\u4e0a\u4f7f\u7528\u89e6\u63a7\u677f\u548c\u9f20\u6807\u4e00\u6837\u3002</p> iPadOS\u5141\u8bb8\u81ea\u5b9a\u4e49\u9f20\u6807\u6309\u952e\u7684\u529f\u80fd <p>\u76ee\u524d\u81ea\u5b9a\u4e49\u7b2c\u4e09\u65b9\u9f20\u6807\u7684\u529f\u80fd\u4f4d\u7f6e\u6709\u4e9b\u9690\u79d8\uff0c\u9700\u8981\u5728\u8f85\u52a9\u529f\u80fd\u91cc\u627e\u5230\u201c\u89e6\u63a7\u63a7\u5236\u201d\uff0c\u70b9\u8fdb\u53bb\u540e\u5728\u6700\u5e95\u90e8\u6709\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u529f\u80fd\uff0c\u5728\u5b50\u83dc\u5355\u4e0b\u5373\u53ef\u4ee5\u5b9a\u4e49\u6309\u952e\u7684\u529f\u80fd\uff1a</p> iPadOS\u5141\u8bb8\u5bf9\u9f20\u6807\u7684\u6309\u952e\u8fdb\u884c\u4e2a\u6027\u5316\u8bbe\u7f6e <p>\u5e76\u975e\u9f20\u6807\u4e0a\u6240\u6709\u7684\u6309\u952e\u90fd\u652f\u6301\u81ea\u5b9a\u4e49\uff0c\u4f46\u4e2a\u4eba\u89c9\u5f97\u7b2c\u4e00\u4e2a\u7248\u672c\u80fd\u505a\u5230\u8fd9\u6837\u5df2\u7ecf\u5f88\u4e0d\u5bb9\u6613\u4e86\uff0c\u6309\u7167\u81ea\u5df1\u7684\u4e60\u60ef\u81ea\u5b9a\u4e49\u5b8c\u4e4b\u540e\u4f53\u9a8c\u4e0d\u9519\uff0c\u6bd4\u4ee5\u5f80\u4e0d\u652f\u6301\u539f\u751f\u9f20\u6807\u7684\u7cfb\u7edf\u6709\u4e86\u5f88\u5927\u7684\u8fdb\u6b65\uff0c\u56e0\u4e3a\u4f60\u7684\u624b\u518d\u4e5f\u4e0d\u7528\u9891\u7e41\u5730\u79bb\u5f00\u952e\u76d8/\u9f20\u6807\u53bb\u89e6\u63a7\u5c4f\u5e55\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002</p> <p>\u8fd9\u5176\u5b9e\u662f\u4e00\u6b21\u5de8\u5927\u7684\u6539\u53d8\uff0c\u56e0\u4e3a**\u8fd9\u79cd\u64cd\u4f5c\u65b9\u5f0f\u548c\u4f7f\u7528\u4f20\u7edf\u7684\u7535\u8111\u5df2\u7ecf\u975e\u5e38\u76f8\u4f3c\u4e86**\u3002\u540c\u65f6\uff0cApple\u4e3a\u5149\u6807\u8bbe\u8ba1\u4e86\u81ea\u9002\u5e94\u7684\u5f62\u6001\uff0c\u5728\u60ac\u6d6e\u5728\u4e0d\u540c\u7684\u5185\u5bb9\u4e0a\u65f6\uff0c\u5149\u6807\u80fd\u591f\u505a\u76f8\u5e94\u7684\u53d8\u5316\uff0c\u53d8\u5316\u7684\u903b\u8f91\u501f\u9274\u4e86\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\uff0c\u52a0\u4e0a\u6d41\u7545\u7684\u8fc7\u6e21\u52a8\u753b\uff0c\u8ba9\u8fd9\u53ea\u5149\u6807\u9971\u53d7\u597d\u8bc4\u3002\u4f46\u8bf7\u6ce8\u610f\uff0c\u76ee\u524d\u8bb8\u591a\u8f6f\u4ef6\u8fd8\u672a\u5bf9\u5149\u6807\u8fdb\u884c\u9002\u914d\uff0c\u5728\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u7684\u4f53\u9a8c\u4e0a\u4f1a\u7a0d\u6253\u6298\u6263\u3002</p> iPadOS\u5149\u6807\u60ac\u505c\u5728\u6587\u5b57\u4e0a\u65f6\uff0c\u81ea\u52a8\u6539\u53d8\u5f62\u6001 <p>\u4e3a\u4ec0\u4e48\u5f15\u5165\u5149\u6807\u5bf9iPad\u662f\u4e00\u4ef6\u5927\u4e8b\u5462\uff1f\u56e0\u4e3a\u5f88\u591a\u4efb\u52a1\u90fd\u9700\u8981\u7cbe\u51c6\u7684\u63a7\u5236\uff0c\u8fd9\u79cd\u611f\u89c9\u50cf\u662fiPad\u7b2c\u4e00\u6b21\u652f\u6301Apple Pencil\u65f6\u4e00\u6837\uff0c\u56e0\u4e3a**\u5b83\u589e\u52a0\u4e86\u4ea4\u4e92\u7684\u7ef4\u5ea6\u548c\u7cbe\u5ea6**\uff0c\u65e0\u8bba\u662f\u7b14\u8fd8\u662f\u5149\u6807\uff0c\u5728\u5904\u7406\u590d\u6742\u4efb\u52a1\u65f6\u90fd\u6bd4\u7528\u624b\u6307\u65b9\u4fbf\u3002</p> <p>\u4ee5\u5149\u6807\u4e3a\u4f8b\uff0c\u672c\u4eba\u65e5\u5e38\u5728iPad\u4e0a\u7ecf\u5e38\u4f7f\u7528OneNote\u8bb0\u5f55\u5de5\u4f5c\u4e0a\u7684\u5185\u5bb9\uff0c\u5f53\u4f7f\u7528\u624b\u6307\u5728\u4f17\u591a\u6587\u5b57\u4e2d\u9009\u62e9\u3001\u79fb\u52a8\u65f6\uff0c\u90a3\u79cd\u4e0d\u4fbf\u5927\u5bb6\u90fd\u611f\u540c\u8eab\u53d7\uff0c\u66f4\u522b\u63d0\u5236\u4f5c\u8868\u683c\u3001\u5e7b\u706f\u7247\u7b49\u9700\u8981\u7cbe\u7ec6\u64cd\u4f5c\u7684\u5de5\u4f5c\u4e86\u3002\u4f46\u6709\u4e86\u5149\u6807\u4e4b\u540e\uff0c\u9f20\u6807\u70b9\u51fb+\u952e\u76d8\u64cd\u4f5c\u5b8c\u6210\u5de5\u4f5c\u7684\u6548\u7387\u5728\u5f88\u591a\u4efb\u52a1\u4e0b\u548c\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u51e0\u4e4e\u76f8\u540c\u4e86\u3002\u7ec6\u6570\u4e86\u4e00\u4e0b\uff0c\u4ee5\u4e0b\u4efb\u52a1\u672c\u4eba\u5df2\u7ecf**\u66f4\u52a0\u4e60\u60ef**\u5728iPad\u4e0a\u5b8c\u6210\u4e86\uff1a</p> <p>\u5de5\u4f5c&amp;\u5b66\u4e60\uff1a</p> <ul> <li>\u56de\u590d\u90ae\u4ef6\uff08\u9605\u8bfb\u9644\u4ef6\u53ca\u53c2\u8003\u8d44\u6599\u3001\u7f16\u5199\u5185\u5bb9\u3001\u63d2\u5165\u9644\u4ef6\uff09</li> <li>\u5f00\u7f51\u7edc\u4f1a\u8bae\uff08\u505a\u6f14\u8bb2\u3001\u5728\u767d\u677f\u4e0a\u753b\u793a\u610f\u56fe\u3001\u8bb0\u5f55\u4f1a\u8bae\u7eaa\u8981\uff09</li> <li>\u4fee\u6539\u5728\u684c\u9762\u7aef\u505a\u597d\u7684\u6587\u7a3f\uff08office\u6587\u6863\u5728iPad\u4e0a\u90fd\u53ef\u4ee5\u8fdb\u884c\u7b80\u5355\u7684\u7f16\u8f91\uff0c\u6ce8\uff1a12.9\u82f1\u5bf8\u7684iPad\u662f\u4e0d\u80fd\u514d\u8d39\u4eab\u53d7office\u5957\u4ef6\u7684\uff0c\u672c\u4eba\u7528\u7684\u4f01\u4e1a\u8d26\u53f7\uff09</li> <li>Peer code review &amp; \u4fee\u6539\u4ee3\u7801\uff08\u53d6\u51b3\u4e8e\u4f60\u7684\u5de5\u4f5c\u73af\u5883\u548c\u57fa\u7840\u8bbe\u65bd\uff09</li> <li>\u4e34\u65f6\u8bb0\u5f55\u60f3\u6cd5\u6216\u5199\u8349\u7a3f</li> <li>\u9605\u8bfb\u4e13\u4e1a\u4e66\u7c4d\u548c\u6587\u732e\u3001\u770b\u6559\u5b66\u89c6\u9891</li> </ul> <p>\u4f11\u95f2\uff1a</p> <ul> <li>\u770b\u7535\u5f71\uff08\u5c4f\u5e55\u548c\u9ea6\u514b\u98ce\u6bd4\u8bb8\u591aMac\u8981\u66f4\u597d\uff09</li> <li>\u4fee\u7167\u7247\u3001\u526a\u8f91\u89c6\u9891\u3001\u753b\u753b</li> <li>\u5199\u6587\u7ae0</li> <li>\u8f7b\u91cf\u7ea7\u6e38\u620f\uff08\u6ce8\uff1a\u76ee\u524diPad\u652f\u6301\u624b\u67c4\u7684\u6e38\u620f\u6709\u9650\uff09</li> <li>\u770b\u4e66\uff08\u6ce8\uff1a12.9\u82f1\u5bf8\u673a\u578b\u957f\u65f6\u95f4\u624b\u6301\u4f1a\u7ec3\u51fa\u9e92\u9e9f\u81c2\uff09</li> </ul> <p>\u4e0a\u8ff0\u4efb\u52a1\u5f88\u591a\u60c5\u51b5\u4e0b\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\uff0c\u672c\u4eba\u5e73\u65f6\u4e5f\u7ecf\u5e38\u540c\u65f6\u6253\u5f00\u597d\u51e0\u4e2a\u5e94\u7528\u4f7f\u7528\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c12.9\u82f1\u5bf8\u7684\u673a\u578b\u5728\u5de6\u53f3\u5206\u5c4f\u72b6\u6001\u4e0b\u4e24\u4fa7\u7684\u5185\u5bb9\u4f9d\u7136\u5f88\u5bb9\u6613\u770b\u6e05\u695a\uff0c\u5982\u679c\u5b57\u4f53\u5927\u5c0f\u4e0d\u5408\u9002\uff0c\u53ef\u4ee5\u62d6\u62fd\u4e2d\u95f4\u7684\u63a7\u5236\u6761\u8c03\u6574\u7a97\u53e3\u5927\u5c0f\u3002\u5076\u5c14\u4f1a\u4e34\u65f6\u52a0\u4e00\u4e2a\u60ac\u6d6e\u7a97\u53e3\uff08\u5982\u4e0b\u56fe\uff09\uff0c\u5904\u7406\u5b8c\u4e4b\u540e\u53ea\u9700\u6709\u5c06\u5149\u6807\u5f80\u5c4f\u5e55\u53f3\u4fa7\u79fb\u52a8\u5c31\u80fd\u9690\u85cf\u60ac\u6d6e\u7a97\u53e3\u3002\u5927\u5c4f\u5e55+\u9ad8\u6027\u80fd\u5e26\u6765\u7684\u591a\u4efb\u52a1\u5904\u7406\u4f53\u9a8c\u5f88\u597d\uff0c\u5e94\u7528\u5207\u6362\u975e\u5e38\u6d41\u7545\uff0c\u540c\u65f66G\u8fd0\u5b58\u80fd\u4fdd\u8bc1\u7edd\u5927\u591a\u6570\u5e94\u7528\u540e\u53f0\u80fd\u4fdd\u7559\u3002</p> \u5de6\u53f3\u5206\u5c4f + \u60ac\u6d6e\u5c4f","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#3","title":"3 \u5916\u8bbe","text":"","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#31-apple-pencil","title":"3.1 Apple Pencil","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5199\u4ee3\u7801\u7684\u4eba\u6765\u8bf4\uff0c\u5de5\u4f5c\u4e0a\u66f4\u591a\u7528\u5b83\u8bb0\u5f55\u7b14\u8bb0\u548c\u5199\u8349\u7a3f\u3002\u5176\u4f59\u573a\u666f\uff0c\u8fd9\u652f\u7b14\u7684\u7528\u5904\u4e0d\u5927\uff0c\u4e0d\u662f\u5fc5\u5907\u7684\u914d\u4ef6\u3002\u4f46\u672c\u4eba\u5e73\u65f6\u7231\u597d\u6444\u5f71\uff0c\u4e5f\u6709\u4e00\u5b9a\u7684\u7d20\u63cf\u57fa\u7840\uff0c\u6240\u4ee5\u8d2d\u5165\u4e86Apple Pencil\u8f85\u52a9\u64cd\u4f5c\uff0c\u6bd4\u5982\u4f7f\u7528\u7b14\u6765\u4fee\u56fe\u3001\u901f\u5199\u6216\u8005\u505a\u4e00\u4e9b\u6807\u6ce8\u65f6\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4\u7528\u952e\u9f20\u66f4\u52a0\u65b9\u4fbf\uff0c\u7b97\u662f\u64cd\u4f5c\u7ef4\u5ea6\u4e0a\u7684\u8865\u5145\u5427\u3002</p> Sketch Pro \u624b\u7ed8\u4f5c\u54c1 Affinity Photo \u4fee\u56fe Apple Pencil \u4e3b\u89c2\u8bc4\u4ef7","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#32-xbox-one","title":"3.2 Xbox One \u624b\u67c4","text":"<p>\u672c\u4eba\u662f\u5728Apple Store\u91cc\u8d2d\u4e70\u7684\u624b\u67c4\uff0c\u4f01\u4e1a\u4f18\u60e0\u6253\u4e869\u6298\uff0c\u548c\u7f51\u4e0a\u5dee\u4e0d\u591a\u4ef7\u683c\u4e86\u3002Apple Store\u91cc\u7684\u624b\u67c4\u53ea\u6709\u9ed1\u8272\u7684\uff0c\u5728\u5e97\u91cc\u4f53\u9a8c\u4e86\u4e00\u4e9b\u6e38\u620f\uff0c\u624b\u67c4\u7684\u5ef6\u8fdf\u6bd4\u8f83\u4f4e\uff0c\u624b\u611f\u4e5f\u633a\u597d\u3002</p> Xbox One\u624b\u67c4 <p>\u672c\u4eba\u73a9\u6e38\u620f\u6bd4\u8f83\u5c11\uff0c\u4e3b\u8981\u662f\u5de5\u4f5c\u538b\u529b\u5f88\u5927\u7684\u65f6\u5019\u60f3\u653e\u677e\u4e00\u4e0b\u3002\u5728\u5e97\u91cc\u95ee\u4e86\u5e97\u5458\uff0c\u76ee\u524dApp Store\u91cc\u652f\u6301\u624b\u67c4\u7684\u6e38\u620f\u4e0d\u591a\uff0c\u56de\u5bb6\u81ea\u5df1\u4e0b\u8f7d\u4e86\u4e00\u4e9b\u6e38\u620f\u4e5f\u53d1\u73b0\u786e\u5b9e**\u652f\u6301\u624b\u67c4\u7684\u6e38\u620f\u6bd4\u8f83\u6709\u9650**\uff0c\u50cf\u5b9e\u51b5\u8db3\u7403\u3001FIFA\u90fd\u662f\u4e0d\u652f\u6301\u624b\u67c4\u7684\u3002\u76ee\u524d\u672c\u4eba\u5728\u73a9\u7684\u6e38\u620f\u5305\u62ec\uff1a</p> <ul> <li>Alto odyssey</li> <li>\u72c2\u91ce\u98d9\u8f669</li> <li>NBA 2k20</li> </ul> <p>\u5982\u679c\u975e\u5e38\u60f3\u7528iPad\u8fde\u63a5\u624b\u67c4\u6253\u6e38\u620f\u7684\u8bdd\uff0c\u76ee\u524d\u8f6f\u4ef6\u9002\u914d\u60c5\u51b5\u53ef\u80fd\u4f1a\u8ba9\u4f60\u5931\u671b\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2020-04-05-iPad-Pro/#4","title":"4 \u603b\u7ed3","text":"<p>\u4f5c\u4e3a\u4e00\u4e2a\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u8005\uff0c\u7c97\u7565\u4f30\u7b97\uff0c\u9664\u4e86\u9700\u8981\u96c6\u4e2d\u65f6\u95f4\u5199\u4ee3\u7801\u4e4b\u540e\uff0c\u5176\u4f59\u5de5\u4f5c80%\u5de6\u53f3\u90fd\u80fd\u7528\u642d\u8f7diPadOS\u7684iPad\u9ad8\u6548\u5b8c\u6210\uff08\u4e0d\u4fbf\u622a\u56fe\u5c55\u793a\uff0c\u8bf7\u89c1\u8c05\uff09\uff0c\u8fd9\u5f88\u5927\u7a0b\u5ea6\u5f52\u529f\u4e8eiPadOS\u65b0\u52a0\u5165\u7684\u5149\u6807\u3002\u5176\u5b9e\u5927\u5bb6\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u8ff0\u4efb\u52a1\u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u591a\u7c7b\u578b\u7684\u5de5\u4f5c\u4efb\u52a1\u4e86\uff0c\u5982\u679c\u5f00\u53d1\u8005\u80fd\u5728iPadOS\u4e0a\u5f00\u53d1\u66f4\u591a\u4e13\u4e1a\u8f6f\u4ef6\uff0c\u4f30\u8ba1\u5f88\u591a\u4eba\u4f7f\u7528iPad\u5de5\u4f5c\u7684\u751f\u4ea7\u529b\u5c06\u8fdb\u4e00\u6b65\u5f97\u5230\u63d0\u5347\u3002</p> <p>\u5341\u5e74\u524d\uff0c\u4e54\u8001\u7237\u5b50\u5c06iPad\u653e\u5728\u4e86iPhone\u548cMac\u4e4b\u95f4\uff0c\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u95f4\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u9650\u5236\uff0ciPad\u5176\u5b9e\u662f\u66f4\u63a5\u8fd1iPhone\u7684\uff0c\u4f46\u5341\u5e74\u540e\u7684\u4eca\u5929\uff0ciPadOS\u8ba9iPad\u79bbMac\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u8fd1\u4e86\uff0c\u6216\u8bb8\u4ee5\u540e\u4ed6\u4eec\u4f1a\u8d8a\u6765\u8d8a\u76f8\u4f3c\uff0c\u6216\u8bb8\u4e70\u524d\u751f\u4ea7\u529b\uff0c\u4e70\u540e\u7231\u5947\u827a\u4ee5\u540e\u4f1a\u6210\u4e3a\u8fc7\u53bb\uff0c\u4f46\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0ciPadOS\u8db3\u4ee5\u8ba9\u4eba\u5bf9iPad\u7684\u672a\u6765\u5145\u6ee1\u671f\u5f85\u4e86\u3002</p> iPad Pro + iPadOS ~=\u751f\u4ea7\u529b","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/","title":"Apple Watch S5 \u4f7f\u7528\u4e00\u5e74\u611f\u53d7 - \u4e0d\u540e\u6094\uff01","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-01-02\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea610\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u5199\u8fd9\u7bc7\u6587\u7ae0\u7ea0\u7ed3\u4e86\u4e00\u5e74\uff0c\u5766\u767d\u8bf4\uff0c\u672c\u4eba\u4e70Apple Watch\u7684\u65f6\u5019\u5c31\u72b9\u8c6b\u4e86\u5f88\u4e45\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5fc5\u9700\u7684\u7535\u5b50\u4ea7\u54c1\uff0c\u4ece2015\u5e744\u6708\u53d1\u5e03\uff0c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u5b83\u90fd\u88ab\u5927\u4f17\u8ba4\u4e3a\u662f\u4e00\u6b3e\u534e\u800c\u4e0d\u5b9e\u7684\u4ea7\u54c1\uff0c\u5305\u62ec\u81ea\u5df1\u5728\u5185\uff0c\u5bf9\u5b83\u4e00\u76f4\u90fd\u6000\u7591\u6001\u5ea6\u3002\u7136\u800c\u57282019\u5e7410\u6708Apple Watch S5\u53d1\u5e03\u65f6\uff0c\u5e38\u4eae\u5c4f\u5e55\u529f\u80fd\u7684\u52a0\u5165\u8ba9\u66f4\u80fd\u8ba9\u666e\u901a\u7528\u6237\u63a5\u53d7\u4e86\uff0c\u6240\u4ee5\u672c\u4eba\u62b1\u7740\u8bd5\u4e00\u8bd5\u7684\u5fc3\u6001\u8d2d\u5165\u4e86\u7b2c\u4e00\u53eaApple Watch\u3002</p> <p>\u5728\u4f7f\u7528\u8d85\u8fc7\u4e00\u5e74\u540e\uff0c\u57282021\u5e74\u521d\u56de\u987e\u8fd9\u53ea\u4e0d\u5bfb\u5e38\u7684\u624b\u8868\u5e26\u6765\u7684\u53d8\u5316\uff0c\u5e76\u51b3\u5b9a\u4ece\u4e00\u4e2a\u666e\u901a\u7528\u6237\u7684\u89c6\u89d2\u5728\u6b64\u5206\u4eab\u4e00\u4e9b\u81ea\u5df1\u7684\u611f\u53d7\u3002  </p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#1","title":"1 \u5916\u89c2","text":"<p>Apple Watch \u4ece\u53d1\u5e03\u4ee5\u6765\u5916\u89c2\u53d8\u5316\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff0c\u5176\u4e00\u5f00\u59cb\u4fbf\u91c7\u7528\u4e86\u77e9\u5f62\u5c4f\u5e55\uff0c\u800c\u540e\u57282018\u5e749\u670813\u65e5Apple Watch S4\u53d1\u5e03\u65f6\u6539\u8fdb\u9996\u6b21\u4f7f\u7528\u5706\u89d2\u77e9\u5f62\u7684\u7c7b\u5168\u9762\u5c4f\u8bbe\u8ba1\u3002\u5916\u58f3\u5f62\u72b6\u59cb\u7ec8\u4fdd\u6301\u5706\u89d2\u77e9\u5f62\u7684\u8bbe\u8ba1\uff0c\u4f46Apple\u5728\u624b\u8868\u5c3a\u5bf8\u3001\u8868\u58f3\u6750\u8d28\u4e0a\u8fdb\u884c\u4e86\u533a\u5206\uff0c\u4ee5\u65f6\u4e0b\u6700\u65b0\u6b3eApple Watch S6\u4e3a\u4f8b\uff0c\u6709\u5982\u4e0b\u8868\u58f3\u5c3a\u5bf8\u548c\u6750\u8d28\u53ef\u4f9b\u642d\u914d\uff1a</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#11","title":"1.1 \u8868\u58f3\u5c3a\u5bf8","text":"<ul> <li>40mm</li> <li>44mm</li> </ul>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#12","title":"1.2 \u8868\u58f3\u6750\u8d28","text":"<ul> <li>\u94dd\u91d1\u5c5e</li> <li>\u4e0d\u9508\u94a2</li> <li>\u949b\u91d1\u5c5e</li> </ul> <p>\u5982\u679c\u52a0\u4e0a\u8868\u5e26\uff0c\u9762\u4e34\u7684\u9009\u62e9\u5c06\u66f4\u4e3a\u590d\u6742\uff0c\u56e0\u6b64Apple\u63d0\u4f9b\u4e86\u624b\u8868\u5b9a\u5236\u574a\u6765\u7b80\u5316\u8d2d\u4e70\u8fc7\u7a0b\uff0c\u5728\u6b64\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5bf9\u8868\u58f3\u5c3a\u5bf8\u3001\u8868\u58f3\u6750\u8d28\u548c\u8868\u5e26\u8fdb\u884c\u642d\u914d\uff0c\u7136\u540e\u9009\u8d2d\u81ea\u5df1\u4e13\u5c5e\u7684Apple Watch\u3002</p> Apple Watch\u5b9a\u5236\u574a <p>\u9700\u8981\u6307\u51fa\u7684\u662f\uff0c\u540c\u4e00\u4ee3\u7684Apple Watch\uff0c\u5176\u6027\u80fd\u548c\u529f\u80fd\u662f\u57fa\u672c\u76f8\u540c\u7684\uff0c\u4e0d\u53d7\u5916\u89c2\u5f71\u54cd\u3002\u56e0\u6b64\u5728\u8fdb\u884c\u4e0a\u8ff0\u5916\u89c2\u5c5e\u6027\u7684\u9009\u62e9\u65f6\uff0c\u4ec5\u9700\u8981\u6839\u636e\u4e2a\u4eba\u559c\u597d\u8fdb\u884c\u6311\u9009\u3002\u6bd4\u5982\u672c\u4eba\u9009\u62e9\u7684\u662f\u6df1\u7a7a\u7070\u8272\u94dd\u5408\u91d144mm Nike+ \u5408\u4f5c\u6b3e\uff08\u6709Nike\u4e13\u5c5e\u8868\u76d8\u53ef\u4f9b\u9009\u62e9\uff09\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u548c\u8fd0\u52a8\u573a\u666f\u4e0b\u642d\u914d\u90fd\u4e0d\u8fdd\u548c\u3002\u5973\u6027\u624b\u8155\u8f83\u5c0f\u7684\u8bdd\u5efa\u8bae\u9009\u62e940mm\u8868\u58f3\u3002</p> 44mm \u6df1\u7a7a\u7070\u8272\u94dd\u5408\u91d1 Apple Watch\u4f69\u6234","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#2","title":"2 \u529f\u80fd","text":"<p>\u5927\u591a\u6570\u65b0\u7528\u6237\u90fd\u4f1a\u597d\u5947\uff0c\u8fd9\u5757\u8868\u80fd\u505a\u4ec0\u4e48\uff1f\u8fd9\u4e5f\u662f\u672c\u4eba\u4e00\u76f4\u5728\u603b\u7ed3\u7684\u7b54\u6848\uff0c\u7ecf\u8fc7\u4e00\u5e74\u591a\u65f6\u95f4\u7684\u4f7f\u7528\uff0c\u7f57\u5217\u4e86\u5982\u4e0b\u51e0\u4e2a\u6700\u5e38\u7528\u7684\u4f7f\u7528\u573a\u666f\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#21","title":"2.1 \u663e\u793a\u65f6\u95f4","text":"<p>\u867d\u7136\u8fd9\u662f\u624b\u8868\u6700\u57fa\u672c\u7684\u529f\u80fd\uff0c\u4f46\u76f4\u5230Apple Watch S5\uff0cApple\u624d\u7ed9\u51fa\u4e86\u4ee4\u4eba\u6ee1\u610f\u7684\u7b54\u6848\uff0c\u56e0\u4e3aApple Watch S5\u9996\u6b21\u4f7f\u7528\u4e86Apple\u79f0\u4e4b\u4e3a**\u5168\u5929\u5019\u89c6\u7f51\u819c\u663e\u793a\u5c4f**\u7684\u663e\u793a\u5c4f\uff0c\u56e0\u6b64\u624b\u8868\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u663e\u793a\u65f6\u95f4\u3002\u5728\u6b64\u4e4b\u524d\u4f60\u9700\u8981\u62ac\u8155\u3001\u70b9\u51fb\u5c4f\u5e55\u6216\u4fa7\u8fb9\u8868\u51a0\u548c\u6309\u952e\u624d\u80fd\u5524\u9192\u5c4f\u5e55\uff0c\u8fd9\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\u5176\u5b9e\u4e0d\u592a\u65b9\u4fbf\u3002\u56e0\u6b64\u5168\u5929\u5019\u663e\u793a\u5c4f\u662fApple Watch\u6240\u6709\u529f\u80fd\u91cc\u6700\u5927\u7684\u52a0\u5206\u9879\u4e4b\u4e00\uff0c\u76ee\u524d\u4ec5\u6709\u8f83\u65b0\u6b3eS5\u548cS6\u5177\u5907\u6b64\u9879\u529f\u80fd\u3002</p> Apple Watch\u5168\u5929\u5019\u89c6\u7f51\u819c\u663e\u793a\u5c4f\uff0c\u56fe\u7247\u6765\u6e90\uff1aApple","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#22","title":"2.2 \u5b9a\u5236\u8868\u76d8","text":"<p>Apple\u548c\u7b2c\u4e09\u65b9\u5e94\u7528\u4f9b\u5e94\u5546\u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u79cd\u7c7b\u7684\u8868\u76d8\u4ee5\u4f9b\u9009\u62e9\uff0c\u5728\u6bcf\u4e2a\u8868\u76d8\u7684\u8bbe\u7f6e\u754c\u9762\u91cc\uff0c\u7528\u6237\u90fd\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6dfb\u52a0\u5404\u79cd\u529f\u80fd\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u4e2a\u4eba\u4e60\u60ef\u6839\u636e\u5e94\u7528\u573a\u666f\u9009\u62e9\u8868\u76d8\uff0c\u6bd4\u5982\u53ef\u4ee5\u5206\u522b\u8bbe\u7f6e\u4e0a\u73ed\u65f6\u95f4\uff0c\u8fd0\u52a8\u5065\u8eab\uff0c\u5468\u672b\u4f11\u95f2\u7b49\u573a\u666f\u4e0b\u4f69\u6234\u7684\u8868\u76d8\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728**\u624b\u8868\u4e3b\u5c4f\u5e55\u754c\u9762\u5de6\u53f3\u6ed1\u52a8**\u5feb\u901f\u5207\u6362\u3002</p> Apple Watch\u8868\u76d8","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#23","title":"2.3 \u67e5\u770b\u901a\u77e5 &amp; \u56de\u590d\u6d88\u606f","text":"<p>\u8fd9\u662fApple Watch\u6700\u521d\u4e3b\u6253\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u5728\u5b8c\u6210\u4e0eiPhone\u7684\u914d\u5bf9\u540e\uff0cApple Watch\u4f1a\u4e3b\u52a8\u663e\u793aiPhone\u5e94\u7528\u7684\u901a\u77e5\uff0c\u5728\u901a\u77e5\u4e0b\u65b9\u901a\u5e38\u8fd8\u6709\u82e5\u5e72\u5feb\u6377\u65b9\u5f0f\u8fdb\u884c\u56de\u5e94\u3002\u5982\u63a5\u6536\u5230\u540c\u4e8b\u53d1\u6765\u7684\u4f1a\u8bae\u9080\u8bf7\u65f6\uff0c\u4f60\u53ef\u4ee5\u5f88\u5feb\u5730\u5728\u624b\u8868\u4e0a\u70b9\u51fb\u786e\u8ba4\u53c2\u52a0/\u62d2\u7edd\u53c2\u52a0\uff0c\u76ee\u524d\u8f83\u4e3a\u6210\u719f\u7684\u529e\u516c\u5e94\u7528\uff08\u5982Office\uff09\u548c\u5373\u65f6\u901a\u8baf\u5e94\u7528\uff08\u5982\u5fae\u4fe1\uff09\u90fd\u9002\u914d\u4e86\u5feb\u6377\u56de\u590d\u529f\u80fd\u3002</p> \u5e94\u7528\u5feb\u6377\u56de\u590d <p>\u4f46\u662f\u7531\u4e8e\u5c4f\u5e55\u8f83\u5c0f\uff0c\u5728Apple Watch\u4e0a\u7684\u6253\u5b57\u4f53\u9a8c\u662f\u5f88\u7cdf\u7cd5\u7684\uff0c\u5982\u679c\u7279\u6b8a\u60c5\u51b5\u4e0b\u9700\u8981\u4f7f\u7528Apple Watch\u8f93\u5165\u8f83\u957f\u4fe1\u606f\uff0c\u5efa\u8bae\u4f7f\u7528\u8bed\u97f3\u56de\u590d\u3002</p> \u624b\u5199\u8f93\u5165","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#24-apple-pay","title":"2.4 Apple Pay &amp; \u4ea4\u901a\u5361","text":"<p>Apple Watch\u80fd\u4f5c\u4e3aApple Pay\u7684\u652f\u4ed8\u7ec8\u7aef\u4f7f\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u624b\u8868\u8fdb\u884cApple Pay\u652f\u4ed8\uff0c\u6216\u8005\u4f7f\u7528\u624b\u8868\u5728\u516c\u4ea4\u8f66\u3001\u5730\u94c1\u5237\u5361\u673a\u4e0a\u8fdb\u884c\u652f\u4ed8\u3002\u4e00\u5f20\u4ea4\u901a\u5361\u4e0d\u80fd\u4e24\u53f0\u8bbe\u5907\u4e0a\u4f7f\u7528\uff0c\u610f\u5473\u7740\u5982\u679c\u4f60\u60f3\u540c\u65f6\u5728iPhone\u548cApple Watch\u4e0a\u4f7f\u7528\u4ea4\u901a\u5361\uff0c\u5fc5\u987b\u8d2d\u4e70\u4e24\u5f20\u5361\u3002</p> <p>\u8d2d\u4e70\u524d\u8bf7\u67e5\u770bApple Pay\u662f\u5426\u652f\u6301\u4f60\u6240\u5728\u57ce\u5e02\u7684\u4ea4\u901a\u5361\uff0c\u622a\u81f32021\u5e741\u67081\u65e5\uff0c Apple Pay\u5feb\u6377\u4ea4\u901a\u5361\u5df2\u7ecf\u652f\u6301\u4e0a\u6d77\u4ea4\u901a\u5361\u3001\u4eac\u6d25\u5180\u4e92\u8054\u4e92\u901a\u5361\u3001\u53a6\u95e8e\u5361\u901a\u3001\u5929\u6d25\u4e92\u8054\u4e92\u901a\u57ce\u5e02\u5361\u3001\u5cad\u5357\u901a\u00b7\u7f8a\u57ce\u901a\u3001\u6c5f\u82cf\u4e00\u5361\u901a\u00b7\u5e38\u5dde\u3001\u6c5f\u82cf\u4ea4\u901a\u4e00\u5361\u901a\u00b7\u6dee\u6d77\u901a\u3001\u6c5f\u82cf\u4e00\u5361\u901a\u00b7\u82cf\u5dde\u3001\u6df1\u5733\u901a\u3001\u71d5\u8d75\u901a\u3001\u91d1\u9675\u901a\u4ea4\u901a\u5361\u3001\u957f\u5b89\u901a\u3001\u957f\u6c99\u6f47\u6e58\u5361\u7b49\u5728\u5185\u768413\u4e2a\u57ce\u5e02\u7684\u624b\u673a\u4ea4\u901a\u5361\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#25","title":"2.5 \u5c0f\u5de5\u5177","text":"<p>\u4e0d\u540c\u4e8eiPhone\u7684\u5e94\u7528\u6709\u4e30\u5bcc\u7684\u529f\u80fd\uff0cApple Watch \u5f88\u591a\u5e94\u7528\u8bbe\u8ba1\u7684\u521d\u8877\u5c31\u662f\u6ee1\u8db3\u7279\u5b9a\u9700\u6c42\u7684\uff0c\u4ed6\u4eec\u7684\u529f\u80fd\u76f8\u5bf9\u5355\u4e00\uff0c\u5176\u4e2d\u5c31\u6709\u8bb8\u591a\u5b9e\u7528\u7684\u5c0f\u5de5\u5177\uff08\u4ee5\u6700\u65b0\u7684watchOS 7\u4e3a\u4f8b\uff09</p> <ul> <li>\u7ad9\u7acb\u63d0\u9192</li> <li>\u6df1\u547c\u5438\u653e\u677e</li> <li>\u566a\u58f0\u68c0\u6d4b</li> <li>\u6454\u5012\u68c0\u6d4b</li> <li>\u67e5\u627e\u624b\u673a\u7684\u4f4d\u7f6e\uff08\u901a\u8fc7\u5728\u624b\u673a\u4e0a\u64ad\u653e\u58f0\u97f3\uff09</li> <li>\u624b\u7535\u7b52</li> <li>\u6d17\u624b\u68c0\u6d4b\u548c\u8ba1\u65f6\uff08\u63a8\u835020\u79d2\uff09</li> <li>\u79bb\u7ebf\u64ad\u653eApple Music\u6b4c\u66f2</li> <li>\u63a7\u5236iPhone\u64ad\u653e\u97f3\u89c6\u9891\u7684\u97f3\u91cf\u548c\u6b4c\u66f2\u5207\u6362</li> <li>\u89e3\u9501Mac</li> </ul> <p>\u8fd9\u4e9b\u5c0f\u5de5\u5177\u90fd\u5728\u8bb8\u591a\u7ec6\u8282\u4e0a\u5b8c\u5584\u4e86Apple\u4ea7\u54c1\u751f\u6001\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u8fd9\u6837\u4e00\u5757\u5c0f\u7684\u8ba1\u7b97\u8bbe\u5907\u80fd\u4f7f\u6539\u53d8\u4e00\u4e9b\u6211\u4eec\u4f7f\u7528\u7535\u5b50\u4ea7\u54c1\u7684\u4e60\u60ef\u3002\u4e5f\u6b63\u56e0\u5982\u6b64\uff0c\u4e2a\u4eba\u5bf9Apple Watch\u7684\u5b9a\u4f4d\u4e5f\u9010\u6e10\u660e\u6670 \u2014 Apple\u4ea7\u54c1\u751f\u6001\u7684\u8865\u5145 &amp; \u4e13\u6ce8\u8fd0\u52a8\u5065\u5eb7\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#26","title":"2.6 \u8fd0\u52a8\u5065\u5eb7","text":"<p>\u4e4b\u6240\u4ee5\u628a\u8fd0\u52a8\u5065\u5eb7\u653e\u5728\u6700\u540e\uff0c\u662f\u56e0\u4e3a\u4e2a\u4eba\u89c9\u5f97\u8fd9\u9879\u529f\u80fd\u53cd\u800c\u4e0d\u662f\u5f88\u591a\u4eba\u4e00\u5f00\u59cb\u60f3\u4e70Apple Watch\u7684\u521d\u8877\uff0c\u4f46\u65e0\u5f62\u4e2d\u8fd9\u6210\u4e3a\u4e86Apple Watch\u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\u3002</p> Apple Watch\u8fd0\u52a8\u5065\u5eb7 <p>\u5728\u8fd9\u5757\u5c0f\u5c0f\u7684\u624b\u8868\u91ccApple\u585e\u5165\u4e86\u5f88\u591a\u4f20\u611f\u5668\u7528\u4e8e\u8fd0\u52a8\u8f85\u52a9\uff1a</p> <ul> <li>\u8840\u6c27\u68c0\u6d4b\u4eea\uff08S6 \u72ec\u5360\uff09</li> <li>\u7535\u6781\u5f0f\u5fc3\u7387\u4f20\u611f\u5668</li> <li>\u7b2c\u4e09\u4ee3\u5149\u5b66\u5fc3\u7387\u4f20\u611f\u5668</li> <li>\u6307\u5357\u9488</li> <li>\u5168\u5929\u5019\u9ad8\u5ea6\u8ba1</li> </ul> <p>\u540c\u65f6\u642d\u914d\u4e86\u8bb8\u591a\u5e94\u7528\u52a9\u529b\u4f60\u5b8c\u6210\u8fd0\u52a8\uff0c\u5728\u8fd0\u52a8\u65f6\u4f60\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u8fd0\u52a8\u65f6\u95f4\u3001\u80fd\u91cf\u6d88\u8017\u548c\u5fc3\u7387\uff0c\u5728iPhone\u5065\u5eb7\u5e94\u7528\u91cc\u67e5\u770b\u5065\u8eab\u8bb0\u5f55\u3002\u540c\u65f62020\u5e749\u6708Apple\u63a8\u51fa\u4e86Fitness+ \u670d\u52a1\uff08\u4e2d\u56fd\u5927\u9646\u6682\u4e0d\u652f\u6301\uff09\uff0c\u81f4\u529b\u4e8e\u6253\u9020\u72ec\u6811\u4e00\u5e1c\u7684\u4e2a\u6027\u5316\u5065\u8eab\u4f53\u9a8c\uff0c\u4e5f\u540c\u6837\u652f\u6301Apple Watch\u3002\u8fd9\u4e9b\u5e94\u7528\u548c\u670d\u52a1\u90fd\u5f88\u597d\u5730\u5229\u7528\u4e86Apple Watch\u53ef\u7a7f\u6234\u8bbe\u5907\u7684\u7279\u6027\uff0c\u8ba9\u5b83\u4ece\u4e00\u4e2a\u53ef\u6709\u53ef\u65e0\u7684\u4ea7\u54c1\u6f14\u53d8\u6210\u4e86\u5728\u7279\u5b9a\u9886\u57df\u9996\u5c48\u4e00\u6307\u7684\u8bbe\u5907\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#3","title":"3 \u7eed\u822a","text":"<p>Apple Watch\u7684\u7406\u8bba\u7eed\u822a\u65f6\u95f4\u572817\u4e2a\u5c0f\u65f6\u5de6\u53f3\uff0c\u672c\u4eba\u4f7f\u7528\u4e0b\u6765\u53d1\u73b0\u5b9e\u9645\u8868\u73b0\u548c\u7406\u8bba\u6570\u503c\u7c7b\u4f3c\uff0c\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u7b2c\u4e8c\u5929\u7684\u6b63\u5e38\u4f7f\u7528\uff0c\u5efa\u8bae\u5728\u4e00\u5929\u7ed3\u675f\u540e\u628a\u7535\u5145\u6ee1\u3002\u4f7f\u7528\u4e00\u5e74\u540e\u672c\u4eba\u5e26\u7740\u624b\u8868\u53bbApple Store\u8bf7\u5929\u624d\u6d4b\u8bd5\u4e86\u7535\u6c60\u5065\u5eb7\u5ea6\uff0c\u7535\u6c60\u5bb9\u91cf\u5269\u4f5990%\u5de6\u53f3\uff0c\u5b9e\u9645\u7eed\u822a\u4f53\u9a8c\u6ca1\u6709\u660e\u663e\u4e0b\u964d\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-01-02-Apple-Watch-S5/#4","title":"4 \u8d2d\u4e70\u5efa\u8bae","text":"<p>\u7efc\u4e0a\uff0c\u76f8\u4fe1\u4f60\u5bf9Apple Watch\u7684\u4f5c\u7528\u6709\u4e86\u57fa\u672c\u7684\u4e86\u89e3\u3002\u8bda\u7136\uff0c\u8fd9\u4e0d\u662f\u4e00\u6b3e\u4eba\u4eba\u5fc5\u987b\u7684\u4ea7\u54c1\uff0c\u4f46\u5982\u679c\u4e0a\u8ff0\u529f\u80fd\u548c\u7279\u6027\u6b63\u597d\u4e0e\u4f60\u7684\u9700\u6c42\u5339\u914d\uff0c\u4e0d\u59a8\u4e00\u8bd5\u3002\u7279\u522b\u662f\u5bf9\u4e8e\u4ece\u672a\u8d2d\u4e70\u8fc7Apple Watch\u7684\uff0c\u4ee5\u53ca\u6301\u6709S4\u53ca\u4ee5\u4e0b\u7684\u670b\u53cb\uff0c\u63a8\u8350S5\u53ca\u4ee5\u4e0a\u7684\u673a\u578b\uff0c\u56e0\u4e3a\u5176\u5168\u5929\u5019\u89c6\u7f51\u819c\u663e\u793a\u5c4f\u5bf9\u4f53\u9a8c\u6709\u5f88\u5927\u7684\u63d0\u5347\u3002\u5982\u9884\u7b97\u6709\u9650\uff0c\u63a8\u8350Apple Watch SE\u56e0\u4e3a\u5176\u7edd\u5927\u591a\u6570\u529f\u80fd\u4e0e\u6700\u65b0\u6b3eS6\u7c7b\u4f3c\uff0c\u662f\u5f88\u597d\u7684\u5165\u95e8\u4f53\u9a8c\u9009\u62e9\u3002\u5bf9\u4e8eApple Watch S5\u7684\u7528\u6237\uff0c\u5982\u679c\u5bf9\u8840\u6c27\u68c0\u6d4b\u6709\u9700\u6c42\uff0c\u53ef\u4ee5\u5347\u7ea7\uff0c\u5426\u5219\u5347\u7ea7\u5fc5\u8981\u4e0d\u5927\u3002</p> <p>\u4f5c\u4e3a\u7279\u6b8a\u7684\u4ea7\u54c1\u7c7b\u578b\uff0c\u4e2a\u4eba\u63a8\u8350\u8d2d\u4e70Apple Watch\u914d\u5957\u7684Apple Care\u4fdd\u9669\u670d\u52a1\uff0c\u5b83\u80fd\u57282\u5e74\u5185\u62c5\u4fdd4\u6b21\u610f\u5916\u635f\u574f\uff0c\u5e76\u4e14\u5f53\u7535\u6c60\u5bb9\u91cf\u4f4e\u4e8e80%\u65f6\u514d\u8d39\u8fdb\u4fee\u7ef4\u4fee\uff0c\u7531\u4e8eApple Watch\u96c6\u6210\u5ea6\u9ad8\uff0c\u6240\u4ee5\u7ef4\u4fee\u57fa\u672c\u90fd\u662f\u66f4\u6362\u65b0\u673a\uff0c\u56e0\u6b64Apple Care\u7684\u6027\u4ef7\u6bd4\u76f8\u6bd4\u4e8eiPhone\u7b49\u5176\u4ed6\u4ea7\u54c1\u66f4\u9ad8\u3002</p> <p>\u603b\u4f53\u800c\u8a00\uff0c\u4e00\u5e74\u4f7f\u7528\u4e0b\u6765\uff0cApple Watch\u5bf9\u672c\u4eba\u4f7f\u7528Apple\u4ea7\u54c1\u7684\u65b9\u5f0f\u5e26\u6765\u4e86\u8bb8\u591a\u53d8\u5316\uff0c\u4e5f\u5e26\u6765\u4e86\u8bb8\u591a\u65b0\u7684\u4f53\u9a8c\uff0c\u76f8\u6bd4\u4e8e\u5927\u53d7\u6b22\u8fce\u7684iPhone\uff0ciPad\uff0cMac\u548cAirPods\uff0c\u8fd9\u662f\u4e00\u6b3e\u4e0d\u90a3\u4e48\u4ee4\u4eba\u719f\u6089\u7684\u4ea7\u54c1\uff0c\u4f46\u4f60\u96be\u4ee5\u5426\u8ba4\uff0c\u5b83\u7684\u786e\u5728\u4e00\u6b65\u4e00\u6b65\u53d8\u5f97\u66f4\u597d\uff0c\u76f8\u4fe1\u4e5f\u4f1a\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u63a5\u53d7\u8fd9\u6b3e\u4e0e\u4f60\u6700\u8d34\u8fd1\u7684\u667a\u80fd\u8bbe\u5907\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/","title":"M1 Mac mini \u4f7f\u7528\u534a\u5e74\u4f53\u9a8c - Mac\u7684\u65b0\u672a\u6765","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-06-03\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea612\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> M1 Mac mini","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#1","title":"1 \u4e2a\u4eba\u4f7f\u7528\u573a\u666f","text":"<p>\u672c\u4eba\u4f7f\u7528Mac\u5df2\u7ecf\u67096\u5e74\u65f6\u95f4\uff0c\u9664\u4e86Mac Pro\uff0c\u5176\u4f59\u7cfb\u5217\u7684\u673a\u578b\u90fd\u66fe\u505a\u8fc7\u4e3b\u529b\u5de5\u4f5c\u673a\uff0c\u6240\u4ee5\u53ef\u4ee5\u7b97\u662f\u4e00\u4e2a\u7565\u6709\u7ecf\u9a8c\u7684\u7528\u6237\u4e86\u3002\u73b0\u5728\u624b\u5934\u4e0a\u7684\u673a\u5668\u662f\u53d1\u5e03\u4e8e2020\u5e7411\u670811\u65e5\u7684M1 Mac mini\uff088G\u5185\u5b58 + 256G SSD\uff09\uff0c\u8d2d\u4e8e2020\u5e7412\u670818\u65e5\u3002\u4f5c\u4e3a\u81ea\u5df1\u7684\u751f\u65e5\u793c\u7269\uff0c\u8fd9\u53f0\u673a\u5668\u610f\u4e49\u975e\u540c\u5bfb\u5e38\uff0c\u56e0\u4e3a\u5b83\u914d\u5907\u4e86Apple\u81ea\u7814\u7684\u7b2c\u4e00\u679a\u684c\u9762\u7ea7\u82af\u7247M1\uff0c\u8fd9\u679a\u82af\u7247\u4e8e2020\u5e74\u7684Apple\u5168\u7403\u5f00\u53d1\u8005\u5927\u4f1a\uff08WWDC\uff09\u6b63\u5f0f\u4eae\u76f8\uff0cApple\u5728\u79cb\u5b63\u6b63\u5f0f\u53d1\u5e03\u642d\u914dM1\u7684Mac\u540e\uff0cMac\u7684\u9500\u91cf\u5728\u75b2\u8f6f\u7684\u4e2a\u4eba\u7535\u8111\u5e02\u573a\u4e2d\u5f02\u519b\u7a81\u8d77\uff0c\u4f7f\u7528\u4f53\u9a8c\u4e5f\u597d\u8bc4\u5982\u6f6e\u3002\u6240\u4ee5\u672c\u4eba\u4e5f\u62b1\u7740\u8bd5\u8bd5\u770b\u7684\u5fc3\u6001\u8d2d\u5165\u4e86M1 Mac\uff0c\u5728\u4f7f\u7528\u534a\u5e74\u540e\uff0c\u6765\u8ba4\u771f\u548c\u5927\u5bb6\u804a\u804a\u8fd9\u6b3e\u673a\u5668\u5230\u5e95\u600e\u4e48\u6837\u3002</p> <p>\u7531\u4e8e\u8bfb\u8005\u80cc\u666f\u5404\u5f02\uff0c\u6240\u4ee5\u63d0\u524d\u8bf4\u660e\uff0c\u672c\u4eba\u662f\u4e00\u540d\u6570\u636e\u79d1\u5b66\u7684\u4ece\u4e1a\u8005\uff0c\u5728\u4f7f\u7528Mac\u7684\u573a\u666f\u4e0a\u548c\u5404\u4f4d\u4e0d\u5c3d\u76f8\u540c\u3002\u5de5\u4f5c\u4e2d\uff0c\u7f16\u7a0b\u3001\u4f7f\u7528\u5e38\u89c1\u7684\u529e\u516c\u8f6f\u4ef6\u3001\u6d4f\u89c8\u7f51\u9875\u662fMac\u6700\u4e3b\u8981\u7684\u7528\u5904\u3002\u751f\u6d3b\u4e2d\uff0c\u672c\u4eba\u4e5f\u5e38\u4f7f\u7528Mac\u8fdb\u884c\u7b80\u5355\u7684\u56fe\u5f62\u8bbe\u8ba1\u3001\u89c6\u9891\u526a\u8f91\u548c\u7167\u7247\u7f16\u8f91\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u4f53\u9a8c\u4f1a\u4ece\u8fd9\u4e9b\u89d2\u5ea6\u8fdb\u884c\u5206\u4eab\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#2","title":"2 \u4f7f\u7528\u4f53\u9a8c","text":"","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#21-","title":"2.1 \u517c\u5bb9\u6027 - \u603b\u4f53\u6ee1\u610f","text":"<p>\u9996\u5148\u8c08\u517c\u5bb9\u6027\u662f\u56e0\u4e3aM1\u82af\u7247\u67b6\u6784\u4ecex86\u67b6\u6784\u8f6c\u6362\u5230\u4e86ARM\u67b6\u6784\uff0c\u5f88\u591a\u670b\u53cb\u4f1a\u62c5\u5fc3\u662f\u5426\u4e4b\u524dIntel Mac\u4e0a\u7684\u8f6f\u4ef6\u65e0\u6cd5\u4f7f\u7528\uff0c\u8ba9\u65b0\u7535\u8111\u4e2d\u770b\u4e0d\u4e2d\u7528\u3002\u4e3a\u4e86\u89e3\u51b3\u8f6f\u4ef6\u517c\u5bb9\u6027\u7684\u95ee\u9898\uff0cApple\u63d0\u51fa\u4e86\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li>Rosetta 2\uff0c\u4f1a\u5728\u7b2c\u4e00\u6b21\u5b89\u88c5app\u65f6\u63d0\u793a\u5b89\u88c5\u8fd9\u4e2a\u8f6f\u4ef6\uff0c\u968f\u540e\u5176\u90fd\u4f1a\u5728\u9700\u8981\u7684\u65f6\u5019\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u8d1f\u8d23\u5728\u5b89\u88c5\u4e3aIntel Mac\u6253\u9020\u7684app\u65f6\u5c06\u5176\u8f6c\u8bd1\u6210ARM\u67b6\u6784Mac\u80fd\u8fd0\u884c\u7684\u4ee3\u7801\u3002</li> </ul> \u5b89\u88c5Rosetta 2\uff0c\u56fe\u7247\u6765\u6e90\uff1aApple <ul> <li>\u4f7f\u7528Xcode\u5f00\u53d1universal apps\uff0cXcode 12\u5f00\u59cb\u652f\u6301\u521b\u5efa\u901a\u7528app\uff0c\u5f00\u53d1app\u7684\u4ee3\u7801\u53ea\u9700\u8981\u5199\u4e00\u4efd\uff0c\u5373\u80fd\u591f\u540c\u65f6\u5728ARM\u67b6\u6784\u548cx86\u67b6\u6784\u7684Mac\u539f\u751f\u8fd0\u884c\u3002</li> </ul> <p>\u8fd9\u4e24\u79cd\u65b9\u6848\u5f88\u597d\u5730\u89e3\u51b3\u4e86x86\u8f6f\u4ef6\u517c\u5bb9\u6027\u548c\u539f\u751fapp\u6570\u91cf\u4e0d\u591f\u7684\u95ee\u9898\uff0c\u534a\u5e74\u4f53\u9a8c\u4e0b\u6765\uff0c\u7ed3\u8bba\u662f\uff1a\u5e38\u7528app\u90fd\u53ef\u4ee5\u8fd0\u884c\uff0c\u5e76\u4e14\u4f7f\u7528\u4f53\u9a8c\u51e0\u4e4e\u548cIntel Mac\u65e0\u5f02\uff0c \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cM1 Mac\u8fd8\u53ef\u4ee5\u539f\u751f\u8fd0\u884c\u8bb8\u591aiOS\u7684apps\u3002</p> <p>\u4f46\u9664\u4e86\u5e38\u7528\u7684\u8f6f\u4ef6\u4e4b\u5916\uff0c\u5bf9\u4e8e\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u4eba\u5458\uff0c\u7f16\u7a0b\u73af\u5883\u7684\u9002\u914d\u5176\u5b9e\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\u622a\u81f32021\u5e746\u67083\u65e5\uff0c\u5e38\u7528\u4ee3\u7801\u7f16\u8f91\u5668\u57fa\u672c\u90fd\u8fdb\u884c\u4e86\u539f\u751f\u9002\u914d\u6216\u8005\u53ef\u4ee5\u901a\u8fc7Rosetta 2\u5b89\u88c5\u8f6c\u8bd1\u7684\u7248\u672c\uff0c\u8f6f\u4ef6\u672c\u8eab\u8fd0\u884c\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u4ee3\u7801\u8fd0\u884c\u5c42\u9762\uff0c\u5e38\u7528\u7684\u6846\u67b6\u548c\u5305\u7684\u9002\u914d\u60c5\u51b5\u4e0d\u4e00\uff0c\u5f88\u96be\u4e00\u8a00\u853d\u4e4b\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u5b89\u88c5\u548c\u914d\u7f6e\u7684\u8fc7\u7a0b\u7684\u786e\u4e0d\u5982Intel Mac\u90a3\u6837\u987a\u7545\uff0c\u60c5\u51b5\u6bd4\u8f83\u591a\u6837\u548c\u590d\u6742\uff0c\u6240\u4ee5\u5177\u4f53\u6559\u7a0b\u8bf7\u81ea\u884c\u641c\u7d22\u3002\u672c\u4eba\u76ee\u524d\u91c7\u53d6\u7684\u65b9\u6848\u662f\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e73\u53f0\u5982Colab\u7b49\uff0c\u5373\u7528\u5373\u8d70\u3002\u53ef\u4ee5\u9884\u89c1\uff0c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u5b89\u88c5\u548c\u8fd0\u884c\u66f4\u65b0\u8f83\u6162\u7684\u6846\u67b6\u548c\u5305\u7684\u4f53\u9a8c\u76f8\u6bd4\u4e8eIntel Mac\u90fd\u9700\u6253\u6298\u6263\u3002\u7c7b\u4f3c\u7684\uff0c\u5bf9\u4e8e\u56fe\u5f62\u8bbe\u8ba1\u3001\u89c6\u9891\u526a\u8f91\u548c\u7167\u7247\u7f16\u8f91\u5de5\u4f5c\uff0c\u8f6f\u4ef6\u672c\u8eab\u8fd0\u884c\u57fa\u672c\u6ca1\u95ee\u9898\uff0c\u4f46\u63d2\u4ef6\u7684\u9002\u914d\u4ecd\u7136\u9700\u8981\u89c6\u60c5\u51b5\u800c\u5b9a\u3002</p> <p>\u5bf9\u517c\u5bb9\u6027\u654f\u611f\u7684\u670b\u53cb\uff0c\u6b64\u5904\u63a8\u8350\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528\u7684\u7f51\u7ad9\u7528\u4e8e\u67e5\u770bapp\u7684\u517c\u5bb9\u60c5\u51b5\uff1aIs Apple silicon ready?</p> Is Apple silicon ready?","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#22-","title":"2.2 \u7a33\u5b9a\u6027\u548c\u53ef\u6269\u5c55\u6027 - \u5e38\u89c4\u64cd\u4f5c","text":"<p>Apple\u5728macOS Big Sur\u4e2d\u5bf9macOS\u8fdb\u884c\u4e86\u8bb8\u591a\u91cd\u8981\u5347\u7ea7\uff1a\u91cd\u5851\u4e86\u7cfb\u7edf\u8bbe\u8ba1\u8bed\u8a00\u3001\u52a0\u5165\u4e86\u63a7\u5236\u4e2d\u5fc3\u3001\u4f18\u5316\u4e86\u8bb8\u591aApple\u81ea\u5bb6\u7684apps\u3002\u901a\u8fc7\u6570\u6b21\u66f4\u65b0\uff0cM1 Mac\u7684\u7a33\u5b9a\u6027\u548c\u5b89\u5168\u6027\u90fd\u5728\u9010\u6b65\u63d0\u5347\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u800c\u8a00\uff0c\u7a33\u5b9a\u6027\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\uff0cM1 Mac\u4fdd\u6301\u4e86\u4e00\u8d2f\u7684\u9ad8\u6c34\u51c6\uff01\u4f46\u5c31\u672c\u4eba\u800c\u8a00\uff0c\u6709\u4e00\u4e2a\u95ee\u9898\u5230\u76ee\u524d\u4e3a\u6b62\u4ecd\u7136\u672a\u5f97\u5230\u89e3\u51b3\uff1a\u5916\u63a5\u663e\u793a\u5668\u95f4\u6b47\u6027\u9ed1\u5c4f\uff0c\u9700\u8981\u91cd\u65b0\u62d4\u63d2\u663e\u793a\u5668\u8fde\u63a5\u7ebf\u624d\u80fd\u89e3\u51b3\uff0c\u4e0d\u7136\u9ed1\u5c4f\u8fc7\u4e45\u4f1a\u5bfc\u81f4\u7535\u8111\u91cd\u542f\u3002\u4e5f\u6709\u8bb8\u591a\u7528\u6237\u5728\u7f51\u4e0a\u5206\u4eab\u81ea\u5df1\u9047\u5230\u7684\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u5982\u84dd\u7259\u5339\u914d\u56f0\u96be\u3001\u8fde\u63a5\u4e0d\u7a33\u5b9a\uff0cSSD\u635f\u8017\u8fc7\u5feb\u7b49\u95ee\u9898\uff0c\u672c\u4eba\u6682\u65f6\u6ca1\u6709\u9047\u5230\uff0c\u8fd9\u4e9b\u95ee\u9898\u4e5f\u56e0\u4eba\u800c\u5f02\u3002</p> <p>\u81f3\u4e8e\u6269\u5c55\u6027\uff0c\u642d\u914dM1\u82af\u7247\u7684Mac\u4e2d\uff0cMac mini\u7684\u63a5\u53e3\u6570\u91cf\u662f\u6700\u591a\u3001\u6700\u5168\u7684\u4e4b\u4e00\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0cMacBook\u5747\u53ea\u67092\u4e2a\u96f7\u96f3 3\u63a5\u53e3\u3002Mac mini\u6700\u9ad8\u652f\u6301\u540c\u65f6\u8fde\u63a5\u4e00\u53f06K (60Hz) \u7684\u663e\u793a\u5668\u548c\u4e00\u53f04K (60Hz) \u7684\u663e\u793a\u5668\u3002\u672c\u4eba\u4f7f\u7528\u7684\u662fLG 27UL850\u7684\u663e\u793a\u5668\uff0c\u5b9e\u6d4b\u4e0b\u6765\u4f7f\u7528\u96f7\u96f3 3\u548cHDMI 2.0 \u7aef\u53e3\u90fd\u80fd\u8fbe\u52304K (60Hz) \u7684\u8f93\u51fa\uff0c\u9664\u4e86\u663e\u793a\u5668\u5076\u5c14\u9ed1\u5c4f\u5916\uff0c\u65e5\u5e38\u529e\u516c\u4f53\u9a8c\u5341\u5206\u4f18\u79c0\u3002\u4f46\u76f8\u8f83\u4e8eIntel\u7248\u672c\u7684Mac mini\uff0cM1\u7248\u7684\u673a\u578b\u51cf\u5c11\u4e86\u4e24\u4e2a\u96f7\u96f3\u63a5\u53e3\uff0c\u5982\u63a5\u53e3\u4e0d\u591f\u5916\u63a5\u66f4\u591a\u7684\u8bbe\u5907\uff0c\u53ef\u6309\u9700\u53e6\u8d2d\u6269\u5c55\u575e\u3002</p> M1 Mac mini\u7684\u63a5\u53e3\uff0c\u56fe\u7247\u6765\u6e90\uff1aApple","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#23-","title":"2.3 \u6027\u80fd - \u771f\u662f\u597d\u5bb6\u4f19","text":"<p>\u7ed3\u8bba\uff1a\u53ef\u80fd\u6bd4\u540c\u4ef7\u4f4d90%\u7684\u7535\u8111\u6027\u80fd\u90fd\u5f3a\uff0c8G\u5185\u5b58\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u591f\u7528\u3002\u5df2\u7ecf\u6709\u5f88\u591a\u4eba\u5206\u4eab\u4e86M1\u82af\u7247\u5728\u4ee3\u7801\u7f16\u8bd1\u3001\u56fe\u5f62\u8bbe\u8ba1\u3001\u89c6\u9891\u526a\u8f91\u7b49\u4f17\u591a\u4f7f\u7528\u573a\u666f\u4e2d\u4f18\u5f02\u7684\u6027\u80fd\u8868\u73b0\uff0c\u672c\u4eba\u5b9e\u9645\u4f7f\u7528\u4e0b\u6765\u53d1\u73b0\u7684\u786e\u5982\u6b64\u3002\u5728\u9009\u8d2d\u673a\u5668\u65f6\uff0c\u82af\u7247\u7684\u89c4\u683c\u548c\u6027\u80fd\u51e0\u4e4e\u76f8\u540c\uff0c\u56e0\u6b64\u8bb8\u591a\u4eba\u4f1a\u7ea0\u7ed3\u662f\u5426\u5347\u7ea7\u523016G\u5185\u5b58\uff0c\u5bf9\u6b64\u672c\u4eba\u5efa\u8bae\uff0c\u5982\u679c\u7ea0\u7ed3\u5c31\u4e0d\u8981\u5347\u7ea7\uff0c\u56e0\u4e3a\u8fd9\u80fd\u591f\u8bc1\u660e16G\u5185\u5b58\u4e0d\u662f\u521a\u9700\u3002\u4f7f\u7528\u534a\u5e74\u65f6\u95f4\u91cc\u53ea\u9047\u5230\u8fc7\u4e00\u79cd\u8d44\u6e90\u4e0d\u591f\u7684\u60c5\u51b5\uff1a\u5728Xcode\u91cc\u5f004\u4e2a\u6a21\u62df\u5668\u65f6\u63d0\u793a\u8fc7\u8d44\u6e90\u6709\u9650\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\uff0c\u4f46\u6b64\u65f6apps\u4ecd\u7136\u80fd\u591f\u6d41\u7545\u8fd0\u884c\uff0c\u5176\u4f59\u4efb\u52a1\u4e2d\uff0c8G\u5185\u5b58\u90fd\u80fd\u4ece\u5bb9\u5e94\u5bf9\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u672c\u4eba\u6ca1\u542c\u89c1\u8fc7\u673a\u5668\u91cc\u98ce\u6247\u7684\u566a\u97f3\u3002</p> M1\u82af\u7247\uff0c\u56fe\u7247\u6765\u6e90\uff1aApple <p>\u5bf9\u4e8e\u5927\u591a\u6570\u666e\u901a\u7528\u6237\u6765\u8bf4\uff0c\u8f6f\u4ef6\u6253\u5f00\u901f\u5ea6\u3001\u54cd\u5e94\u901f\u5ea6\uff0c\u591a\u5f00apps\u65f6\u6d41\u7545\u7a0b\u5ea6\u662f\u6027\u80fd\u5f3a\u5f31\u6700\u76f4\u89c2\u7684\u8bc4\u4ef7\u6307\u6807\u4e4b\u4e00\uff0c\u5728\u8fd9\u4e9b\u65b9\u9762\uff0cM1 Mac\u6bd4\u7edd\u5927\u591a\u6570\u4ef7\u683c\u76f8\u8fd1\u7684Intel Mac\u90fd\u8981\u5f3a\uff0c\u5bf9\u4e8e\u4e13\u4e1a\u7528\u6237\u6765\u8bf4\uff0c\u4e13\u4e1a\u8f6f\u4ef6\u3001\u63d2\u4ef6\u3001\u5176\u4ed6\u4f9d\u8d56\u7684\u9002\u914d\u8fd8\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u8bf7\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u63d0\u524d\u67e5\u9605\u8d44\u6599\u518d\u51b3\u5b9a\u9009\u8d2d\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#24-","title":"2.4 \u5dee\u5f3a\u4eba\u610f\u7684\u70b9 - \u4e0b\u6b21\u4e00\u5b9a\u6539","text":"<ul> <li>\u66f4\u597d\u7684iOS app\u9002\u914d\uff1aM1 Mac\u80fd\u539f\u751f\u8fd0\u884ciOS app\u5176\u5b9e\u662f\u4e00\u4ef6\u5f88\u5438\u5f15\u4eba\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3aiOS app\u7684\u8d28\u548c\u91cf\u90fd\u80fd\u591f\u6781\u5927\u5730\u5b8c\u5584macOS\u7684\u8f6f\u4ef6\u751f\u6001\uff0c\u4f46\u76ee\u524d\u7edd\u5927\u591a\u6570app\u90fd\u662f\u76f4\u63a5\u4ee5iPhone\u6216\u8005iPad\u7684\u6837\u5f0f\u8fd0\u884c\u5728Mac\u4e0a\uff0c\u5e76\u6ca1\u6709\u9488\u5bf9\u684c\u9762\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u4f18\u5316\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u672c\u4eba\u4f7f\u7528iOS app\u4ec5\u6709\u9ad8\u5fb7\u5730\u56fe\u3001\u5fae\u4fe1\u8bfb\u4e66\u53ca\u4e00\u4e9b\u4ea4\u4e92\u7b80\u5355\u7684app\u3002</li> <li>\u66f4\u591a\u7684\u63a5\u53e3\uff1aM1 MacBook\u76ee\u524d\u90fd\u53ea\u67092\u4e2a\u96f7\u96f3 3\u63a5\u53e3\uff0c\u5bf9\u4e8e\u9700\u8981\u63a5\u5165\u8f83\u591a\u5916\u63a5\u8bbe\u5907\u7684\u7528\u6237\u6765\u8bf4\uff0c\u63a5\u53e3\u6570\u91cf\u662f\u6bd4\u8f83\u7d27\u5f20\u7684</li> <li>\u5916\u63a5\u8bbe\u5907\u7684\u517c\u5bb9\u6027\uff1a\u84dd\u7259\u8bbe\u5907\u548c\u5916\u63a5\u663e\u793a\u5668\u7684\u8fde\u63a5\u7a33\u5b9a\u6027\u9700\u8981\u8fdb\u4e00\u6b65\u63d0\u5347</li> </ul> <p>\u603b\u4f53\u6765\u8bf4\uff0c\u7b2c\u4e00\u6b3e\u81ea\u7814\u82af\u7247\u7684Mac\u5b8c\u5168\u8d85\u51fa\u4e86\u5927\u4f17\u7684\u9884\u671f\u3002\u57282020\u5e74WWDC\u7684\u65f6\u5019\uff0cApple\u7684CEO Tim Cook\u8868\u793aMac\u5c06\u5728\u4e24\u5e74\u5185\u5b8c\u6210\u4ecex86\u67b6\u6784\u5230ARM\u67b6\u6784\u7684\u8f6c\u6362\uff0c\u5b9e\u9645\u4e0a\uff0c\u622a\u6b622021\u5e744\u6708\uff0cM1 Mac\u7684\u9500\u91cf\u5df2\u7ecf\u8d85\u8fc7\u4e86Intel Mac1\uff0c\u76f8\u6bd4\u4e8e\u4e4b\u524d\u7684\u82af\u7247\u67b6\u6784\u8f6c\u6362\u51b3\u5b9a2\uff0c\u8fd9\u4e00\u6b21\u7684\u8fdb\u7a0b\u987a\u5229\u4e86\u4e0d\u5c11\uff0cM1\u4e3a\u65b0\u7684Mac\u63d0\u4f9b\u4e86\u524d\u6240\u672a\u6709\u7684\u9a71\u52a8\u529b\uff0c\u672a\u6765\u7740\u5b9e\u53ef\u671f\uff01</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#3-wwdc-2021","title":"3 \u5bf9WWDC 2021\u7684\u671f\u671b","text":"<p>\u672c\u4eba\u6709\u4e00\u4e9biOS\u5f00\u53d1\u7684\u7ecf\u5386\uff0c\u6240\u4ee5\u4f1a\u5bc6\u5207\u5173\u6ce8\u6bcf\u5e74WWDC\u7684\u65b0\u8fdb\u5c55\uff0c\u4e00\u65b9\u9762Apple\u4f1a\u5bf9\u81ea\u5bb6\u6240\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u66f4\u65b0\u3001\u5bf9\u5f00\u53d1\u6846\u67b6\u548c\u5de5\u5177\u8fdb\u884c\u5347\u7ea7\u3002\u53e6\u4e00\u65b9\u9762Apple\u4e5f\u6709\u5728WWDC\u4e0a\u53d1\u5e03\u786c\u4ef6\u7684\u5148\u4f8b\uff0c\u6240\u4ee5\u4f5c\u4e3a\u666e\u901a\u6d88\u8d39\u8005\u6709\u673a\u4f1a\u501f\u6b64\u4e86\u89e3Apple\u53d1\u5e03\u7684\u65b0\u786c\u4ef6\u3002\u6240\u4ee5\u672c\u90e8\u5206\u6536\u96c6\u4e86\u622a\u81f32021\u5e746\u67085\u65e5\u5a92\u4f53\u5bf9WWDC\u7684\u9884\u6d4b\uff0c\u5e76\u5206\u4eab\u81ea\u5df1\u5bf9\u4e8eWWDC 2021\u7684\u671f\u5f85\u3002</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#31-macos","title":"3.1 macOS","text":"<p>\u5c3d\u7ba1Apple\u4f1a\u5bf9\u81ea\u5bb6\u6240\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u66f4\u65b0\uff0c\u4f46\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u4ec5\u5bf9macOS\u8fdb\u884c\u8ba8\u8bba\u3002\u5b9e\u9645\u4e0a\uff0c\u76ee\u524d\u5173\u4e8e\u65b0macOS\u7cfb\u7edf\u7684\u4fe1\u606f\u5341\u5206\u6709\u9650\uff0c\u56e0\u6b64\u4ee5\u4e0b\u5185\u5bb9\u7eaf\u5c5e\u6839\u636e\u5f80\u5e74\u66f4\u65b0\u8282\u594f\u63a8\u6d4b\u3002</p> <ul> <li>\u65b0macOS\u66f4\u65b0\u7684\u91cd\u70b9\u4e4b\u4e00\u662f\u8fdb\u4e00\u6b65\u52a0\u5f3a\u5bf9\u4e8eApple Silicon Macs\u7684\u4f18\u5316\u3002</li> <li>\u5728Xcode\u4e2d\u63a8\u51fa\u66f4\u591a\u5e2e\u52a9\u5f00\u53d1\u8005\u9002\u914dApple Silicon Macs\u7684\u5f00\u53d1\u5de5\u5177\uff0c\u52a0\u901f\u539f\u6709Intel Mac\u4e0aapp\u7684\u9002\u914d\u3002</li> <li>\u4f18\u5316\u901a\u77e5\u4e2d\u5fc3\u548c\u5c0f\u7ec4\u4ef6\u7684\u529f\u80fd\u3002</li> <li>\u4f18\u5316\u63a7\u5236\u4e2d\u5fc3\u7684\u8bbe\u8ba1\u548c\u529f\u80fd\u3002</li> <li>\u4f18\u5316Apple\u539f\u751f\u90ae\u4ef6\u3001\u4fe1\u606f\u3001\u7167\u7247\u7b49app\u7684\u529f\u80fd\u548c\u4f53\u9a8c\u3002</li> <li>\u56fe\u6807\u8bbe\u8ba1\u98ce\u683c\u53ef\u80fd\u4f1a\u6709\u5fae\u8c03\uff0c\u4f20\u95fb\u4f1aiOS\u9760\u62e2\u4f7f\u7528\u65b0\u62df\u6001\u3002</li> </ul>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#32-new-macs","title":"3.2 New Macs","text":"<p>\u6709\u4f20\u8a00\u79f0Apple\u5c06\u5728WWDC 2021\u4e0a\u53d1\u5e03\u65b0\u768414\u82f1\u5bf8\u548c16\u82f1\u5bf8MacBook Pro\uff0c\u65b0\u673a\u578b\u5c06\u6709\u53ef\u80fd\u642d\u914d\u4e0b\u4e00\u4ee3\u7684M\u7cfb\u5217\u82af\u7247\u3001mini-LED\u663e\u793a\u5c4f\u3001\u8d85\u8fc72\u4e2aUSB-C\u63a5\u53e3\u548c\u5168\u65b0\u7684\u7c7b\u4f3ciPhone 12\u7684\u65b9\u6b63\u8bbe\u8ba1\uff0c\u642d\u914d\u65b0\u7684\u78c1\u5438\u5145\u7535\u63a5\u53e3\uff0c\u5e76\u4f7f\u7528\u4f20\u7edf\u7684\u529f\u80fd\u952e\u4ee3\u66ffTouchbar\u3002\u8fd9\u4e9b\u9884\u6d4b\u4e2d\u65b0\u7684\u82af\u7247\u3001\u663e\u793a\u5c4f\uff0c\u4ee5\u53ca\u66f4\u591a\u7684\u63a5\u53e3\u6210\u4e3a\u73b0\u5b9e\u7684\u53ef\u80fd\u6027\u8f83\u5927\u3002\u603b\u5f97\u6765\u8bf4\uff0c\u524d\u6709M1 MacBook Air\u548c13\u82f1\u5bf8MacBook Pro\u6253\u4e0b\u826f\u597d\u7684\u53e3\u7891\uff0c\u65b0\u673a\u578b\u5927\u6982\u7387\u5728\u4ea7\u54c1\u529b\u4e0a\u66f4\u4e0a\u4e00\u5c42\u697c\uff0c\u5982\u679c\u6709\u5347\u7ea7\u9700\u6c42\uff0c\u4e0d\u7528\u72b9\u8c6b\uff01</p>","tags":["hardware"]},{"location":"Dessert/Hardware/2021-06-03-Mac-mini/#4","title":"4 \u603b\u7ed3","text":"<p>\u56de\u770b\u8fc7\u53bb\u4f7f\u7528Mac\u7684\u51e0\u5e74\u7ecf\u5386\uff0c\u81ea\u5df1\u4f7f\u7528Mac\u4e0a\u5b66\u4e60\u4e86\u5f88\u591a\u7684\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u4e5f\u505a\u4e86\u633a\u591a\u6709\u610f\u4e49\u548c\u6709\u8da3\u7684\u4e8b\u3002\u4f7f\u7528M1 Mac\u540e\uff0c\u80fd\u5207\u8eab\u611f\u53d7\u5230\u81ea\u7814\u82af\u7247\u5bf9\u4e8eMac\u4f53\u9a8c\u5de8\u5927\u7684\u63a8\u52a8\uff0c\u50cf\u662fA\u7cfb\u5217\u82af\u7247\u5bf9\u4e8eiPhone\u7684\u610f\u4e49\u4e00\u6837\uff0cM1\u82af\u7247\u65e5\u540e\u4f1a\u4e3aMac\u63d0\u4f9b\u8d8a\u6765\u8d8a\u5f3a\u7684\u539f\u52a8\u529b\u3002\u53ef\u4ee5\u60f3\u8c61\uff0cM1 Mac\u6709\u671b\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u6210\u4e3a\u4e2a\u4eba\u7535\u8111\u5e02\u573a\u91cc\u6700\u53d7\u6b22\u8fce\u7684\u4ea7\u54c1\uff0c\u8ba9\u6211\u4eec\u62ed\u76ee\u4ee5\u5f85\uff01</p> <ol> <li> <p>Apple Event - April 20, 2021.\u00a0\u21a9</p> </li> <li> <p>Mac transition to Intel processors.\u00a0\u21a9</p> </li> </ol>","tags":["hardware"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/","title":"\u5982\u4f55\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u6587\u7ae0","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-07-02\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#1","title":"1 \u524d\u8a00","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u9700\u8981\u5728\u591a\u5e73\u53f0\u5feb\u901f\u53d1\u5e03\u6587\u5b57\u5185\u5bb9\u7684\u56e2\u961f\u6765\u8bf4\uff0c\u63d0\u9ad8\u5199\u5b57\u3001\u6392\u7248\u7684\u6548\u7387\u81f3\u5173\u91cd\u8981\u3002\u6211\u4eec\u4e3a\u4e86\u627e\u5230\u6548\u7387\u6700\u9ad8\u7684\u529e\u6cd5\uff0c\u67e5\u9605\u4e86\u5f88\u591a\u8d44\u6599\uff0c\u6d4b\u8bd5\u4e86\u5f88\u591a\u5de5\u5177\uff0c\u6700\u7ec8\u7ec4\u5efa\u4e86\u4e00\u5957\u884c\u4e4b\u6709\u6548\u3001\u7701\u65f6\u7701\u529b\u7684\u529e\u6cd5\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4f1a\u8be6\u7ec6\u4ecb\u7ecdBulletTech\u53d1\u5e03\u6587\u7ae0\u7684\u5de5\u4f5c\u6d41\uff0c\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u5982\u4f55\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u6587\u7ae0\uff0c\u5e76\u540c\u6b65\u5230\u5404\u4e2a\u5e73\u53f0\u3002</p>","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#2","title":"2 \u5de5\u4f5c\u6d41","text":"<p>\u7b80\u800c\u8a00\u4e4b\uff0c\u6709\u5982\u4e0b\u51e0\u6b65\uff1a</p> <ul> <li>\u6784\u601d\u4e3b\u9898\uff0c\u5b8c\u6210\u5199\u4f5c\u4efb\u52a1\u6392\u671f</li> <li>\u521b\u5efa\u4e0d\u5305\u542b\u4efb\u4f55\u683c\u5f0f\u7684Markdown\u6587\u672c</li> <li>\u6e32\u67d3Markdown\u6587\u672c\uff0c\u53d1\u5e03\u6587\u7ae0</li> <li>\u8ddf\u8e2a\u9605\u8bfb\u6570\u636e\uff0c\u9010\u6b65\u8c03\u4f18</li> </ul>","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#21","title":"2.1 \u6784\u601d\u4e3b\u9898\uff0c\u5b8c\u6210\u5199\u4f5c\u4efb\u52a1\u6392\u671f","text":"<p>\u76ee\u524dBulletTech\u6240\u6709\u7684\u6587\u7ae0\u5168\u90e8\u662f\u539f\u521b\uff0c\u6240\u4ee5\u6bcf\u5468\u56e2\u961f\u6210\u5458\u9700\u8981\u5f00\u4f1a\u8ba8\u8bba\u5199\u4f5c\u4e3b\u9898\uff0c\u56e2\u961f\u6210\u5458\u6839\u636e\u9891\u9053\u5b9a\u4f4d\u3001\u5404\u81ea\u7684\u77e5\u8bc6\u50a8\u5907\u548c\u7528\u6237\u9605\u8bfb\u53cd\u9988\u6765\u786e\u5b9a\u5199\u4f5c\u4e3b\u9898\uff0c\u7136\u540e\u4f7f\u7528Notion\u8fdb\u884c\u5199\u4f5c\u4efb\u52a1\u6392\u671f\u3002\u5173\u4e8eNotion\u7684\u4f7f\u7528\u6280\u5de7\uff0c\u8bf7\u53c2\u8003Void\u8001\u5e08\u4f73\u4f5c\uff1a\u529f\u80fd\u5f3a\u5927\uff0c\u989c\u503c\u5728\u7ebf\u7684\u4e2a\u4eba\u7b14\u8bb0\u5e94\u7528 - Notion\u3002</p> \u4f7f\u7528Notion\u8fdb\u884c\u5199\u4f5c\u4efb\u52a1\u7684\u6392\u671f","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#21-markdown","title":"2.1 \u521b\u5efa\u4e0d\u5305\u542b\u4efb\u4f55\u683c\u5f0f\u7684Markdown\u6587\u672c","text":"<p>\u5404\u4e2a\u5e73\u53f0\u683c\u5f0f\u4e0d\u5c3d\u76f8\u540c\uff0c\u6240\u4ee5\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4e00\u5f00\u59cb\u521b\u5efa\u7eaf\u6587\u672c\uff0c\u7136\u540e\u4f7f\u7528\u201c\u683c\u5f0f\u5237\u201d\u628a\u6587\u672c\u5237\u6210\u4f18\u7f8e\u7684\u6837\u5f0f\u3002\u56e0\u6b64Markdown\u6210\u4e3a\u4e86\u4e0d\u4e8c\u4e4b\u9009\uff0cMarkdown\u53ef\u4ee5\u4f7f\u7528\u7279\u5b9a\u7684\u6807\u8bc6\u7b26\u6807\u8bb0\u6837\u5f0f\uff0c\u8fd9\u4e9b\u6837\u5f0f\u80fd\u975e\u5e38\u5bb9\u6613\u5730\u8f6c\u5316\u4e3a\u4f18\u7f8e\u7684HTML\uff0c\u5728\u79fb\u52a8\u8bbe\u5907\u548c\u7535\u8111\u4e0a\u4f9b\u7528\u6237\u89c2\u770b\u3002\u4f8b\u5982\uff0c\u8f93\u5165\u5c0f\u6807\u9898\u7684\u5199\u6cd5\u662f\uff1a</p> <pre><code>- \u6807\u9898-1\n- \u6807\u9898-2\n</code></pre> <p>\u7ecf\u8fc7\u6e32\u67d3\u540e\u5b83\u4f1a\u8f6c\u5316\u4e3a\u975e\u5e38\u6613\u4e8e\u89c2\u770b\u7684\u6837\u5f0f\uff1a</p> <ul> <li>\u6807\u9898-1</li> <li>\u6807\u9898-2</li> </ul> <p>\u56e0\u6b64\uff0c\u5728\u8fdb\u884c\u6587\u7ae0\u5199\u4f5c\u7684\u65f6\u5019\uff0c\u5b8c\u5168\u4e0d\u7528\u62c5\u5fc3\u683c\u5f0f\u6df7\u4e71\u3002\u5f53\u6587\u5b57\u5199\u5b8c\u540e\uff0c\u4e5f\u975e\u5e38\u5bb9\u6613\u5c06\u9884\u5148\u8bbe\u5b9a\u597d\u7684\u6837\u5f0f\u5957\u7528\u5728Markdown\u6587\u4ef6\u4e0a\u3002</p>","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#23-markdown","title":"2.3 \u6e32\u67d3Markdown\u6587\u672c\uff0c\u53d1\u5e03\u6587\u7ae0","text":"<p>\u63a8\u8350\u4f7f\u7528\u514d\u8d39\u7684mdnice\u7f51\u9875\u5ba2\u6237\u7aef\u8fdb\u884c\u6587\u7ae0\u6837\u5f0f\u7684\u6e32\u67d3\uff0c\u53ea\u9700\u8981\u5c06\u5199\u597d\u7684Markdown\u6587\u672c\u7c98\u8d34\u5230mdnice\u7f16\u8f91\u5668\uff0c\u9009\u62e9\u5408\u9002\u7684\u4e3b\u9898\u5c31\u53ef\u4ee5\u5b8c\u6210\u6837\u5f0f\u7684\u6e32\u67d3\u4e86\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574CSS\u6837\u5f0f\u6765\u6784\u5efa\u81ea\u5df1\u4e13\u5c5e\u7684\u6837\u5f0f\u3002mdnice\u652f\u6301\u914d\u7f6eGitHub\u56fe\u5e8a\uff0c\u4e0a\u4f20\u7684\u56fe\u7247\u4f1a\u751f\u6210\u4e00\u4e2a\u901a\u7528\u7684\u94fe\u63a5\uff0c\u5404\u4e2a\u5e73\u53f0\u90fd\u80fd\u901a\u8fc7\u8be5\u94fe\u63a5\u6b63\u786e\u8bbf\u95ee\u56fe\u7247\uff0c\u65e0\u9700\u53cd\u590d\u4e0a\u4f20\u3002</p> <p>\u540c\u65f6\uff0cmdnice\u652f\u6301\u5fae\u4fe1\u548c\u77e5\u4e4e\u6587\u7ae0\u6837\u5f0f\u7684\u5bfc\u51fa\uff0c\u5b9e\u6d4b\u53d1\u73b0\u5bfc\u51fa\u6548\u679c\u5f88\u68d2\uff0c\u53ea\u9700\u8981\u8f7b\u5fae\u8c03\u6574\u5c31\u53ef\u8fbe\u5230\u53d1\u5e03\u7684\u72b6\u6001\u3002\u4f7f\u7528\u5fae\u4fe1\u5bfc\u51fa\u6837\u5f0f\u5728\u5934\u6761\u548cCSDN\u4e0a\u4e5f\u80fd\u5f88\u597d\u7684\u9002\u914d\u3002\u591a\u5e73\u53f0\u53d1\u5e03\u6548\u7387\u6781\u9ad8\u3002</p> mdnice\u7f51\u9875\u7f16\u8f91\u5668","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#24","title":"2.4 \u8ddf\u8e2a\u9605\u8bfb\u6570\u636e\uff0c\u9010\u6b65\u8c03\u4f18","text":"<p>\u7531\u4e8e\u5fae\u4fe1\u516c\u4f17\u53f7\u662f\u4e3b\u6218\u573a\uff0c\u6240\u4ee5\u6211\u4eec\u4e3b\u8981\u6839\u636e\u516c\u4f17\u53f7\u6587\u7ae0\u9605\u8bfb\u6570\u636e\u6765\u8fdb\u884c\u4f18\u5316\uff0c\u9605\u8bfb\u91cf\u3001\u5206\u4eab\u91cf\u3001\u9605\u8bfb\u540e\u5173\u6ce8\u4eba\u6570\u3001\u9605\u8bfb\u6e20\u9053\u7b49\u6307\u6807\u8bc4\u4ef7\u6587\u7ae0\u6548\u679c\u3002\u6bcf\u4e2a\u9891\u9053\u90fd\u6709\u6240\u4e0d\u540c\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\u63a8\u8350\u4f7f\u7528\u5fae\u4fe1\u63a8\u51fa\u7684\u8ba2\u9605\u53f7\u52a9\u624b\uff0c\u8be5App\u80fd\u591f\u5f88\u65b9\u4fbf\u5730\u7ba1\u7406\u516c\u4f17\u53f7\uff1a\u6dfb\u52a0\u5185\u5bb9\u3001\u56de\u590d\u8bc4\u8bba\u3001\u67e5\u9605\u6570\u636e\u7b49\uff0c\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u80fd\u968f\u65f6\u968f\u5730\u548c\u7528\u6237\u4fdd\u6301\u7d27\u5bc6\u7684\u8054\u7cfb\u3002</p>","tags":["experience"]},{"location":"Dessert/Tactics/2021-07-02-Posting-Workflow/#3","title":"3 \u603b\u7ed3","text":"<p>\u4ee5\u4e0a\u5c31\u662fBulleTech\u5de5\u4f5c\u6d41\u7684\u7b80\u4ecb\uff0c\u8fd9\u6837\u4e00\u5957\u6548\u7387\u6781\u9ad8\u7684\u65b9\u6cd5\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5f88\u5feb\u5730\u5c06\u60f3\u6cd5\u8f6c\u5316\u4e3a\u6587\u7ae0\u5206\u4eab\u7ed9\u5927\u5bb6\uff0c\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5e2e\u52a9\u5230\u4f60\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u5206\u4eab\u4f60\u7684\u53cd\u9988\uff01</p>","tags":["experience"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/","title":"\u201c\u5e74\u7ec8\u201d\u6587\u7ae0\u56de\u987e\u53ca\u65b0\u83dc\u5355\u53d1\u5e03","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-11-17\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#1","title":"1 \u524d\u8a00","text":"<p>\u867d\u7136\u8fd8\u6ca1\u771f\u6b63\u5230\u519c\u5386\u5e74\u5e95\uff0c\u4f46\u9010\u6e10\u5bd2\u51b7\u7684\u5929\u6c14\u548c\u63d0\u4e0a\u65e5\u7a0b\u7684year end review\u4f3c\u4e4e\u7ed9\u505a\u4e2a\u201c\u5e74\u7ec8\u56de\u987e\u201d\u8fd9\u4e00\u884c\u4e3a\u589e\u6dfb\u4e86\u4e9b\u6b63\u786e\u6027\u3002  </p> <p>\u6211\u4eec\u7684\u9879\u76ee\u8d77\u6b65\u4e8e5\u6708\u5e95\uff0c\u4f5c\u4e3a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u7684\u516c\u4f17\u53f7\uff0c\u5bf9\u6211\u4eec\u800c\u8a00\uff0c\u662f\u4e00\u4e2a\u8bb0\u5f55\u6570\u636e\u79d1\u5b66\u76f8\u5173\u77e5\u8bc6\u7684\u5730\u65b9\u3002\u5b83\u53ef\u4ee5\u6fc0\u52b1\u6211\u4eec\u5b66\u4e00\u70b9\u65b0\u7684\u77e5\u8bc6\uff0c\u4e5f\u4fbf\u4e8e\u65e5\u540e\u56de\u8fc7\u5934\u6765\u518d\u770b\u770b\uff0c\u6e29\u6545\u77e5\u65b0\u3002\u5982\u679c\u8fd8\u80fd\u7ed9\u8bfb\u8005\u63d0\u4f9b\u4e9b\u4ef7\u503c\uff0c\u90a3\u81ea\u7136\u662f\u518d\u597d\u4e0d\u8fc7\u4e86\u3002  </p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u6587\u7ae0\u7684\u9009\u62e9\u603b\u662f\u6709\u70b9\u968f\u5fc3\u6240\u6b32\uff0c\u65f6\u95f4\u4e45\u4e86\uff0c\u4e0d\u514d\u8ba9\u5927\u5bb6\u89c9\u5f97\u6709\u4e9b\u6742\u4e71\u3002\u8d81\u6b64\u673a\u4f1a\uff0c\u6211\u4eec\u91cd\u65b0\u6574\u7406\u4e86\u6587\u7ae0\u7684\u5206\u7c7b\uff0c\u53d1\u5e03\u4e86\u65b0\u7684\u83dc\u5355\u3002\u66f4\u91cd\u8981\u7684\uff0c\u6211\u4eec\u4e5f\u60f3\u501f\u6b64\u673a\u4f1a\uff0c\u91cd\u65b0\u56de\u987e\u4e00\u4e0b\u53d1\u5e03\u7684\u6587\u7ae0\uff0c\u505a\u4e00\u4e2a\u201c\u5e74\u7ec8\u603b\u7ed3\u201d\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#2","title":"2 \u79d1\u6280\u6b63\u9910","text":"<p>\u79d1\u6280\u6b63\u9910\u4e13\u6ce8\u4e8e\u6bd4\u8f83\u786c\u6838\u7684\u7f16\u7a0b\u53ca\u4eba\u5de5\u667a\u80fd\u7684\u5185\u5bb9\uff0c\u4e5f\u662f\u6211\u4eec\u8f93\u51fa\u6700\u591a\u7684\u4e00\u5757\u3002\u5b83\u5206\u4e3a\u4e09\u4e2a\u5b50\u90e8\u5206\uff1a\u4eba\u5de5\u667a\u80fd\u3001\u7f16\u7a0b\u7cbe\u534e\u548c\u5206\u6790\u5de5\u5177\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#21","title":"2.1 \u4eba\u5de5\u667a\u80fd","text":"<p>\u4eba\u5de5\u667a\u80fd\u677f\u5757\u4fa7\u91cd\u4e8e\u673a\u5668\u5b66\u4e60\u3001AI(Artificial Intelligence)\u7b49\u65b9\u9762\u7684\u7b97\u6cd5\u548c\u5e94\u7528\uff0c\u5305\u62ec\u4ee5\u4e0b\u56db\u70b9\uff1a</p> <ul> <li>\u7ecf\u9a8c\u5206\u4eab</li> <li>\u6df1\u5ea6\u5b66\u4e60</li> <li>\u7b97\u6cd5</li> <li>\u7ade\u8d5b</li> </ul> <p>\u5728\u7ecf\u9a8c\u5206\u4eab\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u57fa\u4e8e\u81ea\u8eab\u7ecf\u9a8c(\u8e29\u8fc7\u7684\u5751)\u4ee5\u53ca\u9ad8\u8d28\u91cf\u7684\u8d44\u6e90\uff0c\u5982\u300aRules of Machine Learning\u300b\u3001\u300aA Recipe for Training Neural Networks\u300b\u53caKaggle\u8bba\u575b\u7b49\uff0c\u5206\u4eab\u4e86\u5728\u8fd0\u7528\u673a\u5668\u5b66\u4e60\u5efa\u6a21\u7684\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7684tricks\u3002  </p> <p>\u5bf9\u6211\u4eec\u800c\u8a00\uff0c\u8fd9\u4e9b\u7ecf\u9a8c\u90fd\u662f\u5b9d\u8d35\u7684\uff0c\u662f\u65e0\u6cd5\u76f4\u63a5\u67e5\u5230\u7684\uff0c\u53ef\u80fd\u662f\u8e29\u8fc7\u5751\uff0c\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u624d\u5b66\u4f1a\u7684\u3002</p> <p>\u6df1\u5ea6\u5b66\u4e60\u90e8\u5206\u4e3b\u8981\u4ecb\u7ecd\u4e86Tensorflow\u8fd9\u4e00\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff0c\u5305\u62ec\u5982\u4f55\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5\uff0c\u5404\u79cdcallbacks\uff0c\u5982\u4f55\u81ea\u5b9a\u4e49\u6a21\u578b\u4ee5\u53ca\u504f\u5e94\u7528\u5730\u642d\u5efa\u4e00\u4e2a\u6a21\u578b\u6765\u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf\u3002\u60f3\u66f4\u597d\u7684\u5b66\u4e60Tensorflow\u4e0d\u59a8\u6765\u6211\u4eec\u7684\u6df1\u5ea6\u5b66\u4e60\u4e13\u9898\u770b\u770b\u3002</p> <p>\u7b97\u6cd5\u90e8\u5206\u5305\u62ec\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u4e2d\u7684\u9012\u5f52\u3001\u641c\u7d22\u3001\u6392\u5e8f\uff0c\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u51b3\u7b56\u6811\u4ee5\u53camulti-task\u7b97\u6cd5\u8fd8\u6709\u5728\u7b56\u7565\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u53cc\u91cd\u5dee\u5206\u6a21\u578b\u3002</p> <p>\u7ade\u8d5b\u90e8\u5206\u662f\u6211\u4eec\u53c2\u52a0\u8fc7\u7684\u7ade\u8d5b\uff0c\u6216\u662f\u5f00\u6e90\u7684\u9ad8\u5206\u89e3\u51b3\u65b9\u6848\u7684\u89e3\u8bfb\u3002\u5411\u5927\u4f6c\u4eec\u5b66\u4e60\u603b\u662f\u80fd\u6536\u83b7\u5f88\u591a\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#22","title":"2.2 \u7f16\u7a0b\u7cbe\u534e","text":"<p>\u7f16\u7a0b\u7cbe\u534e\u6d89\u53ca\u4e86\u6211\u4eec\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u53ca\u76f8\u5173\u5e94\u7528\uff0c\u5305\u62ec\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ul> <li>Python</li> <li>SQL</li> <li>\u5e94\u7528</li> </ul> <p>\u6211\u4eec\u4f7f\u7528\u6700\u591a\u7684\u5c31\u662fPython\u548cSQL\u4e86\u3002\u5728Python\u90e8\u5206\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u62ec\u5b57\u5178\u3001\u5217\u8868\u548c\u5143\u7ec4\u4ee5\u53ca\u597d\u7528\u7684\u95ed\u5305\u3002\u6211\u4eec\u8fd8\u4ecb\u7ecd\u4e86\u6d41\u884c\u7684\u3001\u5904\u7406\u5927\u6570\u636e\u7684PySpark\u8fd9\u4e2a\u5305\u3002  </p> <p>\u5728SQL\u90e8\u5206\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u4e86\u5e38\u89c1\u7684\u6570\u636e\u4ed3\u5e93\u3002\u63a5\u7740\uff0c\u6211\u4eec\u7740\u91cd\u4ecb\u7ecd\u4e86\u5de5\u4f5c\u4e2d\u5e38\u7528\u7684SnowFlake\u8fd9\u4e00\u5982\u4eca\u7099\u624b\u53ef\u70ed\u7684\u6570\u636e\u4ed3\u5e93\uff0c\u5305\u62ec\u5b83\u7684\u67b6\u6784\u548c\u6743\u9650\uff0c\u4ee5\u53ca\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u5b9e\u8df5\u6307\u5357\u3002\u6700\u540e\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u89e3\u6790SQL\u8bed\u53e5\u7684Python\u5305\uff1asqlparse\u3002</p> <p>\u5e94\u7528\u90e8\u5206\u5305\u62ec\u4e86\u5404\u79cd\u597d\u73a9\u7684\u5e94\u7528\u3002\u6280\u672f\u4e0d\u4ec5\u5f88\u9177\u3001\u4e5f\u5f88\u5b9e\u7528\u3002\u6211\u4eec\u4ecb\u7ecd\u4e86\u7528Python\u6253\u9020\u6dd8\u5b9d\u62a2\u5355\u673a\u5668\u4eba\u3001\u9884\u8ba2\u7f51\u7403\u573a\u5730\u3001\u722c\u53d6\u5fc3\u4eea\u7684\u5c97\u4f4d\u4fe1\u606f\u548cPDF\u6587\u4ef6\u3001\u81ea\u5efa\u8bba\u575b\u4ee5\u53ca\u572812306\u667a\u80fd\u8ba2\u7968\u3002\u6211\u4eec\u4e5f\u4ecb\u7ecd\u4e86A/B\u6d4b\u8bd5\uff0c\u8fd9\u4e00\u65e0\u8bba\u5728\u5de5\u4f5c\u8fd8\u662f\u751f\u6d3b\u4e2d\uff0c\u90fd\u5341\u5206\u6709\u7528\u7684\u5206\u6790\u65b9\u6cd5\u8bba\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#23","title":"2.3 \u5206\u6790\u5de5\u5177","text":"<p>\u5206\u6790\u5de5\u5177\u4ecb\u7ecd\u4e86\u7a0b\u5e8f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u57fa\u7840\u8bbe\u65bd\uff1a</p> <ul> <li>Git</li> <li>\u5bb9\u5668</li> </ul> <p>Git\u4e3b\u8981\u63d0\u4f9b\u4e86\u7248\u672c\u63a7\u5236\u548c\u5de5\u4f5c\u7ba1\u7406\u7684\u529f\u80fd\u3002\u6211\u4eec\u4ecb\u7ecd\u4e86GitHub\u5982\u4f55\u4f7f\u7528\u4ee5\u53ca\u5e38\u7528\u547d\u4ee4\u3002GitHub\u4e5f\u53ef\u4ee5\u5f88\u597d\u73a9\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86GitHub\u4e00\u4e9b\u9177\u70ab\u7684\u529f\u80fd\uff0c\u6bd4\u5982GitHub Action\uff0c\u7528GitHub\u505a\u5728\u7ebf\u7b80\u5386\u7b49\u3002</p> <p>Docker\u4f7f\u5f00\u53d1\u8005\u53ef\u4ee5\u5c06\u5e94\u7528\u3001\u4f9d\u8d56\u6253\u5305\u5230\u5bb9\u5668\u5f53\u4e2d\uff0c\u4fbf\u4e8e\u5f00\u53d1\u3002\u6211\u4eec\u5f62\u8c61\u5730\u4ecb\u7ecd\u4e86Docker\u662f\u4ec0\u4e48\uff0c\u4e5f\u624b\u628a\u624b\u5730\u6559\u5927\u5bb6\u5982\u4f55\u5728Windows\u7cfb\u7edf\u4e2d\u8fd0\u884cDocker\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#3","title":"3 \u79d1\u6280\u751c\u70b9","text":"<p>\u5982\u6b64\u591a\u786c\u6838\u7684\u77e5\u8bc6\u53ef\u80fd\u8ba9\u5927\u5bb6\u5e94\u63a5\u4e0d\u6687\u3002\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u79d1\u6280\u751c\u70b9\uff0c\u8ba9\u5927\u5bb6\u770b\u70b9\u597d\u73a9\u7684\uff0c\u653e\u677e\u5fc3\u60c5\u3002\u5b83\u4fa7\u91cd\u4e8e\u8f6f\u786c\u4ef6\u65b9\u9762\u7684\u4f53\u9a8c\u53ca\u5176\u4ed6\u7ecf\u9a8c\u5206\u4eab\uff0c\u5206\u4e3a\u56db\u4e2a\u90e8\u5206\uff1a\u7ecf\u9a8c\u5206\u4eab\u3001\u4ea7\u54c1\u4f53\u9a8c\u3001App\u548ciOS\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#31","title":"3.1 \u7ecf\u9a8c\u5206\u4eab","text":"<p>\u7ecf\u9a8c\u5206\u4eab\u5305\u62ec\u6700\u521d\u7684\u6211\u4eec\u7684\u6545\u4e8b\u4ee5\u53ca\u5982\u4f55\u79d1\u5b66\u5730\u5199\u51fa\u516c\u4f17\u53f7\u6587\u7ae0\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#32","title":"3.2 \u4ea7\u54c1\u4f53\u9a8c","text":"<p>\u4ea7\u54c1\u4f53\u9a8c\u4e3b\u8981\u662f\u786c\u4ef6\u65b9\u9762\u7684\u4f7f\u7528\u5fc3\u5f97\uff0c\u5305\u62ecM1 Mac mini\u3001Apple Watch S5\u3001iPad Pro\u548c\u7f57\u6280\u9f20\u6807\u3002\u6211\u4eec\u5e76\u4e0d\u5e26\u8d27\uff0c\u4e5f\u6ca1\u6709\u5e7f\u544a\u8d39\uff0c\u56e0\u6b64\uff0c\u8fd9\u662f\u6211\u4eec\u6700\u771f\u5b9e\u7684\u6d4b\u8bc4\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#33-app","title":"3.3 App","text":"<p>App\u90e8\u5206\u5305\u62ec\u4e86\u4e00\u4e9b\u597d\u7528\u7684\u8f6f\u4ef6\uff0c\u5305\u62ec\u597d\u770b\u7684\u4e2a\u4eba\u7b14\u8bb0\u5e94\u7528Notion\u3001\u4e0a\u4f20\u56fe\u7247\u7684PicGo\u56fe\u5e8a\u3001\u4ee3\u7801\u751f\u6210\u5de5\u5177Copilot\u3001\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0GitHub\u3001\u5b9e\u7528\u7684\u7535\u8111\u8f6f\u4ef6\u4eec\u4ee5\u53ca\u5206\u6790\u7f51\u7ad9\u6d41\u91cf\u7684Google Analytics\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#34-ios","title":"3.4 iOS","text":"<p>\u6211\u4eec\u7684\u56e2\u961f\u4e2d\u6709\u8d44\u6df1\u679c\u7c89\uff0c\u56e0\u6b64\u6211\u4eec\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e86iOS\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u5b9e\u7528\u5de5\u5177\u3002\u76f8\u4fe1\u6709\u4e86\u5b83\u4eec\uff0c\u4f7f\u7528\u4f53\u9a8c\u80fd\u5f97\u5230\u6781\u5927\u63d0\u9ad8\u3002</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2021-11-17-Articles-Review/#4","title":"4 \u603b\u7ed3","text":"<p>\u4ece\u6211\u4eec\u9879\u76eeKick off\u5230\u5982\u4eca\u4e5f\u5feb\u534a\u5e74\u4e86\u3002\u867d\u7136\u6211\u4eec\u7c89\u4e1d\u4e0d\u591a\uff0c\u4f46\u662f\u6211\u4eec\u4ecd\u5b5c\u5b5c\u4e0d\u5026\u5730\u8f93\u51fa\u7740\u6570\u636e\u79d1\u5b66\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5e76\u4ee5\u6b64\u4e3a\u4e50\u3002</p> <p>\u8fd9\u7bc7\u201c\u5e74\u7ec8\u603b\u7ed3\u201d\u4ecb\u7ecd\u4e86\u6211\u4eec\u91cd\u65b0\u6574\u7406\u7684\u65b0\u83dc\u5355\uff0c\u5e0c\u671b\u5927\u5bb6\u6709\u5174\u81f4\u65f6\u80fd\u70b9\u70b9\u770b\u770b\u3002\u6211\u4eec\u4e5f\u56de\u987e\u4e86\u53d1\u5e03\u768450\u591a\u7bc7\u6587\u7ae0\u53ca\u89c6\u9891\uff0c\u5982\u679c\u5176\u4e2d\u67091%\u7684\u5185\u5bb9\u662f\u5bf9\u4f60\u6709\u7528\u7684\uff0c\u6211\u4eec\u7684\u76ee\u7684\u5c31\u8fbe\u5230\u4e86\u3002  </p> <p>\u6700\u540e\uff0c\u611f\u8c22\u5404\u4f4d\u8bfb\u8005\u7684\u966a\u4f34\uff01</p>","tags":["bullettech"]},{"location":"Dessert/Tactics/2023-03-04-US-enterance/","title":"L\u7b7e\u8bc1\u6301\u6709\u8005\u5165\u5883\u7f8e\u56fd\u5907\u5fd8\u5f55","text":"<p>Info</p> <p>\u4f5c\u8005\uff1a\u8881\u5b50\u5f39\u8d77\u98de\uff0c\u53d1\u5e03\u4e8e2023-03-04\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea61\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-04-US-enterance/#1","title":"1 \u6982\u8ff0","text":"<p>\u672c\u6587\u662fL\u7b7e\u8bc1\u6301\u6709\u8005\u5165\u5883\u7f8e\u56fd\u5fc5\u5907\u8d44\u6599\u53ca\u6ce8\u610f\u4e8b\u9879\u7684\u7cbe\u7b80\u6307\u5357\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-04-US-enterance/#2","title":"2 \u5165\u5883\u5fc5\u5907\u6750\u6599","text":"<p>L1\u7b7e\u8bc1\u6301\u6709\u8005</p> <ul> <li> Latest I-94</li> <li> Visa stamp</li> <li> Form I-129S with the approval stamp</li> <li> Fully vaccinated proof </li> <li> Covid negative proof in the last 2 days</li> </ul> <p>L1\u7b7e\u8bc1\u6301\u6709\u8005\u7684\u914d\u5076\u4e0e\u5b69\u5b50</p> <ul> <li> Latest I-94</li> <li> L-2 Visa stamp</li> <li> Fully vaccinated proof </li> <li> Covid negative proof in the last 2 days</li> </ul> <p>\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u5165\u5883\u7f8e\u56fd\u7684\u4e2d\u56fd\u516c\u6c11\uff0cI-94\u4e3a\u7a7a\uff0c\u4e0d\u9700\u8981\u643a\u5e26\uff0c\u4e4b\u524d\u6709\u5165\u5883\u8bb0\u5f55\u7684\uff0c\u5728I-94\u5b98\u7f51\u4e0b\u8f7d\u6253\u5370\u6700\u65b0\u7684I-94\u5373\u53ef\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-04-US-enterance/#2_1","title":"2 \u6ce8\u610f\u4e8b\u9879","text":"<p>\u9664\u4e86\u4e0a\u8ff0\u5fc5\u5907\u7684\u6587\u4ef6\u5916\uff0c\u53ef\u4ee5\u5c06\u4e4b\u524d\u51c6\u5907\u9762\u7b7e\u7684\u6750\u6599\u4fdd\u5b58\u5e76\u643a\u5e26\uff0c\u4ee5\u5907\u4e0d\u65f6\u4e4b\u9700\u3002</p> <ul> <li>Support letter</li> <li>Educational documents</li> </ul> <p>Warning</p> <p>\u4e0d\u8981\u5e26\u8d85\u8fc75000\u7f8e\u5143\u7684\u73b0\u91d1\uff0c\u5fc5\u5907\u7684\u8d44\u91d1\u53ef\u4ee5\u901a\u8fc7\u94f6\u884c\u6c47\u6b3e\u7684\u65b9\u5f0f\u6c47\u5165\u7f8e\u56fd\u7684\u8d26\u6237\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-04-US-enterance/#3","title":"3 \u53c2\u8003\u94fe\u63a5","text":"<ul> <li>\u5165\u5883\u7f8e\u56fd\u540eI-94\u8868\u683c\u95ee\u9898\u6c47\u603b</li> <li>\u4e0b\u8f7d\u75ab\u82d7\u63a5\u79cd\u5b98\u65b9\u8bc1\u660e\uff1a\u4f7f\u7528<code>\u9632\u75ab\u5065\u5eb7\u7801\u56fd\u9645\u7248</code>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u4e0b\u8f7d</li> <li>\u5165\u5883\u7f8e\u56fd\u6838\u9178\u68c0\u6d4b\u9634\u6027\uff0c\u6216\u8005\u5eb7\u590d\u8bc1\u660e</li> </ul> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/","title":"\u8003\u53d6\u7f8e\u56fd\u9a7e\u7167\u7cbe\u7b80\u6307\u5357","text":"<p>Info</p> <p>\u4f5c\u8005\uff1a\u8881\u5b50\u5f39\u8d77\u98de\uff0c\u53d1\u5e03\u4e8e2023-03-05\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u7f8e\u56fd\u5f88\u591a\u5730\u65b9\u51fa\u884c\u9700\u8981\u5f00\u8f66\uff0c\u4f7f\u7528\u4e2d\u56fd\u9a7e\u7167\u5728\u5f88\u591a\u5dde\u80fd\u77ed\u6682\u5730\u9a7e\u9a76\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u5982\u679c\u8981\u957f\u671f\u5728\u7f8e\u56fd\u751f\u6d3b\uff0c\u5efa\u8bae\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u5c3d\u5feb\u8003\u53d6\u7f8e\u56fd\u9a7e\u7167\uff0c\u65b9\u4fbf\u65e5\u540e\u51fa\u884c\u3002\u672c\u6587\u4ee5\u4f0a\u5229\u8bfa\u4f0a\u5dde(Illinois)\u4e3a\u4f8b\uff0c\u7b80\u8981\u5730\u4ecb\u7ecd\u8003\u8bd5\u6d41\u7a0b\u53ca\u5b9e\u7528\u7684\u53c2\u8003\u8d44\u6599\u3002\u9700\u6ce8\u610f\uff0c\u672c\u6587\u5206\u4eab\u7684\u7ecf\u9a8c\u4ec5\u9002\u7528\u4e8e\u5df2\u7ecf\u6709\u4e2d\u56fd\u9a7e\u7167\u7684\u4eba\u3002\u6ca1\u6709\u9a7e\u9a76\u7ecf\u9a8c\u7684\u670b\u53cb\u5efa\u8bae\u6309\u7167\u5f53\u5730\u7684\u6cd5\u5f8b\u8fdb\u884c\u9a7e\u9a76\u6280\u80fd\u7684\u5b66\u4e60\u518d\u53c2\u52a0\u8003\u8bd5\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/#2","title":"2 \u8003\u8bd5\u6d41\u7a0b","text":"<p>\u5982\u679c\u4f60\u6301\u6709\u4e2d\u56fd\u9a7e\u7167\uff0c\u53ef\u4ee5\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\u79df\u8f66\u7136\u540e\u524d\u5f80\u5c31\u8fd1\u7684Department of Motor Vehicles\uff08DMV\uff09\u8fdb\u884c\u8003\u8bd5\uff0c\u51fa\u53d1\u524d\u5728DMV\u7f51\u7ad9\u4e0a\u9884\u7ea6\uff0c\u6216\u8005\u76f4\u63a5\u53bb\u4e0d\u63a5\u53d7\u9884\u7ea6\u7684\u8003\u70b9\u3002\u52a1\u5fc5\u5e26\u4e0a\u5fc5\u8981\u7684\u6587\u4ef6\u8bc1\u660e\u4f60\u7684\u8eab\u4efd\u548c\u5c45\u4f4f\u5730\uff0c\u53ef\u53c2\u8003Illinois Secretary of State Document Requirements to obtain a Driver\u02bcs License/State ID Card\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u9700\u8981\u63d0\u4f9b\u7684\u4fe1\u606f\u53ca\u5bf9\u5e94\u6587\u4ef6\u5982\u4e0b\uff1a</p> <ul> <li>Written Signature: Passport</li> <li>Social Security Number: Social security card</li> <li>Date of Birth: I-94 or U.S. visa</li> <li>Residency: Official Electronic Statement</li> </ul> <p>Note</p> <p>\u4e0d\u9700\u8981\u5728Illinois\u5c45\u4f4f\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u53bb\u8003\u8bd5\uff0c\u5982\u679c\u4f60\u6709\u8bc1\u660e\u4f60\u4f4f\u5728Illinois\u7684\u6587\u4ef6\uff08\u4e0a\u8ff0\u7b2c4\u9879\uff09\uff0c\u53ef\u4ee5\u7acb\u5373\u53c2\u52a0\u8003\u8bd5\u3002</p> <p>\u7136\u540e\u4f9d\u6b21\u53c2\u52a0\uff1a</p> <ul> <li>\u89c6\u529b\u6d4b\u8bd5</li> <li>\u7b14\u8bd5\uff08\u603b\u517135\u9898\uff0c\u7b54\u5bf927\u9898\u5373\u53ef\u901a\u8fc7\uff09</li> <li>\u8def\u8003\uff08\u4f60\u53ef\u4ee5\u5f00\u79df\u8d41\u7684\u6c7d\u8f66\u53c2\u52a0\u8003\u8bd5\uff0c\u643a\u5e26\u79df\u8f66\u5408\u540c\u6216\u8005\u8f66\u8f86\u4fdd\u9669\u5361\u5373\u53ef\uff09</li> </ul> <p>\u8def\u8003\u5185\u5bb9\u4e0e\u4e2d\u56fd\u4e0d\u540c\uff0c\u9a7e\u9a76\u5458\u9996\u5148\u5750\u5728\u8f66\u5185\uff0c\u8003\u5b98\u4f1a\u53d1\u51fa\u6307\u4ee4\u68c0\u67e5\u8f66\u7684\u72b6\u51b5\uff08\u5982\u8f66\u706f\u3001\u5587\u53ed\u662f\u5426\u53ef\u7528\uff09\uff0c\u786e\u8ba4\u8f66\u8f86\u72b6\u51b5\u826f\u597d\u540e\uff0c\u8003\u5b98\u4e0a\u8f66\u53d1\u51fa\u884c\u4f7f\u6307\u4ee4\uff0c\u8003\u751f\u6309\u7167\u6307\u4ee4\u9a7e\u9a76\u8f66\u8f86\u8fdb\u884c\u8003\u8bd5\u3002\u5168\u90e8\u8003\u8bd5\u5185\u5bb9\u901a\u8fc7\u540e\uff0c\u5f53\u5929\u5373\u53d1\u4e00\u5f20\u4e34\u65f6\u7684\u9a7e\u7167\uff0c\u5176\u4e0e\u6b63\u5f0f\u9a7e\u7167\u6709\u540c\u7b49\u6cd5\u5f8b\u6548\u529b\uff0c\u6b63\u5f0f\u7684\u9a7e\u7167\u5c06\u5728\u4e09\u5468\u4e4b\u5185\u90ae\u5bc4\u5230\u4f60\u7684\u4f4f\u6240\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/#3","title":"3 \u53c2\u8003\u8d44\u6599","text":"<p>\u7f51\u4e0a\u7684\u53c2\u8003\u8d44\u6599\u5f88\u591a\uff0c\u4f46\u662f\u5bf9\u4e8e\u6709\u8db3\u591f\u9a7e\u9a76\u7ecf\u9a8c\u7684\u4eba\u6765\u8bf4\uff0c\u76f4\u63a5\u53c2\u8003\u5982\u4e0b\u7f51\u7ad9\u6216\u94fe\u63a5\u67e5\u770b\u7b14\u8bd5\u548c\u8def\u8003\u7684\u91cd\u8981\u7ecf\u9a8c\u5373\u53ef\u3002</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/#31","title":"3.1 \u7b14\u8bd5","text":"<ul> <li>\u7b14\u8bd5\u6a21\u62df\u9898</li> </ul>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-05-US-DL/#32","title":"3.2 \u8def\u8003","text":"<ul> <li>2022 How To Pass Your Driving Test/Driving Class for Beginners</li> <li>Top 10 Most Common Mistakes to Avoid on Your Driver's Test</li> <li>Top 10 Reasons Automatic Fail Driving Test</li> </ul> <p>\u5bf9\u4e8e\u5c06\u767b\u5f55\u7f8e\u56fd\u5b66\u4e60\u548c\u5de5\u4f5c\u7684\u670b\u53cb\uff0c\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01</p>","tags":["usa"]},{"location":"Dessert/Tactics/2023-03-26-US-Svc/","title":"\u529e\u7406\u5728\u7f8e\u5fc5\u5907\u8bc1\u4ef6\u53ca\u670d\u52a1\u6307\u5357","text":"<p>Info</p> <p>\u4f5c\u8005\uff1a\u8881\u5b50\u5f39\u8d77\u98de\uff0c\u53d1\u5e03\u4e8e2023-03-26\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>"},{"location":"Dessert/Tactics/2023-03-26-US-Svc/#1","title":"1 \u6982\u8ff0","text":"<p>\u5728\u7f8e\u56fd\u5de5\u4f5c\u548c\u751f\u6d3b\u6709\u8bb8\u591a\u5fc5\u5907\u7684\u8bc1\u4ef6\u548c\u670d\u52a1\u9700\u8981\u529e\u7406\u548c\u7533\u8bf7\uff0c\u672c\u6587\u5c06\u7b80\u8981\u4ecb\u7ecd\u4e2d\u56fd\u516c\u6c11\u83b7\u53d6\u6216\u8005\u529e\u7406\u8fd9\u4e9b\u8bc1\u4ef6\u548c\u670d\u52a1\u7684\u65b9\u6cd5\u3002</p>"},{"location":"Dessert/Tactics/2023-03-26-US-Svc/#2-social-security-card","title":"2 \u793e\u4f1a\u4fdd\u9669\u5361\uff08Social Security Card\uff09","text":"<p>\u767b\u5f55\u7f8e\u56fd\u540e\uff0c\u5c3d\u5feb\u529e\u7406\u793e\u4fdd\u5361\u5e76\u7262\u8bb0\u793e\u4fdd\u8d26\u53f7\uff08Social Security Number, SSN\uff09\uff0c\u56e0\u4e3a\u751f\u6d3b\u548c\u5de5\u4f5c\u4e2d\u5f88\u591a\u60c5\u51b5\u90fd\u8981\u4f7f\u7528\u793e\u4fdd\u8d26\u53f7\u3002\u5bf9\u4e8e\u4e2d\u56fd\u516c\u6c11\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728Google\u5730\u56fe\u4e0a\u627e\u5230\u79bb\u4f60\u8f83\u8fd1\u7684Social Security Administration\uff0c\u5e26\u597d\u5982\u4e0b\u8bc1\u4ef6\u6216\u6587\u4ef6\u7684<code>\u539f\u4ef6</code>:</p> <p>Note</p> <p>\u8bb8\u591aSocial Security Administration\u4e0d\u63a5\u53d7\u9884\u7ea6\uff0c\u6750\u6599\u51c6\u5907\u597d\u4e4b\u540e\u5f53\u5929\u65e9\u4e0a\u76f4\u63a5\u53bb\u73b0\u573a\u6392\u961f\u5165\u573a\u529e\u7406\u4e1a\u52a1\u3002</p> <ul> <li> \u62a4\u7167</li> <li> I-94\uff1a\u7f8e\u56fd\u51fa\u5165\u5883\u8bb0\u5f55\uff0c\u53ef\u5728\u7f8e\u56fd\u653f\u5e9c\u7f51\u7ad9\u4e0a\u6253\u5370\u6700\u65b0\u7684\u8bb0\u5f55</li> <li> \u5982\u679c\u4f60\u662f\u6301\u6709F-1\u6216M-1\u7684\u5b66\u751f\uff0c\u8bf7\u643a\u5e26I-20 (Certificate of Eligibility for Nonimmigrant Student Status).</li> <li> \u5982\u679c\u4f60\u662fJ-1\u6216J-2\u8bbf\u95ee\u5b66\u8005\uff0c\u8bf7\u643a\u5e26DS-2019 (Certificate of Eligibility for Exchange Visitor Status)</li> </ul> <p>\u540c\u65f6\u63d0\u4f9b\u4f60\u7684\u4f4f\u5740\u8bc1\u660e\uff08\u5982\u79df\u8d41\u5408\u540c\u3001\u6c34\u7535\u7164\u8d26\u5355\u7b49\uff09\u3002</p> <p>Tip</p> <p>\u53bb\u7533\u9886\u793e\u4fdd\u5361\u524d\uff0c\u53ef\u4ee5\u5728SSA\u5b98\u7f51\u586b\u5199\u597dSSN\u7684\u7533\u8bf7\u8868\uff0c\u586b\u5199\u5b8c\u6210\u540e\u53ef\u4ee5\u6253\u5370\u8868\u683c\u5e76\u8bb0\u5f55\u7533\u8bf7\u53f7\u7801\uff0c\u53bbSocial Security Administration\u65f6\u53ef\u76f4\u63a5\u51fa\u793a\u7533\u8bf7\u8868\uff0c\u5982\u679c\u6ca1\u6709\u5728\u7ebf\u586b\u5199\uff0c\u53ef\u4ee5\u5f53\u573a\u586b\u5199\u3002</p>"},{"location":"Dessert/Tactics/2023-03-26-US-Svc/#3","title":"3 \u501f\u8bb0\u5361 &amp; \u4fe1\u7528\u5361","text":"<p>\u5728\u7f8e\u56fd\u7684\u501f\u8bb0\u5361\u5bf9\u4e8e\u7684\u662fChecking accounts\uff0c\u6709\u4e00\u5b9a\u5229\u606f\u7684\u6210\u4e3aSavings accounts\u3002\u521a\u767b\u5f55\u7f8e\u56fd\u53ef\u4ee5\u5148\u5f00Checking accounts\uff0c\u94f6\u884c\u4f1a\u7ed9\u4f60\u4e00\u5f20\u5bf9\u5e94\u7684\u501f\u8bb0\u5361\uff08Debit Cards\uff09\u3002\u5bf9\u4e8e\u4e2d\u56fd\u516c\u6c11\uff0c\u7533\u8bf7\u501f\u8bb0\u5361\u65f6\u9700\u8981\u51fa\u793a\u5982\u4e0b\u8bc1\u4ef6\u7684\u539f\u4ef6\uff1a</p> <ul> <li> \u62a4\u7167\u6216\u8005\u7f8e\u56fd\u9a7e\u7167</li> <li> \u793e\u4fdd\u5361\uff08\u6ce8\uff1a\u5e76\u975e\u6240\u6709\u94f6\u884c\u90fd\u9700\u8981SSN\u624d\u5141\u8bb8\u5f00\u8bbe\u501f\u8bb0\u5361\u8d26\u6237\uff09</li> <li> \u4f4f\u5740\u8bc1\u660e\uff08\u5982\u79df\u8d41\u5408\u540c\u3001\u6c34\u7535\u7164\u8d26\u5355\u7b49\uff0c\u5e76\u975e\u6240\u6709\u94f6\u884c\u90fd\u9700\u8981SSN\u624d\u5141\u8bb8\u5f00\u8bbe\u501f\u8bb0\u5361\u8d26\u6237\uff09</li> </ul> <p>\u7533\u8bf7\u901a\u8fc7\u540e\uff0c\u94f6\u884c\u4f1a\u5c06\u5361\u7247\u90ae\u5bc4\u5230\u4f60\u7684\u5bb6\u5ead\u4f4f\u5740\u3002\u4e2a\u522b\u94f6\u884c\u5728\u5f00\u5361\u5b8c\u6210\u540e\u5373\u53ef\u7ed1\u5b9a\u7535\u5b50\u94b1\u5305\uff08\u5982Apple Pay\uff09\u65b9\u4fbf\u4f7f\u7528\uff0c\u5177\u4f53\u60c5\u51b5\u8bf7\u53c2\u8003\u5404\u94f6\u884c\u7684\u653f\u7b56\u3002</p> <p>Tip</p> <p>\u7533\u8bf7\u4fe1\u7528\u5361\u6240\u9700\u6587\u4ef6\u57fa\u672c\u7c7b\u4f3c\uff0c\u4f46\u94f6\u884c\u4f1a\u6839\u636e\u4f60\u7684\u4fe1\u7528\u8bb0\u5f55\u8fdb\u884c\u5ba1\u6279\uff0c\u7533\u8bf7\u6709\u4e00\u5b9a\u53ef\u80fd\u88ab\u62d2\u7edd\uff0c\u5bf9\u4e8e\u521a\u5230\u7f8e\u56fd\u7684\u4e2d\u56fd\u516c\u6c11\uff0c\u53ef\u4ee5\u7533\u8bf7Secured Credit Cards\uff0c\u5373\u9501\u5b9a\u4e00\u90e8\u5206\u5b58\u6b3e\u5728\u4fe1\u7528\u5361\u91cc\uff0c\u5b58\u6b3e\u91d1\u989d\u5373\u4e3a\u4fe1\u7528\u5361\u7684\u989d\u5ea6\uff0c\u4f7f\u7528\u8fd9\u79cd\u4fe1\u7528\u5361\u5e76\u4e14\u53ca\u65f6\u8fd8\u6b3e\u6709\u5229\u4e8e\u6784\u5efa\u826f\u597d\u7684\u4fe1\u7528\u8bb0\u5f55\u3002</p> <p>\u672c\u6587\u5c06\u6301\u7eed\u66f4\u65b0\uff0c\u5e0c\u671b\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>"},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/","title":"\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-06-23\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#1-github","title":"1 GitHub\u662f\u4ec0\u4e48","text":"<p>\u5728\u5f88\u591a\u4eba\u7684\u5370\u8c61\u4e2d\uff0cGitHub\u4e3b\u8981\u662f\u7a0b\u5e8f\u5458\u5199\u4ee3\u7801\u4f1a\u4f7f\u7528\u5230\u7684\u5de5\u5177\u3002\u4e8b\u5b9e\u4e0a\uff0cGitHub\u6700\u4e3b\u8981\u7684\u7279\u6027\u662f\u7248\u672c\u7ba1\u7406\u548c\u534f\u540c\u5de5\u4f5c\uff0c\u8fd9\u610f\u5473\u7740\u4e0d\u4ec5\u662f\u7a0b\u5e8f\u5458\uff0c\u975e\u6280\u672f\u4eba\u58eb\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b83\u66f4\u9ad8\u6548\u5730\u5b8c\u6210\u5f88\u591a\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5c06\u6559\u5927\u5bb6\u96f6\u57fa\u7840\u4f7f\u7528GitHub\uff0c\u5e2e\u52a9\u5927\u5bb6\u8ba4\u8bc6\u8fd9\u4e2a\u5f3a\u5927\u7684\u6548\u7387\u5de5\u5177\u3002\u9996\u5148\u8bf7\u719f\u6089GitHub\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u672f\u8bed\uff1a</p> <ul> <li>\u4ed3\u5e93\uff08Repository\uff09\uff1a\u53ef\u4ee5\u770b\u4f5c\u662f\u5b58\u4ee3\u7801\u548c\u6587\u4ef6\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5f53\u4f60\u4f5c\u4e3a\u4ed3\u5e93\u7ba1\u7406\u8005\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u8bbf\u95ee\u6743\u9650</li> <li>\u8fdc\u7a0b\u4ed3\u5e93\uff08Remote Repository\uff09\uff1a\u53ef\u4ee5\u770b\u4f5c\u4ed3\u5e93\u7684\u526f\u672c\uff0c\u901a\u5e38\u5728\u6b64\u5b8c\u6210\u4fee\u6539\uff0c\u65e5\u540e\u7528\u4e8e\u8865\u5145\u5230\u4ed3\u5e93\u4e3b\u5e72\u4e0a</li> <li>\u4e3b\u5e72\uff08master\u6216main\uff09\uff1a\u5f53\u524d\u9879\u76ee\u6240\u5728\u7684\u72b6\u6001</li> <li>\u5206\u652f\uff08Branch\uff09\uff1a\u53ef\u4ee5\u770b\u4f5c\u4e3b\u5e72\u7684\u526f\u672c\uff0c\u53ef\u6682\u65f6\u5b58\u50a8\u4fee\u6539\u7684\u72b6\u6001\uff0c\u5e38\u7528\u4e8e\u9488\u5bf9\u4e3b\u5e72\u505a\u66f4\u65b0</li> <li>\u63d0\u4ea4\u66f4\u65b0\uff08Push\uff09\uff1a\u5c06\u4fee\u6539\u63d0\u4ea4\u5230\u4ed3\u5e93\u4e2d</li> <li>\u83b7\u53d6\u66f4\u65b0\uff08Pull\uff09\uff1a\u5c06\u4ed3\u5e93\u4e0a\u7684\u66f4\u65b0\u540c\u6b65\u5230\u73b0\u5728\u7684\u5de5\u4f5c\u72b6\u6001</li> <li>\u5408\u5e76\u8bf7\u6c42\uff08Pull request\uff09\uff1a\u7528\u4e8e\u5c06\u5206\u652f\u4e0a\u7684\u4fee\u6539\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a</li> <li>\u5408\u5e76\uff08Merged\uff09\uff1a\u5206\u652f\u4e0a\u7684\u66f4\u6539\u88ab\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a\uff0c\u4ed3\u5e93\u72b6\u6001\u66f4\u65b0</li> </ul> GitHub \u5e38\u89c1\u672f\u8bed\u56fe\u793a <p>\u63a5\u4e0b\u6765\uff0c\u5c06\u4e3b\u8981\u4f1a\u4f7f\u7528GitHub\u7684\u684c\u9762\u5ba2\u6237\u7aef\uff08\u5728GitHub\u7684\u5b98\u65b9\u7f51\u7ad9\u53ef\u514d\u8d39\u4e0b\u8f7d\uff09\u8fdb\u884c\u529f\u80fd\u4ecb\u7ecd\uff0c\u501f\u52a9\u8fd9\u4e2aapp\uff0c\u53ef\u4ee5\u4f7f\u7528GitHub\u7edd\u5927\u591a\u6570\u7684\u6838\u5fc3\u529f\u80fd\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#2-github","title":"2 GitHub\u80fd\u505a\u4ec0\u4e48","text":"<p>GitHub\u5728\u7248\u672c\u7ba1\u7406\u548c\u534f\u540c\u5de5\u4f5c\u65b9\u9762\u662f\u7edd\u4f73\u7684\u5de5\u5177\u4e4b\u4e00\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#21","title":"2.1 \u7248\u672c\u7ba1\u7406","text":"<p>\u5177\u4f53\u6765\u8bf4\uff0c\u7248\u672c\u7ba1\u7406\u7684\u529f\u80fd\u53ef\u4ee5\u5e2e\u52a9\u4fdd\u5b58\u6587\u4ef6\u7684\u4fee\u6539\u5386\u53f2\uff0c\u4ee5\u4fbf\u5728\u9700\u8981\u56de\u6eaf\u65f6\u80fd\u5f88\u65b9\u4fbf\u5730\u68c0\u67e5\u548c\u56de\u6eda\u3002</p> GitHub Desktop\u67e5\u770b\u5386\u53f2\u7248\u672c <p>\u793a\u4f8b\u4e2d\u662fBulletTech\u7684\u4ed3\u5e93\uff0c\u8fc7\u5f80\u7684\u66f4\u6539\u5386\u53f2\u90fd\u88ab\u4fdd\u5b58\u4e86\u4e0b\u6765\uff0c\u70b9\u51fb\u66f4\u6539\u5373\u53ef\u770b\u5230\u66f4\u6539\u7684\u6587\u4ef6\u548c\u5bf9\u5e94\u7684\u66f4\u65b0\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#22","title":"2.2 \u534f\u4f5c","text":"<p>\u8fd9\u4e9b\u66f4\u6539\u662f\u7531BulletTech\u7684\u56e2\u961f\u6210\u5458\u5171\u540c\u5b8c\u6210\u7684\uff0c\u5f53\u591a\u4eba\u534f\u4f5c\u65f6\uff0c\u5efa\u8bae\u5728\u4e0d\u540c\u7684\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u5f53\u5b8c\u6210\u66f4\u65b0\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u8bf7\u6c42\uff08\u2318/Ctrl + R\uff09\u5c06\u4f60\u7684\u5206\u652f\u4e0a\u7684\u66f4\u65b0\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a\u3002\u6b64\u65f6\uff0c\u8f6f\u4ef6\u4f1a\u81ea\u52a8\u5f15\u5bfc\u4f60\u8df3\u8f6c\u5230\u7f51\u9875\u7aef\u521b\u5efa\u8bf7\u6c42\uff0c\u56e2\u961f\u7684\u6210\u5458\u5c31\u53ef\u4ee5\u5ba1\u6838\u66f4\u6539\uff0c\u5982\u679c\u7b26\u5408\u8981\u6c42\uff0c\u66f4\u65b0\u5c31\u53ef\u4ee5\u88ab\u5408\u5e76\u5230\u4e3b\u5e72\u4e0a\u3002</p> \u5408\u5e76\u8bf7\u6c42 <p>\u5efa\u8bae\u8bbe\u7f6e\u5408\u5e76\u8bf7\u6c42\u7684\u6a21\u677f\uff0c\u5c06\u66f4\u65b0\u7684\u4fe1\u606f\u586b\u5199\u6e05\u695a\u4f1a\u8282\u7701\u5f88\u591a\u6c9f\u901a\u7684\u65f6\u95f4\uff0c\u65e5\u540e\u56de\u770b\u65f6\u4e5f\u6709\u8ff9\u53ef\u5faa\u3002\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u4ed3\u5e93\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u6a21\u677f\uff0c\u5e76\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u5bf9\u6a21\u677f\u8fdb\u884c\u4fee\u6539\uff0c\u8fd0\u7528\u5728\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#23","title":"2.3 \u5efa\u7acb\u535a\u5ba2","text":"<p>GitHub\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u670d\u52a1\u5668\u627f\u8f7d\u7b80\u5355\u7684\u535a\u5ba2\uff0cBulletTech\u81ea\u5df1\u7684\u535a\u5ba2\u5c31\u642d\u5efa\u5728\u4e86GitHub\u4e0a\u3002\u4f60\u53ea\u9700\u8981\u5728\u4ed3\u5e93\u7684\u8bbe\u7f6e\u9009\u9879\u4e2d\u5f00\u542fGitHub Pages\u529f\u80fd\uff0c\u535a\u5ba2\u5c31\u81ea\u52a8\u751f\u6210\u4e86\uff0cGitHub\u63d0\u4f9b\u4e86\u5f88\u591a\u7684\u6a21\u677f\u4f9b\u9009\u62e9\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u81ea\u5df1\u4ece\u5934\u7f16\u5199\uff0c\u6b64\u5904\u4e0d\u518d\u5c55\u5f00\uff0c\u5982\u6709\u5174\u8da3\uff0c\u8bf7\u524d\u5f80\u6211\u4eec\u7684\u4ed3\u5e93\u67e5\u770b\u6e90\u7801\u8fdb\u884c\u5b66\u4e60\u3002</p> BulletTech\u535a\u5ba2","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#3-github","title":"3 GitHub\u600e\u4e48\u7528","text":"","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#31","title":"3.1 \u521b\u5efa\u4ed3\u5e93","text":"<p>\u6ce8\u518c\u5b8cGitHub\u540e\uff0c\u5728\u4f60\u7684\u4e3b\u9875\u91cc\uff0c\u70b9\u51fb\u6700\u663e\u773c\u7684\u7eff\u8272\u6309\u94ae\uff08New\uff09\u5373\u53ef\u65b0\u5efa\u4ed3\u5e93\u4e86\u3002\u70b9\u51fb\u8fdb\u5165\u4ed3\u5e93\u540e\uff0c\u70b9\u51fb\u7eff\u8272\u6309\u94ae\uff08Code\uff09\u5373\u53ef\u4f7f\u7528GitHub Desktop\u8f6f\u4ef6\u6253\u5f00\uff0c\u5e76\u628a\u6587\u4ef6\u4e0b\u8f7d\u5230\u4f60\u7684\u7535\u8111\u4e0a\uff0c\u63a5\u4e0b\u6765\u4f60\u5c31\u53ef\u4ee5\u6b63\u5f0f\u5f00\u5c55\u9879\u76ee\u4e86\uff01</p> \u65b0\u5efa\u4ed3\u5e93 \u7528GitHub  Desktop\u6253\u5f00\u4ed3\u5e93","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#32-github-desktop","title":"3.2 GitHub Desktop\u57fa\u672c\u529f\u80fd","text":"<p>\u57fa\u672c\u64cd\u4f5c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8bf7\u6ce8\u610f\uff0c\u6709\u65f6\u540c\u6b65\uff08Pull)\u4ed3\u5e93\u65f6\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u539f\u56e0\u5927\u591a\u662f\u672c\u5730\u7684\u66f4\u65b0\u6ca1\u6709\u540c\u6b65\u5230\u5206\u652f\u4e0a\uff0c\u800c\u5176\u4ed6\u4eba\u5df2\u7ecf\u66f4\u65b0\u7684\u5206\u652f\uff0c\u8fd9\u65f6\uff0c\u5728\u540c\u6b65\u524d\u9700\u8981\u5c06\u4f60\u7684\u66f4\u65b0\u6401\u7f6e\uff08Stash\uff09\u6216\u8005\u653e\u5f03\uff08Discard\uff09\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u5728\u9876\u90e8Branch\u83dc\u5355\u91cc\u627e\u5230\u3002</p> GitHub  Desktop\u57fa\u672c\u64cd\u4f5c <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u638c\u63e1\u4e86\u8fd9\u4e9b\u57fa\u672c\u77e5\u8bc6\u548c\u6280\u80fd\u540e\uff0c\u4f60\u80fd\u591f\u5f88\u987a\u5229\u5730\u4f7f\u7528GitHub\u8fdb\u884c\u6587\u4ef6\u7ba1\u7406\u3001\u534f\u540c\u5408\u4f5c\u3001\u521b\u5efa\u81ea\u5df1\u7684\u535a\u5ba2\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u8981\u5199\u3002\u5f53\u7136\uff0c\u4f7f\u7528\u4ee3\u7801\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u64cd\u4f5cGitHub\uff0c\u4e0b\u6b21\u6211\u4eec\u5c06\u4f7f\u7528\u547d\u4ee4\u64cd\u4f5cGitHub\uff0c\u656c\u8bf7\u671f\u5f85\uff01</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/","title":"Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-07-15\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u5728\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528GitHub Desktop\u5bf9GitHub\u8fdb\u884c\u64cd\u4f5c\uff0c\u56fe\u5f62\u5316\u7684\u754c\u9762\u5bf9\u4e0d\u592a\u719f\u6089\u547d\u4ee4\u7684\u670b\u53cb\u975e\u5e38\u53cb\u597d\uff0c\u4f46\u6709\u65f6\u5019\uff0c\u5728\u4ee3\u7801\u7f16\u8f91\u5668\u6216\u8005\u7ec8\u7aef\u4e2d\u76f4\u63a5\u8fd0\u884c\u547d\u4ee4\u64cd\u4f5cGit\u66f4\u65b9\u4fbf\uff0c\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4\uff0c\u8ba9\u4f60\u7684Git\u6c34\u5e73\u66f4\u4e0a\u4e00\u5c42\u697c\u3002</p> \u5728\u7ec8\u7aef\u4e2d\u4f7f\u7528Git","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#1-git","title":"1 \u914d\u7f6eGit","text":"<p>\u9996\u5148\u4f60\u9700\u8981\u8ba9Git\u77e5\u9053\u4f60\u662f\u8c01\uff0c\u6240\u4ee5\u5148\u8bbe\u7f6e\u4f60\u7684\u7528\u6237\u540d\uff1a</p> <pre><code>git config \u2013-global user.name\n</code></pre> <p>\u8bbe\u7f6e\u90ae\u7bb1\uff1a</p> <pre><code>git config --global user.email\n</code></pre>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#2-git","title":"2 \u8bbe\u7f6eGit\u4ed3\u5e93","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u7684\u65b0\u4ed3\u5e93\uff1a</p> <pre><code>git init\n</code></pre> <p>\u514b\u9686\u4e00\u4e2a\u4ed3\u5e93\u5230\u73b0\u5728\u6240\u5728\u7684\u6587\u4ef6\u5939\uff1a</p> <pre><code>git clone &lt;repo URL&gt;\n</code></pre> <p>\u663e\u793a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5217\u8868\uff1a</p> <pre><code>git remote -v\n</code></pre> <p>\u5220\u9664\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\uff1a</p> <pre><code>git remote rm &lt;\u8fdc\u7a0b\u4ed3\u5e93\u540d\u5b57&gt;\n</code></pre> <p>\u5c06\u670d\u52a1\u5668\u4e0a\u6700\u65b0\u7684\u4fee\u6539\u62c9\u56de\u672c\u5730\uff0c\u4f46\u4e0d\u4e0e\u73b0\u5728\u7684\u5de5\u4f5c\u6587\u6863\u5408\u5e76\uff1a</p> <pre><code>git fetch\n</code></pre> <p>\u5c06\u670d\u52a1\u5668\u4e0a\u6700\u65b0\u7684\u4fee\u6539\u62c9\u56de\u672c\u5730\uff0c\u5e76\u76f4\u63a5\u4e0e\u5de5\u4f5c\u6587\u6863\u5408\u5e76\uff1a</p> <pre><code>git pull\n</code></pre>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#3","title":"3 \u7ba1\u7406\u6587\u4ef6\u53d8\u66f4","text":"<p>\u5c06\u6240\u6709\u53d8\u66f4\u52a0\u5165\u7f13\u51b2\u533a\uff1a</p> <pre><code>git add &lt;\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u79fb\u9664\u4e00\u4e2a\u6587\u4ef6\u5e76\u4e14\u4e0d\u5728\u4fdd\u5b58\u5b83\u7684\u4fee\u6539\u5386\u53f2\uff1a</p> <pre><code>git rm &lt;\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u56de\u590d\u4e00\u4e2a\u5220\u9664\u7684\u6587\u4ef6\u5e76\u5c06\u5b83\u51c6\u5907\u7528\u4e8e\u63d0\u4ea4\u66f4\u65b0\uff1a</p> <pre><code>git checkout &lt;\u5220\u9664\u7684\u6587\u4ef6\u540d&gt;\n</code></pre> <p>\u5c55\u793a\u4fee\u6539\u6587\u4ef6\u7684\u72b6\u6001\uff1a</p> <pre><code>git status\n</code></pre> <p>\u6709\u4e9b\u6587\u4ef6\u56e0\u4e3a\u5bf9\u9879\u76ee\u65e0\u7528\uff0c\u5982\u4e00\u4e9b\u7f13\u5b58\u548c\u65e5\u5fd7\u6587\u4ef6\uff0c\u662f\u88ab\u7248\u672c\u7ba1\u7406\u5ffd\u7565\u7684\uff0c\u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u53ef\u67e5\u770b\u88ab\u5ffd\u7565\u7684\u6587\u4ef6\u5217\u8868\uff1a</p> <pre><code>git ls-files \u2013other \u2013ignored \u2013exclude-standard\n</code></pre> <p>\u663e\u793a\u5f53\u524d\u76ee\u5f55\u4e2d\u6240\u6709\u6587\u4ef6\u7684\u53d8\u5316\u60c5\u51b5\uff1a</p> <pre><code>git diff\n</code></pre>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#4-git","title":"4 Git\u63d0\u4ea4\u7684\u76f8\u5173\u547d\u4ee4","text":"<p>\u63d0\u4ea4\u4ee3\u7801\uff0c\u5e76\u4e14\u6ce8\u91ca\u5185\u5bb9\uff1a</p> <pre><code>git commit -m \"&lt;\u63d0\u4ea4\u5185\u5bb9&gt;\"\n</code></pre> <p>\u5207\u6362\u5230\u67d0\u4e00\u6b21\u63d0\u4ea4\u65f6\u7684\u72b6\u6001\uff1a</p> <pre><code>git checkout &lt;commit&gt;\n</code></pre> <p>\u64a4\u9500\u67d0\u6b21\u63d0\u4ea4\u65f6\u7684\u6240\u6709\u66f4\u6539\uff1a</p> <pre><code>git reset \u2013hard &lt;commit&gt;\n</code></pre> <p>\u64a4\u9500\u5f53\u524d\u5de5\u4f5c\u6587\u4ef6\u5939\u4e2d\u7684\u66f4\u6539\uff1a</p> <pre><code>git reset \u2013hard Head\n</code></pre> <p>\u663e\u793a\u4fee\u6539\u5386\u53f2\uff1a</p> <pre><code>git log\n</code></pre> <p>\u5c06\u5f53\u524d\u4fee\u6539\u5148\u6401\u7f6e\uff0c\u4e4b\u540e\u518d\u7528:</p> <pre><code>git stash\n</code></pre> <p>\u53d6\u56de\u5148\u524d\u6401\u7f6e\u7684\u6587\u4ef6:</p> <pre><code>git stash pop\n</code></pre> <p>\u6e05\u7a7a\u6401\u7f6e\u7684\u6587\u4ef6:</p> <pre><code>git stash drop\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2atag\uff0c\u6807\u8bb0\u5f53\u524d\u7684\u6587\u4ef6\u7248\u672c\uff1a</p> <pre><code>git tag &lt;\u6807\u7b7e\u7248\u672c&gt;\n</code></pre> <p>\u5c06\u6539\u53d8\u63a8\u9001\u5230origin:</p> <pre><code>git push\n</code></pre> <p>\u5c06\u6539\u53d8\u63a8\u9001\u5230\u53e6\u4e00\u4e2a\u5206\u652f:</p> <pre><code>git push &lt;\u5f53\u524d\u5206\u652f&gt;:&lt;\u60f3\u63a8\u9001\u7684\u5206\u652f&gt;\n</code></pre>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#5-git","title":"5 Git\u5206\u652f\u64cd\u4f5c","text":"<p>\u663e\u793a\u6240\u6709\u5206\u652f:</p> <pre><code>git branch\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f\uff0c\u5e76\u4e14\u5207\u6362\u5230\u65b0\u7684\u5206\u652f:</p> <pre><code>git checkout -b &lt;\u5206\u652f\u540d\u79f0&gt;\n</code></pre> <p>\u5207\u6362\u5230\u65b0\u7684\u5206\u652f:</p> <pre><code>git checkout &lt;\u5206\u652f\u540d\u79f0&gt;\n</code></pre> <p>\u5220\u9664\u5206\u652f:</p> <pre><code>git branch -d &lt;\u5206\u652f\u540d\u79f0&gt;\n</code></pre> <p>\u5c06\u53e6\u4e00\u4e2a\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f:</p> <pre><code>git merge &lt;\u5206\u652f\u540d\u79f0&gt;\n</code></pre> <p>\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u62c9\u53d6\u5206\u652f:</p> <pre><code>git fetch remote &lt;\u5206\u652f\u540d\u79f0&gt;\n</code></pre> <p>\u67e5\u770b\u4e24\u4e2a\u5206\u652f\u7684\u533a\u522b\uff1a</p> <pre><code>git diff &lt;\u6e90\u5206\u652f&gt; &lt;\u76ee\u6807\u5206\u652f&gt;\n</code></pre>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#6-git","title":"6 Git\u5c0f\u8d34\u58eb","text":"<p>\u4e94\u82b1\u516b\u95e8\u7684\u547d\u4ee4\u662f\u5426\u8ba9\u4f60\u773c\u82b1\u7f2d\u4e71\u4e86\uff1f\u5728\u4ee3\u7801\u7f16\u8f91\u5668\u548c\u7ec8\u7aef\u4e2d\u4eb2\u624b\u8bd5\u9a8c\u5427\uff01\u6700\u540e\u5728\u603b\u7ed3\u4e00\u4e9b\u65e5\u5e38\u4f7f\u7528Git\u7684\u5c0f\u8d34\u58eb\uff0c\u5e2e\u52a9\u4f60\u51cf\u5c11\u9519\u8bef\uff0c\u63d0\u9ad8\u6548\u7387\uff1a</p> <ul> <li>\u5728\u5f00\u59cb\u5de5\u4f5c\u524d\u5148\u770b\u770b\u6700\u65b0\u7684origin\u7684\u72b6\u6001\uff0c\u6709\u53ef\u80fd\u4f60\u7684\u540c\u4f34\u5df2\u7ecf\u66f4\u65b0\u4e86\u6587\u4ef6\uff0c\u786e\u4fdd\u4f60\u5728\u6700\u65b0\u7684\u6587\u4ef6\u57fa\u7840\u4e0a\u5de5\u4f5c</li> <li>\u63d0\u4ea4\u66f4\u65b0\u4e4b\u524d\u786e\u4fdd\u5b8c\u6210\u8db3\u591f\u7684\u6d4b\u8bd5\uff0c\u786e\u4fdd\u4f60\u7684\u66f4\u65b0\u662f\u6709\u6548\u7684</li> <li>\u53ca\u65f6\u63d0\u4ea4\u66f4\u65b0\uff0c\u8fd9\u6837\u80fd\u591f\u8ba9\u961f\u53cb\u4eec\u540c\u6b65\u5de5\u4f5c\u8fdb\u5ea6</li> <li>\u5728\u66f4\u6539\u548c\u63d0\u4ea4\u4e2d\u8bb0\u5f55\u660e\u786e\u7684\u6ce8\u91ca\uff0c\u5bf9\u96be\u61c2\u7684\u90e8\u5206\u8be6\u7ec6\u63cf\u8ff0</li> <li>\u5145\u5206\u5229\u7528\u5206\u652f\u8fdb\u884c\u66f4\u6539\uff0c\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728master\u4e0a\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u514d\u51fa\u73b0\u610f\u6599\u4e0d\u5230\u7684\u9519\u8bef</li> </ul>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/","title":"\u6d45\u8c08Google Analytics","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-07-31\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#1","title":"1 \u524d\u8a00","text":"<p>\u73b0\u4eca\u4e92\u8054\u7f51\u4e0a\u7684\u5f88\u591a\u4ea7\u54c1\u3001\u6218\u7565\u51b3\u7b56\u90fd\u7531\u6570\u636e\u9a71\u52a8\uff0c\u4ee5BulletTech\u4e3a\u4f8b\uff0c\u5728\u8fd0\u8425\u5fae\u4fe1\u516c\u4f17\u53f7\u65f6\uff0c\u901a\u8fc7\u540e\u53f0\u6570\u636e\u6211\u4eec\u5bf9\u6bcf\u7bc7\u6587\u7ae0\u90fd\u4f1a\u8fdb\u884c\u6d41\u91cf\u6765\u6e90\u3001\u88c2\u53d8\u548c\u9605\u8bfb\u5b8c\u5173\u6ce8\u7b49\u91cd\u8981\u6307\u6807\u7684\u76d1\u63a7\uff0c\u8fd9\u4e9b\u6570\u636e\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5206\u6790\u8bfb\u8005\u7684\u504f\u597d\u3001\u6d41\u91cf\u6e20\u9053\u7684\u4f18\u52a3\uff0c\u4ece\u800c\u7075\u6d3b\u5730\u8c03\u6574\u6587\u7ae0\u4e3b\u9898\u548c\u5ba3\u4f20\u7b56\u7565\u3002\u5bf9\u4e8e\u5df2\u7ecf\u6709\u826f\u597d\u6570\u636e\u5206\u6790\u57fa\u7840\u8bbe\u65bd\u7684\u5e73\u53f0\uff0c\u73b0\u6210\u7684\u89e3\u51b3\u65b9\u6848\u80fd\u7701\u53bb\u51b3\u7b56\u8005\u5f88\u591a\u65f6\u95f4\uff0c\u4f46\u5982\u679c\u81ea\u5df1\u4ece\u5934\u5efa\u4e86\u4e00\u4e2a\u4ea7\u54c1\uff0c\u5982\u4f55\u6784\u5efa\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\u8bbe\u65bd\u548c\u7b56\u7565\u5462\uff1f\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ee5BulletTech\u7684\u535a\u5ba2\u4e3a\u4f8b\uff0c\u5411\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Google Analytics\uff08GA\uff09\u5206\u6790\u7f51\u7ad9\u8868\u73b0\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#2-google-analytics","title":"2 Google Analytics\u7684\u4f5c\u7528","text":"<p>GA\u662fGoogle\u53d1\u5e03\u7684\u4e00\u6b3e\u7528\u4e8e\u7f51\u7ad9\u548c\u79fb\u52a8\u5e94\u7528\u5206\u6790\u7684\u514d\u8d39\u5de5\u5177\uff0c\u5c06GA\u914d\u7f6e\u5728\u7f51\u7ad9\u4e0a\u540e\uff0c\u5b83\u80fd\u591f\u6293\u53d6\u5230\u7f51\u7ad9\u4e0a\u7684\u7528\u6237\u884c\u4e3a\u6570\u636e\uff0c\u5e2e\u52a9\u4f60\u4f18\u5316\u7f51\u7ad9\u3002GA\u5728\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5206\u6790\u4e2d\u8d77\u5230\u4e86\u91cd\u8981\u4f5c\u7528\uff1a</p> <ul> <li>\u5e02\u573a\u63a8\u5e7f\uff1aGA\u80fd\u591f\u6e05\u695a\u5730\u5c55\u793a\u5404\u4e2a\u6e20\u9053\u7528\u6237\u5728\u7f51\u7ad9\u4e0a\u7684\u884c\u4e3a\u53ca\u8f6c\u5316\u7387\uff0c\u6709\u52a9\u4e8e\u52a3\u52bf\u6e20\u9053\u7684\u4f18\u5316</li> <li>\u641c\u7d22\u5f15\u64ce\u4f18\u5316\uff08SEO\uff09\uff1aGA\u5bf9\u4e8e\u6d41\u91cf\u83b7\u53d6\u6709\u591a\u4e2a\u7ef4\u5ea6\u7684\u5212\u5206\uff0c\u4f60\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u5230\u54ea\u4e9b\u5185\u5bb9\u5e2e\u52a9\u83b7\u5f97\u4e86\u66f4\u591a\u7684\u70b9\u51fb</li> <li>\u7ad9\u70b9\u5185\u5bb9\uff1a\u7528\u6237\u5728\u54ea\u4e9b\u9875\u9762\u505c\u7559\u8f83\u957f\u3001\u54ea\u4e9b\u9875\u9762\u89c2\u770b\u6700\u591a\uff0c\u54ea\u4e9b\u9875\u9762\u8f6c\u5316\u7387\u6700\u9ad8\u3001\u7ad9\u70b9\u6027\u80fd\u7b49\u4fe1\u606f\u90fd\u80fd\u5728GA\u4e2d\u770b\u5230\uff0c\u8fd9\u4e9b\u90fd\u662f\u5e2e\u52a9\u4f18\u5316\u5185\u5bb9\u7684\u5173\u952e\u4fe1\u606f</li> </ul>","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#3-google-analytics","title":"3 Google Analytics\u4f7f\u7528\u5c0f\u6280\u5de7","text":"<p>\u9996\u5148\u9700\u8981\u4e3a\u4f60\u7684\u7f51\u7ad9\u914d\u7f6eGA\uff0cGoogle\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u6559\u7a0b\uff0c\u56e0\u6b64\u4e0d\u518d\u8d58\u8ff0\u3002\u901a\u8fc7\u7b80\u5355\u7684\u51e0\u6b65\uff0c\u53ef\u4ee5\u5c06tracking id\u6216\u8005\u4e00\u6bb5tracking code\u90e8\u7f72\u5728\u4f60\u7684\u7f51\u7ad9\u4e0a\uff0c\u7136\u540eGA\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6536\u96c6\u6570\u636e\u4e86\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u65e5\u540e\u5206\u6790\u3001\u51b3\u7b56\u5b9d\u8d35\u7684\u8d44\u6e90\u3002</p> <p>GA\u63d0\u4f9b\u4e86\u8bb8\u591a\u6570\u636e\u7684\u7ef4\u5ea6\u4f9b\u7528\u6237\u6784\u5efa\u81ea\u5df1\u7684\u5206\u6790\u62a5\u8868\uff0cGA\u7684\u4fa7\u8fb9\u680f\u662f\u6309\u7167\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\u7684\uff1a</p> <ul> <li>\u4e3b\u9875\uff1aGoogle\u9884\u8bbe\u7684\u91cd\u8981\u6307\u6807</li> <li>\u81ea\u5b9a\u4e49\uff1a\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u62a5\u8868</li> <li>\u5b9e\u65f6\uff1a\u7ad9\u70b9\u5b9e\u65f6\u6570\u636e</li> <li>\u4eba\u7fa4\uff1a\u7528\u6237\u753b\u50cf\u6570\u636e</li> <li>\u83b7\u5ba2\uff1a\u6d41\u91cf\u753b\u50cf\u6570\u636e</li> <li>\u884c\u4e3a\uff1a\u7528\u6237\u5728\u7ad9\u70b9\u7684\u884c\u4e3a\u6570\u636e</li> <li>\u8f6c\u5316\uff1a\u76ee\u6807\u3001\u7535\u5546\u7684\u8f6c\u5316\u6570\u636e</li> </ul> <p>\u57fa\u672c\u4e0a\u5728\u6bcf\u4e00\u4e2a\u7c7b\u578b\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2a\u603b\u89c8\uff08Overview\uff09\u548c\u7ec6\u5206\u7c7b\u522b\u5c55\u793a\u5177\u4f53\u7684\u6570\u636e\u7ec6\u8282\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#31","title":"3.1 \u4e3b\u9875","text":"<p>\u4e3b\u9875\u91cc\u542b\u6709Google\u9884\u8bbe\u7684\u91cd\u8981\u6307\u6807\uff0c\u7528\u4e8e\u5feb\u901f\u9884\u89c8\u7ad9\u70b9\u7684\u603b\u4f53\u8868\u73b0\u60c5\u51b5\uff0c\u5982\u7528\u6237\u91cf\u3001\u5404\u83b7\u5ba2\u6e20\u9053\u8868\u73b0\u3001\u7528\u6237\u5730\u57df\u5206\u5e03\u3001\u6d4f\u89c8\u65f6\u95f4\u3001\u70b9\u51fb\u6700\u591a\u7684\u9875\u9762\u3001\u8bbe\u5907\u7c7b\u578b\u7b49\u3002\u540c\u65f6Google\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5206\u6790\u667a\u80fd\u7684\u6a21\u5757\uff0c\u80fd\u591f\u81ea\u9002\u5e94\u5730\u603b\u7ed3\u6d1e\u89c1\u3002</p> \u4e3b\u9875 GA\u5206\u6790\u667a\u80fd","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#32","title":"3.2 \u4eba\u7fa4","text":"<p>\u8fd9\u4e2a\u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u7528\u6237\u753b\u50cf\uff0c\u5982\u65b0\u8001\u7528\u6237\u3001\u5730\u57df\u5206\u5e03\u3001\u4f1a\u8bdd\u8868\u73b0\u3001\u8bbe\u5907\u7c7b\u578b\u3001\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\u7b49\u4fe1\u606f\u3002\u8fd9\u4e9b\u4fe1\u606f\u6709\u5229\u4e8e\u4f60\u7406\u89e3\u7ad9\u70b9\u7528\u6237\u7684\u6574\u4f53\u60c5\u51b5\uff0c\u5728\u4fa7\u8fb9\u7684\u6807\u7b7e\u4e2d\u6709\u7c92\u5ea6\u66f4\u7ec6\u7684\u4fe1\u606f\u4f9b\u67e5\u770b\u548c\u5206\u6790\u3002</p> \u4eba\u7fa4\u753b\u50cf","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#33","title":"3.3 \u83b7\u5ba2","text":"<p>\u8be5\u677f\u5757\u4e3b\u8981\u4ecb\u7ecd\u6d41\u91cf\u6765\u6e90\u5982\u81ea\u7136\u6d41\u91cf\u3001\u793e\u4ea4\u5a92\u4f53\u5f15\u6d41\u3001\u76f4\u63a5\u70b9\u51fb\u8fdb\u5165\u548c\u63a8\u8350\u6d41\u91cf\uff0c\u53ca\u6bcf\u4e2a\u6e20\u9053\u7684\u6d41\u91cf\u8868\u73b0\uff0c\u8fd9\u4e9b\u4fe1\u606f\u6709\u52a9\u4e8e\u8861\u91cf\u5404\u4e2a\u6e20\u9053\u6d41\u91cf\u8f6c\u5316\u6548\u679c\u4ee5\u53ca\u5236\u5b9a\u5404\u4e2a\u6e20\u9053\u7684\u5ba3\u4f20\u83b7\u5ba2\u7b56\u7565\u3002\u4f8b\u5982BulletTech\u7684\u535a\u5ba2\u90e8\u7f72\u5728GitHub\u4e0a\uff0c\u800cGitHub Pages\u7684\u641c\u7d22\u5f15\u64ce\u4f18\u5316\u5dee\u5f3a\u4eba\u610f\uff0c\u6240\u4ee5\u5728\u81ea\u7136\u6d41\u91cf\u83b7\u53d6\u65b9\u9762\u4e0d\u5360\u4f18\u52bf\uff0c\u4e3b\u8981\u7684\u6d41\u91cf\u6765\u6e90\u4e8e\u5728\u5404\u4e2a\u793e\u4ea4\u7f51\u7edc\u5e73\u53f0\u70b9\u51fb\u539f\u6587\u94fe\u63a5\u8df3\u8f6c\u5230\u7f51\u9875\u3002</p> \u83b7\u5ba2","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#34","title":"3.4 \u7528\u6237\u884c\u4e3a","text":"<p>\u7528\u6237\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u4e8e\u5404\u4e2a\u9875\u9762\u7684\u70b9\u51fb\u6570\u3001\u505c\u7559\u65f6\u95f4\u3001\u9875\u9762\u6765\u53bb\u5411\u3001\u8df3\u51fa\u7387\u7b49\u4fe1\u606f\u90fd\u80fd\u5728\u8fd9\u4e2a\u6a21\u5757\u4e2d\u67e5\u770b\uff0c\u8fd9\u4e9b\u4fe1\u606f\u80fd\u591f\u5e2e\u52a9\u4f60\u5206\u6790\u7528\u6237\u5bf9\u5185\u5bb9\u7684\u504f\u597d\uff0c\u8fd9\u6837\u80fd\u66f4\u6709\u9488\u5bf9\u6027\u5730\u8f93\u51fa\u5185\u5bb9\u3002</p> \u7528\u6237\u884c\u4e3a","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#35","title":"3.5 \u81ea\u5b9a\u4e49\u62a5\u8868","text":"<p>\u4e0a\u8ff0\u62a5\u8868\u80fd\u5728\u4e0d\u540c\u7684\u7ef4\u5ea6\u63d0\u4f9b\u6d1e\u89c1\uff0c\u540c\u65f6GA\u4e5f\u63d0\u4f9b\u4e86\u9009\u9879\u4ee5\u4fbf\u66f4\u4e3a\u7075\u6d3b\u5730\u6784\u5efa\u81ea\u5df1\u7684\u6570\u636e\u6307\u6807\u7cfb\u7edf\uff0c\u901a\u8fc7\u81ea\u5b9a\u4e49\u62a5\u8868\uff0c\u80fd\u9009\u62e9\u5404\u79cd\u57fa\u7840\u6570\u636e\uff0c\u5e76\u5c06\u5b83\u4eec\u7ec4\u6210\u9002\u5408\u81ea\u5df1\u9879\u76ee\u7684\u4e13\u5c5e\u62a5\u8868\u3002\u540c\u65f6\uff0cGA\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793e\u533a\u5206\u4eab\u81ea\u5df1\u521b\u5efa\u7684\u6570\u636e\u4eea\u8868\u76d8\uff0c\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u53c2\u8003\u4ed6\u4eba\u5206\u4eab\u7684\u4f18\u79c0\u62a5\u8868\u6a21\u677f\u3002</p> \u81ea\u5b9a\u4e49\u6570\u636e\u4eea\u8868\u76d8","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#_1","title":"\u603b\u7ed3","text":"<p>GA\u5bf9\u4e8e\u7f51\u7ad9\u50cf\u662f\u9ed1\u591c\u91cc\u7684\u4e00\u76cf\u660e\u706f\uff0c\u80fd\u591f\u5e2e\u52a9\u7ad9\u70b9\u5efa\u8bbe\u8005\u66f4\u597d\u5730\u4e86\u89e3\u7528\u6237\u3001\u8f85\u52a9\u51b3\u7b56\u3002\u540c\u65f6\uff0cGoogle\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u5217\u8bfe\u7a0b\uff0c\u540c\u65f6\u8fd8\u63d0\u4f9b\u4e86\u5206\u6790\u8d44\u8d28\u8ba4\u8bc1\uff0c\u80fd\u591f\u5e2e\u52a9\u4f60\u66f4\u52a0\u7cfb\u7edf\u5730\u5b66\u4e60GA\uff0cGA\u8fd8\u652f\u6301\u5bf9\u79fb\u52a8\u5e94\u7528\u8fdb\u884c\u5206\u6790\uff0c\u53ef\u8c13\u662f\u5f3a\u5927\u7684\u591a\u9762\u624b\uff01</p> <p>\u5e0c\u671b\u4ee5\u4e0a\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u8ba8\u8bba\uff01</p>","tags":["analytics"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/","title":"SnowFlake\u67b6\u6784\u6982\u89c8","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-09-11\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#1","title":"1 \u524d\u8a00","text":"<p>SnowFlake\u4f5c\u4e3a\u8fd1\u5e74\u6765\u5341\u5206\u706b\u7206\u7684\u6570\u636e\u4ed3\u5e93\u5e94\u7528\u83b7\u5f97\u4e86\u8bb8\u591a\u7528\u6237\u548c\u6295\u8d44\u4eba\u7684\u9752\u7750\uff0c\u672c\u4eba\u65e5\u5e38\u5de5\u4f5c\u4e2d\u4e5f\u7ecf\u5e38\u4f7f\u7528SnowFlake\u505a\u5206\u6790\uff0c\u6240\u4ee5\u5bf9\u5176\u80cc\u540e\u7684\u8fd0\u884c\u673a\u5236\u505a\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u4eca\u5929\u548c\u5927\u5bb6\u804a\u804aSnowFlake\u7684\u4e3b\u8981\u67b6\u6784\u548c\u5de5\u4f5c\u539f\u7406\u3002</p> SnowFlake\u80a1\u4ef7","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#2-snowflake","title":"2 SnowFlake\u4e3b\u8981\u7279\u6027","text":"<ul> <li>\u5b89\u5168\u6027\u548c\u6570\u636e\u4fdd\u62a4\uff1aSnowFlake\u652f\u6301\u591a\u79cd\u9a8c\u8bc1\u65b9\u5f0f\uff0c\u5982Multi-Factor Authentication (MFA)\uff0cFederal Authentication\uff0cSingle Sign-on (SSO)\u548cOAuth\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u90fd\u7531TLS\u4fdd\u62a4.</li> <li>\u652f\u6301\u6807\u51c6\u7684SQL\u548c\u8bb8\u591a\u6269\u5c55SQL\u7684\u7279\u6027\uff0c\u5176\u5bf9\u7edd\u5927\u591a\u6570SQL\u7684\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff08Data Definition Language\uff09\u548c\u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff08Data Manipulation Language\uff09\u90fd\u652f\u6301\uff0c\u56e0\u6b64\u505a\u6570\u636e\u5206\u6790\u65f6\u57fa\u672c\u4e0d\u7528\u62c5\u5fc3\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002</li> <li>SnowFlake\u652f\u6301\u8f6f\u4ef6\u5ba2\u6237\u7aef\u8fdb\u884c\u8fde\u63a5\uff0c\u540c\u65f6\u4e5f\u4e3a\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u63d0\u4f9b\u4e86\u63a5\u53e3\u5982Python connector\uff0cSpark connector\uff0c Node.js driver\uff0c .NET driver\u7b49\u3002</li> <li>\u4fbf\u6377\u7684\u5206\u4eab\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5206\u4eab\u6570\u636e\u548c\u67e5\u8be2\u8bed\u53e5\u7ed9\u5176\u4ed6\u7684\u7528\u6237\u3002</li> </ul>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#3-snowflake","title":"3 SnowFlake\u67b6\u6784","text":"<p>SnowFlake\u7684\u67b6\u6784\u878d\u5408\u4e86Shared-Disk\u548cShared-Nothing\u67b6\u6784\u4ee5\u7efc\u5408\u4e24\u8005\u7684\u4f18\u52bf\uff0c\u4e0b\u9762\u662f\u8fd9\u4e24\u79cd\u67b6\u6784\u7684\u793a\u610f\uff1a</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#31-shared-disk","title":"3.1 Shared-Disk\u67b6\u6784\u793a\u610f","text":"<p>\u5e38\u7528\u4e8e\u4f20\u7edf\u7684\u6570\u636e\u5e93\u4e2d\uff0c\u5b83\u62e5\u6709\u4e00\u4e2a\u96c6\u7fa4\u91cc\u6240\u6709\u8282\u70b9\u90fd\u80fd\u8bbf\u95ee\u7684\u5b58\u50a8\u5c42\uff0c\u96c6\u7fa4\u4e2d\u7684\u8ba1\u7b97\u8282\u70b9\u6ca1\u6709\u81ea\u5df1\u7684\u5b58\u50a8\uff0c\u5b83\u4eec\u90fd\u901a\u8fc7\u8bbf\u95ee\u4e2d\u592e\u5b58\u50a8\u5c42\u6765\u83b7\u53d6\u6570\u636e\u5e76\u8fdb\u884c\u5904\u7406\u3002\u901a\u8fc7\u96c6\u7fa4\u63a7\u5236\u8f6f\u4ef6\u6765\u76d1\u63a7\u548c\u7ba1\u7406\u6570\u636e\u7684\u5904\u7406\uff0c\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u90fd\u5728\u540c\u4e00\u4efd\u6570\u636e\u4e0a\u5b8c\u6210\uff0c\u56e0\u6b64\u6240\u6709\u8282\u70b9\u83b7\u53d6\u7684\u6570\u636e\u90fd\u76f8\u540c\u3002\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u8282\u70b9\u540c\u65f6\u66f4\u65b0\u4e00\u4efd\u6570\u636e\u662f\u7edd\u5bf9\u7981\u6b62\u7684\u3002</p> <p>\u8fd9\u79cd\u67b6\u6784\u4e0d\u5229\u4e8e\u6027\u80fd\u7684\u53d1\u6325\uff0c\u5e76\u4e14\u7f3a\u4e4f\u6269\u5c55\u6027\u3002\u7ecf\u5e38\u9700\u8981\u505a\u6570\u636e\u66f4\u65b0\u7684\u5e94\u7528\u4e0d\u592a\u9002\u7528\u4e8e\u8fd9\u7c7b\u67b6\u6784\uff0c\u56e0\u4e3aShared-Disk\u7684\u9501\u673a\u5236\u4f1a\u5bf9\u5176\u63a3\u8098\u3002</p> Shared-Disk\u67b6\u6784","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#32-shared-nothing","title":"3.2 Shared-Nothing\u67b6\u6784\u793a\u610f","text":"<p>\u987e\u540d\u601d\u4e49\uff0cShared-Nothing\u67b6\u6784\u91cc\uff0c\u96c6\u7fa4\u7684\u8282\u70b9\u90fd\u6709\u81ea\u5df1\u5355\u72ec\u7684\u8ba1\u7b97\u8d44\u6e90\u548c\u5b58\u50a8\u7a7a\u95f4\uff0c\u5176\u4f18\u52bf\u662f\u6570\u636e\u53ef\u4ee5\u5206\u533a\u5b58\u50a8\u5728\u5404\u4e2a\u8282\u70b9\u4e2d\u3002\u5f53\u9700\u8981\u5904\u7406\u7528\u6237\u8bf7\u6c42\u65f6\uff0c\u8def\u7531\u4f1a\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u5408\u9002\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u8ba1\u7b97\uff0c\u5f53\u6709\u8ba1\u7b97\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u5904\u7406\u7684\u8fdb\u7a0b\u80fd\u88ab\u5176\u4ed6\u7684\u8282\u70b9\u63a5\u7ba1\uff0c\u4fdd\u8bc1\u7528\u6237\u8bf7\u6c42\u80fd\u88ab\u7a33\u5b9a\u3001\u6b63\u786e\u5730\u5904\u7406\u3002\u8fd9\u79cd\u67b6\u6784\u5f88\u9002\u5408\u4e8e\u6570\u636e\u8bfb\u53d6\u91cf\u5f88\u5927\u7684\u5e94\u7528\uff0c\u6bd4\u5982\u6570\u636e\u4ed3\u5e93\u3002</p> Shared-Nothing\u67b6\u6784","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#33-snowflake","title":"3.3 SnowFlake\u7684\u67b6\u6784","text":"<p>SnowFlake\u5219\u91c7\u7528\u4e863\u4e2a\u4e0d\u540c\u7684\u5c42\u6765\u6784\u5efa\u5e94\u7528\uff1a<code>\u5b58\u50a8\u5c42</code>\u3001<code>\u8ba1\u7b97\u5c42</code>\u548c<code>\u4e91\u670d\u52a1\u5c42</code>\uff0c\u5176\u793a\u610f\u56fe\u5982\u4e0b\uff1a</p> SnowFlake\u67b6\u6784 <p><code>\u5b58\u50a8\u5c42</code>\u8d1f\u8d23\u5c06\u6570\u636e\u4f18\u5316\u3001\u538b\u7f29\u5e76\u5b58\u5728\u591a\u4e2a\u5fae\u5c0f\u7684\u7247\u533a\u4e2d\u3002\u6570\u636e\u4ee5\u884c\u5217\u7684\u683c\u5f0f\u5b58\u50a8\uff0c\u5e76\u4e14\u4ee5\u7c7b\u4f3c\u4e8eShared-Disk\u7684\u65b9\u5f0f\u8fdb\u884c\u7ba1\u7406\u3002\u8ba1\u7b97\u8282\u70b9\u901a\u8fc7\u8fde\u63a5\u5b58\u50a8\u5c42\u6765\u83b7\u53d6\u6570\u636e\u8fdb\u884c\u67e5\u8be2\u8ba1\u7b97\uff0c\u5b58\u50a8\u5c42\u72ec\u7acb\u4e8e\u5176\u4ed6\u8d44\u6e90\uff0cSnowFlake\u90e8\u7f72\u5728\u4e91\u4e0a\uff0c\u56e0\u6b64\u5176\u8d85\u5927\u578b\u7684\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\u80fd\u4fdd\u8bc1\u9ad8\u6027\u80fd\u3001\u7a33\u5b9a\u6027\u3001\u53ef\u7528\u6027\u3001\u5bb9\u91cf\u548c\u53ef\u6269\u5c55\u6027\u3002</p> <p><code>\u8ba1\u7b97\u5c42</code>\u4f7f\u7528\u865a\u62df\u4ed3\u5e93\uff08Virtual Warehouse\uff0c\u4f9d\u6258\u4e8e\u865a\u62df\u673a\uff09\u8fd0\u884c\u67e5\u8be2\u8bed\u53e5\uff0c\u800c\u8ba1\u7b97\u5c42\u548c\u5b58\u50a8\u5c42\u5728\u8bbe\u8ba1\u4e0a\u662f\u5206\u79bb\u7684\uff0c\u5728\u8fd9\u4e4b\u95f4\uff0cSnowFlake\u5b9e\u73b0\u4e86\u667a\u80fd\u7684\u7f13\u5b58\u673a\u5236\u4fdd\u8bc1\u8d44\u6e90\u5229\u7528\u7684\u6700\u4f18\u5316\u548c\u51cf\u5c11\u8ba1\u7b97\u5c42\u548c\u5b58\u50a8\u5c42\u4e0d\u5fc5\u8981\u7684\u4ea4\u4e92\u3002\u865a\u62df\u4ed3\u5e93\u6709\u5927\u5c0f\u4e4b\u5206\uff0c\u53ef\u4ee5\u521b\u5efa\u591a\u4e2a\u865a\u62df\u4ed3\u5e93\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u6027\u80fd\u9700\u6c42\u7684\u8bf7\u6c42\uff0c\u5e76\u4e14\u865a\u62df\u4ed3\u5e93\u662f\u5404\u81ea\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u8ba1\u7b97\u8d44\u6e90\u5e76\u4e0d\u5171\u4eab\u3002\u8fd9\u6837\u8bbe\u8ba1\u7684\u4f18\u70b9\u6709\uff1a</p> <ul> <li>\u53ef\u4ee5\u968f\u65f6\u521b\u5efa\u6216\u8005\u5220\u9664\u865a\u62df\u4ed3\u5e93\uff0c\u4e5f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728\u4e0d\u5f71\u54cd\u67e5\u8be2\u8bed\u53e5\u8ba1\u7b97\u7684\u524d\u63d0\u4e0b\u6269\u5c55\u865a\u62df\u4ed3\u5e93\u7684\u8ba1\u7b97\u8d44\u6e90\u3002</li> <li>\u865a\u62df\u4ed3\u5e93\u53ef\u88ab\u65b9\u4fbf\u5730\u505c\u7528\u6216\u8005\u542f\u7528\uff0c\u9002\u7528\u4e8e\u957f\u65f6\u95f4\u6ca1\u6709\u67e5\u8be2\u6216\u8005\u505c\u7528\u4e00\u6bb5\u65f6\u95f4\u540e\u9700\u91cd\u65b0\u53c2\u4e0e\u67e5\u8be2</li> <li>\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u5730\u81ea\u52a8\u66f4\u6539\u865a\u62df\u4ed3\u5e93\u7684\u96c6\u7fa4\u5927\u5c0f</li> </ul> <p><code>\u4e91\u670d\u52a1\u5c42</code>\u8d1f\u8d23\u7528\u6237\u4fe1\u606f\u9a8c\u8bc1\u3001\u96c6\u7fa4\u7ba1\u7406\u3001\u5b89\u5168\u4e0e\u52a0\u5bc6\u3001\u6570\u636e\u7684\u5143\u6570\u636e\u7ba1\u7406\u3001\u67e5\u8be2\u8bed\u53e5\u4f18\u5316\u7b49\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u90fd\u7531\u8ba1\u7b97\u8282\u70b9\u5b8c\u6210\u3002\u5e38\u89c1\u7684\u5904\u7406\u5185\u5bb9\u793a\u4f8b\u5305\u62ec\uff1a</p> <ul> <li>\u7528\u6237\u767b\u5f55</li> <li>\u67e5\u8be2\u8bed\u53e5\u63d0\u4ea4\u540e\uff0c\u9996\u5148\u4f1a\u7ecf\u8fc7\u4e91\u670d\u52a1\u5c42\u7684\u4f18\u5316\u5668\uff0c\u7136\u540e\u518d\u4f20\u5165\u8ba1\u7b97\u5c42\u8fdb\u884c\u5904\u7406</li> <li>\u4f18\u5316\u67e5\u8be2\u3001\u8fc7\u6ee4\u6570\u636e\u6240\u9700\u7684\u5143\u6570\u636e\u4e5f\u5b58\u50a8\u5728\u8fd9\u4e00\u5c42</li> </ul> <p>SnowFlake\u7684\u4e09\u5c42\u67b6\u6784\u90fd\u80fd\u591f\u72ec\u7acb\u5730\u8fdb\u884c\u6269\u5c55\uff0c\u4f46SnowFlake\u53ea\u5bf9\u5b58\u50a8\u5c42\u548c\u8ba1\u7b97\u5c42\u8fdb\u884c\u6536\u8d39\uff0c\u56e0\u4e3a\u670d\u52a1\u5c42\u5728\u8ba1\u7b97\u8282\u70b9\u4e2d\u8fdb\u884c\u5904\u7406\u3002\u5355\u72ec\u6269\u5c55\u7684\u4f18\u52bf\u663e\u800c\u6613\u89c1\uff0c\u9700\u8981\u66f4\u591a\u6570\u636e\u5373\u53ef\u5355\u72ec\u6269\u5c55\u5b58\u50a8\u5c42\uff0c\u9700\u8981\u66f4\u5f3a\u7684\u8ba1\u7b97\u6027\u80fd\uff0c\u5219\u53ea\u9700\u8981\u5355\u72ec\u6269\u5c55\u8ba1\u7b97\u5c42\u3002\u8be6\u89c1SnowFlake\u7684\u5b98\u65b9\u67b6\u6784\u5bfc\u89c8\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#4","title":"4 \u603b\u7ed3","text":"<p>\u4e86\u89e3SnowFlake\u67b6\u6784\u4e4b\u540e\uff0c\u76f8\u4fe1\u4f60\u80fd\u66f4\u597d\u5730\u7406\u89e3\u4e3a\u4ec0\u4e48\u5982\u6b64\u591a\u7684\u4f01\u4e1a\u9009\u62e9SnowFlake\uff0c\u5176\u4f9d\u6258\u4e8e\u4e91\u7684\u67b6\u6784\u4e3a\u5f88\u591a\u4f01\u4e1a\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u5b89\u5168\u3001\u7a33\u5b9a\u3001\u5212\u7b97\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u5e08\uff0c\u4eb2\u8eab\u4f53\u9a8c\u4e0b\u6765\u53d1\u73b0SnowFlake\u4e5f\u7684\u786e\u6bd4\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4ed3\u5e93\u66f4\u597d\u7528\u3002</p> <p>\u5173\u4e8eSQL\u7684\u5b9e\u64cd\u7ecf\u9a8c\uff0c\u8bf7\u67e5\u770b\u5f80\u671f\u7684SQL\u5c0f\u8d34\u58eb\uff1a\u6570\u636e\u4ed3\u5e93N\u5144\u5f1f \u548cSQL\u4e0d\u5b8c\u5168\u5b9e\u8df5\u6307\u5357\u3002\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/","title":"SnowFlake\u6743\u9650\u6982\u89c8","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-11\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#1","title":"1 \u524d\u8a00","text":"<p>\u200b\u5728\u6570\u636e\u5e93\u4e2d\u6b63\u786e\u7ba1\u7406\u5bf9\u8c61\uff08\u5982\u6570\u636e\u5e93\u3001\u8868\u7b49\uff09\u7684\u6743\u9650\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5374\u53c8\u5e38\u88ab\u4eba\u5ffd\u89c6\uff0c\u5f80\u5f80\u6d89\u53ca\u5230\u6743\u9650\u95ee\u9898\u3001\u78b0\u5230\u9ebb\u70e6\u65f6\uff0c\u624d\u4f1a\u540e\u6094\u5f53\u65f6\u6ca1\u6709\u8ba4\u771f\u5bf9\u5f85\u6743\u9650\u7ba1\u7406\u3002\u56e0\u6b64\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ee5\u975e\u5e38\u706b\u7206\u7684SnowFlake\u6570\u636e\u4ed3\u5e93\u4e3a\u4f8b\uff0c\u7b80\u660e\u627c\u8981\u5730\u8bb2\u89e3\u6743\u9650\u7ba1\u7406\u7684\u91cd\u8981\u6982\u5ff5\u548c\u5e38\u7528\u547d\u4ee4\u3002\u5efa\u8bae\u70b9\u8d5e\u6536\u85cf\uff0c\u65e5\u540e\u56de\u987e\u4f7f\u7528\uff01</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#2-snowflake","title":"2 SnowFlake\u6743\u9650\u63a7\u5236\u6846\u67b6","text":"<p>SnowFlake\u6709\u4e24\u79cd\u6743\u9650\u63a7\u5236\u6a21\u578b\uff1a</p> <ul> <li>Discretionary Access Control (DAC)\uff0c\u81ea\u4e3b\u8bbf\u95ee\u63a7\u5236\uff1a\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff08Object\uff09\u6709\u4e00\u4e2a\u6240\u6709\u8005\uff08Owner\uff09\uff0c\u6240\u6709\u8005\u80fd\u6388\u4e88\u4ed6\u4eba\u4e0d\u540c\u7684\u6743\u9650\u3002</li> <li>Role-based Access Control (RBAC)\uff0c\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff1a\u8bbf\u95ee\u6743\u9650\u7531\u89d2\u8272\uff08Role\uff09\u63a7\u5236\uff0c\u89d2\u8272\u53ef\u4ee5\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u7528\u6237\uff08User\uff09\u3002</li> </ul> <p>\u5728SnowFlake\u91cc\uff0c\u6709\u4e00\u4e9b\u91cd\u8981\u7684\u6982\u5ff5\u5e2e\u52a9\u7406\u89e3\u6743\u9650\u63a7\u5236\uff1a</p> <ul> <li>Securable object\uff0c\u5b89\u5168\u5bf9\u8c61\uff0c\u4e00\u4e2a\u53ef\u4ee5\u88ab\u6388\u4e88\u7279\u5b9a\u6743\u9650\u7684\u5b9e\u4f53\uff0c\u5982\u679c\u6ca1\u6709\u6743\u9650\uff0c\u5219\u5bf9\u8c61\u7684\u8bbf\u95ee\u4f1a\u88ab\u7981\u6b62\u3002</li> <li>Role\uff0c\u89d2\u8272\uff0c\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u6743\u9650\u7684\u5b9e\u4f53\uff0c\u89d2\u8272\u53c8\u53ef\u4ee5\u88ab\u5206\u914d\u7ed9\u7528\u6237\uff0c\u540c\u65f6\u89d2\u8272\u4e5f\u53ef\u4ee5\u5206\u914d\u7ed9\u5176\u4ed6\u89d2\u8272\uff0c\u6784\u6210\u4e0d\u540c\u7684\u89d2\u8272\u9636\u5c42\u3002</li> <li>Privilege\uff0c\u6743\u9650\uff1a\u9488\u5bf9\u5bf9\u8c61\u7684\u8bbf\u95ee\u63a7\u5236\u6c34\u5e73\u3002\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u63a7\u5236\u65b9\u4f4d\u6c34\u5e73\u7684\u7c92\u5ea6\u3002</li> <li>User\uff0c\u7528\u6237\uff0c\u80fd\u591f\u88abSnowFlake\u8bc6\u522b\u7684\u8eab\u4efd\uff0c\u53ef\u4ee5\u662f\u4eba\u6216\u8005\u7a0b\u5e8f\u3002</li> </ul> <p>\u5728SnowFlake\u91cc\uff0c\u5173\u4e8e\u5b89\u5168\u5bf9\u8c61\u7684\u6743\u9650\u63a7\u5236\u5982\u4e0b\u56fe\u6240\u793a\u3002\u8bbf\u95ee\u5b89\u5168\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u5411\u89d2\u8272\u8d4b\u4e88\u6743\u9650\uff0c\u5373\u662f\u628a\u6743\u9650\u5206\u914d\u7ed9\u4e86\u5176\u4ed6\u7684\u89d2\u8272\u6216\u8005\u5bf9\u8c61\u3002\u53e6\u5916\uff0c\u6bcf\u4e2a\u5b89\u5168\u5bf9\u8c61\u6709\u4e00\u4e2a\u6240\u6709\u8005\uff0c\u5176\u53ef\u4ee5\u6388\u4e88\u5176\u4ed6\u89d2\u8272\u6743\u9650\u3002</p> SnowFlake\u6743\u9650\u63a7\u5236\u793a\u610f\u56fe","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#3","title":"3 \u5e38\u7528\u7684\u547d\u4ee4","text":"<p>\u57fa\u672c\u4e86\u89e3SnowFlake\u5982\u4f55\u7ba1\u7406\u6743\u9650\u540e\uff0c\u4f7f\u7528\u547d\u4ee4\u53bb\u64cd\u4f5c\u548c\u67e5\u770b\u547d\u4ee4\u5c31\u66f4\u52a0\u5f97\u5fc3\u5e94\u624b\u4e86\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#31","title":"3.1 \u6388\u4e88\u6743\u9650","text":"<pre><code>GRANT {  { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n| { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | DATABASE | INTEGRATION } &lt;object_name&gt;\n| { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA &lt;schema_name&gt; | ALL SCHEMAS IN DATABASE &lt;db_name&gt; }\n| { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE &lt;db_name&gt; }\n| { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { &lt;object_type&gt; &lt;object_name&gt; | ALL &lt;object_type_plural&gt; IN { DATABASE &lt;db_name&gt; | SCHEMA &lt;schema_name&gt; } }\n| { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE &lt;object_type_plural&gt; IN { DATABASE &lt;db_name&gt; | SCHEMA &lt;schema_name&gt; }\n}\nTO [ ROLE ] &lt;role_name&gt; [ WITH GRANT OPTION ]\n</code></pre> <p>\u5176\u4e2d\uff1a</p> <pre><code>globalPrivileges ::=\n{ { CREATE { ROLE | USER | WAREHOUSE | DATABASE | INTEGRATION } } | APPLY MASKING POLICY | APPLY ROW ACCESS POLICY | APPLY TAG | EXECUTE TASK | MANAGE GRANTS | MONITOR { EXECUTION | USAGE }  } [ , ... ]\n\naccountObjectPrivileges ::=\n-- For USER\n{ MONITOR } [ , ... ]\n-- For RESOURCE MONITOR\n{ MODIFY | MONITOR } [ , ... ]\n-- For WAREHOUSE\n{ MODIFY | MONITOR | USAGE | OPERATE } [ , ... ]\n-- For DATABASE\n{ MODIFY | MONITOR | USAGE | CREATE SCHEMA | IMPORTED PRIVILEGES } [ , ... ]\n-- For INTEGRATION\n{ USAGE | USE_ANY_ROLE } [ , ... ]\n\nschemaPrivileges ::=\n{ MODIFY | MONITOR | USAGE | CREATE { TABLE | EXTERNAL TABLE | VIEW | MATERIALIZED VIEW | MASKING POLICY | ROW ACCESS POLICY | TAG | SEQUENCE | FUNCTION | PROCEDURE | FILE FORMAT | STAGE | PIPE | STREAM | TASK } } [ , ... ]\n\nschemaObjectPrivileges ::=\n-- For TABLE\n{ SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES } [ , ... ]\n-- For VIEW\n{ SELECT | REFERENCES } [ , ... ]\n-- For MATERIALIZED VIEW\nSELECT\n-- For SEQUENCE, FUNCTION (UDF or external function), PROCEDURE, or FILE FORMAT\nUSAGE\n-- For internal STAGE\nREAD [ , WRITE ]\n-- For external STAGE\nUSAGE\n-- For PIPE\n{ MONITOR | OPERATE } [ , ... ]\n-- For STREAM\nSELECT\n-- For TASK\n{ MONITOR | OPERATE } [ , ... ]\n-- For MASKING POLICY\nAPPLY\n-- For ROW ACCESS POLICY\nAPPLY\n-- For TAG\nAPPLY\n</code></pre> <p>\u5176\u6240\u6709\u6743\u9650\u7684\u5217\u8868\u53ef\u4ee5\u67e5\u770bSnowFlake\u7684API\u6587\u6863\u3002</p> <p>\u5fc5\u586b\u53c2\u6570\u6709<code>object_name</code>\uff0c<code>object_type</code>\uff0c<code>object_type_plural</code>\u548c<code>role_name</code>\uff0c\u8fd9\u4e9b\u90fd\u5f88\u597d\u7406\u89e3\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\u8fd8\u53ef\u52a0\u4e0a\u53ef\u9009\u53c2\u6570:</p> <ul> <li><code>ON FUTURE</code>\uff1a\u6307\u5b9a\u6743\u9650\u88ab\u6388\u4e88\u5728\u65b0\u7684\u6570\u636e\u5e93\u6216\u6a21\u5f0f\uff08schema)\u4e2d\u7684\u8868\u6216\u8005\u89c6\u56fe\uff0c\u800c\u975e\u73b0\u6709\u7684\u5bf9\u8c61\u3002</li> <li><code>WITH GRANT OPTION</code>\uff1a\u6307\u5b9a\u662f\u5426\u5141\u8bb8\u63a5\u53d7\u6743\u9650\u7684\u89d2\u8272\u6388\u4e88\u6743\u9650\u7ed9\u5176\u4ed6\u89d2\u8272\u3002</li> </ul> <p>\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code># \u901a\u8fc7with grant option\u6307\u5b9a\u89d2\u8272\u7ee7\u7eed\u8d4b\u4e88\u6743\u9650\ngrant operate on warehouse report_wh to role analyst with grant option;\n\n# \u6743\u9650\u6388\u4e88\u4e00\u4e2a\u6a21\u5f0f\uff08schema)\u4e2d\u6240\u6709\u7684\u8868\u7ed9role analyst\ngrant select on all tables in schema mydb.myschema to role analyst;\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#32","title":"3.2 \u67e5\u770b\u6743\u9650","text":"<p>\u901a\u8fc7\u4f7f\u7528<code>SHOW GRANTS</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5bf9\u8c61\u7684\u6743\u9650\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>SHOW GRANTS ON ACCOUNT\n\nSHOW GRANTS ON &lt;object_type&gt; &lt;object_name&gt;\n\nSHOW GRANTS TO { ROLE &lt;role_name&gt; | USER &lt;user_name&gt; | SHARE &lt;share_name&gt; }\n\nSHOW GRANTS OF ROLE &lt;role_name&gt;\n\nSHOW GRANTS OF SHARE &lt;share_name&gt;\n\nSHOW FUTURE GRANTS IN SCHEMA { &lt;schema_name&gt; }\n\nSHOW FUTURE GRANTS IN DATABASE { &lt;database_name&gt; }\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#33","title":"3.3 \u79fb\u9664\u6743\u9650","text":"<p>\u79fb\u9664\u6743\u9650\u7684\u547d\u4ee4\u4f7f\u7528<code>REVOKE</code>\u5173\u952e\u5b57\uff1a</p> <pre><code>REVOKE [ GRANT OPTION FOR ]\n    {\n       { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n     | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { RESOURCE MONITOR | WAREHOUSE | DATABASE | INTEGRATION } &lt;object_name&gt;\n     | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA &lt;schema_name&gt; | ALL SCHEMAS IN DATABASE &lt;db_name&gt; }\n     | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE &lt;db_name&gt; }\n     | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { &lt;object_type&gt; &lt;object_name&gt; | ALL &lt;object_type_plural&gt; IN SCHEMA &lt;schema_name&gt; }\n     | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE &lt;object_type_plural&gt; IN { DATABASE &lt;db_name&gt; | SCHEMA &lt;schema_name&gt; }\n    }\n  FROM [ ROLE ] &lt;role_name&gt; [ RESTRICT | CASCADE ]\n</code></pre> <p>\u5fc5\u9009\u53c2\u6570\u548cGRANT\u547d\u4ee4\u7684\u76f8\u540c\uff0c\u800c\u53ef\u9009\u53c2\u6570\u6709\uff1a</p> <ul> <li><code>GRANT OPTION FOR</code>\uff1a\u5982\u6307\u5b9a\uff0c\u5c06\u4e0d\u5141\u8bb8\u63a5\u6536\u8005\u518d\u6388\u4e88\u6743\u9650\u7ed9\u5176\u4ed6\u89d2\u8272\u3002</li> <li><code>ON FUTURE</code>\uff1a\u5982\u6307\u5b9a\uff0c\u5c06\u53ea\u4f1a\u79fb\u9664\u65b0\u5bf9\u8c61\u7684\u6743\u9650\uff0c\u6388\u4e88\u5728\u73b0\u6709\u5bf9\u8c61\u7684\u6743\u9650\u4ecd\u7136\u6709\u6548\u3002</li> <li><code>RESTRICT | CASCADE</code>\uff1a\u53d6\u51b3\u4e8e\u6743\u9650\u662f\u5426\u88ab\u6388\u4e88\u4e86\u5176\u4ed6\u7684\u89d2\u8272\uff0c\u82e5\u4f7f\u7528CASCADE\uff0c\u5219\u6240\u6709\u4f9d\u8d56\u7684grant\u90fd\u4f1a\u88ab\u79fb\u9664\uff0c\u4f46\u4f7f\u7528RESTRICT\u65f6\uff0c\u5982\u679c\u6743\u9650\u88ab\u6388\u4e88\u4e86\u5176\u4ed6\u7684\u89d2\u8272\uff0c\u5219REVOKE\u547d\u4ee4\u4e0d\u6267\u884c\u3002</li> </ul>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#4","title":"4 \u603b\u7ed3","text":"<p>\u4e0a\u8ff0\u5185\u5bb9\u6982\u62ec\u4e86\u5728SnowFlake\u91cc\u7ba1\u7406\u6743\u9650\u7684\u91cd\u8981\u5185\u5bb9\uff0c\u5efa\u8bae\u7ed3\u5408\u5b9e\u9645\u5de5\u4f5c\u6b63\u786e\u521b\u5efa\u4e0d\u540c\u7684\u89d2\u8272\u3001\u5e76\u5206\u914d\u7ed9\u89d2\u8272\u6b63\u786e\u7684\u6743\u9650\u3002\u200b\u5fc5\u8981\u65f6\uff0c\u8bf7\u8fdb\u4e00\u6b65\u67e5\u9605SnowFlake\u7684\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["analytics","database"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/","title":"\u73a9\u8f6cGitHub","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-10-14\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#1","title":"1 \u5f15\u8a00","text":"<p>GitHub\u7684\u4e3b\u8981\u529f\u80fd\u662f\u8fdb\u884c\u4ee3\u7801\u7684\u7248\u672c\u7ba1\u7406\u4e0e\u534f\u4f5c\u3002\u6211\u4eec\u5728\u300a\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub\u300b\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u8be6\u7ec6\u5730\u4ecb\u7ecd\u4e86GitHub\u80fd\u505a\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528GitHub\u3002 \u5176\u5b9eGitHub\u4e5f\u53ef\u4ee5\u5f88\u6709\u8da3\uff0c\u672c\u6587\u5c06\u4ece\u4e0d\u4e00\u6837\u7684\u89c6\u89d2\uff0c\u804a\u804aGitHub\u6709\u54ea\u4e9b\u597d\u73a9\u7684\u529f\u80fd\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#2-action","title":"2 Action","text":"<p>GitHub Action\u63d0\u4f9b\u4e86\u4e00\u5957\u81ea\u52a8\u5316\u6267\u884c\u811a\u672c\u547d\u4ee4\u7684\u670d\u52a1\u3002\u6211\u4eec\u56e2\u961f\u4f7f\u7528GitHub Pages\u6765\u5efa\u7acb\u6211\u4eec\u7684\u535a\u5ba2\u3002\u5f53\u6211\u4eec\u5728GitHub\u4e0a\u66f4\u65b0\u6211\u4eec\u7684\u6587\u7ae0\u65f6\uff0c\u5f88\u81ea\u7136\u7684\uff0c\u6211\u4eec\u60f3\u8ba9\u8fd9\u4e00\u6539\u52a8\u81ea\u52a8\u5730\u66f4\u65b0\u5230\u535a\u5ba2\u5f53\u4e2d\u3002 \u5982\u679c\u6ca1\u6709GitHub Action\u8fd9\u4e00\u81ea\u52a8\u5316\u90e8\u7f72\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6bcf\u6b21\u624b\u52a8\u5730\u8dd1\u4e00\u4e9b\u811a\u672c\u5c06\u6587\u7ae0\u90e8\u7f72\u5230\u535a\u5ba2\u4e0a\u9762\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8fd9\u4e00\u8def\u5f84\u4e0b(BulletTech/.github/workflows)\uff0c\u521b\u5efaci.yml\u6587\u4ef6\uff0c\u5c06\u6211\u4eec\u9700\u8981\u7684\u547d\u4ee4\u5199\u5165\u5176\u4e2d\u3002\u5f53\u6709\u6539\u52a8push\u5230main\u5206\u652f\u65f6\uff0cGitHub Action\u5c31\u53ef\u4ee5\u81ea\u52a8\u5730\u5e2e\u6211\u4eec\u8dd1\u8bbe\u5b9a\u597d\u7684\u811a\u672c\u3002  </p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: python ./docs/Scripts/Update_reading_time.py\n      - run: pip install mkdocs-material\n      - run: pip install --upgrade mkdocs-material\n      - run: pip install mkdocs-redirects\n      - run: pip install mkdocs-minify-plugin\n      - run: pip install mkdocs-macros-plugin\n      - run: pip install mkdocs-git-revision-date-localized-plugin\n      - run: git pull\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>\u9664\u4e86\u81ea\u5df1\u521b\u5efa\u7684\u5de5\u4f5c\u6d41(workflow)\uff0cGitHub\u8fd8\u6709\u5f88\u4e30\u5bcc\u7684workflow\u793e\u533a\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684workflow\uff0c\u5b9e\u73b0\u4f60\u7684\u5404\u79cd\u9700\u6c42\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#3-projects","title":"3 Projects","text":"<p>GitHub\u81ea\u5e26\u4e86\u9879\u76ee\u7ba1\u7406\u7684\u529f\u80fd\u3002 \u9996\u5148\uff0c\u6211\u4eec\u70b9\u51fb\u9879\u76ee\u770b\u677f(Projects)\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521b\u5efa\u7684\u9879\u76ee\u3002</p> <p>\u70b9\u51fb\u9879\u76ee\uff0c\u53ef\u4ee5\u770b\u5230\u770b\u677f\u72b6\u7684\u7ed3\u6784\uff0c\u6709To do\uff0cIn progress\uff0cDone\u7b49\u591a\u4e2aColumn\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u81ea\u5df1\u65b0\u5efaColumn\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fbColumn\u4e2d\u7684\u52a0\u53f7\u521b\u5efanote\u3002\u5728\u56fe\u793a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728To do\u8fd9\u4e00Column\u4e2d\u7684note\u662f\u4e00\u4e2aissue\u3002\u90a3\u4e48\uff0c\u8fd9\u662f\u600e\u4e48\u5b9e\u73b0\u7684\u5462\uff1f   \u6211\u4eec\u5728\u521b\u5efaissue\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u6ce8\u610f\u5230\u53f3\u8fb9\u680f\u6709Projects\u8fd9\u4e00\u9879\u3002\u5982\u679c\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684Column\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2aissue\u4f5c\u4e3acard\u63d2\u5165\u8fd9\u4e00Column\u3002  </p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u770b\u677f\u4e2d\uff0c\u901a\u8fc7add card\u5c06issue\u76f4\u63a5\u52a0\u5165\u3002 \u6709\u4e86\u9879\u76ee\u770b\u677f\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u8fdb\u884c\u9879\u76ee\u7ba1\u7406\u4e0e\u56e2\u961f\u534f\u4f5c\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#4-wiki","title":"4 Wiki","text":"<p>GitHub\u7684Wiki\u5141\u8bb8\u6211\u4eec\u4ee5markdown\u6587\u672c\u7684\u65b9\u5f0f\u6784\u5efa\u5c5e\u4e8e\u8fd9\u4e2arepo\u7684Wiki\uff0c\u8ba9\u7528\u6237\u4e0d\u6b62\u4e8eREADME\u6587\u6863\uff0c\u66f4\u597d\u5730\u4e86\u89e3repo\u5185\u5bb9\u3002\u4f18\u79c0\u7684\u793a\u4f8b\u5982Pytorch\u7684Wiki</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#5-security","title":"5 Security","text":"<p>GitHub Security\u63d0\u4f9b\u4e86\u5173\u4e8e\u4ee3\u7801\u5b89\u5168\u65b9\u9762\u7684\u5de5\u5177\u3002  </p> <p>\u5982\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaSecurity.md\u5411\u7528\u6237\u63d0\u793a\u4ee3\u7801\u4e2d\u7684\u67d0\u4e9b\u6f5c\u5728\u95ee\u9898\uff0c\u4f18\u79c0\u7684\u6848\u4f8b\u53ef\u4ee5\u53c2\u8003Tensorflow Repo\u4e2d\u7684Security\u6587\u4ef6\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7GitHub Action\u8bbe\u5b9a\u4ee3\u7801\u5b89\u5168\u626b\u63cf\u7684\u5de5\u4f5c\u6d41\u3002\u5b83\u53ef\u4ee5\u81ea\u52a8\u5730\u626b\u63cf\u5206\u652f\u548cpull request\u4e2d\u4ee3\u7801\u7684\u8bed\u6cd5\u9519\u8bef\u3001\u4e0d\u5b89\u5168\u7684\u8f93\u5165(\u663e\u793a\u7684\u7528\u6237\u8f93\u5165)\u7b49\u7b49\u3002  </p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#6-insights","title":"6 Insights","text":"<p>GitHub\u7684Insights\u4ee5\u76f4\u89c2\u7684\u56fe\u8868\u7684\u5f62\u5f0f\u7ed9\u51fa\u4e86repo\u6574\u4f53\u7684\u4ee5\u53ca\u4ee3\u7801\u8d21\u732e\u8005\u4e2a\u4eba\u7684commit\uff0cpull request\u7b49\u884c\u4e3a\u7684\u4fe1\u606f\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-10-14-play-with-github/#7","title":"7 \u5c0f\u7ed3","text":"<p>GitHub\u4e5f\u53ef\u4ee5\u5f88\u6709\u8da3\uff0c\u9664\u4e86\u63d0\u4f9b\u7684\u5e38\u89c4\u529f\u80fd\u4e4b\u5916\uff0cGitHub\u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u8da3\u3001\u5b9e\u7528\u7684\u529f\u80fd\u3002\u5b83\u4eec\u4e0d\u4ec5\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u751f\u4ea7\u529b\uff0c\u4e5f\u4e30\u5bcc\u4e86GitHub\u7684\u5185\u5bb9\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/","title":"\u7528GitHub\u505a\u4e00\u4efd\u7cbe\u7f8e\u7684\u5728\u7ebf\u7b80\u5386","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-11-01\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#1","title":"1 \u524d\u8a00","text":"<p>\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u4e86\u5f88\u591aGitHub\u7684\u9177\u70ab\u529f\u80fd\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u8fd9\u7bc7\u6587\u7ae0\u7684\u5185\u5bb9\uff0c\u5efa\u8bae\u9605\u8bfb\u4e4b\u524d\u7684\u6587\u7ae0\u56de\u987e\u57fa\u672c\u7684GitHub\u64cd\u4f5c\u77e5\u8bc6\uff1a</p> <ul> <li>\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub</li> <li>Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8</li> <li>\u73a9\u8f6cGitHub</li> </ul> <p>\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528GitHub\u5236\u4f5c\u5728\u7ebf\u7b80\u5386\u3001\u6253\u9020\u4e00\u4e2a\u6240\u6709\u4eba\u90fd\u80fd\u8bbf\u95ee\u7684\u7f51\u7ad9\u5c55\u793a\u81ea\u5df1\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#2","title":"2 \u5236\u4f5c\u5728\u7ebf\u7b80\u5386","text":"","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#21","title":"2.1 \u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801","text":"<p>\u672c\u793a\u4f8b\u91c7\u7528Bootstrap\u7684\u6a21\u677f\uff0c\u8bf7\u524d\u5f80BulletTech\u7684\u5b98\u65b9GitHub\u8d26\u53f7\u91cc\u627e\u5230Resume\u4ed3\u5e93\u4e0b\u8f7d\u793a\u4f8b\u4ee3\u7801\u3002</p> BulletTech\u7684Resume\u4ed3\u5e93 <p>\u9700\u8981\u4fee\u6539\u7684\u4ee3\u7801\u5b58\u5728<code>/home/index.html</code>\u91cc:</p> \u4e3b\u9875\u6e90\u4ee3\u7801","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#22","title":"2.2 \u4fee\u6539\u793a\u4f8b\u4ee3\u7801","text":"<p>\u4e0b\u8f7d\u4e86\u6e90\u7801\u4e4b\u540e\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u53cc\u51fb<code>index.html</code>\u8fdb\u884c\u5b9e\u65f6\u9884\u89c8\uff0c\u5bf9\u7167\u7740\u7f51\u9875\u5185\u5bb9\u4f7f\u7528<code>ctrl/command + F</code>\u67e5\u627e\u7136\u540e\u4fee\u6539\u5bf9\u5e94\u7684\u5143\u7d20\uff0c\u7f51\u9875\u5237\u65b0\u540e\u5219\u4f1a\u663e\u793a\u6700\u65b0\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539CSS\uff08<code>home/css/styles.css</code>\uff09\u548c\u5176\u4ed6\u90e8\u4ef6\u8fdb\u884c\u6df1\u5ea6\u5b9a\u5236\u3002</p> \u672c\u5730\u9884\u89c8\u7b80\u5386","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#23","title":"2.3 \u4e0a\u7ebf\u7b80\u5386","text":"<p>\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684GitHub\u4ed3\u5e93\uff0c\u5e76\u5c06\u6539\u5b8c\u540e\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u81ea\u5df1\u7684\u4ed3\u5e93\u4e2d\u3002\u5728\u7f51\u9875\u4e0a\u67e5\u770b\u786e\u4fdd\u5b8c\u6574\u7684\u4ee3\u7801\u88ab\u4e0a\u4f20\u3002\u7136\u540e\u6fc0\u6d3bGitHub Pages\u529f\u80fd\uff0c\u9ed8\u8ba4\u72b6\u6001\u4e0b\uff0c\u9009\u62e9master/main\u5206\u652f\u4e0b\u7684root\u5373\u53ef\uff0c\u70b9\u51fb\u5bf9\u5e94\u7684URL\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4f60\u81ea\u5df1\u7684\u7b80\u5386\u4e86\u3002</p> \u8bbe\u7f6eGitHub Pages","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#3","title":"3 \u603b\u7ed3","text":"<p>GitHub\u7684\u4f7f\u7528\u5c0f\u6280\u5de7\u53c8\u589e\u52a0\u4e86\u4e00\u4e2a\uff0c\u6b22\u8fce\u53c2\u7167\u4e0a\u8ff0\u6b65\u9aa4\u5236\u4f5c\u81ea\u5df1\u7684\u5728\u7ebf\u7b80\u5386\u3002BulletTech\u7684\u793a\u4f8b\u7b80\u5386\u53ef\u4ee5\u8bbf\u95ee<code>https://bullettech2021.github.io/Resume/home/</code>\u8fdb\u884c\u67e5\u770b\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/","title":"Docker \u521d\u4f53\u9a8c","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-11-05\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#1","title":"1. \u524d\u8a00","text":"<p>\u56e0\u4e3a\u4f5c\u8005\u4e4b\u524d\u5e76\u6ca1\u6709\u592a\u591a\u4ea7\u54c1\u5f00\u53d1\u548c\u90e8\u7f72\u7684\u7ecf\u9a8c\uff0c\u6240\u4ee5\u521d\u5165\u56e2\u961f\u65f6\uff0c\u786e\u5b9e\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u5b66\u4e60Docker\u6982\u5ff5\u548c\u5e94\u7528\u3002\u90a3\u4e48\u4eca\u5929\u5c31\u8ddf\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u5982\u4f55\u4ece\u96f6\u5230\u4e00\u5730\u6253\u5f00Docker\u7684\u5927\u95e8\u5427\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#2-docker","title":"2. Docker\u7684\u57fa\u672c\u6982\u5ff5","text":"<p>Docker\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u8f6f\u4ef6\uff0c\u7a0b\u5e8f\u5458\u7528Python\u3001Java\u7b49\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u80fd\u591f\u8bbe\u8ba1\u51fa\u4ea7\u54c1\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u5b83\u5462\uff1f\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u5f00\u53d1\u65f6\u9700\u8981\u5f88\u591a\u7279\u5b9a\u7684\u5305\u548c\u914d\u7f6e\u6587\u4ef6\u53bb\u642d\u5efa\u73af\u5883\uff0c\u5982\u679c\u7528\u6237\u60f3\u8981\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u73af\u5883\u53bb\u8c03\u7528\u5b83\uff0c\u662f\u4e00\u4ef6\u5f88\u8d39\u65f6\u8d39\u529b\u7684\u4e8b\u60c5\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019Docker\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002Docker\u53ef\u4ee5\u5e2e\u52a9\u6253\u5305\u597d\u6211\u4eec\u4ea7\u54c1\u9700\u8981\u7684\u4f9d\u8d56\u5305\u548c\u73af\u5883\uff0c\u7528\u6237\u53ef\u4ee5\u66f4\u52a0\u76f4\u63a5\u4e14\u8f7b\u677e\u5730\u4f7f\u7528\u6211\u4eec\u7684\u4ea7\u54c1\u3002</p> <p>\u8c08\u5230Docker\uff0c\u81ea\u7136\u79bb\u4e0d\u5f00\u955c\u50cf(image)\uff0c\u5bb9\u5668\uff08container\uff09\uff0c\u955c\u50cf\u4ed3\u5e93\uff08repository\uff09\u8fd9\u4e09\u4e2a\u6982\u5ff5\u3002\u8fd9\u91cc\u6211\u5c06\u7528\u4e00\u4e2a\u8d34\u8fd1\u73b0\u5b9e\u7684\u6bd4\u55bb\uff0c\u5e2e\u52a9\u4f60\u66f4\u5f62\u8c61\u5730\u7406\u89e3\u8fd9\u4e09\u4e2a\u6982\u5ff5\u3002</p> <p>\u8bd5\u60f3\u6211\u4eec\u7684\u4ea7\u54c1\u662f\u4e00\u8f86\u5c0f\u6c7d\u8f66\uff0c\u5982\u679c\u6709\u6d88\u8d39\u8005\u6b23\u8d4f\u8fd9\u6b3e\u8f66\u7684\u8f66\u578b\uff0c\u6ca1\u6709Docker\u4ed6\u53ef\u80fd\u9700\u8981\u4ece\u96f6\u4ef6\u5f00\u59cb\u590d\u523b\u8fd9\u8f86\u8f66\u7684\u5236\u4f5c\u8fc7\u7a0b\u3002</p> <p>\u955c\u50cf(image)\u5c31\u597d\u6bd4\u8fd9\u4e2a\u6c7d\u8f66\u7684\u96cf\u5f62\uff0c\u662f\u8fd9\u53f0\u8f66\u521a\u751f\u4ea7\u51fa\u6765\u7684\u6837\u5b50\uff0c\u53ea\u6709\u8f6e\u80ce\uff0c\u53d1\u52a8\u673a\uff0c\u65b9\u5411\u76d8\u7b49\u57fa\u7840\u914d\u4ef6\u3002\u955c\u50cf\u5728\u8fd9\u91cc\u51b3\u5b9a\u7740\u4e00\u6b3e\u8f66\u7684\u6c7d\u8f66\u578b\u53f7\u3002</p> <p>\u5bb9\u5668\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u6b3e\u8f66\u578b\u5728\u5e02\u573a\u4e2d\u4e3a\u4e86\u8fce\u5408\u4e0d\u540c\u53e3\u5473\u7684\u800c\u8bbe\u8ba1\u51fa\u7684\u4e0d\u540c\u7248\u672c\uff0c\u5982\u8c6a\u534e\u7248\uff0c\u7b80\u6613\u7248\u7b49\uff0c\u751a\u81f3\u4e70\u5bb6\u5728\u8d2d\u4e70\u4e4b\u540e\u6839\u636e\u81ea\u5df1\u7684\u559c\u597d\u88c5\u9970\u5b83\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bb9\u5668\u662f\u57fa\u4e8e\u955c\u50cf\u7684\u8fd0\u7528\u5b9e\u4f8b\u3002\u5bb9\u5668\u548c\u5bb9\u5668\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4f46\u6709\u53ef\u80fd\u662f\u6765\u6e90\u4e8e\u540c\u4e00\u4e2a\u955c\u50cf\u3002\u901a\u8fc7\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\uff0c\u8fd0\u884c\uff0c\u505c\u6b62\u548c\u5220\u9664\u5bb9\u5668\u3002</p> <p>\u955c\u50cf\u4ed3\u5e93\uff0c\u5c31\u50cf\u662f\u505c\u8f66\u573a\uff0c\u5b58\u653e\u7740\u5404\u79cd\u5404\u6837\u4e0d\u540c\u7684\u8f66\u3002\u8fd9\u4e2a\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u8fd9\u4e2a\u4ed3\u5e93\u6982\u5ff5\u5f88\u50cfGithub Repo\uff0c\u662f\u5b58\u653e\u6240\u6709\u955c\u50cf\u7684\u5730\u65b9\u3002</p> <p>\u6784\u5efa\u955c\u50cf\u7684\u6700\u5e38\u89c1\u7684\u65b9\u5f0f\u4e4b\u4e00\uff0c\u662f\u521b\u5efaDockerfile\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5c31\u76f8\u5f53\u4e8e\u8bbe\u8ba1\u6c7d\u8f66\u7684\u84dd\u56fe\u3002Dockerfile\u9700\u8981\u548c\u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\u540c\u65f6\u5b58\u653e\u5728\u6839\u8def\u5f84\u4e0b\u9762\uff0c\u65b9\u4fbf\u8fd0\u884c\u65f6\u627e\u5230\u6240\u6709\u4f60\u9700\u8981\u7684\u6587\u4ef6\u3002</p> Dockerfile \u5b58\u653e\u89c4\u5219","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#3-docker","title":"3. Docker\u7684\u90e8\u7f72\u6d41\u7a0b","text":"","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#31-dockerfile","title":"3.1 \u521b\u5efaDockerfile","text":"<p>\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bDockerfile\u7684\u7ec4\u6210\u5143\u7d20\uff1a <pre><code>FROM           &lt;code_version&gt;    # \u6307\u5b9a\u57fa\u7840\u955c\u50cf\nMAINTAINER     &lt;name&gt;            # \u6307\u660e\u955c\u50cf\u7684\u521b\u5efa\u8005\n# \u6307\u5b9a\u672c\u5730\u8def\u5f84\u5e76\u6dfb\u52a0\u6587\u4ef6\uff08\u672c\u5730\u6587\u4ef6\u7684\u6dfb\u52a0,\u5b98\u65b9\u66f4\u63a8\u8350COPY\uff09\nCOPY           &lt;/local/path/filename&gt;  RUN            &lt;command&gt;         # \u521b\u5efa\u955c\u50cf\u7684\u547d\u4ee4\n#\u6307\u5b9a\u8def\u5f84\u6dfb\u52a0\u6587\u4ef6 (ADD\u4e0d\u4ec5\u53ef\u4ee5\u89e3\u538b\u672c\u5730 tar file\uff0c\u8fd8\u53ef\u4ee5\u4eceURL\u4e2d\u62f7\u8d1d\u6587\u4ef6)\nADD            &lt;/path/filename&gt;  WORKDIR        &lt;absolute path dir&gt;   # \u6307\u5b9a\u955c\u50cf\u7684\u5de5\u4f5c\u76ee\u5f55\nEXPOSE         &lt;port&gt;            #\u6307\u5b9a\u4ea4\u4e92\u7aef\u53e3    \nCMD            &lt;e.g. python run main.py&gt;    # \u542f\u52a8\u955c\u50cf\u7684\u547d\u4ee4\n</code></pre></p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#32","title":"3.2 \u521b\u5efa\u955c\u50cf","text":"<p>\u8fd9\u91cc\u4ecb\u7ecd\u4e09\u79cd\u5e38\u7528\u7684\u521b\u5efa\u955c\u50cf\u7684\u65b9\u5f0f\uff1a</p> <pre><code># 1.\u57fa\u4e8e\u5f53\u524d\u8def\u5f84\u7684Dockerfile\u521b\u5efa\ndocker build .  # 2.\u57fa\u4e8egithub URL \u8def\u5f84\u5bfb\u627eDockerfile\u6765\u521b\u5efa\ndocker build github.com/creack/docker-firefox\n\n# 3.\u57fa\u4e8e\u672c\u5730Dockerfile\u521b\u5efa\ndocker build -t /path/to/Dockerfile .\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#33","title":"3.3 \u8fd0\u884c\u5bb9\u5668","text":"<p>\u5bb9\u5668\u5c31\u662f\u8fd0\u884c\u8d77\u6765\u7684\u955c\u50cf\uff0c\u901a\u8fc7\u67e5\u770b\u955c\u50cf\u9009\u62e9\u4f60\u60f3\u8981\u8fd0\u884c\u7684\u955c\u50cf\u5c31\u53ef\u4ee5\u542f\u52a8\u5bb9\u5668\u3002</p> <ul> <li> <p>\u540e\u53f0\u6a21\u5f0f\u8fd0\u884c<code>-d</code>\uff1a <pre><code>docker run --name mycontainer -d myimage:latest  </code></pre> \u4f7f\u7528docker\u955c\u50cfmyimage:latest\u4ee5\u540e\u53f0\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\u5e76\u547d\u540d\u4e3amycontainer\u3002</p> </li> <li> <p>\u6307\u5b9a\u7aef\u53e3\u8fd0\u884c<code>-p</code>\uff1a <pre><code>docker run -p 127.0.0.1:80:8000/tcp ubuntu bash\n</code></pre> \u7ed1\u5b9a\u5bb9\u56688080\u7aef\u53e3\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u5230\u672c\u673a127.0.0.1\u768480\u7aef\u53e3\u4e0a\u3002tcp\u4ee3\u8868\u7aef\u53e3\u534f\u8bae\uff0c\u8fdb\u5165ubuntu\u7cfb\u7edf\u4f7f\u7528bash\u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u3002</p> </li> <li> <p>\u5206\u914d\u865a\u62df\u7ec8\u7aef<code>-it</code>: <pre><code>docker run --name mycontainer -it myimage:latest\n</code></pre> <code>-it</code>\u8868\u793a\u8ba9Docker\u5206\u914d\u4e00\u4e2a\u865a\u62df\u7684\u7ec8\u7aef\u7ed9\u5bb9\u5668\u8fd0\u884c\u3002</p> </li> </ul> <p>\u5982\u679c\u4f60\u60f3\u8981\u66f4\u52a0\u8be6\u7ec6\u7684\u4e86\u89e3Docker run\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#34-docker","title":"3.4 Docker\u5176\u4ed6\u5e38\u7528\u547d\u4ee4","text":"<p>\u6700\u540e\uff0c\u9644\u4e0a\u5e38\u7528\u7684\u57fa\u672c\u64cd\u4f5c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u5730\u64cd\u4f5c\u548c\u63a8\u9001\u521b\u5efa\u597d\u7684\u955c\u50cf\u670d\u52a1\u3002</p> <pre><code>docker pull &lt;regsitry_path&gt; # \u4ece\u79c1\u6709\u6216\u516c\u5171\u4ed3\u5e93\u62c9\u53d6\u955c\u50cf\ndocker images # \u67e5\u770b\u955c\u50cf\ndocker ps # \u5217\u4e3e\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\ndocker ps -a | grep &lt;test&gt; #\u67e5\u770btest\u5bb9\u5668\u4fe1\u606f\ndocker stats #\u67e5\u770b\u6b63\u5728\u4f7f\u7528\u7684\u8fd0\u884c\u8d44\u6e90\ndocker container logs &lt;container_id&gt; # \u67e5\u770b\u65e5\u5fd7\ndocker stop &lt;container_id&gt; #\u505c\u6b62\u5bb9\u5668\ndocker start &lt;container_id&gt; #\u542f\u52a8stop\u7684\u5bb9\u5668\ndocker rm &lt;container_id&gt; #\u5220\u9664\u5bb9\u5668\ndocker push &lt;registry_path&gt;[image_version] #\u63a8\u9001\u955c\u50cf\u5230\u8fdc\u7aef\u4ed3\u5e93\ndocker image prune  #\u5220\u9664\u60ac\u7a7a\u955c\u50cf\ndocker container prune # \u6e05\u7406stopped\u5bb9\u5668\ndocker container prune --filter \"container id\" #\u4e0d\u6e05\u7406\u7279\u5b9a\u7684\u5bb9\u5668ID\ndocker rm -v $(docker ps -aq -f status=exited) #\u5220\u9664\u5df2\u9000\u51fa\u7684\u6240\u6709\u5bb9\u5668\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#4","title":"4. \u603b\u7ed3","text":"<p>\u770b\u4e0a\u53bb\u8fd9\u4e9b\u6982\u5ff5\u5f88\u62bd\u8c61\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u4ece\u672a\u63a5\u89e6\u8fc7\u8fd9\u65b9\u9762\u77e5\u8bc6\u7684\u4eba\u800c\u8a00\uff08\u6bd4\u5982\u4f5c\u8005\u672c\u4eba\uff09\u3002\u4f46\u5f53\u81ea\u5df1\u53cd\u590d\u9605\u8bfb\u601d\u8003\u52a0\u4e0a\u5b9e\u8df5\uff0c\u53d1\u73b0\u8fd9\u5957\u4e1c\u897f\u5e76\u6ca1\u6709\u591a\u590d\u6742\uff0c\u5b83\u53ea\u662f\u5e2e\u52a9\u4f60\u90e8\u7f72\u7f51\u9875\u7b49\u4ea7\u54c1\u7684\u5de5\u5177\u800c\u5df2\u3002\u4e0b\u671f\u6211\u4eec\u5c06\u5c55\u5f00\u8bf4\u8bf4\u5982\u4f55\u5728\u5bb9\u5668\u4e2d\u6301\u7eed\u5316\u5730\u7ba1\u7406\u6570\u636e\u3002</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u5206\u4eab\u53ef\u4ee5\u5728\u4f60\u63a2\u7d22Docker\u4e4b\u8def\u65f6\u6709\u6240\u5e2e\u52a9\uff0c\u6b22\u8fce\u5927\u5bb6\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/","title":"\u6559\u4f60\u6210\u529f\u5728Win10\u7cfb\u7edf\u4e2d\u8fd0\u884cDocker","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-11-13\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u4e0a\u6587Docker\u521d\u4f53\u9a8c\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86Docker\u7684\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u548c\u5e38\u7528\u547d\u4ee4\uff0c\u4f46\u56e0\u4e3aDocker\u662f\u5728Linux\u7cfb\u7edf\u4e0b\u521b\u5efa\u7684\u8d44\u6e90\u5206\u79bb\u673a\u5236\uff0c\u6240\u4ee5\u5b83\u65e0\u6cd5\u5728Windows\u7cfb\u7edf\u4e0b\u76f4\u63a5\u8fd0\u884c\u3002\u8fd9\u6b21\u6211\u4eec\u5c06\u75284\u5206\u949f\u7684\u65f6\u95f4\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u5728Win10\u7cfb\u7edf\u4e0b\u8fd0\u884cDocker\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#2-docker","title":"2 \u4e0b\u8f7dDocker","text":"<p>\u7528\u6237\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u7cfb\u7edf\u5728Docker\u5b98\u7f51\u9009\u62e9Mac\u6216Windows\uff0c\u56e0\u4e3aDocker\u53ef\u4ee5\u5728Mac\u7cfb\u7edf\u4e2d\u5b89\u88c5\u540e\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u5b89\u88c5\u5b8cDocker\uff0c\u5e76\u6ce8\u518c\u4e2a\u4eba\u8d26\u53f7\uff0c\u518d\u53cc\u51fb\u542f\u52a8\u5b83\uff0c\u4f60\u4f1a\u53d1\u73b0\u5e76\u4e0d\u50cf\u4f60\u60f3\u7684\u90a3\u4e48\u987a\u5229\u3002\u9519\u8bef\u4fe1\u606f\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p>  Docker\u542f\u52a8\u5931\u8d25  <p>\u8fd9\u662f\u56e0\u4e3aDocker\u65e0\u6cd5\u5728Windows\u7cfb\u7edf\u4e2d\u76f4\u63a5\u8fd0\u884c\uff0c\u800c\u9700\u8981\u521b\u5efa\u4e00\u4e2aWindows\u7cfb\u7edf\u4e2d\u7684Linux\u865a\u62df\u673a\uff08VM\uff09\u4e3aDocker\u7684\u6b63\u5e38\u8fd0\u884c\u642d\u5efa\u597d\u5e95\u5c42\u4f9d\u8d56\u3002\u867d\u7136\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86hyper-V\u548cWSL2\u4e24\u79cd\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662fWSL2\u662f\u57fa\u4e8ehpyer-V\u5728WSL1\u7684\u5347\u7ea7\u7248\uff0c\u5176\u529f\u80fd\uff0c\u5b89\u88c5\u65b9\u5f0f\u4e5f\u7b80\u5355\u65b9\u4fbf\uff0c\u56e0\u6b64\u4f5c\u8005\u5c31\u9009\u62e9\u4e86WSL2\u7684\u540e\u7aef\u65b9\u5f0f\u6765\u8fd0\u884cDocker\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#3-wsl2","title":"3 \u5b89\u88c5WSL2","text":"<p>WSL\uff0cWindows Subsystem for Linux\uff0c\u542b\u4e49\u5c31\u662f\u5728Windows\u7cfb\u7edf\u4e0bLinux\u7684\u5b50\u7cfb\u7edf\u3002\u53ea\u9700\u8981\u4e09\u6b65\u5c31\u53ef\u4ee5\u5728\u7cfb\u7edf\u4e2d\u4e3aDocker\u5b89\u88c5WSL2\u4e86\uff0c\u8bf7\u6ce8\u610f\u76ee\u524dWSL2\u652f\u6301\u5728Windows10 2004\u4ee5\u4e0a\u7684\u7248\u672c\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#31-wsl2","title":"3.1 \u5f00\u542fWSL2\u529f\u80fd","text":"<p>\u9996\u5148\uff0c\u6253\u5f00<code>Powershell</code>\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8fd0\u884c\u547d\u4ee4\u5148\u67e5\u770b\u7f51\u4e0a\u6240\u6709\u7684\u5b50\u7cfb\u7edf\uff0c \u518d\u9009\u62e9\u4f60\u60f3\u8981\u9009\u62e9\u7684\u7cfb\u7edf\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u9009\u62e9Ubuntu\u6765\u8fdb\u884c\u5b89\u88c5\u3002</p> <pre><code>## \u67e5\u770blist\nwsl --list --online\n## \u5b89\u88c5Linux distribution\nwsl --install -d Ubuntu\n</code></pre>  \u67e5\u770bWSL\u5217\u8868  <p>\u5b89\u88c5\u6210\u529f\u540e\uff0c\u7ed3\u679c\u8fd4\u56de\u4f1a\u8ba9\u4f60\u521b\u5efaUNIX\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\uff1a</p>  \u521b\u5efa\u7528\u6237\u540d\u548c\u5bc6\u7801  <p>\u7ec6\u5fc3\u7684\u4f60\u4f1a\u53d1\u73b0\u547d\u4ee4\u63d0\u793a\u7b26\u5de6\u4e0a\u65b9\u7684logo\u5df2\u7ecf\u53d8\u6210\u4e86Ubuntu\u7684\u4e86\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#32","title":"3.2 \u5b89\u88c5\u66f4\u65b0\u5305","text":"<p>\u5b89\u88c5\u6210\u529f\u540e\uff0c\u8fd8\u9700\u8981\u4e0b\u8f7dLinux\u5b89\u88c5\u66f4\u65b0\u5305\uff0c\u5177\u4f53\u64cd\u4f5c\u9700\u8981\u53c2\u8003Microsoft\u5b98\u65b9\u6587\u6863\u6839\u636e\u4f60\u81ea\u5df1\u7cfb\u7edf\u7684\u7248\u672c\u9009\u62e9\u5408\u9002\u7684\u66f4\u65b0\u5305\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#33","title":"3.3 \u8bbe\u7f6e\u9ed8\u8ba4\u7248\u672c","text":"<p>\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\uff0c\u8bbe\u7f6eWSL2\u4e3aLinux distribution\u7684\u9ed8\u8ba4\u7248\u672c\uff1a</p> <pre><code>wsl --set-default-version 2\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#34-wsl","title":"3.4 \u8bbe\u7f6eWSL\u914d\u7f6e\u6587\u4ef6","text":"<p>\u56e0\u4e3aWSL\u9ed8\u8ba4\u914d\u7f6e\u4f1a\u5360\u7528\u8ba1\u7b97\u673a\u9ad8\u8fbe80%\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u6700\u597d\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u6309\u4e0b<code>Windows + R</code>\uff0c\u641c\u7d22<code>%UserProfile%</code>\u6253\u5f00user\u7684\u8d44\u6e90\u7ba1\u7406\u6587\u4ef6\u8def\u5f84\uff0c\u521b\u5efa\u5e76\u81ea\u5b9a\u4e49<code>.wslconfig</code>\u6587\u6863\u3002\u7528\u8bb0\u4e8b\u672c\u6253\u5f00\u5e76\u8f93\u5165\u76f8\u5173\u53c2\u6570\u8fdb\u884c\u914d\u7f6e\uff1a</p> <pre><code>[wsl2]\n# \u8bbe\u7f6e\u5185\u5b58\u4e3a2G\uff0c\u4e3b\u8981\u662f\u670d\u52a1docker\nmemory=2GB\n# CPU \u6700\u5927\u5360\u7528\u4e2a\u6570\nprocessors=2\n# \u4e0d\u8bbe\u7f6eWSL2\u865a\u62df\u673a\u5206\u914d\u7684\u4ea4\u6362\u7a7a\u95f4\nswap=0\n# \u5141\u8bb8\u5c06WSL2\u7684\u7aef\u53e3\u8f6c\u53d1\u5230\u4e3b\u673a\nlocalhostForwarding=true\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#4-docker","title":"4 \u68c0\u67e5Docker\u8bbe\u7f6e","text":"<p>\u6210\u529f\u5b89\u88c5\u597dLinux distribution\u540e\uff0c\u8fd8\u9700\u8981\u5728Docker desktop\u4e2d\u8bbe\u7f6e\u4e00\u4e0b\u5173\u4e8eWSL2\u7684\u57fa\u672c\u53c2\u6570\u624d\u80fd\u786e\u4fddDocker\u7684\u6210\u529f\u8fd0\u884c\u3002</p> <p>\u9996\u5148\uff0c\u9700\u8981\u5728\u901a\u7528\u8bbe\u7f6e\u4e0b\uff0c\u52fe\u9009\u4f7f\u7528WSL2\u57fa\u7840\u7684\u5f15\u64ce\uff0c\u5982\u56fe\u6240\u793a\uff1a</p>  \u57fa\u4e8eWSL2\u5f15\u64ce <p>\u5176\u6b21\uff0c\u9700\u8981\u5728\u8d44\u6e90\u4e2d\u8bbe\u7f6eWSL\u6574\u5408\uff0c\u6b64\u64cd\u4f5c\u662f\u5e2e\u52a9\u4f60\u5728\u62e5\u6709\u591a\u4e2aWSL\u65f6\u53ef\u4ee5\u6574\u5408\u7ec4\u6210\u90e8\u5206\u7684\u3002</p>  \u8bbe\u7f6eWSL\u6574\u5408\u8d44\u6e90  <p>\u6700\u540e\uff0c\u91cd\u542fdocker desktop\uff0c\u4f60\u4f1a\u770b\u5230\u6210\u529f\u542f\u52a8\u7684\u754c\u9762\u3002</p>  \u6210\u529f\u754c\u9762","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#5","title":"5 \u603b\u7ed3","text":"<p>\u6709\u4e9b\u8f6f\u4ef6\u5728\u7cfb\u7edf\u4e2d\u4e3a\u4e86\u6210\u529f\u5730\u8fd0\u884c\uff0c\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u5148\u51b3\u6761\u4ef6\u3002\u4e0d\u7ba1\u662f\u53c2\u8003\u5177\u4f53\u7684\u5b98\u65b9\u6587\u6863\u8fd8\u662f\u641c\u7d22\u4e00\u4e9b\u907f\u96f7\u7684\u7ecf\u9a8c\u8d34\uff0c\u5b89\u88c5\u6210\u529f\u5e76\u4f7f\u7528\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u73af\u5883\u7684\u642d\u5efa\u662f\u4e00\u52b3\u6c38\u9038\u7684\uff0c\u5feb\u5c1d\u8bd5\u5728\u4f60\u7684Windows\u7cfb\u7edf\u4e2d\u8fd0\u884cDocker\u5427\uff01\u4e4b\u540e\u6211\u4eec\u8fd8\u4f1a\u6301\u7eed\u5206\u4eabDocker\u7684\u5b66\u4e60\u7ecf\u9a8c\uff0c\u656c\u8bf7\u671f\u5f85\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u80fd\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u6b22\u8fce\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/","title":"GitHub Action\u6982\u89c8","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-11-13\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#1","title":"1 \u524d\u8a00","text":"<p>\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u4e86\u5f88\u591aGitHub\u7684\u9177\u70ab\u529f\u80fd\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u8fd9\u7bc7\u6587\u7ae0\u7684\u5185\u5bb9\uff0c\u5efa\u8bae\u9605\u8bfb\u4e4b\u524d\u7684\u6587\u7ae0\u56de\u987e\u57fa\u672c\u7684GitHub\u64cd\u4f5c\u77e5\u8bc6\uff1a</p> <ul> <li>\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub</li> <li>Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8</li> <li>\u73a9\u8f6cGitHub</li> <li>\u7528GitHub\u505a\u4e00\u4efd\u7cbe\u7f8e\u7684\u5728\u7ebf\u7b80\u5386</li> </ul> <p>\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528GitHub Action\uff0c\u7b80\u5316\u91cd\u590d\u673a\u68b0\u7684\u5de5\u4f5c\uff0c\u4ee5\u5927\u5927\u63d0\u9ad8\u6548\u7387\u3001\u8282\u7701\u65f6\u95f4\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#2-github-action","title":"2 GitHub Action\u6982\u89c8","text":"<p>GitHub Action\u53ef\u4ee5\u81ea\u52a8\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u811a\u672c\u5b8c\u6210\u9884\u5148\u8bbe\u5b9a\u7684\u5de5\u4f5c\u3002\u7528\u6237\u9700\u8981\u8bbe\u7f6e\u89e6\u53d1\u6761\u4ef6\uff08\u4e8b\u4ef6\uff09\u53ca\u6761\u4ef6\u6ee1\u8db3\u65f6\u7684\u547d\u4ee4\uff0cGitHub\u5c31\u53ef\u4ee5\u81ea\u52a8\u5b8c\u6210\u9884\u8bbe\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5f53\u6709\u66f4\u65b0\u5408\u5e76\u5230master/main\u5206\u652f\u65f6\uff0c\u81ea\u52a8\u6267\u884c\u6d4b\u8bd5\u811a\u672c\u68c0\u67e5\u9519\u8bef\u3002\u4e0b\u56fe\u5c55\u793a\u4e86GitHub Action\u6267\u884c\u65f6\u7684\u7ec4\u4ef6\uff1a</p> GitHub Action\u7ec4\u4ef6\uff0c\u6765\u6e90\uff1aGitHub\u5b98\u7f51 <p>\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0cGitHub\u81ea\u52a8\u89e6\u53d1\u5de5\u4f5c\u6d41\u3002\u7136\u540e\u7a0b\u5e8f\u6309\u6b65\u9aa4\u6267\u884c\u3002</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#3-action","title":"3 \u521b\u5efaAction","text":"<p>GitHub Action\u4f7f\u7528YAML\u5b9a\u4e49\u89e6\u53d1\u7684\u4e8b\u4ef6\u3001\u5de5\u4f5c\u548c\u6b65\u9aa4\uff0c\u5de5\u4f5c\u6d41\u6587\u4ef6\u9700\u8981\u5b58\u653e\u5728\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\uff1a<code>.github/workflows</code>\u3002</p> <p>\u4ee5BulletTech\u535a\u5ba2\u7684\u6301\u7eed\u96c6\u6210\u5de5\u4f5c\u6d41\u4e3a\u4f8b\uff1a</p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: python ./docs/Scripts/Update_reading_time.py\n      - run: pip install mkdocs-material\n      - run: pip install mkdocs-redirects\n      - run: pip install mkdocs-minify-plugin\n      - run: pip install mkdocs-macros-plugin\n      - run: pip install mkdocs-git-revision-date-localized-plugin\n      - run: pip install --upgrade mkdocs-material\n      - run: pip install --upgrade mkdocs-redirects\n      - run: pip install --upgrade mkdocs-minify-plugin\n      - run: pip install --upgrade mkdocs-macros-plugin\n      - run: pip install --upgrade mkdocs-git-revision-date-localized-plugin   \n      - run: git pull\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>\u8981\u70b9\u5982\u4e0b\uff1a</p> <ul> <li><code>name</code>\u5b9a\u4e49\u4e86\u5de5\u4f5c\u6d41\u7684\u540d\u79f0\uff0c\u6b64\u5904\u4e3a\u6301\u7eed\u96c6\u6210\uff08Continous Integration, CI)\u3002</li> <li><code>on</code>\u4e3a\u89e6\u53d1\u5de5\u4f5c\u6d41\u7684\u4e8b\u4ef6\uff0c\u6b64\u5904\u5b9a\u4e49\u4e3a\u66f4\u65b0\u63a8\u9001\u5230main\u5206\u652f\u65f6\u9700\u8981\u6267\u884c\u547d\u4ee4\u3002</li> <li><code>jobs</code>\u91cc\u5b9a\u4e49\u4e86\u5de5\u4f5c\u4efb\u52a1\uff0cdeploy\u4e3a\u5de5\u4f5c\u7684\u540d\u79f0\uff0c\u5728GitHub\u7684Ubuntu Linux\u865a\u62df\u673a\u4e0a\u8fd0\u884c\u4e00\u7cfb\u5217\u6b65\u9aa4\u3002</li> <li><code>uses</code>\u540e\u63a5GitHub Action\u96c6\u5e02\u91cc\u7684action\u3002\u6b64\u5904\u4f7f\u7528\u4e86action\u6765check out\u4ed3\u5e93\u5e76\u5c06\u4ee3\u7801\u4e0b\u8f7d\u5230\u8fd0\u884c\u4ee3\u7801\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u540c\u65f6\u914d\u7f6ePython\u8fd0\u884c\u73af\u5883\u3002</li> <li><code>run</code>\u540e\u63a5\u8981\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6b64\u5904\u5b89\u88c5\u4e86\u4e00\u4e9b\u535a\u5ba2\u4f9d\u8d56\u7684Python\u5305\u5e76\u4e14\u8fd0\u884c\u90e8\u7f72\u547d\u4ee4\u3002</li> </ul>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#4-action","title":"4 \u67e5\u770bAction\u8fd0\u884c\u72b6\u6001","text":"<p>\u5728GitHub\u4ed3\u5e93\u7684Actions\u6807\u7b7e\u4e2d\uff0c\u53ef\u770b\u5230action\u8fd0\u884c\u72b6\u6001\uff1a</p> GitHub Action\u72b6\u6001 <p>\u53ef\u4ee5\u89c1\u5230BulletTech\u4f7f\u7528\u7684ci\u5de5\u4f5c\u6d41\uff0c\u70b9\u51fbruns\u53ef\u4ee5\u67e5\u770baction\u6bcf\u4e00\u6b65\u7684\u8fd0\u884c\u72b6\u6001\u3002</p> Action\u8fd0\u884c\u60c5\u51b5","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#5","title":"5 \u603b\u7ed3","text":"<p>\u4f7f\u7528GitHub Action\u81ea\u52a8\u5316\u4e86\u8bb8\u591a\u91cd\u590d\u673a\u68b0\u7684\u52b3\u52a8\uff0c\u8282\u7ea6\u51fa\u6765\u7684\u65f6\u95f4\u53ef\u7528\u4e8e\u66f4\u6709\u610f\u4e49\u7684\u4e8b\u60c5\uff0c\u66f4\u591a\u7684\u5185\u5bb9\u53ef\u81ea\u884c\u67e5\u770b\u4e0b\u5217\u53c2\u8003\u8d44\u6599\u5b9a\u5236\u9002\u5408\u81ea\u5df1\u7684\u5de5\u4f5c\u6d41\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/","title":"\u4f7f\u7528GitHub Action\u81ea\u52a8\u6784\u5efa\u548c\u63a8\u9001Docker\u955c\u50cf","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-11-20\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528GitHub Action\u81ea\u52a8\u63a8\u9001Docker\u955c\u50cf\u5230\u955c\u50cf\u4ed3\u5e93\uff0c\u5927\u5927\u7b80\u5316\u6784\u5efa\u955c\u50cf\u3001\u63a8\u9001\u955c\u50cf\u7684\u7e41\u7410\u6b65\u9aa4\uff01\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u4e86\u5f88\u591aGitHub\u7684\u9177\u70ab\u529f\u80fd\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u8fd9\u7bc7\u6587\u7ae0\u7684\u5185\u5bb9\uff0c\u5efa\u8bae\u9605\u8bfb\u4e4b\u524d\u7684\u6587\u7ae0\u56de\u987e\u57fa\u672c\u7684GitHub\u64cd\u4f5c\u77e5\u8bc6\uff0c\u7279\u522b\u662fGitHub Action\uff1a</p> <ul> <li>\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub</li> <li>Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8</li> <li>\u73a9\u8f6cGitHub</li> <li>\u7528GitHub\u505a\u4e00\u4efd\u7cbe\u7f8e\u7684\u5728\u7ebf\u7b80\u5386</li> <li>GitHub Action\u6982\u89c8</li> </ul> <p>\u540c\u65f6\uff0c\u5982\u679c\u9700\u8981\u7406\u89e3Docker\u7684\u77e5\u8bc6\uff0c\u53ef\u4ee5\u67e5\u770bTina\u8001\u5e08\u7684\u4f73\u4f5c\uff1a</p> <ul> <li>\u6559\u4f60\u6210\u529f\u5728Win10\u7cfb\u7edf\u4e2d\u8fd0\u884cDocker</li> <li>Docker \u521d\u4f53\u9a8c</li> </ul>","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#2","title":"2 \u914d\u7f6e\u955c\u50cf\u4ed3\u5e93","text":"<p>\u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u7684\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u4e3a\u4f8b\u505a\u6f14\u793a\uff0c\u5176\u4ed6\u7684\u955c\u50cf\u4ed3\u5e93\u539f\u7406\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u89e6\u7c7b\u65c1\u901a\u3002\u9996\u5148\u767b\u5f55\u963f\u91cc\u4e91\u955c\u50cf\u5bb9\u5668\u670d\u52a1\uff0c\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u521b\u5efa\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u4f5c\u4e3a\u955c\u50cf\u4ed3\u5e93\u7684\u5408\u96c6\uff0c\u53ef\u4ee5\u4ee5\u516c\u53f8\u6216\u7ec4\u7ec7\u547d\u540d\uff0c\u5982\u6211\u4eec\u4f7f\u7528<code>bullettech_services</code>\u3002</li> <li>\u521b\u5efa\u955c\u50cf\u4ed3\u5e93\uff08registry\uff09\u4f5c\u4e3a\u955c\u50cf\u7684\u5408\u96c6\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7248\u672c\u7684\u955c\u50cf\u5230\u4ed3\u5e93\u4e2d\u3002</li> </ul> \u955c\u50cf\u4ed3\u5e93","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#3-github-action","title":"3 \u914d\u7f6eGitHub Action","text":"","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#31","title":"3.1 \u914d\u7f6e\u5bc6\u7801","text":"<p>\u5728GitHub\u4ed3\u5e93\u91cc\u8bbe\u7f6e\u5bc6\u7801\uff0c\u7528\u4e8e\u767b\u5f55\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u3002\u53ef\u4ee5\u5728\u4ed3\u5e93\u8bbe\u7f6e\u91cc\u627e\u5230\u5bc6\u7801\uff0c\u7136\u540e\u5c06\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u5b58\u50a8\u8d77\u6765\u3002</p> \u5b58\u50a8\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u7684\u8d26\u53f7\u548c\u5bc6\u7801","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#32","title":"3.2 \u521b\u5efa\u5de5\u4f5c\u6d41","text":"<p>\u9996\u5148\u5728<code>.github/workflows</code>\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u6d41\uff0c\u4f8b\u5982<code>ci.yml</code>\uff0c\u7136\u540e\u6839\u636e\u6ce8\u91ca\u7406\u89e3\u547d\u4ee4\uff0c\u5e76\u6839\u636e\u9879\u76ee\u60c5\u51b5\u4fee\u6539\u3002</p> <pre><code>name: actions\n\non: [push, pull_request] # \u89e6\u53d1\u4e8b\u4ef6\n\njobs:\n  bt-product-release:\n    if: ${{ github.ref == 'refs/heads/main' }}  # \u68c0\u6d4bmain\u5206\u652f\u662f\u5426\u6709\u66f4\u65b0\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2 # pull\u4ee3\u7801\u5230\u8fd0\u884c\u670d\u52a1\u5668\u4e0a\n    - name: Login to Aliyun Container Registry (ACR)\n      uses: aliyun/acr-login@v1 # \u4f7f\u7528\u963f\u91cc\u4e91\u955c\u50cf\u670d\u52a1action\n      with:\n        login-server: registry.cn-shanghai.aliyuncs.com # \u52a1\u5fc5\u6b63\u786e\u586b\u5199\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u7684\u767b\u5f55\u5730\u5740\n        region-id: cn-shanghai # \u52a1\u5fc5\u6b63\u786e\u586b\u5199\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u7684\u767b\u5f55\u5730\u5740\n        username: \"${{ secrets.REGISTRY_USERNAME }}\" # \u5f15\u7528GitHub repo\u8bbe\u7f6e\u7684\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u7528\u6237\u540d\n        password: \"${{ secrets.REGISTRY_PASSWORD }}\" # \u5f15\u7528GitHub repo\u8bbe\u7f6e\u7684\u955c\u50cf\u5bb9\u5668\u670d\u52a1\u5bc6\u7801\n    - name: Build and Push Docker Image\n      env:\n        IMAGE_TAG: ${{ github.sha }} # \u7528\u4e8e\u6807\u8bb0\u5bb9\u5668\u7248\u672c\u53f7\n      run: |\n        docker build -t registry.cn-shanghai.aliyuncs.com/bullettech_services/app:$IMAGE_TAG .\n        docker push registry.cn-shanghai.aliyuncs.com/bullettech_services/app:$IMAGE_TAG\n</code></pre> <p>\u8fd9\u6837\u6bcf\u6b21\u5728main\u5206\u652f\u66f4\u65b0\u65f6\uff0cGitHub\u4f1a\u57fa\u4e8e\u672c\u6b21\u66f4\u65b0\u7684\u4ee3\u7801\u6784\u5efa\u955c\u50cf\u3001\u5e76\u5c06\u955c\u50cf\u63a8\u9001\u5230\u6307\u5b9a\u7684\u955c\u50cf\u4ed3\u5e93\uff08\u6ce8\u610f\u7248\u672c\uff09\uff1a</p> \u955c\u50cf","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#4","title":"4 \u603b\u7ed3","text":"<p>\u8fd9\u5957\u9ad8\u6548\u7684\u5de5\u4f5c\u6d41\u8282\u7ea6\u4e86\u8bb8\u591a\u65f6\u95f4\uff0c\u800c\u4e14\u907f\u514d\u4e86\u8bb8\u591a\u624b\u52a8\u64cd\u4f5c\u65f6\u6613\u53d1\u751f\u7684\u9519\u8bef\uff0cGitHub Action\u771f\u9999\u554a\uff01</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["docker","git"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/","title":"Docker\u4e4b\u6570\u636e\u7684\u53ef\u6301\u7eed\u5316","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-11-25\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#1","title":"1 \u524d\u8a00","text":"<p>\u5728Docker\u521d\u4f53\u9a8c\u4e00\u6587\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86Docker\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u4e4b\u540e\u6211\u4eec\u53c8\u5206\u4eab\u4e86\u5982\u4f55\u6559\u4f60\u6210\u529f\u5728Win10\u7cfb\u7edf\u4e2d\u8fd0\u884cdocker\u548c\u4f7f\u7528GitHub Action\u81ea\u52a8\u6784\u5efa\u548c\u63a8\u9001Docker\u955c\u50cf\uff0c\u5c1d\u8bd5\u8fc7\u7684\u670b\u53cb\u5e94\u8be5\u53ef\u4ee5\u5728Docker\u4e2d\u4e3a\u81ea\u5df1\u7684\u7a0b\u5e8f\u4ee3\u7801\u521b\u5efa\u955c\u50cf\uff0c\u8fd0\u884c\u5bb9\u5668\uff0c\u6216\u662f\u5728<code>Github Action</code>\u4e2d\u4f7f\u7528Docker\u7b49\u57fa\u672c\u64cd\u4f5c\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u8bf4\u8bf4\u5982\u4f55Docker\u4e2d\u6301\u7eed\u5316\u7ba1\u7406\u6570\u636e--\u6570\u636e\u5377(Volumes)\u7684\u4f7f\u7528\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#2","title":"2 \u7ba1\u7406\u6570\u636e\u7684\u5fc5\u8981\u6027","text":"<p>\u521d\u6b21\u4f53\u9a8cDocker\u7684\u4eba\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u6bcf\u5f53\u6211\u4eec\u91cd\u542f\u5bb9\u5668\u65f6\uff0c\u4e4b\u524d\u7684\u6570\u636e\u90fd\u4f1a\u4e22\u5931\uff0c\u53c8\u6216\u662f\u611f\u89c9\u6570\u636e\u5f88\u96be\u8f6c\u79fb\u3002\u8fd9\u4e9b\u90fd\u662f\u56e0\u4e3aDocker\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4f1a\u5c06\u6240\u6709\u7684\u6587\u4ef6\u90fd\u521b\u5efa\u5728\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u67d0\u4e9b\u53ef\u8bfb\u5bb9\u5668\u5c42\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u4e2a\u5bb9\u5668\u7684\u6570\u636e\u662f\u72ec\u7acb\u4e0d\u80fd\u5171\u4eab\u7684\uff0c\u4e3a\u4e86\u5b9e\u73b0\u6570\u636e\u5171\u4eab\u548c\u6570\u636e\u8fc1\u79fb\uff0c\u5c31\u9700\u8981\u6211\u4eec\u4f7f\u7528\u4e00\u4e9b\u65b9\u6cd5\u53ef\u6301\u7eed\u5316\u5730\u7ba1\u7406\u6570\u636e\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#3-volumes","title":"3 \u5173\u4e8eVolumes","text":"","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#31","title":"3.1 \u4f18\u52bf","text":"<p>Volumes\u662f\u4e00\u79cd\u7531Docker\u521b\u5efa\u5e76\u7ef4\u62a4\u7684\u6570\u636e\u7ba1\u7406\u673a\u5236\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5b83\u6700\u5927\u7684\u7279\u70b9\u662f\u5c06\u6587\u4ef6\u5b58\u653e\u5728Docker\u4e3b\u673a\u5185\uff0c\u662f\u4e0d\u5141\u8bb8\u5176\u4ed6\u7a0b\u5e8f\u7684\u8bbf\u95ee\uff0c\u5728\u4e0d\u540c\u5bb9\u5668\u95f4\u5171\u4eab\u6570\u636e\u65f6\u5177\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u6027\uff1b\u4e14\u53ef\u76f4\u63a5\u7528Docker\u547d\u4ee4\u8fdb\u884c\u6570\u636e\u5907\u4efd\u548c\u6570\u636e\u8fc1\u79fb\u3002\u9664\u6b64\u4e4b\u5916\uff0cVolumes\u5728Docker Desktop\u7684\u8868\u73b0\u6027\u80fd\u6bd4\u5176\u4ed6\u65b9\u5f0f\u66f4\u52a0\u51fa\u8272\uff0c\u8fd9\u4e5f\u662f\u5b98\u65b9\u6700\u63a8\u8350\u7684\u65b9\u5f0f\u3002</p> \u6765\u81ea\uff1aDocker\u5b98\u65b9\u6587\u6863","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#32-volumes","title":"3.2 Volumes\u5e38\u89c1\u64cd\u4f5c","text":"<p>\u8fd9\u91cc\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff0c\u6211\u4eec\u4ecb\u7ecd\u51e0\u79cd\u4e0d\u540c\u60c5\u51b5\u4e0b\u5bf9Volumes\u7684\u4f7f\u7528\u3002</p> <p>1.\u6211\u4eec\u53ef\u901a\u8fc7\u4ee5\u4e0b\u57fa\u672c\u547d\u4ee4\u521b\u5efa\u53ca\u7ba1\u7406Volumes: <pre><code># \u521b\u5efavolumes\u5e76\u547d\u540d my-vol\ndocker volume create my-vol\n\n# Volumes\u5217\u8868\ndocker volume ls\n\n# \u67e5\u770bVolumes\u7279\u6027\ndocker volume inspect my-vol\n\n# \u79fb\u9664Volumes\ndocker volume rm my-vol\n\n# \u79fb\u9664\u6240\u6709Volumes\ndocker volume prune\n</code></pre></p> <p>2.\u53ef\u5728\u542f\u52a8\u5bb9\u5668\u65f6\u6307\u5b9aVolumes:</p> <pre><code>## \u8fd0\u884cdevtest\u5bb9\u5668\n## \u5e76\u5c06\u5bb9\u5668myvol2\u6302\u5728/app\u76ee\u5f55\u4e2d\ndocker run -d \\\n--name devtest \\\n-v myvol2:/app \\\nnginx:latest\n</code></pre> <p>3.\u5f53\u5efa\u7acb\u591a\u5bb9\u5668\u670d\u52a1\u7684\u65f6\u5019\uff0c\u5f00\u53d1\u8005\u5f80\u5f80\u4f1a\u9009\u62e9<code>docker compose</code>\u8fd9\u4e00\u591a\u5bb9\u5668\u7ba1\u7406\u7684\u5de5\u5177\uff0c\u5e76\u7f16\u5199\u597d<code>docker-compose.yml</code>\u6587\u4ef6\u3002\u4e00\u65b9\u9762\uff0c\u6b64\u6587\u4ef6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u6240\u6709\u5bb9\u5668\u7684\u914d\u7f6e\u53c2\u6570\u878d\u5408\u5728\u4e00\u4e2afile\u91cc\u9762\u7edf\u4e00\u7ba1\u7406\uff0c\u53e6\u5916\u4e00\u65b9\u9762\u5b83\u53ef\u4ee5\u5e2e\u52a9\u591a\u5bb9\u5668\u7684\u670d\u52a1\u5feb\u901f\u542f\u52a8\u6216\u7ec8\u6b62\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u8be6\u7ec6\u4ecb\u7ecd<code>yml</code>\u6587\u4ef6\u7684\u6bcf\u4e2a\u53c2\u6570\uff0c\u800c\u7740\u91cd\u8bf4\u4e00\u4e0b\u5982\u4f55\u5728\u6b64\u6587\u4ef6\u4e2d\u5b9a\u4e49Volumes\u3002</p> <p><pre><code>version: \"3.9\"\nservices:\n  frontend:\n    image: node:lts\n    volumes:\n      - myapp:/home/node/app\nvolumes:\n  myapp:\n    external: true\n</code></pre> \u8fd9\u91cc\u7684\u4e24\u4e2avolumes\u8bbe\u5b9a\uff0c\u7b2c\u4e00\u4e2a\u662f\u8bbe\u7f6eservices\u7684volumes\uff0c\u540d\u4e3a<code>myapp</code>,\u8def\u5f84\u662f\u50a8\u5b58\u5728<code>/home/node/app</code>\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u9876\u7ea7volumes\u4e2d\u7684\u8bbe\u7f6e\u662f\u4e3a\u4e86\u5b9e\u73b0\u591a\u4e2a\u5bb9\u5668\u7684\u5171\u4eab\uff0c\u6bd4\u5982\u8fd9\u91cc\u5c31\u662f\u8bbe\u7f6e<code>myapp</code>\u53ef\u4ee5\u88ab\u6240\u6709\u5bb9\u5668\u5171\u4eab\u3002</p> <p>4.\u4f7f\u7528\u5df2\u5b58\u5728\u7684\u5bb9\u5668\u6570\u636e\u4e3a\u65b0\u7684\u5bb9\u5668\u521b\u5efaVolumes\u3002\u8fd9\u91cc\u65b0\u5bb9\u5668\u540d\u4e3a<code>nginxtest</code>\uff0c\u65b0Volumes\u547d\u540d\u4e3a<code>nignx-vol</code>\uff0c\u5176\u6570\u636e\u6765\u6e90\u7684\u8def\u5f84\u662f<code>/usr/share/nginx/html</code>\u3002</p> <pre><code> docker run -d \\\n--name=nginxtest \\\n-v nginx-vol:/usr/share/nginx/html \\\nnginx:latest\n</code></pre> <p>\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0<code>ro</code>\u6765\u8bbe\u7f6e\u53ea\u8bfb\u6743\u9650\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u5176\u4ed6\u4eba\u5728\u5171\u4eab\u5bb9\u5668\u6570\u636e\u65f6\u7684\u8bef\u5220\u6216\u5176\u4ed6\u5931\u8bef\u3002</p> <pre><code> docker run -d \\\n--name=nginxtest \\\n-v nginx-vol:/usr/share/nginx/html:ro \\\nnginx:latest\n</code></pre> <p>5.Volumes\u8fd8\u53ef\u4ee5\u8fd0\u7528\u5728\u6570\u636e\u5907\u4efd\uff0c\u6570\u636e\u8fc1\u79fb\u7684\u573a\u666f\u4e2d\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u540d<code>dbstore</code>\u7684\u5bb9\u5668\u4e14\u5e26\u6709Volumes<code>dbdata</code>\uff1a <pre><code>docker run -v /dbdata --name dbstore ubuntu /bin/bash\n</code></pre></p> <p>\u7b2c\u4e8c\u6b65\uff0c\u4e3a\u8fd9\u4e2a\u5bb9\u5668\u7684Volumes\u8fdb\u884c\u5907\u4efd\uff0c\u5229\u7528<code>--volumes-from</code>\u6307\u5b9a\u5bb9\u5668\u7684\u6765\u6e90\uff0c\u6307\u5b9a\u5c06<code>dbdata</code>\u5907\u4efd\u5230\u8def\u5f84<code>/backup</code>\u4e0b\u7684<code>backup.tar</code>\u6587\u4ef6\u4e2d\uff1a</p> <pre><code>docker run --rm --volumes-from dbstore -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u8fc1\u79fb\u4e0a\u4e00\u6b65\u5df2\u7ecf\u5907\u4efd\u597d\u7684\u5bb9\u5668\u6570\u636e, \u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668<code>dbstore2</code>\uff1a</p> <pre><code>docker run -v /dbdata --name dbstore2 ubuntu /bin/bash\n</code></pre> <p>\u6700\u540e\uff0c\u518d\u4ece<code>backup.tar</code>\u6587\u4ef6\u4e2d\u8fc1\u79fb\u5230\u65b0\u7684\u5bb9\u5668\u4e2d\uff1a</p> <pre><code> docker run --rm --volumes-from dbstore2 -v $(pwd):/backup ubuntu bash -c \"cd /dbdata &amp;&amp; tar xvf /backup/backup.tar --strip 1\"\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#4","title":"4 \u603b\u7ed3","text":"<p>\u5f53\u90e8\u7f72\u670d\u52a1\u65f6\uff0c\u529f\u80fd\u7684\u5f00\u53d1\u662f\u4e00\u65b9\u9762\uff0c\u6570\u636e\u7684\u53ef\u6301\u7eed\u5316\u7ba1\u7406\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u4e00\u4e2a\u90e8\u5206\u3002\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u4f7f\u7528Docker Volume\u65f6\u9009\u62e9\u5408\u9002\u7684\u547d\u4ee4\u6765\u7ba1\u7406\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u3002</p> <p>\u6b22\u8fce\u5404\u4f4d\u5c0f\u4f19\u4f34\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/","title":"Docker\u8e29\u5751\u65e5\u8bb0","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-12-09\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#1","title":"1. \u524d\u8a00","text":"<p>\u6211\u4eec\u5e73\u5e38\u4e5f\u4f1a\u4f7f\u7528Docker\u8dd1\u4e00\u4e9b\u670d\u52a1\uff0c\u4f46\u4f7f\u7528\u7684\u529f\u80fd\u53ea\u662f\u5168\u90e8\u529f\u80fd\u7684\u4e00\u5c0f\u90e8\u5206\u3002Docker\u672c\u8eab\u529f\u80fd\u5f88\u591a\uff0c\u547d\u4ee4\u4e5f\u5f88\u591a\u3002\u4f5c\u4e3a\u4e00\u4e2a\u975e\u4e13\u4e1a\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u8c28\u4ee5\u6b64\u6587\u8bb0\u5f55\u4e0b\u6211\u5728\u5176\u4e2d\u8e29\u8fc7\u7684\u5751\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#2","title":"2. \u8e29\u5751","text":"","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#21","title":"2.1 \u542f\u52a8\u5bb9\u5668","text":"<p>Docker\u5bb9\u5668\u540e\u53f0\u8fd0\u884c\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u6301\u4e45\u7684\u524d\u53f0\u8fdb\u7a0b\u3002\u5426\u5219\u7684\u8bdd\uff0c\u5bb9\u5668\u4f1a\u81ea\u52a8\u9000\u51fa\u3002  </p> <p>\u5e38\u89c1\u7684\u505a\u6cd5\u662f\u6211\u4eec\u5728Dockerfile\u4e2d\u7528CMD\u6216\u662fENTRYPOINT\u58f0\u660e\u6211\u4eec\u8981\u8dd1\u7684\u547d\u4ee4\u3002\u6216\u662f\u6211\u4eec\u5728Docker run\u7684\u65f6\u5019\u5728\u540e\u9762\u58f0\u660e\u547d\u4ee4\u3002\u4f46\u662f\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u7684\u547d\u4ee4\u53ef\u80fd\u6ca1\u6cd5\u7b80\u5355\u5730\u5199\u5728\u8fd9\u91cc\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u5b88\u62a4\u8fdb\u7a0b\u7684\u65b9\u5f0f\u542f\u52a8\u5bb9\u5668\u3002</p> <pre><code>docker run -itd \u955c\u50cfid\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u5165\u5bb9\u5668\u3002</p> <pre><code>docker exec -it \u5bb9\u5668id /bin/bash\n</code></pre> <p>\u5728\u5bb9\u5668\u4e2d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u6267\u884c\u6211\u4eec\u7684\u547d\u4ee4\u4e86\u3002</p> <p>\u6700\u540e\u6211\u4eec\u7528Ctrl+P+Q\u9000\u51fa\u5bb9\u5668\uff0c\u4f46\u4e0d\u5173\u95ed\u5bb9\u5668\u3002</p>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#22","title":"2.2 \u6587\u5b57\u7f16\u8f91\u5668","text":"<p>\u539f\u751f\u7684Linux\u73af\u5883\u53ef\u80fd\u6ca1\u6709\u6587\u5b57\u7f16\u8f91\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7cat &gt; file\u5c06\u5185\u5bb9\u8d34\u5230\u6587\u672c\u4e2d\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u5341\u5206\u4e0d\u53cb\u597d\u3002 Vim\u662f\u5e38\u7528\u7684Linux\u4e0b\u7684\u6587\u5b57\u7f16\u8f91\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5Vim\u3002</p> <pre><code>apt-get update\napt-get install vim\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#23","title":"2.3 \u67e5\u770b\u5bb9\u5668\u72b6\u6001","text":"<p>\u67e5\u770b\u5bb9\u5668\u5185\u8fd0\u884c\u7684\u8fdb\u7a0b\uff1a</p> <pre><code>docker top \u5bb9\u5668id\n</code></pre> <p>\u5bf9\u4e8e\u4e0d\u60f3\u8981\u7684\u8fdb\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u7ed3\u675f\u8fdb\u7a0b\uff1a</p> <pre><code>kill -9 PID\n</code></pre> <p>\u67e5\u770b\u5bb9\u5668\u5185\u8fd0\u884c\u8fdb\u7a0b\u7684log</p> <pre><code>docker logs -f -t --tail 20 \u5bb9\u5668id\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#24","title":"2.4 \u6e05\u7406\u65e0\u7528\u7684\u6570\u636e\u5377","text":"<p>\u6211\u4eec\u5f80\u5f80\u4f1a\u4f7f\u7528Docker\u521b\u5efa\u3001\u5220\u9664\u5bb9\u5668\u3002\u957f\u6b64\u4ee5\u5f80\uff0c\u5bb9\u5668\u6302\u8f7d\u7684\u6570\u636e\u5377\u5bb9\u6613\u4ea7\u751f\u4e00\u4e9b\u50f5\u5c38\u6587\u4ef6(\u672a\u7ed1\u5b9a\u5bb9\u5668\u7b49)\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u627e\u5230\u50f5\u5c38\u6587\u4ef6\uff1a</p> <pre><code>docker volume ls -qf dangling=true\n</code></pre> <p>\u5e76\u5220\u9664\u8fd9\u4e9b\u50f5\u5c38\u6587\u4ef6\u3002</p> <pre><code>docker volume rm $(docker volume ls -qf dangling=true)\n</code></pre>","tags":["docker"]},{"location":"Main_Course/Analytics_Tools/2021-12-09-Docker2/#3","title":"3. \u603b\u7ed3","text":"<p>\u8fd9\u4e9b\u53ea\u662f\u4f5c\u8005\u5728\u4f7f\u7528Docker\u8fc7\u7a0b\u4e2d\u8e29\u8fc7\u7684\u5751\uff0c\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u5e76\u6ca1\u6709\u9762\u9762\u4ff1\u5230\u3002Docker\u4ecd\u6709\u4e0d\u5c11\u63a2\u7d22\u7684\u7a7a\u95f4\u3002 \u5e0c\u671b\u8bfb\u8005\u80fd\u5c11\u8e29\u4e00\u4e9b\u5751\uff0c\u5c11\u78b0\u5230\u4e00\u4e9bBug\u3002</p>","tags":["docker"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/","title":"\u597d\u7528\u7684Python\u5305","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-08-03\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#1","title":"1 \u5f15\u8a00","text":"<p>Python\u4e4b\u6240\u4ee5\u597d\u7528\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u4e8e\u5b83\u53ef\u4ee5\u65b9\u4fbf\u5730\u8c03\u7528\u5b9e\u73b0\u5404\u79cd\u529f\u80fd\u7684\u5305(\u8c03\u5305\u4fa0\u672c\u4eba)\u3002 \u5982\u5e38\u7528\u7684Pandas\uff0cNumpy\u7b49\u53ef\u80fd\u662f\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u8005\u6bcf\u5929\u9700\u8981\u6253\u4ea4\u9053\u7684\u5bf9\u8c61\u3002\u4e0d\u6b62\u4e8e\u6b64\uff0c\u672c\u6587\u5c06\u57fa\u4e8e\u81ea\u5df1\u7684\u5b9e\u9645\u4f7f\u7528\u7ecf\u9a8c\uff0c\u4ecb\u7ecd\u4e00\u4e9b\u5c0f\u4f17\u800c\u53c8\u597d\u7528\u7684Python\u7684\u5305\uff0c\u8ba9\u4f60\u5728\u4f7f\u7528Python\u7684\u8fc7\u7a0b\u4e2d\u5982\u864e\u6dfb\u7ffc\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#2-python","title":"2 \u597d\u7528\u7684Python\u5305","text":"","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#21-tqdm","title":"2.1 tqdm","text":"<p>tqdm\u662f\u4e00\u4e2a\u5c0f\u5de7\u7684\u3001\u663e\u793a\u5faa\u73af\u8fdb\u5ea6\u6761\u7684\u5de5\u5177\u3002\u4e0d\u77e5\u4f60\u662f\u5426\u6709\u8fd9\u6837\u7684\u4f53\u9a8c\uff1a\u4f60\u5199\u4e86\u4e00\u6bb5\u590d\u6742\u7684\u5faa\u73af\uff0c\u6ee1\u5fc3\u6b22\u559c\u5730\u70b9\u51fb\u8fd0\u884c\uff0c\u7136\u800c\u9664\u4e86\u770b\u5230\u7a0b\u5e8f\u4e00\u76f4\u5728\u8fd0\u884c\uff0c\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u8fd9\u4e2a\u5faa\u73af\u8981\u8dd1\u591a\u4e45\uff0c\u4f60\u751a\u81f3\u4e0d\u77e5\u9053\u5b83\u662f\u5426\u771f\u7684\u5728\u8fd0\u884c\uff0c\u6216\u662fkernel\u5df2\u7ecf\u6302\u4e86\u3002  </p> <p>\u6709\u4e86tqdm\uff0c\u4f60\u53ea\u9700\u8981\u5728\u5faa\u73af\u7684\u8fed\u4ee3\u5668\u4e0a\u52a0\u4e0a\u5b83\uff0c\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u8fdb\u5ea6\u6761\u3001\u6bcf\u4e2a\u5faa\u73af\u6240\u82b1\u7684\u65f6\u95f4\u4ee5\u53ca\u9884\u4f30\u7684\u603b\u65f6\u95f4\u7b49\u3002</p> <pre><code>for i in tqdm(range(100)):\n    sleep(0.01)\n</code></pre> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0ctqdm\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8eDataFrame\u7684apply(groupby)\u3002</p> <pre><code>import numpy as np\nimport pandas as pd\nfrom tqdm.auto import tqdm\ndf = pd.DataFrame(np.random.randint(0, 100, (100000, 6)))\ntqdm.pandas(desc=\"my bar!\")\ndf.progress_apply(lambda x: x**2)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#22-dateutil","title":"2.2 dateutil","text":"<p>\u5728\u5173\u4e8e\u65f6\u95f4\u683c\u5f0f\u7684\u5904\u7406\u4e2d\uff0c\u6211\u5f88\u559c\u6b22\u4f7f\u7528dateutil\u8fd9\u4e2a\u5305\u4e2d\u7684parse\u65b9\u6cd5\u3002 \u5b83\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u683c\u5f0f\u7684\u65f6\u95f4\u8f93\u5165\u5f88\u667a\u80fd\u7684\u7ed9\u51fa\u6807\u51c6\u5316\u7684\u65f6\u95f4\u8f93\u51fa\u3002</p> <pre><code>from dateutil.parser import parse\nIn: parse('22nd,July,2009')\nOut: datetime.datetime(2009, 7, 22, 0, 0)\n\nIn: parse('2018-04-20')\nOut: datetime.datetime(2018, 4, 20, 0, 0)\n\nIn: parse('20180420')\nOut: datetime.datetime(2018,4,20,0,0)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#23-line_profilermemory_profiler","title":"2.3  line_profiler\u548cmemory_profiler","text":"<p>line_profiler\u548cmemory_profiler\u5206\u522b\u662f\u7528\u6765\u76d1\u63a7\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4\u4ee5\u53ca\u5185\u5b58\u6d88\u8017\u7684\u5206\u6790\u5668\u3002\u5b83\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u663e\u793a\u67d0\u884c\u6216\u662f\u67d0\u4e2a\u51fd\u6570\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u6216\u662f\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58\uff0c\u4ee5\u4fbf\u6211\u4eec\u4f18\u5316\u4ee3\u7801\u3002  </p> <p>\u5b83\u4eec\u7684\u4f7f\u7528\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002\u53ea\u9700\u8981\u5728\u8981\u8003\u5bdf\u7684\u51fd\u6570\u5916\u9762\u52a0\u4e0a\u88c5\u9970\u5668\u3002</p> <p>\u5bf9\u4e8ememory_profiler\uff1a</p> <p>\u521b\u5efaexample.py</p> <pre><code>@profile\ndef my_func():\n    a = [1] * (10 ** 6)\n    b = [2] * (2 * 10 ** 7)\n    del b\n    return a\n\nif __name__ == '__main__':\n    my_func()\n</code></pre> <p>\u7136\u540e\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c\uff1a  </p> <pre><code>python -m memory_profiler example.py\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>Line #    Mem usage    Increment  Occurrences   Line Contents\n============================================================\n     3   38.816 MiB   38.816 MiB           1   @profile\n     4                                         def my_func():\n     5   46.492 MiB    7.676 MiB           1       a = [1] * (10 ** 6)\n     6  199.117 MiB  152.625 MiB           1       b = [2] * (2 * 10 ** 7)\n     7   46.629 MiB -152.488 MiB           1       del b\n     8   46.629 MiB    0.000 MiB           1       return a\n</code></pre> <p>\u5bf9\u4e8eline_profiler\uff1a</p> <p>\u521b\u5efa\u811a\u672c</p> <pre><code>@profile\ndef slow_function(a, b, c):\n    ...\n</code></pre> <p>\u7136\u540e\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c\uff1a</p> <pre><code>python -m line_profiler script_to_profile.py.lprof\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>Pystone(1.1) time for 50000 passes = 2.48\nThis machine benchmarks at 20161.3 pystones/second\nWrote profile results to pystone.py.lprof\nTimer unit: 1e-06 s\n\nFile: pystone.py\nFunction: Proc2 at line 149\nTotal time: 0.606656 s\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   149                                           @profile\n   150                                           def Proc2(IntParIO):\n   151     50000        82003      1.6     13.5      IntLoc = IntParIO + 10\n   152     50000        63162      1.3     10.4      while 1:\n   153     50000        69065      1.4     11.4          if Char1Glob == 'A':\n   154     50000        66354      1.3     10.9              IntLoc = IntLoc - 1\n   155     50000        67263      1.3     11.1              IntParIO = IntLoc - IntGlob\n   156     50000        65494      1.3     10.8              EnumLoc = Ident1\n   157     50000        68001      1.4     11.2          if EnumLoc == Ident1:\n   158     50000        63739      1.3     10.5              break\n   159     50000        61575      1.2     10.1      return IntParIO\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#24-plotly","title":"2.4 plotly","text":"<p>Python\u753b\u56fe\u7684\u5305\u6709\u5f88\u591a\uff0c\u5982matplotlib\uff0cseaborn\uff0cplotly\u7b49\u7b49\u3002\u5176\u4e2d\uff0cPlotly\u4ee5\u53ef\u4ea4\u4e92\u6027\u72ec\u6811\u4e00\u5e1c\u3002 \u4f60\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u653e\u5927\u3001\u7f29\u5c0f\u67d0\u4e00\u5c40\u90e8\u6216\u8005\u662f\u9009\u62e9\u4f60\u611f\u5174\u8da3\u7684\u67d0\u6761\u66f2\u7ebf\u3002\u5b83\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355:</p> <pre><code>import plotly.express as px\ndf = px.data.gapminder().query(\"country=='Canada'\")\nfig = px.line(df, x=\"year\", y=\"lifeExp\", title='Life expectancy in Canada')\nfig.show()\n</code></pre> <p>\u6709\u4e86\u5b83\uff0c\u4f60\u53ef\u4ee5\u66f4\u7ec6\u81f4\u5730\u5206\u6790\u6570\u636e\uff0c\u5f80\u5f80\u80fd\u5f97\u5230\u9759\u6001\u56fe\u6240\u89c2\u5bdf\u4e0d\u5230\u7684\u6d1e\u89c1\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#25-itertools","title":"2.5 itertools","text":"<p>itertools\u662f\u4e00\u4e2a\u4f7f\u7528\u7387\u4e0d\u9ad8\u4f46\u662f\u5728\u67d0\u4e9b\u65f6\u5019\u80fd\u201c\u62ef\u6551\u4f60\u4e8e\u6c34\u706b\u4e4b\u4e2d\u201d\u7684\u5305\u3002 \u5b83\u4e3b\u8981\u662f\u63d0\u4f9b\u4e86\u5404\u79cd\u8fed\u4ee3\u7684\u64cd\u4f5c\uff0c\u5982\u7d2f\u52a0\u3001\u7b1b\u5361\u5c14\u79ef\u3001\u8fde\u63a5\u591a\u4e2a\u5217\u8868\u7b49\u529f\u80fd\u3002\u6ca1\u6709\u5b83\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u7528\u4e0a\u5faa\u73af\u7b49\u7b49\u3002\u800c\u6709\u4e86\u5b83\uff0c\u53ea\u9700\u8981\u4e00\u53e5\u8bdd\u3002</p> <pre><code>#\u7d2f\u52a0\n&gt;&gt;&gt; import itertools\n&gt;&gt;&gt; x = itertools.accumulate(range(10))\n&gt;&gt;&gt; print(list(x))\n[0, 1, 3, 6, 10, 15, 21, 28, 36, 45]\n\n#\u4e0d\u91cd\u590d\u7684\u6240\u6709\u7ec4\u5408\n&gt;&gt;&gt; x = itertools.combinations(range(4), 3)\n&gt;&gt;&gt; print(list(x))\n[(0, 1, 2), (0, 1, 3), (0, 2, 3), (1, 2, 3)]\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-03-useful-python-packages/#3","title":"3 \u5c0f\u7ed3","text":"<p>\u6b63\u662f\u7531\u4e8e\u6709\u8fd9\u4e48\u591a\u597d\u7528\u7684\u5305\uff0c\u6d3b\u8dc3\u7684\u793e\u533a\uff0cPython\u624d\u5982\u6b64\u6d41\u884c\uff0c\u5f97\u5230\u4eba\u4eec\u559c\u7231\u3002 \u5728\u4f7f\u7528Python\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e0c\u671b\u8fd9\u4e9b\u5c0f\u4f17\u800c\u53c8\u597d\u7528\u7684\u5305\u80fd\u6ee1\u8db3\u4f60\u7684\u5404\u79cd\u9700\u6c42\uff0c\u8ba9\u4f60\u7684\u751f\u6d3b\u8f7b\u677e\u4e00\u4e9b\uff0c\u7f8e\u597d\u4e00\u4e9b\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/","title":"Python\u5143\u7ec4\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-08-07\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#1","title":"1 \u524d\u8a00","text":"<p>Python\u4f5c\u4e3a\u5f53\u4e0b\u6570\u636e\u79d1\u5b66\u3001\u4eba\u5de5\u667a\u80fd\u9886\u57df\u7099\u624b\u53ef\u70ed\u7684\u7f16\u7a0b\u8bed\u8a00\u53d7\u5230\u4e86\u975e\u5e38\u591a\u7684\u5173\u6ce8\uff0c\u6709\u5f88\u591a\u4eba\u90fd\u5728\u5b66\u4e60\u3002\u4f46\u662f\u5728\u8ffd\u6c42\u5353\u8d8a\u7684\u8def\u4e0a\uff0c\u4e00\u5b9a\u4e0d\u8981\u5ffd\u89c6\u4e86\u57fa\u7840\uff0c\u6bd4\u5982\u5e38\u7528\u6570\u636e\u7ed3\u6784\u3001\u8bed\u6cd5\u89c4\u8303\u3001\u7f16\u7a0b\u601d\u7ef4\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5bf9\u8fd9\u4e9b\u6700\u57fa\u7840\u7684\u4e8b\u60c5\u4e86\u5982\u6307\u638c\uff0c\u5728\u8fd9\u57fa\u7840\u4e4b\u4e0a\u7684\u5de5\u4f5c\u4e5f\u4f1a\u6e38\u5203\u6709\u4f59\u3002</p> <p>\u6211\u4eec\u5148\u6765\u56de\u987e\u548c\u603b\u7ed3Python\u6570\u636e\u7ed3\u6784\u91cc\u5e38\u7528\u64cd\u4f5c\uff1aPython\u4e2d\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u7edf\u79f0\u4e3a\u5bb9\u5668\uff08container\uff09\u3002\u5e8f\u5217\uff08\u5982\u5217\u8868\u548c\u5143\u7ec4\uff09\u3001\u6620\u5c04\uff08\u5982\u5b57\u5178\uff09\u4ee5\u53ca\u96c6\u5408\uff08set\uff09\u662f\u4e09\u7c7b\u4e3b\u8981\u7684\u5bb9\u5668\u3002\u800c\u6241\u5e73\u5e8f\u5217\u5982str\u3001bytes\u3001bytearray\u3001memoryview \u548c array.array\u7b49\u4e0d\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002</p> <p>\u5728\u6b64\uff0c\u6211\u4eec\u5148\u4ece\u5143\u7ec4\u5f00\u59cb\u8bf4\u8d77\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#2","title":"2 \u5143\u7ec4\u4e0d\u4ec5\u662f\u4e0d\u53ef\u53d8\u7684\u5217\u8868","text":"","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#21","title":"2.1 \u5143\u7ec4\u7684\u8bb0\u5f55\u4f5c\u7528","text":"<p>\u5143\u7ec4\u533a\u522b\u4e8e\u5217\u8868\u7684\u663e\u8457\u7279\u5f81\u4e4b\u4e00\u5c31\u662f\u5b83\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u4f46\u5176\u53e6\u5916\u4e00\u4e2a\u4f5c\u7528\u5c31\u662f\u7528\u4e8e\u6ca1\u6709\u5b57\u6bb5\u540d\u7684\u8bb0\u5f55\u3002\u56e0\u4e3a\u540e\u8005\u7ecf\u5e38\u88ab\u5ffd\u7565\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u5143\u7ec4\u4f5c\u4e3a\u8bb0\u5f55\u7684\u4f5c\u7528\u3002</p> <p>\u4f7f\u7528\u62ec\u53f7\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5143\u7ec4\u3002\u5143\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5b58\u653e\u4e86\u8bb0\u5f55\u4e2d\u4e00\u4e2a\u5b57\u6bb5\u7684\u6570\u636e\uff0c\u5916\u52a0\u8fd9\u4e2a\u5b57\u6bb5\u7684\u4f4d\u7f6e\u3002\u6b63\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u4fe1\u606f\u7ed9\u6570\u636e\u8d4b\u4e88\u4e86\u610f\u4e49\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5143\u7ec4\u5c31\u88ab\u5f53\u4f5c\u8bb0\u5f55\u52a0\u4ee5\u5229\u7528\uff1a</p> <pre><code># \u6d1b\u6749\u77f6\u56fd\u9645\u673a\u573a\u7684\u7ecf\u7eac\u5ea6\uff0c\u7528\u5143\u7ec4\u8bb0\u5f55\nlax_coordinates = (33.9425, -118.408056)\n\n# \u4e1c\u4eac\u5e02\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\u5e02\u540d\u3001\u5e74\u4efd\u3001\u4eba\u53e3\uff08\u5355\u4f4d\uff1a\u767e\u4e07\uff09\u3001\u4eba\u53e3\u53d8\u5316 \uff08\u5355\u4f4d\uff1a\u767e\u5206\u6bd4\uff09\u548c\u9762\u79ef\uff08\u5355\u4f4d\uff1a\u5e73\u65b9\u5343\u7c73\uff09\uff0c\u7528\u5143\u7ec4\u8bb0\u5f55\ncity, year, pop, chg, area = ('Tokyo', 2003, 32450, 0.66, 8014)\n\n#\u4e00\u4e2a\u5143\u7ec4\u5217\u8868\uff0c\u5143\u7ec4\u7684\u5f62\u5f0f\u4e3a (country_code, passport_number)\u3002\ntraveler_ids = [('USA', '31195855'), ('BRA', 'CE342567'),('ESP', 'XDA205856')]\n\n#\u5728\u8fed\u4ee3\u7684\u8fc7\u7a0b\u4e2d\uff0cpassport \u53d8\u91cf\u88ab\u7ed1\u5b9a\u5230\u6bcf\u4e2a\u5143\u7ec4\u4e0a\u3002% \u683c\u5f0f\u8fd0\u7b97\u7b26\u80fd\u88ab\u5339\u914d\u5230\u5bf9\u5e94\u7684\u5143\u7ec4\u5143\u7d20\u4e0a\u3002\nfor passport in sorted(traveler_ids):\n  print('%s/%s' % passport)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>BRA/CE342567\nESP/XDA205856\nUSA/31195855\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#22","title":"2.2 \u5143\u7ec4\u7684\u62c6\u5305","text":"<p>\u4e0a\u8ff0for\u5faa\u73af\u4e2d\u7684\u64cd\u4f5c\u63d0\u53d6\u4e86\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u4e5f\u53eb\u4f5c\u62c6\u5305\uff08unpacking\uff09\u3002\u5e73\u884c\u8d4b\u503c\u662f\u5bf9\u5143\u7ec4\u62c6\u5305\u5f88\u597d\u7684\u5e94\u7528\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code># \u6d1b\u6749\u77f6\u56fd\u9645\u673a\u573a\u7684\u7ecf\u7eac\u5ea6\uff0c\u7528\u5143\u7ec4\u8bb0\u5f55\nlax_coordinates = (33.9425, -118.408056)\n# \u62c6\u5305\u5143\u7ec4\uff0c\u5c06\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u5206\u522b\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u53d8\u91cf\nlatitude, longitude = lax_coordinates\n</code></pre> <p>\u8fd8\u6709\u4e00\u4e2a\u7ecf\u5178\u800c\u4f18\u96c5\u7684\u5e94\u7528\u662f\u4ea4\u6362\u53d8\u91cf\u7684\u503c\uff1a</p> <pre><code>a, b = b, a\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#23","title":"2.3 \u5143\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570","text":"<p>\u7528<code>*</code>\u8fd0\u7b97\u7b26\u628a\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u62c6\u5f00\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u4f8b\u5982Python\u7684\u5185\u7f6e\u51fd\u6570divmod\u63a5\u6536\u4e24\u4e2a\u6570\u5b57\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u5546\u548c\u4f59\u6570\u3002\u4ee5\u4e0b\u8303\u4f8b\u5c06\u4f7f\u7528<code>*</code>\u5c06\u5143\u7ec4\u4f20\u5165\u51fd\u6570\u3002</p> <p><pre><code>t = (20, 8)\nquotient, remainder = divmod(*t)\nprint(quotient, remainder)\n</code></pre> \u8f93\u51fa\u4e3a\uff1a</p> <pre><code>2 4\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#24","title":"2.4 \u5143\u7ec4\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c","text":"<p>\u6709\u4e9b\u51fd\u6570\u6709\u591a\u4e2a\u8fd4\u56de\u503c\uff0c\u5c06\u5176\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u7c7b\u578b\u5373\u662f\u5143\u7ec4\uff1a</p> <pre><code>import numpy as np\narr = np.random.randint(10, size=8)\n\ndef count_sum(arr):\n   count = len(arr)\n   sum = arr.sum()\n   return count, sum\n\nresult = count_sum(arr)\nprint(result)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>(8, 40)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#25-zip","title":"2.5 zip\u51fd\u6570","text":"<p>zip\u662fPython\u7684\u5185\u7f6e\u51fd\u6570\uff0c\u80fd\u591f\u63a5\u6536\u4e24\u4e2a\u6216\u591a\u4e2a\u5e8f\u5217\uff0c\u5e76\u7ec4\u6210\u4e00\u4e2a\u5143\u7ec4\u5217\u8868\uff0c\u5728Python3\u4e2d\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>list_a = [1,2,3]\nlist_b = ['a','b','c']\n\nfor i in zip(list_a, list_b):\n    print(i)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>(1, 'a')\n(2, 'b')\n(3, 'c')\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#26","title":"2.6 \u5176\u4ed6\u5e38\u89c4\u64cd\u4f5c","text":"<p>\u5143\u7ec4\u5f53\u7136\u4e5f\u652f\u6301\u4e00\u4e9b\u5e38\u89c4\u64cd\u4f5c\uff0c\u5982\u5bf9\u4e8e\u5143\u7ec4<code>a = (1, 'y', 5, 5, 'x')</code>\uff1a</p> <ul> <li>\u7d22\u5f15\uff0c\u5982<code>a.index('x')</code></li> <li>\u5207\u7247\uff0c\u5982<code>a[1:4]</code></li> <li>\u8ba1\u6570\uff0c\u5982<code>a.count(5)</code></li> <li>\u6392\u5e8f\uff0c\u5982<code>a.sort()</code></li> <li>\u5408\u5e76\u5143\u7ec4\uff0c\u5982<code>c = a + a</code></li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-07-Python-Tuple/#3","title":"3 \u603b\u7ed3","text":"<p>\u4e0a\u8ff0\u5185\u5bb9\u4e0d\u4ec5\u6db5\u76d6\u4e86\u5143\u7ec4\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u540c\u65f6\u4e5f\u7ed3\u5408\u4e86\u5b9e\u9645\u5de5\u4f5c\u4e2d\u5e38\u642d\u914d\u4f7f\u7528\u7684\u5176\u4ed6\u51fd\u6570\u3001\u8fd0\u7b97\u7b26\u7b49\u3002\u5728\u56de\u987e\u8fd9\u4e9b\u77e5\u8bc6\u65f6\u4e3b\u8981\u53c2\u8003\u4e86\u4e24\u672c\u7ecf\u5178\u7684Python\u7f16\u7a0b\u4e66\u7c4d\uff1a\u300a\u6d41\u7545\u7684Python\u300b\u548c\u300a\u50cf\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u4e00\u6837\u601d\u8003Python\u300b\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u6df1\u5165\u9605\u8bfb\uff01</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u4e0b\u56de\u5c06\u603b\u7ed3Python\u5217\u8868\u7684\u4f7f\u7528\u6280\u5de7\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/","title":"Python\u5217\u8868\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-08-14\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>## 1 \u524d\u8a00</p> <p>\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u56de\u987e\u4e86Python\u5143\u7ec4\u7684\u5e38\u7528\u64cd\u4f5c\uff0c\u8fd9\u7bc7\u6587\u7ae0\u6211\u4eec\u7ee7\u7eed\u804a\u804aPython\u91cc\u53e6\u4e00\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b - \u5217\u8868\uff08List\uff09\u3002</p> <p>\u548c\u5143\u7ec4\u4e00\u6837\uff0c\u5217\u8868\u4e5f\u662f\u4e00\u79cd\u5e8f\u5217\uff0c\u901a\u8fc7\u65b9\u62ec\u53f7<code>[</code>\u548c<code>]</code>\u5373\u53ef\u521b\u5efa\u3002\u5217\u8868\u4e2d\u7684\u503c\u5e38\u88ab\u79f0\u4e3a\u5143\u7d20\uff0c\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\uff0c\u5982<code>test_list = [0,1,1,'a','b']</code>\u5c31\u80fd\u6210\u529f\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u3002</p> <p>\u4e0d\u540c\u4e8e\u5143\u7ec4\uff0c\u5217\u8868\u662f\u53ef\u53d8\u5e8f\u5217\uff0c\u56e0\u6b64\u5e8f\u5217\u53ef\u7528\u7684\u64cd\u4f5c\u4f1a\u66f4\u52a0\u7075\u6d3b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u56de\u987e\u5217\u8868\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#2","title":"2 \u5217\u8868\u5e38\u7528\u64cd\u4f5c","text":"","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#21","title":"2.1 \u904d\u5386","text":"<p>\u4ee5\u5217\u8868<code>people = ['Adam','Nick','Tony']</code>\u4e3a\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528for\u5faa\u73af\u8fdb\u884c\u904d\u5386\uff1a</p> <pre><code>for i in people:\n  print(i)\n</code></pre> <p>\u5f53\u9700\u8981\u66f4\u65b0\u5217\u8868\u65f6\uff0c\u4f7f\u7528\u4e0b\u6807\u904d\u5386\u4f1a\u66f4\u52a0\u65b9\u4fbf\uff1a</p> <pre><code>for i in range(len(people)):\n  people[i] += '_suffix'\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#22","title":"2.2 \u5207\u7247","text":"<p>\u548c\u5143\u7ec4\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u5207\u7247\u6765\u83b7\u53d6\u5217\u8868\u7684\u5143\u7d20\uff08Python\u91cc\u4e0b\u6807\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\uff1a</p> <pre><code>print(people[:2])\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a <pre><code>['Adam','Nick']\n</code></pre></p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#23","title":"2.3 \u5220\u9664\u5143\u7d20","text":"<p>a. pop\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u8981\u5220\u9664\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u8fdb\u884c\u5220\u9664\uff0c\u6216\u8005\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1a<code>a = people.pop(2)</code>\u6216\u8005<code>a = people.pop()</code>\uff0c<code>a</code>\u7684\u503c\u90fd\u5c06\u662f<code>'Tony'</code>\uff0c\u800c\u539f\u5217\u8868\u5c06\u4f1a\u5220\u9664\u5bf9\u5e94\u7684\u5143\u7d20\u3002</p> <p>b. \u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f7f\u7528\u5220\u9664\u7684\u503c\uff0cdel\u662f\u4e00\u4e2a\u597d\u529e\u6cd5\uff1a<code>del people[0]</code>\uff0c\u5219<code>people</code>\u5217\u8868\u5c06\u53d8\u4e3a<code>['Nick','Tony']</code>\u3002</p> <p>c. remove\u65b9\u6cd5\u5c06\u5220\u9664\u5217\u8868\u4e2d\u7b2c\u4e00\u4e2a\u6240\u9700\u5220\u9664\u7684\u5143\u7d20\uff0c\u5982\u8fdb\u884c<code>test_list.remove(1)</code>\u64cd\u4f5c\u540e\uff0c\u5217\u8868\u5c06\u53d8\u4e3a<code>test_list = [0,1,'a','b']</code>\uff0c\u6ce8\u610f\uff0cremove\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#24","title":"2.4 \u5217\u8868\u548c\u5b57\u7b26\u4e32","text":"<p>\u5217\u8868\u548c\u5b57\u7b26\u4e32\u80fd\u591f\u7075\u6d3b\u5730\u8fdb\u884c\u8f6c\u6362\uff0c\u6bd4\u5982\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u5217\u8868\uff1a</p> <pre><code># \u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u5217\u8868\nname = 'Adam is very cool'\nname_list_1 = list(name)\nprint(name_list_1)\n\n# Split \u65b9\u6cd5\u80fd\u4f7f\u7528\u5206\u9694\u7b26\u5206\u5272\u5b57\u7b26\u4e32\nname_list_2 = name.split()\nprint(name_list_2)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>['A', 'd', 'a', 'm', ' ', 'i', 's', ' ', 'v', 'e', 'r', 'y', ' ', 'c', 'o', 'o', 'l']\n\n['Adam', 'is', 'very', 'cool']\n</code></pre> <p>\u800c\u6709\u65f6\u9700\u8981\u5c06\u5217\u8868\u5408\u5e76\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c<code>join</code>\u65b9\u6cd5\u975e\u5e38\u597d\u7528\uff1a</p> <pre><code># \u7528\u7a7a\u683c\u8fde\u63a5\u5217\u8868\u7684\u5143\u7d20\uff0c\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\nprint(' '.join(['Adam', 'is', 'very', 'cool']))\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>'Adam is very cool'\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#25","title":"2.5 \u5217\u8868\u7684\u522b\u540d","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5bb9\u6613\u51fa\u9519\u7684\u70b9\uff0c\u4e0b\u5217\u4ee3\u7801\u4e2d\uff0c\u4e24\u4e2a\u53d8\u91cf\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u6539\u53d8\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u7684\u503c\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8\uff1a</p> <pre><code># alias\u662f\u5217\u8868name\u7684\u522b\u540d\nname = ['Adam', 'is', 'very', 'cool']\nalias = name\nalias.pop()\nprint(name)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>['Adam', 'is', 'very']\n</code></pre> <p>\u56e0\u6b64\uff0c\u5e0c\u671b\u4f7f\u7528\u4e24\u4e2a\u72ec\u7acb\u7684\u5217\u8868\u65f6\uff0c\u5c3d\u91cf\u4f7f\u7528\u5355\u72ec\u7684\u8d4b\u503c\u8bed\u53e5\u6216\u8005\u6d45\u590d\u5236\uff1a</p> <pre><code>name = ['Adam', 'is', 'very', 'cool']\n\n# \u521b\u5efa\u503c\u4e00\u6837\u7684\u5217\u8868\nname_2 = ['Adam', 'is', 'very', 'cool']\n# \u6d45\u590d\u5236\nname_3 = name[:]\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#26","title":"2.6 \u5217\u8868\u53c2\u6570","text":"<p>\u5143\u7ec4\u53ef\u4ee5\u901a\u8fc7<code>*</code>\u8fd0\u7b97\u7b26\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u4e2d\uff0c\u5217\u8868\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u8f93\u51fa\u5230\u51fd\u6570\u4e2d\uff0c\u6b64\u65f6\u51fd\u6570\u4f1a\u5f97\u5230\u5217\u8868\u7684\u4e00\u4e2a\u5f15\u7528\uff0c\u610f\u5473\u7740\u5982\u679c\u51fd\u6570\u4e2d\u5bf9\u5217\u8868\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u90a3\u4e48\u539f\u5217\u8868\u4e5f\u5c06\u88ab\u4fee\u6539\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>#\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5220\u9664\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\ndef del_head(t):\n  del t[0]\n\nname = ['Adam', 'is', 'very', 'cool']\ndel_head(name)\nprint(name)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>['is', 'very', 'cool']\n</code></pre> <p>\u53c2\u6570t\u548c\u53d8\u91cfname\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\uff0c\u56e0\u6b64\u5f53t\u53d8\u5316\u65f6\uff0cname\u4e5f\u53d8\u5316\u4e86\u3002\u8fd9\u4e2a\u77e5\u8bc6\u70b9\u5341\u5206\u91cd\u8981\uff0c\u5728\u7f16\u5199\u51fd\u6570\u65f6\uff0c\u8981\u975e\u5e38\u6ce8\u610f\u64cd\u4f5c\u662f\u5426\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5217\u8868\uff0c\u8fd8\u662f\u5728\u539f\u6709\u5217\u8868\u4e0a\u4f5c\u53d8\u5316\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#27","title":"2.7 \u6620\u5c04\u548c\u5217\u8868\u63a8\u5bfc\u5f0f","text":"<p>\u5982\u679c\u60f3\u901a\u8fc7\u4e00\u4e2a\u51fd\u6570\u5bf9\u5217\u8868\u8fdb\u884c\u64cd\u4f5c\uff0c\u6620\u5c04\uff08map\uff09\u548c\u5217\u8868\u63a8\u5bfc\u5f0f\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002Python\u63d0\u4f9b\u7684\u5185\u7f6e\u51fd\u6570map\u63a5\u6536\u4e24\u4e2a\u53c2\u6570 - \u6620\u5c04\u51fd\u6570\u548c\u8fed\u4ee3\u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code># \u8fd4\u56de\u5143\u7d20\u7684\u5e73\u65b9\ndef square(n):\n    return n*n\n\ntest_list = [1,2,4,5]\nresult = map(square, test_list)\nprint(result)\nprint(list(result))\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>&lt;map object at 0x1101b9400&gt;\n[1, 4, 16, 25]\n</code></pre> <p>\u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\u4e5f\u53ef\u4ee5\u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\uff1a</p> <pre><code>test_list = [1,2,4,5]\nresult = [i*i for i in test_list]\nprint(result)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>[1, 4, 16, 25]\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-14-Python-list/#3","title":"3 \u603b\u7ed3","text":"<p>\u4e0a\u8ff0\u77e5\u8bc6\u57fa\u672c\u6982\u62ec\u4e86\u5217\u8868\u7684\u5e38\u89c1\u64cd\u4f5c\uff0c\u7b80\u5355\u603b\u7ed3\u4e00\u4e0b\u7ecf\u9a8c\uff1a</p> <ul> <li>\u5927\u90e8\u5206\u5217\u8868\u65b9\u6cd5\u90fd\u662f\u4fee\u6539\u53c2\u6570\u5e76\u8fd4\u56deNone\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u9009\u62e9\u5408\u9002\u7684\u65b9\u6cd5\uff0c\u786e\u4fdd\u53d8\u91cf\u7684\u5b89\u5168\u6027\u3002</li> <li>\u5b9e\u73b0\u540c\u4e00\u79cd\u64cd\u4f5c\u6709\u5f88\u591a\u79cd\u529e\u6cd5\uff0c\u6709\u65f6\u7528\u9519\u8bef\u7684\u65b9\u6cd5\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u7ed3\u679c\u6709\u53ef\u80fd\u4e0d\u5bf9\uff0c\u786e\u4fdd\u7406\u89e3\u4e86\u4e2a\u4e2d\u5dee\u5f02\u540e\u518d\u9009\u62e9\u5408\u9002\u7684\u65b9\u6cd5\u3002</li> <li>\u8c28\u614e\u4f7f\u7528\u5217\u8868\u7684\u522b\u540d\uff0c\u5176\u5b9e\u4e0d\u6b62\u5217\u8868\uff0c\u5176\u4ed6\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u4f1a\u6709\u522b\u540d\u7684\u673a\u5236\u3002</li> </ul> <p>\u5e0c\u671b\u8fd9\u4e9b\u77e5\u8bc6\u70b9\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6765\u4e00\u9053leetcode\u7b97\u6cd5\u9898\u5de9\u56fa\u4e00\u4e0b\u5217\u8868\u77e5\u8bc6\u5427\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u4e0b\u4f60\u7684\u7b54\u6848\uff01\u4e0b\u6b21\u6211\u4eec\u5c06\u804a\u804a\u5b57\u5178\uff08Dict\uff09\u3002</p> <p>\u9898\u76ee\uff1a\u65cb\u8f6c\u6570\u7ec4</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8 k \u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d k \u662f\u975e\u8d1f\u6570\u3002\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165: nums = [1,2,3,4,5,6,7], k = 3\n\u8f93\u51fa: [5,6,7,1,2,3,4]\n\u89e3\u91ca:\n\u5411\u53f3\u65cb\u8f6c 1 \u6b65: [7,1,2,3,4,5,6]\n\u5411\u53f3\u65cb\u8f6c 2 \u6b65: [6,7,1,2,3,4,5]\n\u5411\u53f3\u65cb\u8f6c 3 \u6b65: [5,6,7,1,2,3,4]\n\n\u4f5c\u8005\uff1a\u529b\u6263 (LeetCode)\n\u94fe\u63a5\uff1ahttps://leetcode-cn.com/leetbook/read/top-interview-questions-easy/x2skh7/\n\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/","title":"Python\u5b57\u5178\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-08-21\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u56de\u987e\u4e86Python\u5217\u8868\u7684\u5e38\u7528\u64cd\u4f5c\uff0c\u5217\u8868\u4f5c\u4e3a\u4e00\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u626e\u6f14\u4e86\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u8fd9\u7bc7\u6587\u7ae0\u6211\u4eec\u7ee7\u7eed\u804a\u804aPython\u91cc\u53e6\u4e00\u79cd\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b - \u5b57\u5178\uff08Dict\uff09\u3002</p> <p>\u5b9a\u4e49\u5b57\u5178\u53ef\u4ee5\u4f7f\u7528<code>dict()</code>\u65b9\u6cd5\uff0c\u6216\u8005\u4f7f\u7528\u82b1\u62ec\u53f7<code>name2code = {'Tony':1, 'Kevin':2, 'Luis':3}</code>\uff0c\u5982\u679c\u60f3\u8981\u589e\u52a0\u5143\u7d20\uff0c\u53ef\u4ee5\u4f7f\u7528\u952e\u503c\u5bf9\u7684\u8d4b\u503c\u6a21\u5f0f\uff1a<code>name2code['Nick'] = 0</code>\u3002\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u4e0d\u540c\u4e8e\u5217\u8868\uff0c\u5b57\u5178\u5e76\u4e0d\u4ee5\u6574\u6570\u4f5c\u4e3a\u4e0b\u6807\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u5b57\u5178\u5e38\u7528\u7684\u65b9\u6cd5\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#2","title":"2 \u5b57\u5178\u5e38\u7528\u65b9\u6cd5","text":"","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#21","title":"2.1 \u7d22\u5f15","text":"<p>\u5b57\u5178\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u952e\u6765\u7d22\u5f15\u6240\u9700\u8981\u7684\u503c\uff0c\u5982\uff1a</p> <pre><code>print(name2code['Nick'] )\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>0\n</code></pre> <p>\u7c7b\u4f3c\u4e8e\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528<code>in</code>\u64cd\u4f5c\u7b26\u67e5\u770b\u5b57\u5178\u4e2d\u662f\u5426\u542b\u6709\u6240\u8981\u67e5\u627e\u7684\u952e\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c<code>in</code>\u64cd\u4f5c\u7b26\u5728\u5217\u8868\u548c\u5b57\u5178\u4e2d\u7684\u5b9e\u73b0\u6709\u6240\u533a\u522b\uff0c\u5217\u8868\u4f7f\u7528\u641c\u7d22\u7b97\u6cd5\uff0c\u56e0\u6b64\u5217\u8868\u53d8\u957f\u65f6\uff0c\u641c\u7d22\u65f6\u95f4\u4e5f\u4f1a\u53d8\u957f\uff0c\u4f46\u662f\u5b57\u5178\u4f7f\u7528\u6563\u5217\u8868\uff08hashtable\uff09\u7684\u7b97\u6cd5\uff0c\u56e0\u6b64\u4e0d\u8bba\u5b57\u5178\u4e2d\u6709\u591a\u5c11\u952e\u503c\u5bf9\uff0c<code>in</code>\u64cd\u4f5c\u7b26\u6240\u82b1\u65f6\u95f4\u90fd\u5dee\u4e0d\u591a\u3002</p> <pre><code>print('Nick' in name2code)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>True\n</code></pre> <p>\u5982\u679c\u8981\u67e5\u770b\u503c\u662f\u5426\u5728\u5b57\u5178\u4e2d\uff0c\u53ef\u4ee5\u501f\u52a9<code>values()</code>\u65b9\u6cd5\u53d6\u51fa\u5b57\u5178\u7684\u503c\uff0c\u7136\u540e\u7528in\u64cd\u4f5c\u7b26\u67e5\u770b\uff1a</p> <pre><code>values = name2code.values()\nprint(0 in values)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>True\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#22","title":"2.2 \u5220\u9664\u5143\u7d20","text":"<p>\u5b57\u5178\u5220\u9664\u5143\u7d20\u7684\u65b9\u6cd5\u4e0e\u5217\u8868\u7c7b\u4f3c\uff1a</p> <ul> <li>\u6e05\u7a7a\u5b57\u5178\uff1a<code>name2code.clear()</code>\uff0c\u6ce8\u610f<code>clear()</code>\u65b9\u6cd5\u6ca1\u6709\u8fd4\u56de\u503c</li> <li>\u8fd4\u56de\u952ek\u5bf9\u5e94\u7684\u503c\uff0c\u7136\u540e\u79fb\u9664\u8be5\u952e\u503c\u5bf9\uff1a<code>name2code.pop(k, [default])</code></li> <li>\u8fd4\u56de\u6700\u540e\u6dfb\u52a0\u7684\u952e\u503c\uff0c\u5e76\u79fb\u9664\u8be5\u952e\u503c\u5bf9\uff1a<code>name2code.popitem()</code></li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#23","title":"2.3 \u5faa\u73af","text":"<p>\u4f7f\u7528for\u5faa\u73af\u53ef\u4ee5\u904d\u5386\u5b57\u5178\u7684\u952e\uff0c\u8bf7\u6ce8\u610f\uff0c\u56e0\u4e3a\u952e\u53ef\u6563\u5217\uff0c\u6240\u4ee5\u5176\u51fa\u73b0\u4e0d\u9075\u5faa\u7279\u5b9a\u7684\u987a\u5e8f\uff0c\u4ee5\u4e0b\u4ee3\u7801\u5728\u4f60\u7684\u7535\u8111\u4e0a\u8fd0\u884c\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u8f93\u51fa\u987a\u5e8f\uff08\u6ce8\uff1aPython 3.6\u53ca\u4e4b\u540e\u7684\u7248\u672c\u4fdd\u7559\u4e86\u952e\u503c\u5bf9\u6dfb\u52a0\u7684\u987a\u5e8f\uff0c\u6240\u4ee5\u7ed3\u679c\u662f\u786e\u5b9a\u7684\u4e86\uff09\uff1a</p> <pre><code>for i in name2code:\n    print(i, name2code[i])\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>Tony 1\nKevin 2\nLuis 3\nNick 0\n</code></pre> <p>\u5982\u679c\u540c\u65f6\u60f3\u7528\u952e\u548c\u503c\u8fdb\u884c\u904d\u5386\uff0c\u4e5f\u53ef\u4f7f\u7528<code>items()</code>\u65b9\u6cd5\uff1a</p> <pre><code>for k,v in name2code.items():\n    print(k,v)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>Tony 1\nKevin 2\nLuis 3\nNick 0\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#24","title":"2.4 \u53cd\u5411\u67e5\u627e","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u5178\uff0c\u4f7f\u7528\u952e\u53bb\u627e\u503c\u7684\u64cd\u4f5c\u5728\u4e0a\u6587\u5df2\u505a\u4ecb\u7ecd\uff0c\u5982\u679c\u60f3\u7528\u503c\u6765\u5bfb\u627e\u952e\uff0c\u6b64\u65f6\u5e94\u505a\u53cd\u5411\u67e5\u627e\u7684\u64cd\u4f5c\uff0c\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a<code>raise\u8bed\u53e5</code>\u629b\u51fa\u5f02\u5e38\uff0c\u7528\u4e8e\u663e\u793a\u53c2\u6570\u7684\u503c\u6709\u95ee\u9898\u3002</p> <pre><code>def reversed_lookup(d,v):\n    for i in d:\n        if d[i] == v:\n            return i\n    raise ValueError(\"\u6240\u67e5\u627e\u7684\u503c\u4e0d\u5728\u5b57\u5178\u4e2d\")\n\nreversed_lookup(name2code,5)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-33-832e824fe6b4&gt; in &lt;module&gt;\n----&gt; 1 reversed_lookup(name2code,5)\n\n&lt;ipython-input-32-be75152f6e58&gt; in reversed_lookup(d, v)\n      4             return i\n      5\n----&gt; 6     raise ValueError(\"\u6240\u67e5\u627e\u7684\u503c\u4e0d\u5728\u5b57\u5178\u4e2d\")\n\nValueError: \u6240\u67e5\u627e\u7684\u503c\u4e0d\u5728\u5b57\u5178\u4e2d\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#25","title":"2.5 \u5b57\u5178\u63a8\u5bfc","text":"<p>\u4ecePython 2.7\u5f00\u59cb\uff0c\u5217\u8868\u63a8\u5bfc\u548c\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4e5f\u88ab\u79fb\u690d\u5230\u4e86\u5b57\u5178\u4e0a\uff0c\u793a\u4f8b\u5982\u4e0b\uff0c</p> <pre><code>code2name = {code:name for name,code in name2code.items() if code &lt; 2}\nprint(code2name)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>{1: 'Tony', 0: 'Nick'}\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#3","title":"3 \u5b57\u5178\u7684\u53d8\u79cd","text":"<p>\u9664\u4e86dict\u4e4b\u5916\uff0c\u5728Python\u6807\u51c6\u5e93\u91cccollections\u6a21\u5757\u4e2d\u8fd8\u6709\u82e5\u5e72\u79cd\u4e0d\u540c\u7684\u6620\u5c04\u7c7b\u578b\uff1a</p> <ul> <li>collections.OrderedDict\uff1a\u8fd9\u4e2a\u7c7b\u578b\u5728\u6dfb\u52a0\u952e\u7684\u65f6\u5019\u4f1a\u4fdd\u6301\u952e\u7684\u987a\u5e8f\uff0c\u56e0\u6b64\u952e\u7684\u8fed\u4ee3\u987a\u5e8f\u59cb\u7ec8\u4fdd\u6301\u4e00\u81f4\u3002\u4f46\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u5b9a\u4e49\u5b8c\u6709\u5e8f\u5b57\u5178\u540e\u6ca1\u6709\u63d2\u5165\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u539f\u59cb\u7684\u952e\u503c\u5bf9\u4ecd\u7136\u662f\u65e0\u5e8f\u7684\uff0c\u548c\u666e\u901a\u5b57\u5178\u4e00\u6837\u3002</li> <li>collections.ChainMap\uff1a\u8fd9\u4e2a\u7c7b\u578b\u53ef\u4ee5\u5bb9\u7eb3\u591a\u4e2a\u4e0d\u540c\u7684\u6620\u5c04\u5bf9\u8c61\uff0c\u5728\u8fdb\u884c\u952e\u67e5\u627e\u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u88ab\u9010\u4e2a\u67e5\u627e\uff0c\u76f4\u5230\u627e\u5230\u5bf9\u5e94\u7684\u952e\u4e3a\u6b62\u3002\u5e38\u7528\u4e8e\u7ba1\u7406\u591a\u4e2a\u4ee3\u8868\u4e0d\u540c\u8303\u56f4\u548c\u4e0a\u4e0b\u6587\u7684\u5b57\u5178\u3002</li> <li>collections.Counter\uff1a\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u662f\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u952e\u66f4\u65b0\u65f6\uff0c\u8ba1\u6570\u5668\u4e5f\u968f\u4e4b\u66f4\u65b0\u3002\u5e38\u7528\u4e8e\u4e3a\u53ef\u6563\u5217\u8868\u8ba1\u6570\u6216\u4f5c\u4e3a\u591a\u91cd\u96c6\u5408\uff08\u96c6\u5408\u91cc\u5143\u7d20\u51fa\u73b0\u591a\u6b21\uff09\u3002</li> <li>colllections.UserDict\uff1a\u8be5\u7c7b\u4e3b\u8981\u7528\u4e8e\u8ba9\u7528\u6237\u7ee7\u627f\uff0c\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u4f1a\u6bd4\u7ee7\u627fdict\u8981\u66f4\u52a0\u65b9\u4fbf\uff0c\u4e3b\u8981\u662f\u56e0\u4e3adict\u7b49\u5185\u7f6e\u7c7b\u578b\u7684\u65b9\u6cd5\u901a\u5e38\u4f1a\u5ffd\u7565\u7528\u6237\u8986\u76d6\u7684\u65b9\u6cd5\uff0c\u9020\u6210\u610f\u6599\u4e0d\u5230\u7684\u9ebb\u70e6\uff0c\u8be6\u89c1\u300a\u6d41\u7545\u7684Python\u300b 12\u7ae0 - \u7ee7\u627f\u7684\u4f18\u7f3a\u70b9\u3002</li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2021-08-21-Python-dict/#4","title":"4 \u603b\u7ed3","text":"<p>\u4e0a\u8ff0\u77e5\u8bc6\u70b9\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\u90fd\u5341\u5206\u5e38\u7528\uff0c\u4ee5\u4e0b\u5185\u5bb9\u8fd8\u6db5\u76d6\u4e86\u8bb8\u591aPython\u7a0b\u5e8f\u5458\u591a\u5e74\u5b9e\u8df5\u7ecf\u9a8c\u7684\u603b\u7ed3\uff0c\u8ba9\u6211\u4eec\u518d\u56de\u987e\u4e00\u4e0b\uff1a</p> <ul> <li>dict\u7684\u952e\u5fc5\u987b\u662f\u53ef\u6563\u5217\u7684\u3002\u610f\u5473\u7740\u5728\u8fd9\u4e2a\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u4e2d\u6563\u5217\u503c\u4e0d\u53d8\uff0c\u5e76\u4e14\u5bf9\u8c61\u8981\u5b9e\u73b0<code>__hash__</code>\u65b9\u6cd5\uff0c\u652f\u6301\u901a\u8fc7\u4f7f\u7528<code>__eq__</code>\u65b9\u6cd5\u9a8c\u8bc1\u76f8\u7b49\u6027\u3002</li> <li>dict\u5185\u5b58\u8017\u8d39\u5de8\u5927\u3002\u56e0\u4e3a\u5b57\u5178\u4f7f\u7528\u6563\u5217\u8868\uff0c\u6563\u5217\u8868\u53c8\u5fc5\u987b\u7a00\u758f\uff0c\u5bfc\u81f4\u7a7a\u95f4\u5229\u7528\u7387\u4f4e\u4e0b\u3002\u5982\u679c\u6570\u636e\u91cf\u5de8\u5927\uff0c\u5efa\u8bae\u4f7f\u7528\u5143\u7ec4\u6216\u8005\u5217\u8868\u3002</li> <li>\u952e\u67e5\u8be2\u6548\u7387\u5f88\u9ad8\u3002\u53ea\u8981\u5b57\u5178\u80fd\u88ab\u88c5\u8fdb\u5185\u5b58\uff0c\u5176\u952e\u67e5\u8be2\u901f\u5ea6\u4e0d\u968f\u6570\u636e\u91cf\u589e\u5927\u800c\u51cf\u7f13\uff0c\u4f46\u901f\u5ea6\u5feb\u7684\u4ee3\u4ef7\u662f\u8f83\u5927\u7684\u7a7a\u95f4\u4f7f\u7528\u3002</li> <li>\u5411dict\u91cc\u6dfb\u52a0\u65b0\u7684\u952e\u53ef\u80fd\u4f1a\u6539\u53d8\u5df2\u6709\u952e\u7684\u987a\u5e8f\u3002\u5177\u4f53\u539f\u56e0\u4e0edict\u5b9e\u73b0\u65b9\u5f0f\u6709\u5173\uff0c\u5efa\u8bae\u4e0d\u8981\u5bf9dict\u540c\u65f6\u8fdb\u884c\u8fed\u4ee3\u548c\u4fee\u6539\uff0c\u6700\u597d\u5206\u6210\u4e24\u6b65\uff1a\u5148\u8fed\u4ee3\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9\u5e76\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fed\u4ee3\u4e4b\u540e\u518d\u5bf9\u539fdict\u66f4\u6539\u3002</li> </ul> <p>\u5728\u56de\u987e\u8fd9\u4e9b\u77e5\u8bc6\u65f6\uff0c\u81ea\u5df1\u4e5f\u6709\u4e86\u65b0\u7684\u7406\u89e3\u548c\u6536\u83b7\uff0c\u5e0c\u671b\u8fd9\u4e9b\u5185\u5bb9\u4e5f\u5bf9\u4f60\u6709\u5e2e\u52a9\uff01</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-09-21-Python-Closure/","title":"\u7406\u89e3Python\u95ed\u5305","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-09-21\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-09-21-Python-Closure/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u4f7f\u7528Python\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u4f60\u6216\u8bb8\u78b0\u5230\u8fc7\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4ee3\u7801\uff1a</p> <pre><code>def make_counter():\n    # \u5916\u5c42\u95ed\u5305\u51fd\u6570\n    count = 0\n    def counter():\n      # \u5d4c\u5957\u51fd\u6570\n\n        nonlocal count\n        count += 1\n        return count\n\n    return counter\n</code></pre> <p>\u4e00\u4e2a\u51fd\u6570\u91cc\u8fd8\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u5916\u5c42\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5185\u5c42\u7684\u51fd\u6570\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5b9a\u4e49\u51fd\u6570\u5462\uff1f\u8fd9\u6837\u6709\u4ec0\u4e48\u597d\u5904\uff0c\u8fd9\u7bc7\u6587\u7ae0\u6211\u4eec\u6765\u63ed\u5f00\u5b83\u795e\u79d8\u7684\u9762\u7eb1 - \u95ed\u5305\uff08Closure\uff09\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-09-21-Python-Closure/#2","title":"2 \u95ed\u5305\u7684\u8981\u70b9","text":"<p>\u95ed\u5305\u6307\u5ef6\u4f38\u4e86\u4f5c\u7528\u57df\u7684\u51fd\u6570\uff0c\u5b83\u4f1a\u5f15\u7528\u4e00\u4e2a\u4e0d\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u975e\u5168\u5c40\u53d8\u91cf(\u5982\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684count)\uff0cnonlocal\u7684\u52a0\u5165\u80fd\u628a\u53d8\u91cf\u6807\u8bb0\u4e3a\u81ea\u7531\u53d8\u91cf(Python 3\u624d\u52a0\u5165nonlocal\u5173\u952e\u5b57)\uff0c\u8ba9\u5185\u5c42\u5d4c\u5957\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u4f5c\u7528\u57df\u5916\u7684\u4e0d\u53ef\u53d8\u53d8\u91cf\u3002</p> <p>\u8c03\u7528make_counter\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2acounter\u51fd\u6570\u5bf9\u8c61\uff0c\u6bcf\u6b21\u8c03\u7528counter\u65f6\uff0c\u5b83\u4f1a\u66f4\u65b0count\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code># \u8fd0\u884c\u95ed\u5305\u51fd\u6570\ncounter = make_counter()\nprint(counter())\nprint(counter())\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>1\n2\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6709\u4e00\u70b9\u9700\u8981\u5c55\u5f00\u8bf4\u7684\u662fcount\u7684\u5386\u53f2\u503c\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0ccount\u662fmake_counter\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019count\u7684\u503c\u4e3a0\uff0c\u4f46\u8c03\u7528counter\u7684\u65f6\u5019\uff0cmake_counter\u51fd\u6570\u5df2\u7ecf\u8fd4\u56de\u4e86\uff0c\u672c\u5730\u4f5c\u7528\u57df\u7406\u5e94\u4e0d\u590d\u5b58\u5728\u3002</p> <p>\u5728counter\u51fd\u6570\u4e2d\uff0ccount\u662f\u81ea\u7531\u53d8\u91cf\uff0ccounter\u51fd\u6570\u5b9e\u73b0\u4e86\u5bf9\u53d8\u91cfcount\u7684\u7ed1\u5b9a\u3002\u53ef\u4ee5\u901a\u8fc7Python\u4e2d\u7684__code__\u5c5e\u6027\uff08\u8868\u793a\u7f16\u8bd1\u540e\u7684\u51fd\u6570\u5b9a\u4e49\u4f53\uff09\u67e5\u770b\u4fdd\u5b58\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u81ea\u7531\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code># \u67e5\u770b\u81ea\u7531\u53d8\u91cf\ncounter.__code__.co_freevars\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a <pre><code>('count',)\n</code></pre></p> <p>count\u7684\u7ed1\u5b9a\u5728\u8fd4\u56de\u7684counter\u51fd\u6570\u7684__closure__\u5c5e\u6027\u91cc\uff0c\u5176\u4e2d__closure__\u7684\u5404\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e8e<code>counter.__code__.co_freevars</code>\u4e2d\u7684\u4e00\u4e2a\u540d\u79f0\u3002\u8fd9\u4e9b\u5143\u7d20\u662fcell\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7cell_contents\u5c5e\u6027\u8bbf\u95ee\u5176\u5b58\u50a8\u7684\u503c\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>counter.__closure__[0].cell_contents\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>2\n</code></pre> <p>\u95ed\u5305\u80fd\u591f\u975e\u5e38\u7b80\u6d01\u3001\u76f4\u89c2\u5730\u89e3\u51b3\u8f7b\u91cf\u7ea7\u7684\u95ee\u9898\uff0c\u5982\u679c\u4e0a\u8ff0\u529f\u80fd\u7528<code>\u7c7b</code>\u6765\u5b9e\u73b0\u7684\u8bdd\uff0c\u4f1a\u957f\u6210\u8fd9\u6837\uff1a</p> <pre><code># \u7528\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u4ece0\u5f00\u59cb\u8ba1\u6570\nclass Counter:\n    def __init__(self):\n        self.count = 0\n\n    def __call__(self):\n        self.count += 1\n        return self.count\n\ncounter = Counter()\nprint(counter())\nprint(counter())\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>1\n2\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-09-21-Python-Closure/#3","title":"3 \u603b\u7ed3","text":"<p>\u95ed\u5305\u662f\u4e00\u79cd\u51fd\u6570\uff0c\u5b83\u4fdd\u7559\u4e86\u5b9a\u4e49\u51fd\u6570\u65f6\u5b58\u5728\u7684\u81ea\u7531\u53d8\u91cf\u7684\u7ed1\u5b9a\uff0c\u56e0\u6b64\uff0c\u5373\u4fbf\u662f\u51fd\u6570\u8fd4\u56de\u540e\u4f5c\u7528\u57df\u4e0d\u5b58\u5728\u4e86\uff0c\u90a3\u4e9b\u7ed1\u5b9a\u4ecd\u7136\u80fd\u591f\u88ab\u4f7f\u7528\u3002\u95ed\u5305\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b9e\u73b0\u4e00\u4e9b\u7b80\u5355\u7684\u7c7b\u7684\u529f\u80fd\uff0c\u540c\u65f6\u57fa\u4e8e\u6b64\u8fd8\u6709\u5f88\u591aPython\u7684\u9b54\u6cd5\u80fd\u591f\u5b9e\u73b0\uff0c\u6bd4\u5982\u88c5\u9970\u5668\uff0c\u5f85\u4e0b\u56de\u5206\u89e3\uff01</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u8ba8\u8bba\uff01</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/","title":"SQL\u4ee3\u7801\u89e3\u6790\u795e\u5668-sqlparse","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-10-16\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#1","title":"1 \u5f15\u8a00","text":"<p>\u4e00\u4e2a\u6570\u636e\u5206\u6790\u56e2\u961f\u5f80\u5f80\u4f1a\u79ef\u7d2f\u5927\u91cf\u57fa\u4e8eSQL\u7684\u4ee3\u7801\uff0c\u7528\u4e8e\u65e5\u5e38\u7684\u62a5\u8868\uff0c\u6a21\u578b\u6570\u636e\u63d0\u53d6\uff0c\u4e1a\u52a1\u51b3\u7b56\u7b49\u7b49\u3002\u6709\u65f6\u968f\u7740\u516c\u53f8\u7684\u53d1\u5c55\u548c\u6280\u672f\u66f4\u66ff\uff0c\u516c\u53f8\u7684\u6570\u636e\u4ed3\u5e93\u4f1a\u8fdb\u884c\u8fc1\u79fb\u6216\u91cd\u6784\uff0c\u5f53\u8868\u7ed3\u6784\uff0c\u5b57\u6bb5\u540d\u6216\u8005\u8868\u540d\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u5305\u542b\u8fd9\u4e9b\u8868\u7684SQL\u4ee3\u7801\u5c31\u9700\u8981\u76f8\u5e94\u5730\u8fdb\u884c\u6539\u5199\u3002\u4eba\u4e3a\u6539\u5199\u4e00\u6bb5\u6bb5\u4e1a\u52a1\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5bf9\u5b57\u6bb5\u6216\u8005\u8868\u540d\u7684\u4fee\u6539\uff0c\u5f80\u5f80\u6bd4\u8f83\u91cd\u590d\u800c\u4e14\u5bb9\u6613\u9057\u6f0f\u3002</p> <p>\u61d2\u60f0\u662f\u7a0b\u5e8f\u5458\u7684\u7b2c\u4e00\u751f\u4ea7\u529b\uff0c\u65e2\u7136\u662f\u91cd\u590d\u7684\u5de5\u4f5c\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4ec0\u4e48\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u81ea\u52a8\u5316\u8fd9\u4e00\u8fc7\u7a0b\u5462\uff1f</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#2-pythonsqlparse","title":"2 Python\u5f00\u6e90\u5de5\u5177\u2014\u2014sqlparse","text":"","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#21","title":"2.1 \u4ecb\u7ecd","text":"<p>\u60f3\u8981\u6539\u5199SQL\u4ee3\u7801\uff0c\u5173\u952e\u7684\u4e00\u6b65\u662f\u5bf9SQL\u8fdb\u884c\u89e3\u6790\u3002sqlparse\u662f\u57fa\u4e8ePython\u7684\u4e00\u4e2a\u65e0\u9a8c\u8bc1\u89e3\u6790\u5668\uff0c\u4ed6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684parse()\u51fd\u6570\u6765\u8fd4\u56de\u7c7b\u4f3c\u8bed\u6cd5\u6811\u7684\u89e3\u6790\u7ed3\u6784\u3002\u6211\u4eec\u7528_pprint_tree()\u51fd\u6570\u6253\u5370\u4e0b\u89e3\u6790\u540e\u7684SQL\u8bed\u53e5:</p> <pre><code>import sqlparse\nquery = 'Select a, col_2 as b from Table_A;'\nsqlparse.parse(query)[0]._pprint_tree()\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>|- 0 DML 'Select'\n|- 1 Whitespace ' '\n|- 2 IdentifierList 'col_1,...'\n|  |- 0 Identifier 'col_1'\n|  |  `- 0 Name 'col_1'\n|  |- 1 Punctuation ','\n|  |- 2 Whitespace ' '\n|  `- 3 Identifier 'col_2 ...'\n|     |- 0 Name 'col_2'\n|     |- 1 Whitespace ' '\n|     |- 2 Keyword 'as'\n|     |- 3 Whitespace ' '\n|     `- 4 Identifier 'b'\n|        `- 0 Name 'b'\n|- 3 Whitespace ' '\n|- 4 Keyword 'from'\n|- 5 Whitespace ' '\n|- 6 Identifier 'Table_A'\n|  `- 0 Name 'Table_A'\n`- 7 Punctuation ';'\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230sqlparse\u53ef\u4ee5\u51c6\u786e\u7684\u8bc6\u522b\u51fa\u67e5\u8be2\u8bed\u53e5\u4e2d\u7684\u5173\u952e\u8bcd\uff0c\u5e76\u4e14\u5b57\u6bb5\uff0c\u8868\u540d\u88ab\u8bc6\u522b\u6210\u4e86Identifier\u7c7b\u578b\u3002\u7ed3\u5408\u524d\u540etoken\u4e2d\u7684\u5173\u952e\u8bcd\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5224\u65ad\u51fa\u5177\u4f53\u662f\u5b57\u6bb5\u8fd8\u662f\u8868\u540d\u3002\u5728\u6b64\u4e4b\u524d\u8fd8\u9700\u8981\u4e86\u89e3\u5404\u79cd\u7c7b\u578b\u5305\u542b\u7684\u5404\u79cd\u65b9\u6cd5\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#22","title":"2.2 \u7c7b\u578b\u5b9a\u4e49","text":"<p>sqlparse\u7684\u57fa\u7840\u7c7b\u578b\u662fToken\uff0c\u5176\u4e2dttype\u548cvalue\u4e24\u4e2a\u5e38\u7528\u5c5e\u6027\u3002\u6b64\u5916\u7c7b\u4f3c\u6811\u7ed3\u6784\u7684\u8282\u70b9\uff0c\u4ed6\u53ef\u4ee5\u901a\u8fc7parent\u5c5e\u6027\u5173\u8054\u4e0a\u4e00\u5c42token\u3002\u5b83\u7684\u5e38\u7528\u65b9\u6cd5\u4e3b\u8981\u662f\u5bf9\u8be5token\u5c5e\u6027\u7684\u8bbf\u95ee\u548c\u5224\u65ad:</p> <p>class sqlparse.sql.Token(ttype, value):</p> <ul> <li> <p>flatten(): Resolve subgroups.</p> </li> <li> <p>has_ancestor(other): Returns True if other is in this tokens ancestry.</p> </li> <li> <p>is_child_of(other): Returns True if this token is a direct child of other.</p> </li> <li> <p>match(ttype, values, regex=False): checks whether the token matches the given arguments.</p> </li> <li> <p>within(group_cls): Returns True if this token is within group_cls.</p> </li> </ul> <p>TokenList\u662fToken\u7c7b\u578b\u7684\u7ee7\u627f\uff0c\u5b9a\u4e49\u4e3a\u4e00\u7fa4token\u7684\u96c6\u5408\u3002\u901a\u8fc7token.tokens\u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u5982\u4f8b\u5b50\u4e2d\u7684'col_2 as b'\u5c31\u88ab\u5224\u5b9a\u4e3a\u4e86Identifier\u7c7b\u578b\u7684TokenLis\u4ed6\u3002\u9664\u4e86\u7ee7\u627f\u548c\u90e8\u5206\u8986\u5199\u4e86Token\u7c7b\u578b\u7684\u65b9\u6cd5\u4ee5\u5916\uff0c\u5b83\u8fd8\u5b9a\u4e49\u4e86\u83b7\u53d6\u5b50token\u4f4d\u7f6e\uff0c\u540d\u79f0\uff0c\u5339\u914d\u641c\u7d22\u5b50token\u7b49\u65b9\u6cd5:</p> <p>class sqlparse.sql.TokenList(tokens=None):</p> <ul> <li> <p>flatten(): Generator yielding ungrouped tokens. This method is recursively called for all child tokens. (\u8986\u5199\u4e86flatten\u65b9\u6cd5)</p> </li> <li> <p>get_alias(): Returns the alias for this identifier or None.</p> </li> <li> <p>get_name(): Returns the name of this identifier.</p> </li> <li> <p>group_tokens(grp_cls, start, end, include_end=True, extend=False): Replace tokens by an instance of grp_cls.</p> </li> <li> <p>has_alias(): Returns True if an alias is present.</p> </li> <li> <p>token_first(skip_ws=True, skip_cm=False): Returns the first child token.</p> </li> <li> <p>token_index(token, start=0): Return list index of token.</p> </li> <li> <p>token_prev(idx, skip_ws=True, skip_cm=False): Returns the previous token relative to idx.*</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#23","title":"2.3 \u8bcd\u6cd5\u89e3\u6790","text":"<p>\u5bf9\u4e8eSQL\u4e2d\u7684DDL(Data Definition Language\uff0c\u6570\u636e\u5b9a\u4e49\u8bed\u8a00)/DML(Data Manipulation Language\uff0c\u6570\u636e\u64cd\u7eb5\u8bed\u8a00)\u7b49\u5173\u952e\u8bcd\uff0csqlparse\u4e3b\u8981\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u8bc6\u522b\uff0c\u6240\u6709\u7684\u6b63\u5219\u8868\u8fbe\u4e0etoken\u7c7b\u578b\u7684\u5bf9\u5e94\u5173\u7cfb\u50a8\u5b58\u5728keywords.py\u91cc\u7684SQL_REGEX\u53d8\u91cf\u4e2d\uff0c\u5fc5\u8981\u65f6\u53ef\u4ee5\u4fee\u6539\u6b63\u5219\u8868\u8fbe\u6765\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u4ed3\u5e93\u8bed\u6cd5\u548c\u51fd\u6570\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#3","title":"3 \u6848\u4f8b:\u4ece\u67e5\u8be2\u4e2d\u63d0\u53d6\u8868\u540d","text":"<p>sqlparse\u4f5c\u8005\u5728\u6e90\u7801\u4e2d\u63d0\u4f9b\u4e86\u63d0\u53d6\u8868\u540d\u7684\u8303\u4f8b\uff0c\u4e3b\u8981\u601d\u8def\u662f\u5728\u89e3\u6790\u8fc7\u7a0b\u4e2d\u9047\u5230\u5173\u952e\u8bcdfrom\u6216\u8005join\u540e\uff0c\u63d0\u53d6\u5176\u540e\u7684tokenList\u3002</p> <pre><code>ALL_JOIN_TYPE = ('LEFT JOIN', 'RIGHT JOIN', 'INNER JOIN', 'FULL JOIN', 'LEFT OUTER JOIN', 'FULL OUTER JOIN')\n\n\ndef is_subselect(parsed):\n\"\"\"\n    \u662f\u5426\u5b50\u67e5\u8be2\n    :param parsed: T.Token\n    \"\"\"\n    if not parsed.is_group:\n        return False\n    for item in parsed.tokens:\n        if item.ttype is DML and item.value.upper() == 'SELECT':\n            return True\n    return False\n\n\ndef extract_from_part(parsed):\n\"\"\"\n    \u63d0\u53d6from\u4e4b\u540e\u6a21\u5757\n    \"\"\"\n    from_seen = False\n    for item in parsed.tokens:\n        if from_seen:\n            if is_subselect(item):\n                for x in extract_from_part(item):\n                    yield x\n            elif item.ttype is Keyword:\n                from_seen = False\n                continue\n            else:\n                yield item\n        elif item.ttype is Keyword and item.value.upper() == 'FROM':\n            from_seen = True\n\n\ndef extract_join_part(parsed):\n\"\"\"\n    \u63d0\u53d6join\u4e4b\u540e\u6a21\u5757\n    \"\"\"\n    flag = False\n    for item in parsed.tokens:\n        if flag:\n            if item.ttype is Keyword:\n                flag = False\n                continue\n            else:\n                yield item\n        if item.ttype is Keyword and item.value.upper() in ALL_JOIN_TYPE:\n            flag = True\n\n\ndef extract_table_identifiers(token_stream):\n    for item in token_stream:\n        if isinstance(item, IdentifierList):\n            for identifier in item.get_identifiers():\n                yield identifier.get_name()\n        elif isinstance(item, Identifier):\n            yield item.get_name()\n        elif item.ttype is Keyword:\n            yield item.value\n\n\ndef extract_tables(sql):\n\"\"\"\n    \u63d0\u53d6sql\u4e2d\u7684\u8868\u540d\uff08select\u8bed\u53e5\uff09\n    \"\"\"\n    from_stream = extract_from_part(sqlparse.parse(sql)[0])\n    join_stream = extract_join_part(sqlparse.parse(sql)[0])\n    return list(extract_table_identifiers(from_stream)) + list(extract_table_identifiers(join_stream))\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-10-16-Python-package-sqlparse/#4","title":"4 \u603b\u7ed3","text":"<p>sqlparse\u662f\u4e00\u4e2a\u6bd4\u8f83\u5f3a\u5927\u7684\u57fa\u4e8epython\u8bed\u8a00\u7684SQL\u89e3\u6790\u5de5\u5177\uff0c\u5f00\u6e90\u5e93\u5728GitHub\u4e0a\u83b7\u5f97\u4e862.6k\u4e2a\u661f\u661f\u548c522\u6b21Fork\u3002\u5176\u4ee3\u7801\u7b80\u6d01\u9ad8\u6548\uff0c\u7ed3\u6784\u6e05\u6670\uff0c\u503c\u5f97\u611f\u5174\u8da3\u7684\u540c\u5b66\u7ec6\u7ec6\u9605\u8bfb\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/","title":"Python argparse \u6a21\u5757\u4ecb\u7ecd","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e 2021-11-22\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea6 7 \u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/#1","title":"1 \u524d\u8a00","text":"<p>Python \u4f5c\u4e3a\u811a\u672c\u8bed\u8a00\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5728\u547d\u4ee4\u884c\u4e2d\u8fdb\u884c\u542f\u52a8\uff0c\u4f46\u6709\u7684\u65f6\u5019\u6211\u4eec\u5f80\u5f80\u9700\u8981\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\u8ba9\u540c\u4e00\u5957\u7a0b\u5e8f\u89e3\u51b3\u66f4\u591a\u7c7b\u578b\u7684\u4efb\u52a1\u3002\u4f8b\u5982\u5728 12306 \u667a\u80fd\u8ba2\u7968\u9879\u76ee\u4e2d\uff0c\u811a\u672c\u6839\u636e\u547d\u4ee4\u884c\u4e2d\u4f20\u5165\u53c2\u6570\u7684\u4e0d\u540c\uff0c\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u8fd0\u884c\u6a21\u5f0f\uff0c\u5982:</p> <ul> <li>python run.py -r: \u8fd0\u884c\u62a2\u7968\u7a0b\u5e8f</li> <li>python run.py -c: \u8fc7\u6ee4 cdn</li> <li>python run.py -t: \u6d4b\u8bd5\u90ae\u7bb1\u548c server \u9171</li> </ul> <p>\u662f\u4e0d\u662f\u50cf\u6781\u4e86\u6211\u4eec\u5e73\u65f6\u4f7f\u7528 shell \u811a\u672c\u7684\u4e60\u60ef\uff1f\u4eca\u5929\u5c31\u60f3\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b Python \u80cc\u540e\u652f\u6301\u547d\u4ee4\u884c\u4ea4\u4e92(command line interface,CLI)\u7684\u6a21\u5757\u2014\u2014argparse\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/#2-argparse","title":"2 argparse \u4ecb\u7ecd","text":"<p>argparse \u6a21\u5757\u53ef\u4ee5\u8ba9\u4eba\u8f7b\u677e\u7f16\u5199\u7528\u6237\u53cb\u597d\u7684\u547d\u4ee4\u884c\u63a5\u53e3\uff0c\u901a\u5e38\u5728\u4e00\u4e2a\u9879\u76ee\u7684 CLI.py \u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u5230\u4ed6\u7684\u5f71\u5b50\u3002</p> <p>argparse \u7684\u4f7f\u7528\u4e3b\u8981\u5206\u4e3a\u4e09\u6b65\uff1a</p> <ol> <li>\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> <li>\u4f7f\u7528 add_argument() \u65b9\u6cd5\u5b9a\u4e49\u53ef\u4ee5\u4f20\u9012\u7684\u53c2\u6570</li> <li>\u4f7f\u7528 parse_args() \u65b9\u6cd5\u5c06\u53c2\u6570\u5bf9\u8c61\u4f20\u5165\u7a0b\u5e8f</li> </ol>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/#21","title":"2.1 \u4f20\u9012\u4f4d\u7f6e\u53c2\u6570","text":"<p>\u4f4d\u7f6e\u53c2\u6570\u662f\u5728\u547d\u4ee4\u884c\u4e2d\u5524\u8d77\u811a\u672c\u65f6\uff0c\u5fc5\u987b\u643a\u5e26\u7684\u53c2\u6570\u3002\u5728 add_argument()\u65b9\u6cd5\u4e2d\u5b9a\u4e49\u65f6\uff0c\u53c2\u6570\u540d\u79f0\u524d\u7f00\u6ca1\u6709\"-\"\u6216\"--\"\u3002\u5982\u679c\u5b9a\u4e49\u4e86\u4f4d\u7f6e\u53c2\u6570\uff0c\u8be5\u53c2\u6570\u5728\u547d\u4ee4\u884c\u4e2d\u5fc5\u4e0d\u53ef\u5c11\u3002</p> <p>\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b:</p> <pre><code>import argparse\n\ndef compute_square(d):\n'''\u8ba1\u7b97\u5e73\u65b9'''\n    return d ** 2\n\ndef create_parser():\n    # \u5b9e\u4f8b\u5316parser\u5bf9\u8c61\n    parser = argparse.ArgumentParser()\n    # \u6dfb\u52a0\u53c2\u6570\n    parser.add_argument(\"d\", type=int, help=\"return the square of the input numebr\")\n    # \u8fd4\u56deparser\u5bf9\u8c61\n    return parser\n\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u89e3\u6790\u5668\u5bf9\u8c61\n    parser = create_parser()\n    # \u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\n    args = parser.parse_args()\n    # \u8c03\u7528\u51fd\u6570\n    print(\"return value: \",compute_square(args.number))\n</code></pre> <p>\u6211\u4eec\u8bbe\u7f6e\u6539\u6587\u4ef6\u540d\u4e3a <code>ap.py</code>\u3002\u5f53\u6211\u4eec\u5728\u7ec8\u7aef\u4e2d\u542f\u52a8\u8be5\u6587\u4ef6\u5e76\u4f20\u5165\u4e00\u4e2a\u6574\u6570\u65f6\uff0c\u7a0b\u5e8f\u5c06\u4f1a\u6253\u5370\u6574\u6570\u7684\u5e73\u65b9:</p> <pre><code>$ python ap.py 4\nreturn value: 16\n</code></pre> <p>\u6ce8\u610f\u5728 <code>add_argument</code>\u65b9\u6cd5\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\u4e3a\u6574\u6570\uff0c\u5982\u679c\u4f20\u5165\u53c2\u6570\u7c7b\u578b\u4e0d\u80fd\u8f6c\u6362\u6210\u6574\u6570\u5219\u4f1a\u62a5\u9519\u3002</p> <pre><code>$ python ap.py four\nusage: ap.py [-h] number\nap.py: error: argument number: invalid int value: 'four'\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/#22","title":"2.2 \u4f20\u9012\u53ef\u9009\u53c2\u6570","text":"<p>\u53ef\u9009\u53c2\u6570\u7684\u540d\u79f0\u524d\u7f00\u542b\"-\",\"--\"\u3002\"-\"\u540e\u4e00\u822c\u63a5\u7b80\u79f0\uff0c\u5982\"-h\"\uff0c\"--\"\u540e\u4e00\u822c\u63a5\u5168\u79f0\uff0c\u5982\"--help\"\u3002\u53ef\u9009\u53c2\u6570\u4e00\u822c\u53ef\u4ee5\u4e0e Python \u811a\u672c\u4e2d\u7684\u6761\u4ef6\u903b\u8f91\u7ed3\u5408\uff0c\u5982:</p> <pre><code>import argparse\n\n\ndef compute_area(d, objshape=\"square\", return_int=False):\n'''\u8ba1\u7b97\u6b63\u65b9\u5f62\u6216\u5706\u5f62\u7684\u9762\u79ef'''\n    if objshape == \"square\":\n        result = d**2\n    elif objshape == \"circle\":\n        result = 3.14*(d/2)**2\n    else:\n        return \"Error: invalid shape\"\n\n    return f\"Area: {int(result) if return_int else result}\"\n\n\ndef create_parser():\n    # \u5b9e\u4f8b\u5316parser\u5bf9\u8c61\n    parser = argparse.ArgumentParser()\n    # \u6dfb\u52a0\u53c2\u6570\n    parser.add_argument(\"d\",\n                        type=int,\n                        help=\"return the square of the input numebr\")\n\n    parser.add_argument(\"-s\", \"--shape\",\n                        type=str,\n                        dest=\"objshape\",  # parse_args()\u8fd4\u56de\u7684Namespace\u4e2d\u53c2\u6570\u5bf9\u8c61\u7684\u540d\u5b57\uff0c\u5982\u4e0d\u6dfb\u52a0\u5219\u9ed8\u8ba4\u4e3a\"shape\"\n                        choices=['square','circle'],\n                        help=\"return the area of the shape\")\n\n    parser.add_argument(\"-i\", \"--int\",\n                        action=\"store_true\",\n                        dest=\"return_int\",\n                        help=\"return the area as an integer\")\n    # \u8fd4\u56deparser\u5bf9\u8c61\n    return parser\n\n\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u89e3\u6790\u5668\u5bf9\u8c61\n    parser = create_parser()\n    # \u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\n    args = parser.parse_args()\n    # \u83b7\u53d6\u53c2\u6570\u5b57\u5178\n    print('args dict:', vars(args))\n    # \u8c03\u7528\u51fd\u6570\n    print(compute_area(**vars(args)))\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u5206\u522b\u7528\u4e86 add_argument()\u65b9\u6cd5\u4e2d\u4e00\u4e9b\u5e38\u7528\u53c2\u6570\u6765\u5b9e\u73b0\u66f4\u89c4\u8303\u548c\u6d41\u7545\u7684\u53c2\u6570\u4f20\u9012:</p> <ul> <li>dest: \u6307\u5b9a\u4f20\u5165\u7684\u547d\u540d\u7a7a\u95f4(Namespace)\u7684\u53c2\u6570\u5bf9\u8c61\u540d\u79f0</li> <li>choices: \u9650\u5b9a\u53c2\u6570\u7684\u53ef\u9009\u8f93\u5165\u8303\u56f4</li> <li>action: \u5904\u7406\u53c2\u6570\uff0c\u8fd9\u91cc\u5c06\u53c2\u6570\u8bbe\u5b9a\u4e3a boolean\u3002</li> </ul> <p>\u6211\u4eec\u5c1d\u8bd5\u8ba1\u7b97\u4e00\u4e2a\u5706\u7684\u9762\u79ef\u5e76\u53d6\u6574\uff1a</p> <pre><code>$ python ap.py 4 -s circle -i\nargs dict: {'d': 4, 'objshape': 'circle', 'return_int': True}\nArea: 12\n</code></pre> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u6539\u52a8\u811a\u672c\u5185\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u7b80\u6d01\u5730\u5728\u7ec8\u7aef\u5185\u5b9e\u73b0\u91cd\u8981\u53c2\u6570\u7684\u63a7\u5236\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u6709\u6548\u6027\u3002</p>","tags":["python"]},{"location":"Main_Course/Coding/2021-11-21-Python-argparse/#3","title":"3. \u5c0f\u7ed3","text":"<p>\u9664\u4e86\u5e38\u7528\u7684\u65b9\u6cd5\u4ee5\u5916\uff0cargparse \u6a21\u5757\u8fd8\u5305\u542b</p> <ul> <li>add_argument_group(): \u6dfb\u52a0\u53c2\u6570\u7ec4</li> <li>add_subparsers(): \u6dfb\u52a0\u5b50\u547d\u4ee4</li> <li>add_mutually_exclusive_group(): \u521b\u5efa\u4e92\u65a5\u7ec4</li> </ul> <p>\u7b49\u7b49\u5b9e\u73b0\u76f8\u5bf9\u590d\u6742\u7684\u53c2\u6570\u4f20\u9012\u903b\u8f91\u7684\u65b9\u6cd5\uff0c\u4e86\u89e3\u5e76\u9002\u65f6\u5730\u8fd0\u7528\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u8282\u7701\u4e0d\u5c11\u8bbe\u5b9a\u89c4\u5219\u7684\u65f6\u95f4\u3002</p> <p>\u9891\u7e41\u7684\u4fee\u6539\u4ee3\u7801\u96be\u514d\u4f1a\u6709\u5931\u624b\u8ba9\u4ee3\u7801\u5d29\u6e83\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u60f3\u518d\u5371\u9669\u7684\u8fb9\u7f18\u8bd5\u63a2\u53c8\u60f3\u8981\u4fdd\u7559\u4e00\u5b9a\u7684\u7075\u6d3b\u6027\u7684\u8bdd\uff0c\u4e0d\u59a8\u8bd5\u8bd5 argparse \u5427\uff01</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/","title":"Google Python Style Guide","text":"<p>Info</p> <p>\u672c\u6587\u5b8c\u5168\u5f15\u7528\u4e8eGoogle\uff0c\u539f\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#1-background","title":"1 Background","text":"<p>Python is the main dynamic language used at Google. This style guide is a list of dos and don'ts for Python programs.</p> <p>To help you format code correctly, we've created a settings file for Vim. For Emacs, the default settings should be fine.</p> <p>Many teams use the Black or Pyink auto-formatter to avoid arguing over formatting.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2-python-language-rules","title":"2 Python Language Rules","text":"","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#21-lint","title":"2.1 Lint","text":"<p>Run <code>pylint</code> over your code using this pylintrc.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#211-definition","title":"2.1.1 Definition","text":"<p><code>pylint</code> is a tool for finding bugs and style problems in Python source code. It finds problems that are typically caught by a compiler for less dynamic languages like C and C++. Because of the dynamic nature of Python, some warnings may be incorrect; however, spurious warnings should be fairly infrequent.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#212-pros","title":"2.1.2 Pros","text":"<p>Catches easy-to-miss errors like typos, using-vars-before-assignment, etc.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#213-cons","title":"2.1.3 Cons","text":"<p><code>pylint</code> isn't perfect. To take advantage of it, sometimes we'll need to write around it, suppress its warnings or fix it.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#214-decision","title":"2.1.4 Decision","text":"<p>Make sure you run <code>pylint</code> on your code. Suppress warnings if they are inappropriate so that other issues are not hidden. To suppress warnings, you can set a line-level comment:</p> <pre><code>def do_PUT(self):  # WSGI name, so pylint: disable=invalid-name\n  ...\n</code></pre> <p><code>pylint</code> warnings are each identified by symbolic name (<code>empty-docstring</code>) Google-specific warnings start with <code>g-</code>.</p> <p>If the reason for the suppression is not clear from the symbolic name, add an explanation.</p> <p>Suppressing in this way has the advantage that we can easily search for suppressions and revisit them.</p> <p>You can get a list of <code>pylint</code> warnings by doing:</p> <pre><code>pylint --list-msgs\n</code></pre> <p>To get more information on a particular message, use:</p> <pre><code>pylint --help-msg=invalid-name\n</code></pre> <p>Prefer <code>pylint: disable</code> to the deprecated older form <code>pylint: disable-msg</code>.</p> <p>Unused argument warnings can be suppressed by deleting the variables at the beginning of the function. Always include a comment explaining why you are deleting it. \"Unused.\" is sufficient. For example:</p> <pre><code>def viking_cafe_order(spam: str, beans: str, eggs: str | None = None) -&gt; str:\n    del beans, eggs  # Unused by vikings.\n    return spam + spam + spam\n</code></pre> <p>Other common forms of suppressing this warning include using '<code>_</code>' as the identifier for the unused argument or prefixing the argument name with '<code>unused_</code>', or assigning them to '<code>_</code>'. These forms are allowed but no longer encouraged. These break callers that pass arguments by name and do not enforce that the arguments are actually unused.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#22-imports","title":"2.2 Imports","text":"<p>Use <code>import</code> statements for packages and modules only, not for individual classes or functions.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#221-definition","title":"2.2.1 Definition","text":"<p>Reusability mechanism for sharing code from one module to another.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#222-pros","title":"2.2.2 Pros","text":"<p>The namespace management convention is simple. The source of each identifier is indicated in a consistent way; <code>x.Obj</code> says that object <code>Obj</code> is defined in module <code>x</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#223-cons","title":"2.2.3 Cons","text":"<p>Module names can still collide. Some module names are inconveniently long.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#224-decision","title":"2.2.4 Decision","text":"<ul> <li>Use <code>import x</code> for importing packages and modules.</li> <li>Use <code>from x import y</code> where <code>x</code> is the package prefix and <code>y</code> is the module     name with no prefix.</li> <li>Use <code>from x import y as z</code> in any of the following circumstances:<ul> <li>Two modules named <code>y</code> are to be imported.</li> <li><code>y</code> conflicts with a top-level name defined in the current module.</li> <li><code>y</code> conflicts with a common parameter name that is part of the public     API (e.g., <code>features</code>).</li> <li><code>y</code> is an inconveniently long name.</li> </ul> </li> <li>Use <code>import y as z</code> only when <code>z</code> is a standard abbreviation (e.g., <code>np</code> for     <code>numpy</code>).</li> </ul> <p>For example the module <code>sound.effects.echo</code> may be imported as follows:</p> <pre><code>from sound.effects import echo\n...\necho.EchoFilter(input, output, delay=0.7, atten=4)\n</code></pre> <p>Do not use relative names in imports. Even if the module is in the same package, use the full package name. This helps prevent unintentionally importing a package twice.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2241-exemptions","title":"2.2.4.1 Exemptions","text":"<p>Exemptions from this rule:</p> <ul> <li>Symbols from the following modules are used to support static analysis and     type checking:<ul> <li><code>typing</code> module</li> <li><code>collections.abc</code> module</li> <li><code>typing_extensions</code> module</li> </ul> </li> <li>Redirects from the     six.moves module.</li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#23-packages","title":"2.3 Packages","text":"<p>Import each module using the full pathname location of the module.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#231-pros","title":"2.3.1 Pros","text":"<p>Avoids conflicts in module names or incorrect imports due to the module search path not being what the author expected. Makes it easier to find modules.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#232-cons","title":"2.3.2 Cons","text":"<p>Makes it harder to deploy code because you have to replicate the package hierarchy. Not really a problem with modern deployment mechanisms.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#233-decision","title":"2.3.3 Decision","text":"<p>All new code should import each module by its full package name.</p> <p>Imports should be as follows:</p> <pre><code>Yes:\n  # Reference absl.flags in code with the complete name (verbose).\n  import absl.flags\n  from doctor.who import jodie\n\n  _FOO = absl.flags.DEFINE_string(...)\n</code></pre> <pre><code>Yes:\n  # Reference flags in code with just the module name (common).\n  from absl import flags\n  from doctor.who import jodie\n\n  _FOO = flags.DEFINE_string(...)\n</code></pre> <p>(assume this file lives in <code>doctor/who/</code> where <code>jodie.py</code> also exists)</p> <pre><code>No:\n  # Unclear what module the author wanted and what will be imported.  The actual\n  # import behavior depends on external factors controlling sys.path.\n  # Which possible jodie module did the author intend to import?\n  import jodie\n</code></pre> <p>The directory the main binary is located in should not be assumed to be in <code>sys.path</code> despite that happening in some environments. This being the case, code should assume that <code>import jodie</code> refers to a third-party or top-level package named <code>jodie</code>, not a local <code>jodie.py</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#24-exceptions","title":"2.4 Exceptions","text":"<p>Exceptions are allowed but must be used carefully.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#241-definition","title":"2.4.1 Definition","text":"<p>Exceptions are a means of breaking out of normal control flow to handle errors or other exceptional conditions.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#242-pros","title":"2.4.2 Pros","text":"<p>The control flow of normal operation code is not cluttered by error-handling code. It also allows the control flow to skip multiple frames when a certain condition occurs, e.g., returning from N nested functions in one step instead of having to plumb error codes through.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#243-cons","title":"2.4.3 Cons","text":"<p>May cause the control flow to be confusing. Easy to miss error cases when making library calls.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#244-decision","title":"2.4.4 Decision","text":"<p>Exceptions must follow certain conditions:</p> <ul> <li> <p>Make use of built-in exception classes when it makes sense. For example,     raise a <code>ValueError</code> to indicate a programming mistake like a violated     precondition (such as if you were passed a negative number but required a     positive one). Do not use <code>assert</code> statements for validating argument values     of a public API. <code>assert</code> is used to ensure internal correctness, not to     enforce correct usage nor to indicate that some unexpected event occurred.     If an exception is desired in the latter cases, use a raise statement. For     example:</p> <pre><code>Yes:\n  def connect_to_next_port(self, minimum: int) -&gt; int:\n\"\"\"Connects to the next available port.\n\n    Args:\n      minimum: A port value greater or equal to 1024.\n\n    Returns:\n      The new minimum port.\n\n    Raises:\n      ConnectionError: If no available port is found.\n    \"\"\"\n    if minimum &lt; 1024:\n      # Note that this raising of ValueError is not mentioned in the doc\n      # string's \"Raises:\" section because it is not appropriate to\n      # guarantee this specific behavioral reaction to API misuse.\n      raise ValueError(f'Min. port must be at least 1024, not {minimum}.')\n    port = self._find_next_open_port(minimum)\n    if port is None:\n      raise ConnectionError(\n          f'Could not connect to service on port {minimum} or higher.')\n    assert port &gt;= minimum, (\n        f'Unexpected port {port} when minimum was {minimum}.')\n    return port\n</code></pre> <p><pre><code>No:\n  def connect_to_next_port(self, minimum: int) -&gt; int:\n\"\"\"Connects to the next available port.\n\n    Args:\n      minimum: A port value greater or equal to 1024.\n\n    Returns:\n      The new minimum port.\n    \"\"\"\n    assert minimum &gt;= 1024, 'Minimum port must be at least 1024.'\n    port = self._find_next_open_port(minimum)\n    assert port is not None\n    return port\n</code></pre> -   Libraries or packages may define their own exceptions. When doing so they must inherit from an existing exception class. Exception names should end in <code>Error</code> and should not introduce repetition (<code>foo.FooError</code>).</p> </li> <li> <p>Never use catch-all <code>except:</code> statements, or catch <code>Exception</code> or     <code>StandardError</code>, unless you are</p> <ul> <li>re-raising the exception, or</li> <li>creating an isolation point in the program where exceptions are not     propagated but are recorded and suppressed instead, such as protecting a     thread from crashing by guarding its outermost block.</li> </ul> <p>Python is very tolerant in this regard and <code>except:</code> will really catch everything including misspelled names, sys.exit() calls, Ctrl+C interrupts, unittest failures and all kinds of other exceptions that you simply don't want to catch.</p> </li> <li> <p>Minimize the amount of code in a <code>try</code>/<code>except</code> block. The larger the body     of the <code>try</code>, the more likely that an exception will be raised by a line of     code that you didn't expect to raise an exception. In those cases, the     <code>try</code>/<code>except</code> block hides a real error.</p> </li> <li> <p>Use the <code>finally</code> clause to execute code whether or not an exception is     raised in the <code>try</code> block. This is often useful for cleanup, i.e., closing a     file.</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#25-mutable-global-state","title":"2.5 Mutable Global State","text":"<p>Avoid mutable global state.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#251-definition","title":"2.5.1 Definition","text":"<p>Module-level values or class attributes that can get mutated during program execution.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#252-pros","title":"2.5.2 Pros","text":"<p>Occasionally useful.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#253-cons","title":"2.5.3 Cons","text":"<ul> <li> <p>Breaks encapsulation: Such design can make it hard to achieve valid     objectives. For example, if global state is used to manage a database     connection, then connecting to two different databases at the same time     (such as for computing differences during a migration) becomes difficult.     Similar problems easily arise with global registries.</p> </li> <li> <p>Has the potential to change module behavior during the import, because     assignments to global variables are done when the module is first imported.</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#254-decision","title":"2.5.4 Decision","text":"<p>Avoid mutable global state.</p> <p>In those rare cases where using global state is warranted, mutable global entities should be declared at the module level or as a class attribute and made internal by prepending an <code>_</code> to the name. If necessary, external access to mutable global state must be done through public functions or class methods. See Naming below. Please explain the design reasons why mutable global state is being used in a comment or a doc linked to from a comment.</p> <p>Module-level constants are permitted and encouraged. For example: <code>_MAX_HOLY_HANDGRENADE_COUNT = 3</code> for an internal use constant or <code>SIR_LANCELOTS_FAVORITE_COLOR = \"blue\"</code> for a public API constant. Constants must be named using all caps with underscores. See Naming below.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#26-nestedlocalinner-classes-and-functions","title":"2.6 Nested/Local/Inner Classes and Functions","text":"<p>Nested local functions or classes are fine when used to close over a local variable. Inner classes are fine.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#261-definition","title":"2.6.1 Definition","text":"<p>A class can be defined inside of a method, function, or class. A function can be defined inside a method or function. Nested functions have read-only access to variables defined in enclosing scopes.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#262-pros","title":"2.6.2 Pros","text":"<p>Allows definition of utility classes and functions that are only used inside of a very limited scope. Very ADT-y. Commonly used for implementing decorators.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#263-cons","title":"2.6.3 Cons","text":"<p>Nested functions and classes cannot be directly tested. Nesting can make the outer function longer and less readable.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#264-decision","title":"2.6.4 Decision","text":"<p>They are fine with some caveats. Avoid nested functions or classes except when closing over a local value other than <code>self</code> or <code>cls</code>. Do not nest a function just to hide it from users of a module. Instead, prefix its name with an _ at the module level so that it can still be accessed by tests.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#27-comprehensions-generator-expressions","title":"2.7 Comprehensions &amp; Generator Expressions","text":"<p>Okay to use for simple cases.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#271-definition","title":"2.7.1 Definition","text":"<p>List, Dict, and Set comprehensions as well as generator expressions provide a concise and efficient way to create container types and iterators without resorting to the use of traditional loops, <code>map()</code>, <code>filter()</code>, or <code>lambda</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#272-pros","title":"2.7.2 Pros","text":"<p>Simple comprehensions can be clearer and simpler than other dict, list, or set creation techniques. Generator expressions can be very efficient, since they avoid the creation of a list entirely.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#273-cons","title":"2.7.3 Cons","text":"<p>Complicated comprehensions or generator expressions can be hard to read.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#274-decision","title":"2.7.4 Decision","text":"<p>Okay to use for simple cases. Each portion must fit on one line: mapping expression, <code>for</code> clause, filter expression. Multiple <code>for</code> clauses or filter expressions are not permitted. Use loops instead when things get more complicated.</p> <pre><code>Yes:\n  result = [mapping_expr for value in iterable if filter_expr]\n\n  result = [{'key': value} for value in iterable\n            if a_long_filter_expression(value)]\n\n  result = [complicated_transform(x)\n            for x in iterable if predicate(x)]\n\n  descriptive_name = [\n      transform({'key': key, 'value': value}, color='black')\n      for key, value in generate_iterable(some_input)\n      if complicated_condition_is_met(key, value)\n  ]\n\n  result = []\n  for x in range(10):\n      for y in range(5):\n          if x * y &gt; 10:\n              result.append((x, y))\n\n  return {x: complicated_transform(x)\n          for x in long_generator_function(parameter)\n          if x is not None}\n\n  squares_generator = (x**2 for x in range(10))\n\n  unique_names = {user.name for user in users if user is not None}\n\n  eat(jelly_bean for jelly_bean in jelly_beans\n      if jelly_bean.color == 'black')\n</code></pre> <pre><code>No:\n  result = [complicated_transform(\n                x, some_argument=x+1)\n            for x in iterable if predicate(x)]\n\n  result = [(x, y) for x in range(10) for y in range(5) if x * y &gt; 10]\n\n  return ((x, y, z)\n          for x in range(5)\n          for y in range(5)\n          if x != y\n          for z in range(5)\n          if y != z)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#28-default-iterators-and-operators","title":"2.8 Default Iterators and Operators","text":"<p>Use default iterators and operators for types that support them, like lists, dictionaries, and files.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#281-definition","title":"2.8.1 Definition","text":"<p>Container types, like dictionaries and lists, define default iterators and membership test operators (\"in\" and \"not in\").</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#282-pros","title":"2.8.2 Pros","text":"<p>The default iterators and operators are simple and efficient. They express the operation directly, without extra method calls. A function that uses default operators is generic. It can be used with any type that supports the operation.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#283-cons","title":"2.8.3 Cons","text":"<p>You can't tell the type of objects by reading the method names (unless the variable has type annotations). This is also an advantage.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#284-decision","title":"2.8.4 Decision","text":"<p>Use default iterators and operators for types that support them, like lists, dictionaries, and files. The built-in types define iterator methods, too. Prefer these methods to methods that return lists, except that you should not mutate a container while iterating over it.</p> <pre><code>Yes:  for key in adict: ...\n      if obj in alist: ...\n      for line in afile: ...\n      for k, v in adict.items(): ...\n</code></pre> <pre><code>No:   for key in adict.keys(): ...\n      for line in afile.readlines(): ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#29-generators","title":"2.9 Generators","text":"<p>Use generators as needed.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#291-definition","title":"2.9.1 Definition","text":"<p>A generator function returns an iterator that yields a value each time it executes a yield statement. After it yields a value, the runtime state of the generator function is suspended until the next value is needed.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#292-pros","title":"2.9.2 Pros","text":"<p>Simpler code, because the state of local variables and control flow are preserved for each call. A generator uses less memory than a function that creates an entire list of values at once.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#293-cons","title":"2.9.3 Cons","text":"<p>Local variables in the generator will not be garbage collected until the generator is either consumed to exhaustion or itself garbage collected.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#294-decision","title":"2.9.4 Decision","text":"<p>Fine. Use \"Yields:\" rather than \"Returns:\" in the docstring for generator functions.</p> <p>If the generator manages an expensive resource, make sure to force the clean up.</p> <p>A good way to do the clean up is by wrapping the generator with a context manager PEP-0533.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#210-lambda-functions","title":"2.10 Lambda Functions","text":"<p>Okay for one-liners. Prefer generator expressions over <code>map()</code> or <code>filter()</code> with a <code>lambda</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2101-definition","title":"2.10.1 Definition","text":"<p>Lambdas define anonymous functions in an expression, as opposed to a statement.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2102-pros","title":"2.10.2 Pros","text":"<p>Convenient.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2103-cons","title":"2.10.3 Cons","text":"<p>Harder to read and debug than local functions. The lack of names means stack traces are more difficult to understand. Expressiveness is limited because the function may only contain an expression.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2104-decision","title":"2.10.4 Decision","text":"<p>Okay to use them for one-liners. If the code inside the lambda function is longer than 60-80 chars, it's probably better to define it as a regular nested function.</p> <p>For common operations like multiplication, use the functions from the <code>operator</code> module instead of lambda functions. For example, prefer <code>operator.mul</code> to <code>lambda x, y: x * y</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#211-conditional-expressions","title":"2.11 Conditional Expressions","text":"<p>Okay for simple cases.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2111-definition","title":"2.11.1 Definition","text":"<p>Conditional expressions (sometimes called a \u201cternary operator\u201d) are mechanisms that provide a shorter syntax for if statements. For example: <code>x = 1 if cond else 2</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2112-pros","title":"2.11.2 Pros","text":"<p>Shorter and more convenient than an if statement.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2113-cons","title":"2.11.3 Cons","text":"<p>May be harder to read than an if statement. The condition may be difficult to locate if the expression is long.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2114-decision","title":"2.11.4 Decision","text":"<p>Okay to use for simple cases. Each portion must fit on one line: true-expression, if-expression, else-expression. Use a complete if statement when things get more complicated.</p> <pre><code>Yes:\n    one_line = 'yes' if predicate(value) else 'no'\n    slightly_split = ('yes' if predicate(value)\n                      else 'no, nein, nyet')\n    the_longest_ternary_style_that_can_be_done = (\n        'yes, true, affirmative, confirmed, correct'\n        if predicate(value)\n        else 'no, false, negative, nay')\n</code></pre> <pre><code>No:\n    bad_line_breaking = ('yes' if predicate(value) else\n                         'no')\n    portion_too_long = ('yes'\n                        if some_long_module.some_long_predicate_function(\n                            really_long_variable_name)\n                        else 'no, false, negative, nay')\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#212-default-argument-values","title":"2.12 Default Argument Values","text":"<p>Okay in most cases.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2121-definition","title":"2.12.1 Definition","text":"<p>You can specify values for variables at the end of a function's parameter list, e.g., <code>def foo(a, b=0):</code>. If <code>foo</code> is called with only one argument, <code>b</code> is set to 0. If it is called with two arguments, <code>b</code> has the value of the second argument.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2122-pros","title":"2.12.2 Pros","text":"<p>Often you have a function that uses lots of default values, but on rare occasions you want to override the defaults. Default argument values provide an easy way to do this, without having to define lots of functions for the rare exceptions. As Python does not support overloaded methods/functions, default arguments are an easy way of \"faking\" the overloading behavior.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2123-cons","title":"2.12.3 Cons","text":"<p>Default arguments are evaluated once at module load time. This may cause problems if the argument is a mutable object such as a list or a dictionary. If the function modifies the object (e.g., by appending an item to a list), the default value is modified.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2124-decision","title":"2.12.4 Decision","text":"<p>Okay to use with the following caveat:</p> <p>Do not use mutable objects as default values in the function or method definition.</p> <pre><code>Yes: def foo(a, b=None):\n         if b is None:\n             b = []\nYes: def foo(a, b: Sequence | None = None):\n         if b is None:\n             b = []\nYes: def foo(a, b: Sequence = ()):  # Empty tuple OK since tuples are immutable.\n         ...\n</code></pre> <pre><code>from absl import flags\n_FOO = flags.DEFINE_string(...)\n\nNo:  def foo(a, b=[]):\n         ...\nNo:  def foo(a, b=time.time()):  # The time the module was loaded???\n         ...\nNo:  def foo(a, b=_FOO.value):  # sys.argv has not yet been parsed...\n         ...\nNo:  def foo(a, b: Mapping = {}):  # Could still get passed to unchecked code.\n         ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#213-properties","title":"2.13 Properties","text":"<p>Properties may be used to control getting or setting attributes that require trivial computations or logic. Property implementations must match the general expectations of regular attribute access: that they are cheap, straightforward, and unsurprising.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2131-definition","title":"2.13.1 Definition","text":"<p>A way to wrap method calls for getting and setting an attribute as a standard attribute access.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2132-pros","title":"2.13.2 Pros","text":"<ul> <li>Allows for an attribute access and assignment API rather than     getter and setter method calls.</li> <li>Can be used to make an attribute read-only.</li> <li>Allows calculations to be lazy.</li> <li>Provides a way to maintain the public interface of a class when the     internals evolve independently of class users.</li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2133-cons","title":"2.13.3 Cons","text":"<ul> <li>Can hide side-effects much like operator overloading.</li> <li>Can be confusing for subclasses.</li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2134-decision","title":"2.13.4 Decision","text":"<p>Properties are allowed, but, like operator overloading, should only be used when necessary and match the expectations of typical attribute access; follow the getters and setters rules otherwise.</p> <p>For example, using a property to simply both get and set an internal attribute isn't allowed: there is no computation occurring, so the property is unnecessary (make the attribute public instead). In comparison, using a property to control attribute access or to calculate a trivially derived value is allowed: the logic is simple and unsurprising.</p> <p>Properties should be created with the <code>@property</code> decorator. Manually implementing a property descriptor is considered a power feature.</p> <p>Inheritance with properties can be non-obvious. Do not use properties to implement computations a subclass may ever want to override and extend.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#214-truefalse-evaluations","title":"2.14 True/False Evaluations","text":"<p>Use the \"implicit\" false if at all possible.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2141-definition","title":"2.14.1 Definition","text":"<p>Python evaluates certain values as <code>False</code> when in a boolean context. A quick \"rule of thumb\" is that all \"empty\" values are considered false, so <code>0, None, [], {}, ''</code> all evaluate as false in a boolean context.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2142-pros","title":"2.14.2 Pros","text":"<p>Conditions using Python booleans are easier to read and less error-prone. In most cases, they're also faster.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2143-cons","title":"2.14.3 Cons","text":"<p>May look strange to C/C++ developers.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2144-decision","title":"2.14.4 Decision","text":"<p>Use the \"implicit\" false if possible, e.g., <code>if foo:</code> rather than <code>if foo != []:</code>. There are a few caveats that you should keep in mind though:</p> <ul> <li> <p>Always use <code>if foo is None:</code> (or <code>is not None</code>) to check for a <code>None</code> value.     E.g., when testing whether a variable or argument that defaults to <code>None</code>     was set to some other value. The other value might be a value that's false     in a boolean context!</p> </li> <li> <p>Never compare a boolean variable to <code>False</code> using <code>==</code>. Use <code>if not x:</code>     instead. If you need to distinguish <code>False</code> from <code>None</code> then chain the     expressions, such as <code>if not x and x is not None:</code>.</p> </li> <li> <p>For sequences (strings, lists, tuples), use the fact that empty sequences     are false, so <code>if seq:</code> and <code>if not seq:</code> are preferable to <code>if len(seq):</code>     and <code>if not len(seq):</code> respectively.</p> </li> <li> <p>When handling integers, implicit false may involve more risk than benefit     (i.e., accidentally handling <code>None</code> as 0). You may compare a value which is     known to be an integer (and is not the result of <code>len()</code>) against the     integer 0.</p> <pre><code>Yes: if not users:\n         print('no users')\n\n     if i % 10 == 0:\n         self.handle_multiple_of_ten()\n\n     def f(x=None):\n         if x is None:\n             x = []\n</code></pre> <pre><code>No:  if len(users) == 0:\n         print('no users')\n\n     if not i % 10:\n         self.handle_multiple_of_ten()\n\n     def f(x=None):\n         x = x or []\n</code></pre> </li> <li> <p>Note that <code>'0'</code> (i.e., <code>0</code> as string) evaluates to true.</p> </li> <li> <p>Note that Numpy arrays may raise an exception in an implicit boolean     context. Prefer the <code>.size</code> attribute when testing emptiness of a <code>np.array</code>     (e.g. <code>if not users.size</code>).</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#216-lexical-scoping","title":"2.16 Lexical Scoping","text":"<p>Okay to use.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2161-definition","title":"2.16.1 Definition","text":"<p>A nested Python function can refer to variables defined in enclosing functions, but cannot assign to them. Variable bindings are resolved using lexical scoping, that is, based on the static program text. Any assignment to a name in a block will cause Python to treat all references to that name as a local variable, even if the use precedes the assignment. If a global declaration occurs, the name is treated as a global variable.</p> <p>An example of the use of this feature is:</p> <pre><code>def get_adder(summand1: float) -&gt; Callable[[float], float]:\n\"\"\"Returns a function that adds numbers to a given number.\"\"\"\n    def adder(summand2: float) -&gt; float:\n        return summand1 + summand2\n\n    return adder\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2162-pros","title":"2.16.2 Pros","text":"<p>Often results in clearer, more elegant code. Especially comforting to experienced Lisp and Scheme (and Haskell and ML and ...) programmers.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2163-cons","title":"2.16.3 Cons","text":"<p>Can lead to confusing bugs, such as this example based on PEP-0227:</p> <pre><code>i = 4\ndef foo(x: Iterable[int]):\n    def bar():\n        print(i, end='')\n    # ...\n    # A bunch of code here\n    # ...\n    for i in x:  # Ah, i *is* local to foo, so this is what bar sees\n        print(i, end='')\n    bar()\n</code></pre> <p>So <code>foo([1, 2, 3])</code> will print <code>1 2 3 3</code>, not <code>1 2 3 4</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2164-decision","title":"2.16.4 Decision","text":"<p>Okay to use.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#217-function-and-method-decorators","title":"2.17 Function and Method Decorators","text":"<p>Use decorators judiciously when there is a clear advantage. Avoid <code>staticmethod</code> and limit use of <code>classmethod</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2171-definition","title":"2.17.1 Definition","text":"<p>Decorators for Functions and Methods (a.k.a \"the <code>@</code> notation\"). One common decorator is <code>@property</code>, used for converting ordinary methods into dynamically computed attributes. However, the decorator syntax allows for user-defined decorators as well. Specifically, for some function <code>my_decorator</code>, this:</p> <pre><code>class C:\n    @my_decorator\n    def method(self):\n        # method body ...\n</code></pre> <p>is equivalent to:</p> <pre><code>class C:\n    def method(self):\n        # method body ...\n    method = my_decorator(method)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2172-pros","title":"2.17.2 Pros","text":"<p>Elegantly specifies some transformation on a method; the transformation might eliminate some repetitive code, enforce invariants, etc.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2173-cons","title":"2.17.3 Cons","text":"<p>Decorators can perform arbitrary operations on a function's arguments or return values, resulting in surprising implicit behavior. Additionally, decorators execute at object definition time. For module-level objects (classes, module functions, ...) this happens at import time. Failures in decorator code are pretty much impossible to recover from.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2174-decision","title":"2.17.4 Decision","text":"<p>Use decorators judiciously when there is a clear advantage. Decorators should follow the same import and naming guidelines as functions. Decorator pydoc should clearly state that the function is a decorator. Write unit tests for decorators.</p> <p>Avoid external dependencies in the decorator itself (e.g. don't rely on files, sockets, database connections, etc.), since they might not be available when the decorator runs (at import time, perhaps from <code>pydoc</code> or other tools). A decorator that is called with valid parameters should (as much as possible) be guaranteed to succeed in all cases.</p> <p>Decorators are a special case of \"top-level code\" - see main for more discussion.</p> <p>Never use <code>staticmethod</code> unless forced to in order to integrate with an API defined in an existing library. Write a module-level function instead.</p> <p>Use <code>classmethod</code> only when writing a named constructor, or a class-specific routine that modifies necessary global state such as a process-wide cache.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#218-threading","title":"2.18 Threading","text":"<p>Do not rely on the atomicity of built-in types.</p> <p>While Python's built-in data types such as dictionaries appear to have atomic operations, there are corner cases where they aren't atomic (e.g. if <code>__hash__</code> or <code>__eq__</code> are implemented as Python methods) and their atomicity should not be relied upon. Neither should you rely on atomic variable assignment (since this in turn depends on dictionaries).</p> <p>Use the <code>queue</code> module's <code>Queue</code> data type as the preferred way to communicate data between threads. Otherwise, use the <code>threading</code> module and its locking primitives. Prefer condition variables and <code>threading.Condition</code> instead of using lower-level locks.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#219-power-features","title":"2.19 Power Features","text":"<p>Avoid these features.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2191-definition","title":"2.19.1 Definition","text":"<p>Python is an extremely flexible language and gives you many fancy features such as custom metaclasses, access to bytecode, on-the-fly compilation, dynamic inheritance, object reparenting, import hacks, reflection (e.g. some uses of <code>getattr()</code>), modification of system internals, <code>__del__</code> methods implementing customized cleanup, etc.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2192-pros","title":"2.19.2 Pros","text":"<p>These are powerful language features. They can make your code more compact.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2193-cons","title":"2.19.3 Cons","text":"<p>It's very tempting to use these \"cool\" features when they're not absolutely necessary. It's harder to read, understand, and debug code that's using unusual features underneath. It doesn't seem that way at first (to the original author), but when revisiting the code, it tends to be more difficult than code that is longer but is straightforward.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2194-decision","title":"2.19.4 Decision","text":"<p>Avoid these features in your code.</p> <p>Standard library modules and classes that internally use these features are okay to use (for example, <code>abc.ABCMeta</code>, <code>dataclasses</code>, and <code>enum</code>).</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#220-modern-python-from-__future__-imports","title":"2.20 Modern Python: from __future__ imports","text":"<p>New language version semantic changes may be gated behind a special future import to enable them on a per-file basis within earlier runtimes.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2201-definition","title":"2.20.1 Definition","text":"<p>Being able to turn on some of the more modern features via <code>from __future__ import</code> statements allows early use of features from expected future Python versions.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2202-pros","title":"2.20.2 Pros","text":"<p>This has proven to make runtime version upgrades smoother as changes can be made on a per-file basis while declaring compatibility and preventing regressions within those files. Modern code is more maintainable as it is less likely to accumulate technical debt that will be problematic during future runtime upgrades.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2203-cons","title":"2.20.3 Cons","text":"<p>Such code may not work on very old interpreter versions prior to the introduction of the needed future statement. The need for this is more common in projects supporting an extremely wide variety of environments.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2204-decision","title":"2.20.4 Decision","text":"","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#from-__future__-imports","title":"from __future__ imports","text":"<p>Use of <code>from __future__ import</code> statements is encouraged. It allows a given source file to start using more modern Python syntax features today. Once you no longer need to run on a version where the features are hidden behind a <code>__future__</code> import, feel free to remove those lines.</p> <p>In code that may execute on versions as old as 3.5 rather than &gt;= 3.7, import:</p> <pre><code>from __future__ import generator_stop\n</code></pre> <p>For more information read the Python future statement definitions documentation.</p> <p>Please don't remove these imports until you are confident the code is only ever used in a sufficiently modern environment. Even if you do not currently use the feature a specific future import enables in your code today, keeping it in place in the file prevents later modifications of the code from inadvertently depending on the older behavior.</p> <p>Use other <code>from __future__</code> import statements as you see fit.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#221-type-annotated-code","title":"2.21 Type Annotated Code","text":"<p>You can annotate Python code with type hints according to PEP-484, and type-check the code at build time with a type checking tool like pytype.</p> <p>Type annotations can be in the source or in a stub pyi file. Whenever possible, annotations should be in the source. Use pyi files for third-party or extension modules.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2211-definition","title":"2.21.1 Definition","text":"<p>Type annotations (or \"type hints\") are for function or method arguments and return values:</p> <pre><code>def func(a: int) -&gt; list[int]:\n</code></pre> <p>You can also declare the type of a variable using similar PEP-526 syntax:</p> <pre><code>a: SomeType = some_func()\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2212-pros","title":"2.21.2 Pros","text":"<p>Type annotations improve the readability and maintainability of your code. The type checker will convert many runtime errors to build-time errors, and reduce your ability to use Power Features.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2213-cons","title":"2.21.3 Cons","text":"<p>You will have to keep the type declarations up to date. You might see type errors that you think are valid code. Use of a type checker may reduce your ability to use Power Features.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#2214-decision","title":"2.21.4 Decision","text":"<p>You are strongly encouraged to enable Python type analysis when updating code. When adding or modifying public APIs, include type annotations and enable checking via pytype in the build system. As static analysis is relatively new to Python, we acknowledge that undesired side-effects (such as wrongly inferred types) may prevent adoption by some projects. In those situations, authors are encouraged to add a comment with a TODO or link to a bug describing the issue(s) currently preventing type annotation adoption in the BUILD file or in the code itself as appropriate.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3-python-style-rules","title":"3 Python Style Rules","text":"","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31-semicolons","title":"3.1 Semicolons","text":"<p>Do not terminate your lines with semicolons, and do not use semicolons to put two statements on the same line.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#32-line-length","title":"3.2 Line length","text":"<p>Maximum line length is 80 characters.</p> <p>Explicit exceptions to the 80 character limit:</p> <ul> <li>Long import statements.</li> <li>URLs, pathnames, or long flags in comments.</li> <li>Long string module-level constants not containing whitespace that would be     inconvenient to split across lines such as URLs or pathnames.<ul> <li>Pylint disable comments. (e.g.: <code># pylint: disable=invalid-name</code>)</li> </ul> </li> </ul> <p>Do not use a backslash for explicit line continuation.</p> <p>Instead, make use of Python's implicit line joining inside parentheses, brackets and braces. If necessary, you can add an extra pair of parentheses around an expression.</p> <p>Note that this rule doesn't prohibit backslash-escaped newlines within strings (see below).</p> <pre><code>Yes: foo_bar(self, width, height, color='black', design=None, x='foo',\n             emphasis=None, highlight=0)\n</code></pre> <pre><code>Yes: if (width == 0 and height == 0 and\n         color == 'red' and emphasis == 'strong'):\n\n     (bridge_questions.clarification_on\n      .average_airspeed_of.unladen_swallow) = 'African or European?'\n\n     with (\n         very_long_first_expression_function() as spam,\n         very_long_second_expression_function() as beans,\n         third_thing() as eggs,\n     ):\n       place_order(eggs, beans, spam, beans)\n</code></pre> <pre><code>No:  if width == 0 and height == 0 and \\\n         color == 'red' and emphasis == 'strong':\n\n     bridge_questions.clarification_on \\\n         .average_airspeed_of.unladen_swallow = 'African or European?'\n\n     with very_long_first_expression_function() as spam, \\\n           very_long_second_expression_function() as beans, \\\n           third_thing() as eggs:\n       place_order(eggs, beans, spam, beans)\n</code></pre> <p>When a literal string won't fit on a single line, use parentheses for implicit line joining.</p> <pre><code>x = ('This will build a very long long '\n     'long long long long long long string')\n</code></pre> <p>Prefer to break lines at the highest possible syntactic level. If you must break a line twice, break it at the same syntactic level both times.</p> <pre><code>Yes: bridgekeeper.answer(\n         name=\"Arthur\", quest=questlib.find(owner=\"Arthur\", perilous=True))\n\n     answer = (a_long_line().of_chained_methods()\n               .that_eventually_provides().an_answer())\n\n     if (\n         config is None\n         or 'editor.language' not in config\n         or config['editor.language'].use_spaces is False\n     ):\n       use_tabs()\n</code></pre> <pre><code>No: bridgekeeper.answer(name=\"Arthur\", quest=questlib.find(\n        owner=\"Arthur\", perilous=True))\n\n    answer = a_long_line().of_chained_methods().that_eventually_provides(\n        ).an_answer()\n\n    if (config is None or 'editor.language' not in config or config[\n        'editor.language'].use_spaces is False):\n      use_tabs()\n</code></pre> <p>Within comments, put long URLs on their own line if necessary.</p> <pre><code>Yes:  # See details at\n      # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html\n</code></pre> <pre><code>No:  # See details at\n     # http://www.example.com/us/developer/documentation/api/content/\\\n     # v2.0/csv_file_name_extension_full_specification.html\n</code></pre> <p>Make note of the indentation of the elements in the line continuation examples above; see the indentation section for explanation.</p> <p>In all other cases where a line exceeds 80 characters, and the Black or Pyink auto-formatter does not help bring the line below the limit, the line is allowed to exceed this maximum. Authors are encouraged to manually break the line up per the notes above when it is sensible.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#33-parentheses","title":"3.3 Parentheses","text":"<p>Use parentheses sparingly.</p> <p>It is fine, though not required, to use parentheses around tuples. Do not use them in return statements or conditional statements unless using parentheses for implied line continuation or to indicate a tuple.</p> <pre><code>Yes: if foo:\n         bar()\n     while x:\n         x = bar()\n     if x and y:\n         bar()\n     if not x:\n         bar()\n     # For a 1 item tuple the ()s are more visually obvious than the comma.\n     onesie = (foo,)\n     return foo\n     return spam, beans\n     return (spam, beans)\n     for (x, y) in dict.items(): ...\n</code></pre> <pre><code>No:  if (x):\n         bar()\n     if not(x):\n         bar()\n     return (foo)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#34-indentation","title":"3.4 Indentation","text":"<p>Indent your code blocks with 4 spaces.</p> <p>Never use tabs. Implied line continuation should align wrapped elements vertically (see line length examples), or use a hanging 4-space indent. Closing (round, square or curly) brackets can be placed at the end of the expression, or on separate lines, but then should be indented the same as the line with the corresponding opening bracket.</p> <pre><code>Yes:   # Aligned with opening delimiter.\n       foo = long_function_name(var_one, var_two,\n                                var_three, var_four)\n       meal = (spam,\n               beans)\n\n       # Aligned with opening delimiter in a dictionary.\n       foo = {\n           'long_dictionary_key': value1 +\n                                  value2,\n           ...\n       }\n\n       # 4-space hanging indent; nothing on first line.\n       foo = long_function_name(\n           var_one, var_two, var_three,\n           var_four)\n       meal = (\n           spam,\n           beans)\n\n       # 4-space hanging indent; nothing on first line,\n       # closing parenthesis on a new line.\n       foo = long_function_name(\n           var_one, var_two, var_three,\n           var_four\n       )\n       meal = (\n           spam,\n           beans,\n       )\n\n       # 4-space hanging indent in a dictionary.\n       foo = {\n           'long_dictionary_key':\n               long_dictionary_value,\n           ...\n       }\n</code></pre> <pre><code>No:    # Stuff on first line forbidden.\n       foo = long_function_name(var_one, var_two,\n           var_three, var_four)\n       meal = (spam,\n           beans)\n\n       # 2-space hanging indent forbidden.\n       foo = long_function_name(\n         var_one, var_two, var_three,\n         var_four)\n\n       # No hanging indent in a dictionary.\n       foo = {\n           'long_dictionary_key':\n           long_dictionary_value,\n           ...\n       }\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#341-trailing-commas-in-sequences-of-items","title":"3.4.1 Trailing commas in sequences of items?","text":"<p>Trailing commas in sequences of items are recommended only when the closing container token <code>]</code>, <code>)</code>, or <code>}</code> does not appear on the same line as the final element. The presence of a trailing comma is also used as a hint to our Python code auto-formatter </p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#37-shebang-line","title":"3.7 Shebang Line","text":"<p>Most <code>.py</code> files do not need to start with a <code>#!</code> line. Start the main file of a program with <code>#!/usr/bin/env python3</code> (to support virtualenvs) or <code>#!/usr/bin/python3</code> per PEP-394.</p> <p>This line is used by the kernel to find the Python interpreter, but is ignored by Python when importing modules. It is only necessary on a file intended to be executed directly.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#38-comments-and-docstrings","title":"3.8 Comments and Docstrings","text":"<p>Be sure to use the right style for module, function, method docstrings and inline comments.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#381-docstrings","title":"3.8.1 Docstrings","text":"<p>Python uses docstrings to document code. A docstring is a string that is the first statement in a package, module, class or function. These strings can be extracted automatically through the <code>__doc__</code> member of the object and are used by <code>pydoc</code>. (Try running <code>pydoc</code> on your module to see how it looks.) Always use the three-double-quote <code>\"\"\"</code> format for docstrings (per PEP 257). A docstring should be organized as a summary line (one physical line not exceeding 80 characters) terminated by a period, question mark, or exclamation point. When writing more (encouraged), this must be followed by a blank line, followed by the rest of the docstring starting at the same cursor position as the first quote of the first line. There are more formatting guidelines for docstrings below.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#382-modules","title":"3.8.2 Modules","text":"<p>Every file should contain license boilerplate. Choose the appropriate boilerplate for the license used by the project (for example, Apache 2.0, BSD, LGPL, GPL).</p> <p>Files should start with a docstring describing the contents and usage of the module. <pre><code>\"\"\"A one-line summary of the module or program, terminated by a period.\n\nLeave one blank line.  The rest of this docstring should contain an\noverall description of the module or program.  Optionally, it may also\ncontain a brief description of exported classes and functions and/or usage\nexamples.\n\nTypical usage example:\n\n  foo = ClassFoo()\n  bar = foo.FunctionBar()\n\"\"\"\n</code></pre></p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3821-test-modules","title":"3.8.2.1 Test modules","text":"<p>Module-level docstrings for test files are not required. They should be included only when there is additional information that can be provided.</p> <p>Examples include some specifics on how the test should be run, an explanation of an unusual setup pattern, dependency on the external environment, and so on.</p> <pre><code>\"\"\"This blaze test uses golden files.\n\nYou can update those files by running\n`blaze run //foo/bar:foo_test -- --update_golden_files` from the `google3`\ndirectory.\n\"\"\"\n</code></pre> <p>Docstrings that do not provide any new information should not be used.</p> <pre><code>\"\"\"Tests for foo.bar.\"\"\"\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#383-functions-and-methods","title":"3.8.3 Functions and Methods","text":"<p>In this section, \"function\" means a method, function, generator, or property.</p> <p>A docstring is mandatory for every function that has one or more of the following properties:</p> <ul> <li>being part of the public API</li> <li>nontrivial size</li> <li>non-obvious logic</li> </ul> <p>A docstring should give enough information to write a call to the function without reading the function's code. The docstring should describe the function's calling syntax and its semantics, but generally not its implementation details, unless those details are relevant to how the function is to be used. For example, a function that mutates one of its arguments as a side effect should note that in its docstring. Otherwise, subtle but important details of a function's implementation that are not relevant to the caller are better expressed as comments alongside the code than within the function's docstring.</p> <p>The docstring may be descriptive-style (<code>\"\"\"Fetches rows from a Bigtable.\"\"\"</code>) or imperative-style (<code>\"\"\"Fetch rows from a Bigtable.\"\"\"</code>), but the style should be consistent within a file. The docstring for a <code>@property</code> data descriptor should use the same style as the docstring for an attribute or a function argument (<code>\"\"\"The Bigtable path.\"\"\"</code>, rather than <code>\"\"\"Returns the Bigtable path.\"\"\"</code>).</p> <p>A method that overrides a method from a base class may have a simple docstring sending the reader to its overridden method's docstring, such as <code>\"\"\"See base class.\"\"\"</code>. The rationale is that there is no need to repeat in many places documentation that is already present in the base method's docstring. However, if the overriding method's behavior is substantially different from the overridden method, or details need to be provided (e.g., documenting additional side effects), a docstring with at least those differences is required on the overriding method.</p> Certain aspects of a function should be documented in special sections, listed below. Each section begins with a heading line, which ends with a colon. All sections other than the heading should maintain a hanging indent of two or four spaces (be consistent within a file). These sections can be omitted in cases where the function's name and signature are informative enough that it can be aptly described using a one-line docstring. Args: List each parameter by name. A description should follow the name, and be separated by a colon followed by either a space or newline. If the description is too long to fit on a single 80-character line, use a hanging indent of 2 or 4 spaces more than the parameter name (be consistent with the rest of the docstrings in the file). The description should include required type(s) if the code does not contain a corresponding type annotation. If a function accepts <code>*foo</code> (variable length argument lists) and/or <code>**bar</code> (arbitrary keyword arguments), they should be listed as <code>*foo</code> and <code>**bar</code>. Returns: (or Yields: for generators) Describe the type and semantics of the return value. If the function only returns None, this section is not required. It may also be omitted if the docstring starts with Returns or Yields (e.g. <code>\"\"\"Returns row from Bigtable as a tuple of strings.\"\"\"</code>) and the opening sentence is sufficient to describe the return value. Do not imitate 'NumPy style' (example), which frequently documents a tuple return value as if it were multiple return values with individual names (never mentioning the tuple). Instead, describe such a return value as: \"Returns: A tuple (mat_a, mat_b), where mat_a is ..., and ...\". The auxiliary names in the docstring need not necessarily correspond to any internal names used in the function body (as those are not part of the API). Raises: List all exceptions that are relevant to the interface followed by a description. Use a similar exception name + colon + space or newline and hanging indent style as described in Args:. You should not document exceptions that get raised if the API specified in the docstring is violated (because this would paradoxically make behavior under violation of the API part of the API). <pre><code>def fetch_smalltable_rows(\n    table_handle: smalltable.Table,\n    keys: Sequence[bytes | str],\n    require_all_keys: bool = False,\n) -&gt; Mapping[bytes, tuple[str, ...]]:\n\"\"\"Fetches rows from a Smalltable.\n\n    Retrieves rows pertaining to the given keys from the Table instance\n    represented by table_handle.  String keys will be UTF-8 encoded.\n\n    Args:\n        table_handle: An open smalltable.Table instance.\n        keys: A sequence of strings representing the key of each table\n          row to fetch.  String keys will be UTF-8 encoded.\n        require_all_keys: If True only rows with values set for all keys will be\n          returned.\n\n    Returns:\n        A dict mapping keys to the corresponding table row data\n        fetched. Each row is represented as a tuple of strings. For\n        example:\n\n        {b'Serak': ('Rigel VII', 'Preparer'),\n         b'Zim': ('Irk', 'Invader'),\n         b'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n        Returned keys are always bytes.  If a key from the keys argument is\n        missing from the dictionary, then that row was not found in the\n        table (and require_all_keys must have been False).\n\n    Raises:\n        IOError: An error occurred accessing the smalltable.\n    \"\"\"\n</code></pre> <p>Similarly, this variation on <code>Args:</code> with a line break is also allowed:</p> <pre><code>def fetch_smalltable_rows(\n    table_handle: smalltable.Table,\n    keys: Sequence[bytes | str],\n    require_all_keys: bool = False,\n) -&gt; Mapping[bytes, tuple[str, ...]]:\n\"\"\"Fetches rows from a Smalltable.\n\n    Retrieves rows pertaining to the given keys from the Table instance\n    represented by table_handle.  String keys will be UTF-8 encoded.\n\n    Args:\n      table_handle:\n        An open smalltable.Table instance.\n      keys:\n        A sequence of strings representing the key of each table row to\n        fetch.  String keys will be UTF-8 encoded.\n      require_all_keys:\n        If True only rows with values set for all keys will be returned.\n\n    Returns:\n      A dict mapping keys to the corresponding table row data\n      fetched. Each row is represented as a tuple of strings. For\n      example:\n\n      {b'Serak': ('Rigel VII', 'Preparer'),\n       b'Zim': ('Irk', 'Invader'),\n       b'Lrrr': ('Omicron Persei 8', 'Emperor')}\n\n      Returned keys are always bytes.  If a key from the keys argument is\n      missing from the dictionary, then that row was not found in the\n      table (and require_all_keys must have been False).\n\n    Raises:\n      IOError: An error occurred accessing the smalltable.\n    \"\"\"\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#384-classes","title":"3.8.4 Classes","text":"<p>Classes should have a docstring below the class definition describing the class. If your class has public attributes, they should be documented here in an <code>Attributes</code> section and follow the same formatting as a function's <code>Args</code> section.</p> <pre><code>class SampleClass:\n\"\"\"Summary of class here.\n\n    Longer class information...\n    Longer class information...\n\n    Attributes:\n        likes_spam: A boolean indicating if we like SPAM or not.\n        eggs: An integer count of the eggs we have laid.\n    \"\"\"\n\n    def __init__(self, likes_spam: bool = False):\n\"\"\"Initializes the instance based on spam preference.\n\n        Args:\n          likes_spam: Defines if instance exhibits this preference.\n        \"\"\"\n        self.likes_spam = likes_spam\n        self.eggs = 0\n\n    def public_method(self):\n\"\"\"Performs operation blah.\"\"\"\n</code></pre> <p>All class docstrings should start with a one-line summary that describes what the class instance represents. This implies that subclasses of <code>Exception</code> should also describe what the exception represents, and not the context in which it might occur. The class docstring should not repeat unnecessary information, such as that the class is a class.</p> <pre><code># Yes:\nclass CheeseShopAddress:\n\"\"\"The address of a cheese shop.\n\n  ...\n  \"\"\"\n\nclass OutOfCheeseError(Exception):\n\"\"\"No more cheese is available.\"\"\"\n</code></pre> <pre><code># No:\nclass CheeseShopAddress:\n\"\"\"Class that describes the address of a cheese shop.\n\n  ...\n  \"\"\"\n\nclass OutOfCheeseError(Exception):\n\"\"\"Raised when no more cheese is available.\"\"\"\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#385-block-and-inline-comments","title":"3.8.5 Block and Inline Comments","text":"<p>The final place to have comments is in tricky parts of the code. If you're going to have to explain it at the next code review, you should comment it now. Complicated operations get a few lines of comments before the operations commence. Non-obvious ones get comments at the end of the line.</p> <pre><code># We use a weighted dictionary search to find out where i is in\n# the array.  We extrapolate position based on the largest num\n# in the array and the array size and then do binary search to\n# get the exact number.\n\nif i &amp; (i-1) == 0:  # True if i is 0 or a power of 2.\n</code></pre> <p>To improve legibility, these comments should start at least 2 spaces away from the code with the comment character <code>#</code>, followed by at least one space before the text of the comment itself.</p> <p>On the other hand, never describe the code. Assume the person reading the code knows Python (though not what you're trying to do) better than you do.</p> <pre><code># BAD COMMENT: Now go through the b array and make sure whenever i occurs\n# the next element is i+1\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#386-punctuation-spelling-and-grammar","title":"3.8.6 Punctuation, Spelling, and Grammar","text":"<p>Pay attention to punctuation, spelling, and grammar; it is easier to read well-written comments than badly written ones.</p> <p>Comments should be as readable as narrative text, with proper capitalization and punctuation. In many cases, complete sentences are more readable than sentence fragments. Shorter comments, such as comments at the end of a line of code, can sometimes be less formal, but you should be consistent with your style.</p> <p>Although it can be frustrating to have a code reviewer point out that you are using a comma when you should be using a semicolon, it is very important that source code maintain a high level of clarity and readability. Proper punctuation, spelling, and grammar help with that goal.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#310-strings","title":"3.10 Strings","text":"<p>Use an f-string, the <code>%</code> operator, or the <code>format</code> method for formatting strings, even when the parameters are all strings. Use your best judgment to decide between string formatting options. A single join with <code>+</code> is okay but do not format with <code>+</code>.</p> <pre><code>Yes: x = f'name: {name}; score: {n}'\n     x = '%s, %s!' % (imperative, expletive)\n     x = '{}, {}'.format(first, second)\n     x = 'name: %s; score: %d' % (name, n)\n     x = 'name: %(name)s; score: %(score)d' % {'name':name, 'score':n}\n     x = 'name: {}; score: {}'.format(name, n)\n     x = a + b\n</code></pre> <pre><code>No: x = first + ', ' + second\n    x = 'name: ' + name + '; score: ' + str(n)\n</code></pre> <p>Avoid using the <code>+</code> and <code>+=</code> operators to accumulate a string within a loop. In some conditions, accumulating a string with addition can lead to quadratic rather than linear running time. Although common accumulations of this sort may be optimized on CPython, that is an implementation detail. The conditions under which an optimization applies are not easy to predict and may change. Instead, add each substring to a list and <code>''.join</code> the list after the loop terminates, or write each substring to an <code>io.StringIO</code> buffer. These techniques consistently have amortized-linear run-time complexity.</p> <pre><code>Yes: items = ['&lt;table&gt;']\n     for last_name, first_name in employee_list:\n         items.append('&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;' % (last_name, first_name))\n     items.append('&lt;/table&gt;')\n     employee_table = ''.join(items)\n</code></pre> <pre><code>No: employee_table = '&lt;table&gt;'\n    for last_name, first_name in employee_list:\n        employee_table += '&lt;tr&gt;&lt;td&gt;%s, %s&lt;/td&gt;&lt;/tr&gt;' % (last_name, first_name)\n    employee_table += '&lt;/table&gt;'\n</code></pre> <p>Be consistent with your choice of string quote character within a file. Pick <code>'</code> or <code>\"</code> and stick with it. It is okay to use the other quote character on a string to avoid the need to backslash-escape quote characters within the string.</p> <pre><code>Yes:\n  Python('Why are you hiding your eyes?')\n  Gollum(\"I'm scared of lint errors.\")\n  Narrator('\"Good!\" thought a happy Python reviewer.')\n</code></pre> <pre><code>No:\n  Python(\"Why are you hiding your eyes?\")\n  Gollum('The lint. It burns. It burns us.')\n  Gollum(\"Always the great lint. Watching. Watching.\")\n</code></pre> <p>Prefer <code>\"\"\"</code> for multi-line strings rather than <code>'''</code>. Projects may choose to use <code>'''</code> for all non-docstring multi-line strings if and only if they also use <code>'</code> for regular strings. Docstrings must use <code>\"\"\"</code> regardless.</p> <p>Multi-line strings do not flow with the indentation of the rest of the program. If you need to avoid embedding extra space in the string, use either concatenated single-line strings or a multi-line string with <code>textwrap.dedent()</code> to remove the initial space on each line:</p> <pre><code>  No:\n  long_string = \"\"\"This is pretty ugly.\nDon't do this.\n\"\"\"\n</code></pre> <pre><code>  Yes:\n  long_string = \"\"\"This is fine if your use case can accept\n      extraneous leading spaces.\"\"\"\n</code></pre> <pre><code>  Yes:\n  long_string = (\"And this is fine if you cannot accept\\n\" +\n                 \"extraneous leading spaces.\")\n</code></pre> <pre><code>  Yes:\n  long_string = (\"And this too is fine if you cannot accept\\n\"\n                 \"extraneous leading spaces.\")\n</code></pre> <pre><code>  Yes:\n  import textwrap\n\n  long_string = textwrap.dedent(\"\"\"\\\n      This is also fine, because textwrap.dedent()\n      will collapse common leading spaces in each line.\"\"\")\n</code></pre> <p>Note that using a backslash here does not violate the prohibition against explicit line continuation; in this case, the backslash is escaping a newline in a string literal.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3101-logging","title":"3.10.1 Logging","text":"<p>For logging functions that expect a pattern-string (with %-placeholders) as their first argument: Always call them with a string literal (not an f-string!) as their first argument with pattern-parameters as subsequent arguments. Some logging implementations collect the unexpanded pattern-string as a queryable field. It also prevents spending time rendering a message that no logger is configured to output.</p> <pre><code>  Yes:\n  import tensorflow as tf\n  logger = tf.get_logger()\n  logger.info('TensorFlow Version is: %s', tf.__version__)\n</code></pre> <pre><code>  Yes:\n  import os\n  from absl import logging\n\n  logging.info('Current $PAGER is: %s', os.getenv('PAGER', default=''))\n\n  homedir = os.getenv('HOME')\n  if homedir is None or not os.access(homedir, os.W_OK):\n    logging.error('Cannot write to home directory, $HOME=%r', homedir)\n</code></pre> <pre><code>  No:\n  import os\n  from absl import logging\n\n  logging.info('Current $PAGER is:')\n  logging.info(os.getenv('PAGER', default=''))\n\n  homedir = os.getenv('HOME')\n  if homedir is None or not os.access(homedir, os.W_OK):\n    logging.error(f'Cannot write to home directory, $HOME={homedir!r}')\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3102-error-messages","title":"3.10.2 Error Messages","text":"<p>Error messages (such as: message strings on exceptions like <code>ValueError</code>, or messages shown to the user) should follow three guidelines:</p> <ol> <li> <p>The message needs to precisely match the actual error condition.</p> </li> <li> <p>Interpolated pieces need to always be clearly identifiable as such.</p> </li> <li> <p>They should allow simple automated processing (e.g. grepping).</p> </li> </ol> <pre><code>  Yes:\n  if not 0 &lt;= p &lt;= 1:\n    raise ValueError(f'Not a probability: {p!r}')\n\n  try:\n    os.rmdir(workdir)\n  except OSError as error:\n    logging.warning('Could not remove directory (reason: %r): %r',\n                    error, workdir)\n</code></pre> <pre><code>  No:\n  if p &lt; 0 or p &gt; 1:  # PROBLEM: also false for float('nan')!\n    raise ValueError(f'Not a probability: {p!r}')\n\n  try:\n    os.rmdir(workdir)\n  except OSError:\n    # PROBLEM: Message makes an assumption that might not be true:\n    # Deletion might have failed for some other reason, misleading\n    # whoever has to debug this.\n    logging.warning('Directory already was deleted: %s', workdir)\n\n  try:\n    os.rmdir(workdir)\n  except OSError:\n    # PROBLEM: The message is harder to grep for than necessary, and\n    # not universally non-confusing for all possible values of `workdir`.\n    # Imagine someone calling a library function with such code\n    # using a name such as workdir = 'deleted'. The warning would read:\n    # \"The deleted directory could not be deleted.\"\n    logging.warning('The %s directory could not be deleted.', workdir)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#311-files-sockets-and-similar-stateful-resources","title":"3.11 Files, Sockets, and similar Stateful Resources","text":"<p>Explicitly close files and sockets when done with them. This rule naturally extends to closeable resources that internally use sockets, such as database connections, and also other resources that need to be closed down in a similar fashion. To name only a few examples, this also includes mmap mappings, h5py File objects, and matplotlib.pyplot figure windows.</p> <p>Leaving files, sockets or other such stateful objects open unnecessarily has many downsides:</p> <ul> <li>They may consume limited system resources, such as file descriptors. Code     that deals with many such objects may exhaust those resources unnecessarily     if they're not returned to the system promptly after use.</li> <li>Holding files open may prevent other actions such as moving or deleting     them, or unmounting a filesystem.</li> <li>Files and sockets that are shared throughout a program may inadvertently be     read from or written to after logically being closed. If they are actually     closed, attempts to read or write from them will raise exceptions, making     the problem known sooner.</li> </ul> <p>Furthermore, while files and sockets (and some similarly behaving resources) are automatically closed when the object is destructed, coupling the lifetime of the object to the state of the resource is poor practice:</p> <ul> <li>There are no guarantees as to when the runtime will actually invoke the     <code>__del__</code> method. Different Python implementations use different memory     management techniques, such as delayed garbage collection, which may     increase the object's lifetime arbitrarily and indefinitely.</li> <li>Unexpected references to the file, e.g. in globals or exception tracebacks,     may keep it around longer than intended.</li> </ul> <p>Relying on finalizers to do automatic cleanup that has observable side effects has been rediscovered over and over again to lead to major problems, across many decades and multiple languages (see e.g. this article for Java).</p> <p>The preferred way to manage files and similar resources is using the <code>with</code> statement:</p> <pre><code>with open(\"hello.txt\") as hello_file:\n    for line in hello_file:\n        print(line)\n</code></pre> <p>For file-like objects that do not support the <code>with</code> statement, use <code>contextlib.closing()</code>:</p> <pre><code>import contextlib\n\nwith contextlib.closing(urllib.urlopen(\"http://www.python.org/\")) as front_page:\n    for line in front_page:\n        print(line)\n</code></pre> <p>In rare cases where context-based resource management is infeasible, code documentation must explain clearly how resource lifetime is managed.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#312-todo-comments","title":"3.12 TODO Comments","text":"<p>Use <code>TODO</code> comments for code that is temporary, a short-term solution, or good-enough but not perfect.</p> <p>A <code>TODO</code> comment begins with the word <code>TODO</code> in all caps, and a parenthesized context identifier. Ideally a bug reference, sometimes a username. A bug reference like <code>TODO(https://crbug.com/bug_id_number):</code> is preferable, because bugs are tracked and have follow-up comments, whereas individuals move around and may lose context over time. The <code>TODO</code> is followed by an explanation of what there is to do.</p> <p>The purpose is to have a consistent <code>TODO</code> format that can be searched to find out how to get more details. A <code>TODO</code> is not a commitment that the person referenced will fix the problem. Thus when you create a <code>TODO</code> with a username, it is almost always your own username that is given.</p> <pre><code># TODO(crbug.com/192795): Investigate cpufreq optimizations.\n# TODO(yourusername): File an issue and use a '*' for repetition.\n</code></pre> <p>If your <code>TODO</code> is of the form \"At a future date do something\" make sure that you either include a very specific date (\"Fix by November 2009\") or a very specific event (\"Remove this code when all clients can handle XML responses.\") that future code maintainers will comprehend.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#313-imports-formatting","title":"3.13 Imports formatting","text":"<p>Imports should be on separate lines; there are exceptions for <code>typing</code> and <code>collections.abc</code> imports.</p> <p>E.g.:</p> <pre><code>Yes: from collections.abc import Mapping, Sequence\n     import os\n     import sys\n     from typing import Any, NewType\n</code></pre> <p><pre><code>No:  import os, sys\n</code></pre> Imports are always put at the top of the file, just after any module comments and docstrings and before module globals and constants. Imports should be grouped from most generic to least generic:</p> <ol> <li> <p>Python future import statements. For example:</p> <pre><code>from __future__ import annotations\n</code></pre> <p>See above for more information about those.</p> </li> <li> <p>Python standard library imports. For example:</p> <pre><code>import sys\n</code></pre> </li> <li> <p>third-party module     or package imports. For example:</p> <pre><code>import tensorflow as tf\n</code></pre> </li> <li> <p>Code repository     sub-package imports. For example:</p> <pre><code>from otherproject.ai import mind\n</code></pre> </li> <li> <p>Deprecated: application-specific imports that are part of the same     top-level     sub-package as this file. For example:</p> <pre><code>from myproject.backend.hgwells import time_machine\n</code></pre> <p>You may find older Google Python Style code doing this, but it is no longer required. New code is encouraged not to bother with this. Simply treat application-specific sub-package imports the same as other sub-package imports.</p> </li> </ol> <p>Within each grouping, imports should be sorted lexicographically, ignoring case, according to each module's full package path (the <code>path</code> in <code>from path import ...</code>). Code may optionally place a blank line between import sections.</p> <pre><code>import collections\nimport queue\nimport sys\n\nfrom absl import app\nfrom absl import flags\nimport bs4\nimport cryptography\nimport tensorflow as tf\n\nfrom book.genres import scifi\nfrom myproject.backend import huxley\nfrom myproject.backend.hgwells import time_machine\nfrom myproject.backend.state_machine import main_loop\nfrom otherproject.ai import body\nfrom otherproject.ai import mind\nfrom otherproject.ai import soul\n\n# Older style code may have these imports down here instead:\n#from myproject.backend.hgwells import time_machine\n#from myproject.backend.state_machine import main_loop\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#314-statements","title":"3.14 Statements","text":"<p>Generally only one statement per line.</p> <p>However, you may put the result of a test on the same line as the test only if the entire statement fits on one line. In particular, you can never do so with <code>try</code>/<code>except</code> since the <code>try</code> and <code>except</code> can't both fit on the same line, and you can only do so with an <code>if</code> if there is no <code>else</code>.</p> <pre><code>Yes:\n\n  if foo: bar(foo)\n</code></pre> <pre><code>No:\n\n  if foo: bar(foo)\n  else:   baz(foo)\n\n  try:               bar(foo)\n  except ValueError: baz(foo)\n\n  try:\n      bar(foo)\n  except ValueError: baz(foo)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#315-getters-and-setters","title":"3.15 Getters and Setters","text":"<p>Getter and setter functions (also called accessors and mutators) should be used when they provide a meaningful role or behavior for getting or setting a variable's value.</p> <p>In particular, they should be used when getting or setting the variable is complex or the cost is significant, either currently or in a reasonable future.</p> <p>If, for example, a pair of getters/setters simply read and write an internal attribute, the internal attribute should be made public instead. By comparison, if setting a variable means some state is invalidated or rebuilt, it should be a setter function. The function invocation hints that a potentially non-trivial operation is occurring. Alternatively, properties may be an option when simple logic is needed, or refactoring to no longer need getters and setters.</p> <p>Getters and setters should follow the Naming guidelines, such as <code>get_foo()</code> and <code>set_foo()</code>.</p> <p>If the past behavior allowed access through a property, do not bind the new getter/setter functions to the property. Any code still attempting to access the variable by the old method should break visibly so they are made aware of the change in complexity.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#316-naming","title":"3.16 Naming","text":"<p><code>module_name</code>, <code>package_name</code>, <code>ClassName</code>, <code>method_name</code>, <code>ExceptionName</code>, <code>function_name</code>, <code>GLOBAL_CONSTANT_NAME</code>, <code>global_var_name</code>, <code>instance_var_name</code>, <code>function_parameter_name</code>, <code>local_var_name</code>, <code>query_proper_noun_for_thing</code>, <code>send_acronym_via_https</code>. Function names, variable names, and filenames should be descriptive; avoid abbreviation. In particular, do not use abbreviations that are ambiguous or unfamiliar to readers outside your project, and do not abbreviate by deleting letters within a word.</p> <p>Always use a <code>.py</code> filename extension. Never use dashes.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3161-names-to-avoid","title":"3.16.1 Names to Avoid","text":"<ul> <li> <p>single character names, except for specifically allowed cases:</p> <ul> <li>counters or iterators (e.g. <code>i</code>, <code>j</code>, <code>k</code>, <code>v</code>, et al.)</li> <li><code>e</code> as an exception identifier in <code>try/except</code> statements.</li> <li><code>f</code> as a file handle in <code>with</code> statements</li> <li>private type variables with no constraints (e.g.     <code>_T = TypeVar(\"_T\")</code>, <code>_P = ParamSpec(\"_P\")</code>)</li> </ul> <p>Please be mindful not to abuse single-character naming. Generally speaking, descriptiveness should be proportional to the name's scope of visibility. For example, <code>i</code> might be a fine name for 5-line code block but within multiple nested scopes, it is likely too vague.</p> </li> <li> <p>dashes (<code>-</code>) in any package/module name</p> </li> <li> <p><code>__double_leading_and_trailing_underscore__</code> names (reserved by Python)</p> </li> <li> <p>offensive terms</p> </li> <li> <p>names that needlessly include the type of the variable (for example:     <code>id_to_name_dict</code>)</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3162-naming-conventions","title":"3.16.2 Naming Conventions","text":"<ul> <li> <p>\"Internal\" means internal to a module, or protected or private within a     class.</p> </li> <li> <p>Prepending a single underscore (<code>_</code>) has some support for protecting module     variables and functions (linters will flag protected member access).</p> </li> <li> <p>Prepending a double underscore (<code>__</code> aka \"dunder\") to an instance variable     or method effectively makes the variable or method private to its class     (using name mangling); we discourage its use as it impacts readability and     testability, and isn't really private. Prefer a single underscore.</p> </li> <li> <p>Place related classes and top-level functions together in a     module.     Unlike Java, there is no need to limit yourself to one class per module.</p> </li> <li> <p>Use CapWords for class names, but lower_with_under.py for module names.     Although there are some old modules named CapWords.py, this is now     discouraged because it's confusing when the module happens to be named after     a class. (\"wait -- did I write <code>import StringIO</code> or <code>from StringIO import     StringIO</code>?\")</p> </li> <li> <p>New unit test files follow PEP 8 compliant lower_with_under method     names, for example, <code>test_&lt;method_under_test&gt;_&lt;state&gt;</code>. For consistency(*)     with legacy modules that follow CapWords function names, underscores may     appear in method names starting with <code>test</code> to separate logical components     of the name. One possible pattern is <code>test&lt;MethodUnderTest&gt;_&lt;state&gt;</code>.</p> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3163-file-naming","title":"3.16.3 File Naming","text":"<p>Python filenames must have a <code>.py</code> extension and must not contain dashes (<code>-</code>). This allows them to be imported and unittested. If you want an executable to be accessible without the extension, use a symbolic link or a simple bash wrapper containing <code>exec \"$0.py\" \"$@\"</code>.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3164-guidelines-derived-from-guidos-recommendations","title":"3.16.4 Guidelines derived from Guido's Recommendations","text":"Type Public Internal Packages <code>lower_with_under</code> Modules <code>lower_with_under</code> <code>_lower_with_under</code> Classes <code>CapWords</code> <code>_CapWords</code> Exceptions <code>CapWords</code> Functions <code>lower_with_under()</code> <code>_lower_with_under()</code> Global/Class Constants <code>CAPS_WITH_UNDER</code> <code>_CAPS_WITH_UNDER</code> Global/Class Variables <code>lower_with_under</code> <code>_lower_with_under</code> Instance Variables <code>lower_with_under</code> <code>_lower_with_under</code> (protected) Method Names <code>lower_with_under()</code> <code>_lower_with_under()</code> (protected) Function/Method Parameters <code>lower_with_under</code> Local Variables <code>lower_with_under</code>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3165-mathematical-notation","title":"3.16.5 Mathematical Notation","text":"<p>For mathematically heavy code, short variable names that would otherwise violate the style guide are preferred when they match established notation in a reference paper or algorithm. When doing so, reference the source of all naming conventions in a comment or docstring or, if the source is not accessible, clearly document the naming conventions. Prefer PEP8-compliant <code>descriptive_names</code> for public APIs, which are much more likely to be encountered out of context.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#317-main","title":"3.17 Main","text":"<p>In Python, <code>pydoc</code> as well as unit tests require modules to be importable. If a file is meant to be used as an executable, its main functionality should be in a <code>main()</code> function, and your code should always check <code>if __name__ == '__main__'</code> before executing your main program, so that it is not executed when the module is imported.</p> <p>When using absl, use <code>app.run</code>:</p> <pre><code>from absl import app\n...\n\ndef main(argv: Sequence[str]):\n    # process non-flag arguments\n    ...\n\nif __name__ == '__main__':\n    app.run(main)\n</code></pre> <p>Otherwise, use:</p> <pre><code>def main():\n    ...\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>All code at the top level will be executed when the module is imported. Be careful not to call functions, create objects, or perform other operations that should not be executed when the file is being <code>pydoc</code>ed.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#318-function-length","title":"3.18 Function length","text":"<p>Prefer small and focused functions.</p> <p>We recognize that long functions are sometimes appropriate, so no hard limit is placed on function length. If a function exceeds about 40 lines, think about whether it can be broken up without harming the structure of the program.</p> <p>Even if your long function works perfectly now, someone modifying it in a few months may add new behavior. This could result in bugs that are hard to find. Keeping your functions short and simple makes it easier for other people to read and modify your code.</p> <p>You could find long and complicated functions when working with some code. Do not be intimidated by modifying existing code: if working with such a function proves to be difficult, you find that errors are hard to debug, or you want to use a piece of it in several different contexts, consider breaking up the function into smaller and more manageable pieces.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#319-type-annotations","title":"3.19 Type Annotations","text":"","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3191-general-rules","title":"3.19.1 General Rules","text":"<ul> <li> <p>Familiarize yourself with PEP-484.</p> </li> <li> <p>In methods, only annotate <code>self</code>, or <code>cls</code> if it is necessary for proper     type information. e.g.,</p> <pre><code>@classmethod\ndef create(cls: Type[_T]) -&gt; _T:\n  return cls()\n</code></pre> </li> <li> <p>Similarly, don't feel compelled to annotate the return value of <code>__init__</code>     (where <code>None</code> is the only valid option).</p> </li> <li> <p>If any other variable or a returned type should not be expressed, use <code>Any</code>.</p> </li> <li> <p>You are not required to annotate all the functions in a module.</p> <ul> <li>At least annotate your public APIs.</li> <li>Use judgment to get to a good balance between safety and clarity on the     one hand, and flexibility on the other.</li> <li>Annotate code that is prone to type-related errors (previous bugs or     complexity).</li> <li>Annotate code that is hard to understand.</li> <li>Annotate code as it becomes stable from a types perspective. In many     cases, you can annotate all the functions in mature code without losing     too much flexibility.</li> </ul> </li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3192-line-breaking","title":"3.19.2 Line Breaking","text":"<p>Try to follow the existing indentation rules.</p> <p>After annotating, many function signatures will become \"one parameter per line\". To ensure the return type is also given its own line, a comma can be placed after the last parameter.</p> <pre><code>def my_method(\n    self,\n    first_var: int,\n    second_var: Foo,\n    third_var: Bar | None,\n) -&gt; int:\n  ...\n</code></pre> <p>Always prefer breaking between variables, and not, for example, between variable names and type annotations. However, if everything fits on the same line, go for it.</p> <pre><code>def my_method(self, first_var: int) -&gt; int:\n  ...\n</code></pre> <p>If the combination of the function name, the last parameter, and the return type is too long, indent by 4 in a new line. When using line breaks, prefer putting each parameter and the return type on their own lines and aligning the closing parenthesis with the <code>def</code>:</p> <pre><code>Yes:\ndef my_method(\n    self,\n    other_arg: MyLongType | None,\n) -&gt; tuple[MyLongType1, MyLongType1]:\n  ...\n</code></pre> <p>Optionally, the return type may be put on the same line as the last parameter:</p> <pre><code>Okay:\ndef my_method(\n    self,\n    first_var: int,\n    second_var: int) -&gt; dict[OtherLongType, MyLongType]:\n  ...\n</code></pre> <p><code>pylint</code> allows you to move the closing parenthesis to a new line and align with the opening one, but this is less readable.</p> <pre><code>No:\ndef my_method(self,\n              other_arg: MyLongType | None,\n             ) -&gt; dict[OtherLongType, MyLongType]:\n  ...\n</code></pre> <p>As in the examples above, prefer not to break types. However, sometimes they are too long to be on a single line (try to keep sub-types unbroken).</p> <pre><code>def my_method(\n    self,\n    first_var: tuple[list[MyLongType1],\n                     list[MyLongType2]],\n    second_var: list[dict[\n        MyLongType3, MyLongType4]],\n) -&gt; None:\n  ...\n</code></pre> <p>If a single name and type is too long, consider using an alias for the type. The last resort is to break after the colon and indent by 4.</p> <pre><code>Yes:\ndef my_function(\n    long_variable_name:\n        long_module_name.LongTypeName,\n) -&gt; None:\n  ...\n</code></pre> <pre><code>No:\ndef my_function(\n    long_variable_name: long_module_name.\n        LongTypeName,\n) -&gt; None:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3193-forward-declarations","title":"3.19.3 Forward Declarations","text":"<p>If you need to use a class name (from the same module) that is not yet defined -- for example, if you need the class name inside the declaration of that class, or if you use a class that is defined later in the code -- either use <code>from __future__ import annotations</code> or use a string for the class name.</p> <pre><code>Yes:\nfrom __future__ import annotations\n\nclass MyClass:\n  def __init__(self, stack: Sequence[MyClass], item: OtherClass) -&gt; None:\n\nclass OtherClass:\n  ...\n</code></pre> <pre><code>Yes:\nclass MyClass:\n  def __init__(self, stack: Sequence['MyClass'], item: 'OtherClass') -&gt; None:\n\nclass OtherClass:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3194-default-values","title":"3.19.4 Default Values","text":"<p>As per PEP-008, use spaces around the <code>=</code> only for arguments that have both a type annotation and a default value.</p> <pre><code>Yes:\ndef func(a: int = 0) -&gt; int:\n  ...\n</code></pre> <pre><code>No:\ndef func(a:int=0) -&gt; int:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3195-nonetype","title":"3.19.5 NoneType","text":"<p>In the Python type system, <code>NoneType</code> is a \"first class\" type, and for typing purposes, <code>None</code> is an alias for <code>NoneType</code>. If an argument can be <code>None</code>, it has to be declared! You can use <code>|</code> union type expressions (recommended in new Python 3.10+ code), or the older <code>Optional</code> and <code>Union</code> syntaxes.</p> <p>Use explicit <code>X | None</code> instead of implicit. Earlier versions of PEP 484 allowed <code>a: str = None</code> to be interpreted as <code>a: str | None = None</code>, but that is no longer the preferred behavior.</p> <pre><code>Yes:\ndef modern_or_union(a: str | int | None, b: str | None = None) -&gt; str:\n  ...\ndef union_optional(a: Union[str, int, None], b: Optional[str] = None) -&gt; str:\n  ...\n</code></pre> <pre><code>No:\ndef nullable_union(a: Union[None, str]) -&gt; str:\n  ...\ndef implicit_optional(a: str = None) -&gt; str:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3196-type-aliases","title":"3.19.6 Type Aliases","text":"<p>You can declare aliases of complex types. The name of an alias should be CapWorded. If the alias is used only in this module, it should be _Private.</p> <p>Note that the <code>: TypeAlias</code> annotation is only supported in versions 3.10+.</p> <pre><code>from typing import TypeAlias\n\n_LossAndGradient: TypeAlias = tuple[tf.Tensor, tf.Tensor]\nComplexTFMap: TypeAlias = Mapping[str, _LossAndGradient]\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3197-ignoring-types","title":"3.19.7 Ignoring Types","text":"<p>You can disable type checking on a line with the special comment <code># type: ignore</code>.</p> <p><code>pytype</code> has a disable option for specific errors (similar to lint):</p> <pre><code># pytype: disable=attribute-error\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3198-typing-variables","title":"3.19.8 Typing Variables","text":"Annotated Assignments <p>If an internal variable has a type that is hard or impossible to infer, specify its type with an annotated assignment - use a colon and type between the variable name and value (the same as is done with function arguments that have a default value):</p> <pre><code>a: Foo = SomeUndecoratedFunction()\n</code></pre> Type Comments Though you may see them remaining in the codebase (they were necessary before Python 3.6), do not add any more uses of a <code># type: &lt;type name&gt;</code> comment on the end of the line: <pre><code>a = SomeUndecoratedFunction()  # type: Foo\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#3199-tuples-vs-lists","title":"3.19.9 Tuples vs Lists","text":"<p>Typed lists can only contain objects of a single type. Typed tuples can either have a single repeated type or a set number of elements with different types. The latter is commonly used as the return type from a function.</p> <pre><code>a: list[int] = [1, 2, 3]\nb: tuple[int, ...] = (1, 2, 3)\nc: tuple[int, str, float] = (1, \"2\", 3.5)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31910-type-variables","title":"3.19.10 Type variables","text":"<p>The Python type system has generics. A type variable, such as <code>TypeVar</code> and <code>ParamSpec</code>, is a common way to use them.</p> <p>Example:</p> <pre><code>from collections.abc import Callable\nfrom typing import ParamSpec, TypeVar\n_P = ParamSpec(\"_P\")\n_T = TypeVar(\"_T\")\n...\ndef next(l: list[_T]) -&gt; _T:\n  return l.pop()\n\ndef print_when_called(f: Callable[_P, _T]) -&gt; Callable[_P, _T]:\n  def inner(*args: P.args, **kwargs: P.kwargs) -&gt; R:\n    print('Function was called')\n    return f(*args, **kwargs)\n  return inner\n</code></pre> <p>A <code>TypeVar</code> can be constrained:</p> <pre><code>AddableType = TypeVar(\"AddableType\", int, float, str)\ndef add(a: AddableType, b: AddableType) -&gt; AddableType:\n  return a + b\n</code></pre> <p>A common predefined type variable in the <code>typing</code> module is <code>AnyStr</code>. Use it for multiple annotations that can be <code>bytes</code> or <code>str</code> and must all be the same type.</p> <pre><code>from typing import AnyStr\ndef check_length(x: AnyStr) -&gt; AnyStr:\n  if len(x) &lt;= 42:\n    return x\n  raise ValueError()\n</code></pre> <p>A type variable must have a descriptive name, unless it meets all of the following criteria:</p> <ul> <li>not externally visible</li> <li>not constrained</li> </ul> <pre><code>Yes:\n  _T = TypeVar(\"_T\")\n  _P = ParamSpec(\"_P\")\n  AddableType = TypeVar(\"AddableType\", int, float, str)\n  AnyFunction = TypeVar(\"AnyFunction\", bound=Callable)\n</code></pre> <pre><code>No:\n  T = TypeVar(\"T\")\n  P = ParamSpec(\"P\")\n  _T = TypeVar(\"_T\", int, float, str)\n  _F = TypeVar(\"_F\", bound=Callable)\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31911-string-types","title":"3.19.11 String types","text":"<p>Do not use <code>typing.Text</code> in new code. It's only for Python \u2154 compatibility.</p> <p>Use <code>str</code> for string/text data. For code that deals with binary data, use <code>bytes</code>.</p> <pre><code>def deals_with_text_data(x: str) -&gt; str:\n  ...\ndef deals_with_binary_data(x: bytes) -&gt; bytes:\n  ...\n</code></pre> <p>If all the string types of a function are always the same, for example if the return type is the same as the argument type in the code above, use AnyStr.</p>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31912-imports-for-typing","title":"3.19.12 Imports For Typing","text":"<p>For symbols from the <code>typing</code> and <code>collections.abc</code> modules used to support static analysis and type checking, always import the symbol itself. This keeps common annotations more concise and matches typing practices used around the world. You are explicitly allowed to import multiple specific classes on one line from the <code>typing</code> and <code>collections.abc</code> modules. Ex:</p> <pre><code>from collections.abc import Mapping, Sequence\nfrom typing import Any, Generic\n</code></pre> <p>Given that this way of importing adds items to the local namespace, names in <code>typing</code> or <code>collections.abc</code> should be treated similarly to keywords, and not be defined in your Python code, typed or not. If there is a collision between a type and an existing name in a module, import it using <code>import x as y</code>.</p> <pre><code>from typing import Any as AnyType\n</code></pre> <p>Prefer to use built-in types as annotations where available. Python supports type annotations using parametric container types via PEP-585, introduced in Python 3.9.</p> <pre><code>def generate_foo_scores(foo: set[str]) -&gt; list[float]:\n  ...\n</code></pre> <p>NOTE: Users of Apache Beam should continue to import parametric containers from <code>typing</code>.</p> <pre><code>from typing import Set, List\n\n# Only use this older style if you are required to by introspection\n# code such as Apache Beam that has not yet been updated for PEP-585,\n# or if your code needs to run on Python versions earlier than 3.9.\ndef generate_foo_scores(foo: Set[str]) -&gt; List[float]:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31913-conditional-imports","title":"3.19.13 Conditional Imports","text":"<p>Use conditional imports only in exceptional cases where the additional imports needed for type checking must be avoided at runtime. This pattern is discouraged; alternatives such as refactoring the code to allow top-level imports should be preferred.</p> <p>Imports that are needed only for type annotations can be placed within an <code>if TYPE_CHECKING:</code> block.</p> <ul> <li>Conditionally imported types need to be referenced as strings, to be forward     compatible with Python 3.6 where the annotation expressions are actually     evaluated.</li> <li>Only entities that are used solely for typing should be defined here; this     includes aliases. Otherwise it will be a runtime error, as the module will     not be imported at runtime.</li> <li>The block should be right after all the normal imports.</li> <li>There should be no empty lines in the typing imports list.</li> <li>Sort this list as if it were a regular imports list. <pre><code>import typing\nif typing.TYPE_CHECKING:\n  import sketch\ndef f(x: \"sketch.Sketch\"): ...\n</code></pre></li> </ul>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31914-circular-dependencies","title":"3.19.14 Circular Dependencies","text":"<p>Circular dependencies that are caused by typing are code smells. Such code is a good candidate for refactoring. Although technically it is possible to keep circular dependencies, various build systems will not let you do so because each module has to depend on the other.</p> <p>Replace modules that create circular dependency imports with <code>Any</code>. Set an alias with a meaningful name, and use the real type name from this module (any attribute of <code>Any</code> is <code>Any</code>). Alias definitions should be separated from the last import by one line.</p> <pre><code>from typing import Any\n\nsome_mod = Any  # some_mod.py imports this module.\n...\n\ndef my_method(self, var: \"some_mod.SomeType\") -&gt; None:\n  ...\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#31915-generics","title":"3.19.15 Generics","text":"<p>When annotating, prefer to specify type parameters for generic types; otherwise, the generics' parameters will be assumed to be <code>Any</code>.</p> <pre><code># Yes:\ndef get_names(employee_ids: Sequence[int]) -&gt; Mapping[int, str]:\n  ...\n</code></pre> <pre><code># No:\n# This is interpreted as get_names(employee_ids: Sequence[Any]) -&gt; Mapping[Any, Any]\ndef get_names(employee_ids: Sequence) -&gt; Mapping:\n  ...\n</code></pre> <p>If the best type parameter for a generic is <code>Any</code>, make it explicit, but remember that in many cases <code>TypeVar</code> might be more appropriate:</p> <pre><code># No:\ndef get_names(employee_ids: Sequence[Any]) -&gt; Mapping[Any, str]:\n\"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\"\n</code></pre> <pre><code># Yes:\n_T = TypeVar('_T')\ndef get_names(employee_ids: Sequence[_T]) -&gt; Mapping[_T, str]:\n\"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\"\n</code></pre>","tags":["python"]},{"location":"Main_Course/Coding/2023-05-14-Python-style/#4-parting-words","title":"4 Parting Words","text":"<p>BE CONSISTENT.</p> <p>If you're editing code, take a few minutes to look at the code around you and determine its style. If they use spaces around all their arithmetic operators, you should too. If their comments have little boxes of hash marks around them, make your comments have little boxes of hash marks around them too.</p> <p>The point of having style guidelines is to have a common vocabulary of coding so people can concentrate on what you're saying rather than on how you're saying it. We present global style rules here so people know the vocabulary, but local style is also important. If code you add to a file looks drastically different from the existing code around it, it throws readers out of their rhythm when they go to read it. Avoid this.</p>","tags":["python"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/","title":"\u4e24\u5206\u949f\u6253\u9020\u6dd8\u5b9d\u62a2\u5355\u673a\u5668\u4eba","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\u3001Void\uff0c\u53d1\u5e03\u4e8e2021-06-08\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#1","title":"1 \u75db\u70b9","text":"<p>\u5404\u5927\u7535\u5546\u7f51\u7ad9\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u65e5\u5b50\u90fd\u4f1a\u5f00\u542f\u4fc3\u9500\u6d3b\u52a8\uff0c\u5982618\u3001\u53cc\u5341\u4e00\u7b49\uff0c\u6709\u65f6\u8fd8\u5f97\u76ef\u7740\u65f6\u95f4\u62a2\u9650\u91cf\u53d1\u552e\u7684\u5546\u54c1\uff0c\u4f46\u4f60\u7684\u6210\u529f\u7387\u9ad8\u5417?\u662f\u5426\u7ecf\u5e38\u4f1a\u9047\u5230App\u4e00\u76f4\u52a0\u8f7d\uff0c\u5237\u65b0\u540e\u53d1\u73b0\u5546\u54c1\u88ab\u4e00\u626b\u800c\u5149\u4e86\uff1f\u4e8b\u5b9e\u662f\uff0c\u5f88\u591a\u548c\u4f60\u7ade\u4e89\u62a2\u8d2d\u5546\u54c1\u7684\u5bf9\u624b\u6bd4\u4f60\u7684\u624b\u66f4\u5feb\u66f4\u51c6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5f88\u591a\u90fd\u662f\u80fd\u7cbe\u51c6\u6267\u884c\u547d\u4ee4\u7684<code>\u673a\u5668\u4eba</code>\u3002</p> <p>\u6c14\u4e0d\u6c14\uff1f\u6ca1\u5173\u7cfb\u8fd9\u7bc7\u6587\u7ae0\u5c06\u624b\u628a\u624b\u6559\u4f60\u96f6\u57fa\u7840\u5efa\u8bbe\u4e00\u4e2a\u81ea\u5df1\u7684\u673a\u5668\u4eba\uff0c\u5e2e\u4f60\u5728\u8bbe\u5b9a\u597d\u7684\u65f6\u95f4\u81ea\u52a8\u4e0b\u5355\uff0c\u518d\u4e5f\u4e0d\u7528\u4e3a\u62a2\u4e0d\u5230\u5fc3\u7231\u7684\u5b9d\u8d1d\u70e6\u607c\u4e86\uff01</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#2","title":"2 \u51c6\u5907\u5de5\u4f5c","text":"<p>\u5728\u5efa\u8bbe\u673a\u5668\u4eba\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u51c6\u5907\u597d\u4e86\u5982\u4e0b\u5de5\u5177\uff1a</p> <ul> <li>\u4e00\u53f0\u7535\u8111\uff1a\u4e0d\u9700\u8981\u591a\u5feb\u591a\u65b0\uff0c\u80fd\u7528\u5c31\u884c</li> <li>Chrome\u6d4f\u89c8\u5668\uff1a\u673a\u5668\u4eba\u5c06\u5728Chrome\u4e0a\u5b8c\u6210\u81ea\u52a8\u4e0b\u5355\u7684\u5de5\u4f5c</li> <li>Python\u7f16\u7a0b\u73af\u5883\uff1a\u522b\u6015\uff0c\u4f60\u4e0d\u9700\u8981\u4f1a\u7f16\u7a0b\uff0c\u4ee3\u7801\u5df2\u7ecf\u5e2e\u4f60\u5199\u597d\u4e86\u3002\u4f46\u4f60\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u8f6f\u4ef6\u80fd\u8ba9\u5b83\u8dd1\u8d77\u6765\uff0c\u6240\u4ee5\u9700\u8981\u7b80\u5355\u914d\u7f6e\u4e00\u4e0bpython\u7684\u7f16\u7a0b\u73af\u5883\u3002Windows\u548cMac\u7528\u6237\uff0c\u8bf7\u6309\u7167\u76f8\u5bf9\u5e94\u7684\u65b9\u5f0f\u914d\u7f6e\u3002</li> </ul> <p>\u914d\u7f6ePython\u7684\u7f16\u7a0b\u73af\u5883</p> Windows \u914d\u7f6ePython <p>\u4e0b\u5217\u6b65\u9aa4\u9002\u7528\u4e8eWindows\u7cfb\u7edf\u3002</p> <p>Anaconda\u662f\u4e00\u4e2a\u5f00\u6e90\u7684Python\u53d1\u884c\u7248\u672c\uff0c\u96c6\u6210\u4e86Python\u548c\u4f17\u591a\u79d1\u5b66\u5305\u3002</p> <ul> <li>\u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7dAnaconda Windows\u7248\u672c\u768464-Bit Graphical Installer</li> <li>\u7b2c\u4e8c\u6b65\uff1a\u5b89\u88c5Anaconda</li> <li>\u7b2c\u4e09\u6b65\uff1a\u6253\u5f00Anaconda Navigator\uff0c\u70b9\u51fbLaunch Notebook\u6216JupyterLab</li> </ul> <p>\u7136\u540e\u4f60\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u753b\u9762\uff1a</p> <p> Jupyter Lab </p> <p>\u770b\u5230\u53f3\u4fa7\u7684Notebook\u533a\u57df\uff0c\u6dfb\u52a0\u4e00\u4e2aNotebook\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6253\u9020\u673a\u5668\u4eba\uff01</p> Mac \u914d\u7f6ePython <p>\u4e0b\u5217\u6b65\u9aa4\u9002\u7528\u4e8eIntel Mac\u548cM1 Mac\u3002</p> <ul> <li>\u7b2c\u4e00\u6b65\uff1a\u6253\u5f00\u7ec8\u7aef\uff08command + space \u6fc0\u6d3bSpotlight\uff0c\u8f93\u5165Terminal\uff09</li> </ul> <p> \u7ec8\u7aefTerminal </p> <ul> <li>\u7b2c\u4e8c\u6b65\uff1a\u8f93\u5165<code>pip3 install jupyter</code></li> <li>\u7b2c\u4e09\u6b65\uff1a\u8f93\u5165<code>pip3 install jupyter-lab</code></li> <li>\u7b2c\u56db\u6b65\uff1a\u8f93\u5165<code>jupyter lab</code></li> </ul> <p>\u7136\u540e\u4f60\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u753b\u9762\uff1a</p> <p> Jupyter Lab </p> <p>\u770b\u5230\u53f3\u4fa7\u7684Notebook\u533a\u57df\uff0c\u6dfb\u52a0\u4e00\u4e2aNotebook\uff0c\u7136\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u6253\u9020\u673a\u5668\u4eba\uff01</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#3","title":"3 \u4ee3\u7801","text":"<p>Tip</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u8bf7\u5728\u4f60\u521a\u624d\u521b\u5efa\u7684Notebook\u4e2d\u8fd0\u884c\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#31","title":"3.1 \u4e0b\u8f7d\u9700\u8981\u7684\u7a0b\u5e8f\u5305","text":"<pre><code># Selenium \u5e38\u7528\u4e8e\u7f51\u9875\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u5728\u6b64\u6211\u4eec\u501f\u52a9\u5b83\u81ea\u52a8\u5316\u6dd8\u5b9d\u4e0b\u5355\u7684\u8fc7\u7a0b\n!pip install selenium\n</code></pre> <p><pre><code>!which python\n</code></pre> \u4e0a\u9762\u7684\u4ee3\u7801\u8fd4\u56de\u4e86/opt/anaconda3/bin/python\uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u7528\u5230\u8fd9\u4e2a\u5730\u5740\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#32","title":"3.2 \u4e0b\u8f7d\u4e00\u4e2a\u5c0f\u914d\u4ef6","text":"<ul> <li>\u67e5\u770b\u81ea\u5df1Chrome\u6d4f\u89c8\u5668\u7684\u7248\u672c(\u8fdb\u5165<code>\u5173\u4e8eChrome</code>\u5373\u53ef\u770b\u5230\u8f6f\u4ef6\u7248\u672c)</li> <li>\u524d\u5f80ChromeDriver\u7684\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684chrome driver\u540e\uff0c\u653e\u5728\u6b64<code>/opt/anaconda3/bin</code> \u6587\u4ef6\u5939\u91cc</li> </ul> <pre><code>from selenium import webdriver\nimport datetime\nimport time\n</code></pre> <p>\u5c0f\u6280\u5de7\uff1a\u8fd9\u4e2a\u65f6\u95f4\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u8bbe\u5b9a\u62a2\u8d2d\u65f6\u95f4</p> <pre><code>now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')\nprint(now)\n</code></pre> <p>2021-06-18 00:00:00.000000</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#33","title":"3.3 \u673a\u5668\u4eba\u7684\u96f6\u4ef6","text":"<pre><code>def login():\n    # \u6253\u5f00\u6dd8\u5b9d\u9996\u9875\uff0c\u901a\u8fc7\u626b\u7801\u767b\u5f55\n    browser.get(\"https://www.taobao.com\")\n    if browser.find_element_by_link_text(\"\u4eb2\uff0c\u8bf7\u767b\u5f55\"):\n        browser.find_element_by_link_text(\"\u4eb2\uff0c\u8bf7\u767b\u5f55\").click()\n        print(f\"\u8bf7\u5c3d\u5feb\u626b\u7801\u767b\u5f55\")\n    time.sleep(10)\n</code></pre> <pre><code>def picking():\n    # \u6253\u5f00\u8d2d\u7269\u8f66\u5217\u8868\u9875\u9762\n    browser.get(\"https://cart.taobao.com/cart.htm\")\n    time.sleep(3)\n    # method = 0\u5168\u9009\u8d2d\u7269\u8f66\n    method = 0\n    if method == 0:\n        while True:\n            try:\n                if browser.find_element_by_id(\"J_SelectAll1\"):\n                    browser.find_element_by_id(\"J_SelectAll1\").click()\n                    break\n            except:\n                print(f\"\u627e\u4e0d\u5230\u8d2d\u4e70\u6309\u94ae\")\n    #method = 1 \u624b\u52a8\u52fe\u9009\n    else:\n        print(f\"\u8bf7\u624b\u52a8\u52fe\u9009\u9700\u8981\u8d2d\u4e70\u7684\u5546\u54c1\")\n        time.sleep(5)\n</code></pre> <pre><code>#\u7b49\u5f85\u62a2\u8d2d\u65f6\u95f4\uff0c\u5b9a\u65f6\u79d2\u6740\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2abuy\u51fd\u6570\ndef buy(order_time, browser):\n    print(order_time)\n\n    order_placed_status = False\n    while order_placed_status != True:\n        now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')\n        # \u5bf9\u6bd4\u65f6\u95f4\uff0c\u65f6\u95f4\u5230\u7684\u8bdd\u5c31\u70b9\u51fb\u7ed3\u7b97\n        if now &gt;= order_time:\n            browser.refresh()\n            picking(browser)\n            # \u70b9\u51fb\u7ed3\u7b97\u6309\u94ae\n\n            while True:\n                clear_element = WebDriverWait(browser, 10).until(\n                            EC.element_to_be_clickable((By.LINK_TEXT, \"\u7ed3 \u7b97\"))\n                        )\n                try:\n                    if browser.find_element_by_link_text(\"\u7ed3 \u7b97\").is_enabled():\n                        browser.find_element_by_link_text(\"\u7ed3 \u7b97\").click()\n                        clear_element.click()\n                        print(f\"\u7ed3\u7b97\u6210\u529f\uff0c\u51c6\u5907\u63d0\u4ea4\u8ba2\u5355\")\n                        break\n                except:\n                    pass\n\n            order_element = WebDriverWait(browser, 20).until(\n                            EC.element_to_be_clickable((By.LINK_TEXT, \"\u63d0\u4ea4\u8ba2\u5355\")))\n            # \u70b9\u51fb\u63d0\u4ea4\u8ba2\u5355\u6309\u94ae\n            order_element.click()\n            order_placed_status = True\n\n            time.sleep(0.01)\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#34","title":"3.4 \u542f\u52a8\u673a\u5668\u4eba","text":"<pre><code>browser = webdriver.Chrome()\nlogin()\npicking()\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#35","title":"3.5 \u5b9a\u65f6\u4e0b\u5355","text":"<pre><code>order_time = input(\"\u8bf7\u8f93\u5165\u62a2\u8d2d\u65f6\u95f4\uff0c\u683c\u5f0f\u5982(2021-06-08 19:30:00.000000):\")\n</code></pre> <p>\u8bf7\u8f93\u5165\u62a2\u8d2d\u65f6\u95f4\uff0c\u683c\u5f0f\u5982(2021-06-08 19:30:00.000000): 2021-06-08 19:55:00.000000</p> <pre><code>buy(order_time, browser)\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#4","title":"4 \u6700\u7ec8\u6548\u679c","text":"<p>\u8bf7\u79fb\u6b65\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff0c\u67e5\u770b\u7cbe\u5fc3\u5236\u4f5c\u7684\u5c0f\u89c6\u9891\uff1a</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-14-Wechat-Crawler/","title":"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u722c\u866b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-06-14\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>Big brother\u662f\u6211\u4eec\u516c\u53f8\u7684\u7f51\u7403\u738b\u5b50\uff0c\u4ed6\u603b\u662f\u4f7f\u7528\u67d0\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u9884\u5b9a\u7f51\u7403\u573a\u5730\u3002\u7136\u800c\uff0c\u70ed\u95e8\u65f6\u95f4\u6bb5\u7684\u573a\u5730\u603b\u662f\u5982\u540c\u53d8\u9b54\u672f\u4e00\u822c\u5728\u4e00\u77ac\u95f4\u88ab\u8ba2\u6ee1\u3002  </p> <p>\u522b\u614c\uff0c\u6211\u4eec\u6709\u9ed1\u79d1\u6280\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c06\u6559\u4f60\u4f7f\u7528Python\u5b9e\u65f6\u76d1\u63a7\u573a\u5730\u60c5\u51b5\uff0c\u8ba9\u4f60\u5728\u8ba2\u7f51\u7403\u573a\u4e5f\u5185\u5377\u7684\u65f6\u4ee3\u5360\u5c3d\u5148\u673a\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-14-Wechat-Crawler/#1","title":"1 \u8f6f\u4ef6\u914d\u7f6e","text":"<p>Charles\u662f\u8457\u540d\u7684\u6293\u5305\u5de5\u5177\uff0c\u53ef\u4ee5\u6293\u53d6\u79fb\u52a8\u7aef\u4e0epc\u7aef\u7f51\u7edc\u8bbf\u95ee\u7684\u6240\u6709\u6570\u636e\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u6293\u53d6\u6211\u4eec\u4e0e\u5c0f\u7a0b\u5e8f\u4ea4\u4e92\u7684\u6240\u6709\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u9002\u7528\u4e8e\u81ea\u5df1\u7cfb\u7edf\u7684Charles\u5b89\u88c5\u5305</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u6b65\u662f\u5173\u4e8e\u8bc1\u4e66\u7684\u914d\u7f6e\u3002 \u4ee5\u4e0b\u9002\u7528\u4e8e\u4f7f\u7528Windows\u7cfb\u7edf\u7684\u7528\u6237\u3002 Help -&gt; SSL Proxying -&gt; Install Charles Root Certificate  </p> Install Charles Root Certificate <p>\u70b9\u51fb\u5b89\u88c5\u8bc1\u4e66  </p> \u5b89\u88c5\u8bc1\u4e66 <p>\u70b9\u51fb\u4e0b\u4e00\u6b65  </p> \u4e0b\u4e00\u6b65 <p>\u70b9\u51fb**\u5c06\u6240\u6709\u8bc1\u4e66\u90fd\u653e\u5165\u4e0b\u5217\u5b58\u50a8**\uff0c\u70b9\u51fb\u6d4f\u89c8\uff0c\u9009\u62e9**\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\u9881\u53d1\u673a\u6784**  </p> \u5b58\u50a8\u8bc1\u4e66 <p>\u6700\u540e\u5b8c\u6210\u8bc1\u4e66\u5bfc\u5165\u5411\u5bfc\uff0c\u63d0\u793a\u6210\u529f\u3002   </p> \u5b8c\u6210\u8bc1\u4e66\u5bfc\u5165 <p>\u6211\u4eec\u91cd\u65b0\u8fdb\u5165Help -&gt; SSL Proxying -&gt; Install Charles Root Certificate\uff0c\u67e5\u770b\u8bc1\u4e66\u7ed3\u679c\uff0c\u70b9\u51fb**\u8bc1\u4e66\u8def\u5f84**\uff0c\u663e\u793a\u5982\u56fe\u6240\u793a\u5373\u53ef\u3002  </p> \u67e5\u770b\u8bc1\u4e66\u7ed3\u679c <p>\u63a5\u7740\u70b9\u51fbProxy-&gt;SSL Proxy Settings\u3002\u5728SSL Proxying\u4e2d\u52fe\u9009Enable SSL Proxying\u5e76\u70b9\u51fbAdd\uff0c\u6dfb\u52a0Host\u548cPort\u90fd\u4e3a * (\u4ee3\u8868\u76d1\u542c\u6240\u6709IP\u5730\u5740\u7684\u6240\u6709\u7aef\u53e3)\u3002</p> Enable SSL Proxying <p>\u81f3\u6b64\uff0cCharles\u5c31\u53ef\u4ee5\u6293\u53d6pc\u7aef\u7f51\u7edc\u8bbf\u95ee\u7684\u6240\u6709\u6570\u636e\u4e86\u3002  </p> <p>Charles\u5e38\u7528\u7684\u5de5\u5177\u6709\u5de5\u5177\u680f\u4e0b\u9762\u626b\u5e1a\u72b6\u6309\u94ae(\u6e05\u9664\u5f53\u524dsession\u7684\u6570\u636e)\u548c\u6444\u50cf\u5934\u72b6\u6309\u94ae(\u5f00\u59cb\u4ee5\u53ca\u505c\u6b62\u6293\u53d6\u6570\u636e)\u3002  </p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-14-Wechat-Crawler/#2","title":"2 \u63a2\u7d22\u6570\u636e","text":"<p>\u6211\u4eec\u5728pc\u7aef\u767b\u5f55\u5fae\u4fe1\uff0c\u6253\u5f00\u6211\u4eec\u60f3\u722c\u53d6\u7684\u5c0f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u770b\u5230Charles\u5df2\u7ecf\u4e3a\u6211\u4eec\u6293\u53d6\u4e86\u6240\u6709\u7684\u8bbf\u95ee\u6570\u636e\u3002</p> \u8bbf\u95ee\u6570\u636e <p>\u6211\u4eec\u70b9\u5f00\u76ee\u6807\u5c0f\u7a0b\u5e8f\uff1a\u4e45\u4e8b\u4f53\u80b2\u573a\u9986(https://user.jusssportsvenue.com) \u7684\u6587\u4ef6\u5939\uff0c\u63a2\u7d22\u4e00\u4e0bCharles\u4e3a\u6211\u4eec\u6293\u53d6\u4e86\u4ec0\u4e48\u3002 \u6211\u4eec\u70b9\u51fbapi - common - advertising?type=1\u3002\u53ef\u4ee5\u770b\u5230\u53f3\u4fa7\u663e\u793a\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u7684Overview\u3002\u6211\u4eec\u7ee7\u7eed\u70b9\u51fb\u53f3\u4e0a\u4fa7\u7684Contents\uff0c\u53ef\u4ee5\u770b\u5230\u5e95\u4e0b\u5448\u73b0\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u6240\u8fd4\u56de\u7684\u5185\u5bb9\u3002  </p> \u8fd4\u56de\u5185\u5bb9\u793a\u4f8b <p>\u5bf9\u5e94\u4e8e\u5c0f\u7a0b\u5e8f\u7684\u6b63\u662f\u9996\u9875\u7684\u5e7f\u544a\u5185\u5bb9\u201c\u5c0f\u5c0f\u4f53\u80b2\u5bb6\u201d\u3002</p> \u5c0f\u5c0f\u4f53\u80b2\u5bb6 <p>Charles\u6210\u529f\u4e3a\u6211\u4eec\u83b7\u53d6\u4e86\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u7684\u5185\u5bb9\u3002\u4e0b\u4e00\u6b65\uff0c\u6211\u4eec\u5c06\u6a21\u62df\u6574\u4e2a\u8ba2\u7f51\u7403\u573a\u7684\u6d41\u7a0b\uff0c\u89c2\u5bdf\u8fd9\u4e9b\u8bf7\u6c42\u4ee5\u53ca\u8fd4\u56de\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u4e4b\u540e\u7528\u7a0b\u5e8f\u83b7\u53d6\u6211\u4eec\u60f3\u8981\u7684\u573a\u5730\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u5148\u5173\u95ed\u6253\u5f00\u7684\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u5e76\u70b9\u51fbCharles\u7684\u626b\u5e1a\u72b6\u6309\u94ae\uff0c\u6e05\u9664\u5f53\u524dsession\u7684\u6570\u636e\u3002\u6211\u4eec\u91cd\u65b0\u6253\u5f00\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u70b9\u51fb**\u7f51\u7403**\uff0c\u9009\u62e9\u6211\u4eec\u7684\u76ee\u6807\u573a\u5730\uff1a\u4e1c\u65b9\u4f53\u80b2\u4e2d\u5fc3\u3002\u6211\u4eec\u9009\u62e9\u60f3\u8ba2\u7684\u65f6\u95f4\uff0c\u4f8b\u5982\uff0c\u5468\u4e8c13\u70b9\u7684\u4e09\u53f7\u573a\uff0c\u70b9\u51fb\u786e\u8ba4\u63d0\u4ea4\u3002  </p> \u9009\u62e9\u573a\u5730 <p>\u4e3a\u4e86\u907f\u514dCharles\u83b7\u53d6\u5176\u4ed6\u4e0d\u76f8\u5173\u6570\u636e\uff0c\u6211\u4eec\u70b9\u51fb\u6444\u50cf\u5934\u72b6\u6309\u94ae\u505c\u6b62\u6293\u53d6\u6570\u636e\u3002\u6211\u4eec\u91cd\u65b0\u70b9\u5f00\u4e45\u4e8b\u4f53\u80b2\u573a\u9986(https://user.jusssportsvenue.com) \u7684\u6587\u4ef6\u5939\u5e76\u70b9\u51fbapi\u6587\u4ef6\u5939\u3002</p> \u6240\u6709\u6570\u636e <ul> <li>common\u6587\u4ef6\u5939\u4e0b\u5b58\u53d6\u7684\u662f\u5e7f\u544a\u4e0e\u6309\u94ae\u76f8\u5173\u7684\u4fe1\u606f\u3002</li> <li>venues\u6587\u4ef6\u5939\u4e0b\u5b58\u53d6\u7684\u662f\u573a\u5730\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5c0f\u7a0b\u5e8f\u4e0a\u53ef\u4ee5\u770b\u5230\u7684\u4ed9\u971e\u7f51\u7403\u4e2d\u5fc3\u3001\u4e1c\u65b9\u4f53\u80b2\u4e2d\u5fc3\u7b49\u53ef\u4ee5\u9884\u5b9a\u7684\u573a\u5730\u3002</li> <li>block\u6587\u4ef6\u5939\u4e0b\u5b58\u53d6\u7684\u662f\u5df2\u7ecf\u88ab\u9884\u5b9a\u7684\u573a\u5730\u4fe1\u606f\u3002</li> </ul> <p>\u4ee5\u53ca\u548c\u4e0b\u5355\u6709\u5173\u7684u\u6587\u4ef6\u5939\u3002u\u6587\u4ef6\u5939\u7531block\u3001order\u4e24\u4e2a\u5b50\u6587\u4ef6\u5939\u4ee5\u53cainfo\u7ec4\u6210\u3002info\u5b58\u50a8\u4e86\u7528\u6237\u7684\u4fe1\u606f\uff0c\u4ece\u53f3\u4fa7Contents\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001\u624b\u673a\u53f7\u7801\u7b49\u7b49\u3002block\u521d\u59cb\u5316\u4e86\u8fd9\u7b14\u8ba2\u5355\uff0c\u5e76\u6ca1\u6709\u592a\u591a\u522b\u7684\u4fe1\u606f\u3002order\u6587\u4ef6\u5939\u4e0b\u5305\u62eccancel\u6587\u4ef6\u5939\u4ee5\u53ca\u4e0b\u8ba2\u5355\u7684\u5404\u79cd\u8bf7\u6c42\u3002\u5176\u4e2dcreatekBlock\u8fd9\u4e2apost\u8bf7\u6c42\u5bf9\u5e94\u4e8e\u6211\u4eec\u5728\u5c0f\u7a0b\u5e8f\u4e0a\u6240\u505a\u7684**\u786e\u8ba4\u8ba2\u5355**\u3002blockPay\u4ee3\u8868\u4e86**\u7acb\u5373\u652f\u4ed8**\u7684\u64cd\u4f5c\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-14-Wechat-Crawler/#3-python","title":"3 Python\u811a\u672c","text":"<p>\u4e0b\u9762\u6211\u4eec\u5c06\u5c1d\u8bd5\u4f7f\u7528Python\uff0c\u81ea\u52a8\u5316\u7684\u5e2e\u6211\u4eec\u83b7\u53d6\u573a\u5730\u4fe1\u606f\u3002\u6211\u4eec\u6309\u7167\u4e24\u5206\u949f\u6253\u9020\u6dd8\u5b9d\u62a2\u5355\u673a\u5668\u4eba\u6587\u7ae0\u6240\u8ff0\uff0c\u6253\u5f00notebook\u3002  </p> <p>\u7b2c\u4e00\u6b65\uff0c\u5bfc\u5165\u6240\u9700\u8981\u7684\u5305\u3002  </p> <pre><code>import requests\nimport random\nimport time\nimport re\nimport json\n</code></pre> <p>\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u5728Charles\u4e2d\u89c2\u5bdf\u5230\uff0cblock -&gt; ground\u6587\u4ef6\u5939\u4e0b\u7684\u8bf7\u6c42\u8fd4\u56de\u4e86\u573a\u5730\u7684\u4fe1\u606f\u3002</p> \u6240\u6709\u6570\u636e <p>\u4eceOverview\u4e2d\u6211\u4eec\u53ef\u4ee5\u62ff\u5230\u8bf7\u6c42\u7684URL\u3002\u6211\u4eec\u83b7\u53d6\u4e86\u672a\u6765\u51e0\u5929\u7684\u573a\u5730\u4fe1\u606f\u7684URL\u3002  </p> <pre><code>urls=[ 'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624204800000&amp;skuId=5'#\u5468\u4e00\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624291200000&amp;skuId=5'#\u5468\u4e8c\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624032000000&amp;skuId=5'#\u5468\u516d\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624118400000&amp;skuId=5'#\u5468\u65e5\n      ]\n</code></pre> <p>\u7b2c\u4e09\u6b65\uff0c\u7528Python\u63d0\u4ea4\u8bf7\u6c42\uff0c\u83b7\u53d6\u573a\u5730\u4fe1\u606f\u3002</p> <pre><code>response = requests.get(urls[0],verify=False)\ndata=response.text\ndata1=json.loads(data)\norders=data1['data']['modelList']\nthis_orders=orders[0]\nthis_block=this_orders['blockModel'][0]\n</code></pre> <p>\u6211\u4eec\u6253\u5370\u4e00\u4e0b\u83b7\u5f97\u7684\u573a\u5730\u4fe1\u606f\u3002</p> <pre><code>print(this_block)\n\n{'groundId': 41,\n 'groundName': '1\u53f7\u573a',\n 'id': '41-1\u53f7\u573a-0',\n 'isCheckout': False,\n 'isChoosing': False,\n 'isNormal': True,\n 'orderId': '202106141200125481',\n 'price': 30.0,\n 'source': 1,\n 'sportsType': 11,\n 'status': 0,\n 'userAvatar': 'https://thirdwx.qlogo.cn/mmopen/vi_32/gq1EeEEFPQ9ob3aibUn7s9VpKoCjwmRIc5wKxKPqsdj06TwjHIoeC7icw6ibzJzYMC2lJvwRiay3wvvbXK2hwe2j5Q/132',\n 'userId': 4919,\n 'userName': 'xxx', #\u53cb\u60c5\u6253\u7801\n 'userPhone': 'xxx' #\u53cb\u60c5\u6253\u7801}\n</code></pre> <p>Bingo\uff01\u6211\u4eec\u6210\u529f\u4f7f\u7528Python\u83b7\u53d6\u4e86\u672a\u6765\u51e0\u5929\u7684\u573a\u5730\u7684\u4fe1\u606f\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u628a\u4ee3\u7801\u6574\u5408\u8d77\u6765\u3002 \u6211\u4eec\u878d\u5165\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u9700\u6c42\uff0c\u5982\u53ea\u8003\u8651\u5de5\u4f5c\u65e5\u665a\u4e0a\u53ca\u5468\u672b\u7684\u573a\u5730\u4ee5\u53ca\u5982\u679c\u6709\u7a7a\u7684\u573a\u5730\u5c31\u7ed9\u81ea\u5df1\u7684\u90ae\u7bb1\u53d1\u90ae\u4ef6\u7b49\u3002\u6700\u7ec8\u7684\u4ee3\u7801\u5982\u4e0b\uff1a  </p> <pre><code>import requests\nimport random\nimport time\nimport re\nimport json\n\nuser_agent_list = [\n    'Mozilla/5.0 (Linux; Android 5.1.1; vivo X7 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/39.0.0.0 Mobile Safari/537.36 MicroMessenger/7.0.10.1580(0x27000A5E) Process/appbrand0 NetType/WIFI Language/zh_CN ABI/arm64',\n    'Mozilla/5.0 (Windows NT 6.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1464.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.16 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36',\n    'Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.93 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1667.0 Safari/537.36',\n    'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:17.0) Gecko/20100101 Firefox/17.0.6',\n    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1468.0 Safari/537.36',\n    'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2224.3 Safari/537.36',\n    'Mozilla/5.0 (X11; CrOS i686 3912.101.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36']\n\n\nheader = {\n    'Host': 'user.jusssportsvenue.com',\n    'Connection': 'keep-alive',\n    'accept': 'application/json',\n    'charset': 'utf-8',\n    'content-type': 'application/x-www-form-urlencoded',\n    'User-Agent': random.choice(user_agent_list),\n    'Accept-Encoding': 'gzip, deflate, br',\n    'Referer': 'https://servicewechat.com/wx0fa97a8b900cb199/19/page-frame.html'\n}\n\n\nurls=[ 'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624204800000&amp;skuId=5'#\u5468\u4e00\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624291200000&amp;skuId=5'#\u5468\u4e8c\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624032000000&amp;skuId=5'#\u5468\u516d\n      ,'https://user.jusssportsvenue.com/api/block/ground/list?venuesId=14&amp;sportsType=11&amp;startTime=1624118400000&amp;skuId=5'#\u5468\u65e5\n      ]\n\ndef send_email():\n    import smtplib\n    from email.mime.text import MIMEText\n    from email.mime.multipart import MIMEMultipart  \n\n    _user = \"XXX\"\n    _pwd  = \"XXX\"\n    _to   = \"XXX\"\n\n    msg = MIMEMultipart('related')\n    msg = MIMEText('has room')\n    msg[\"Subject\"] = \"Tennis booking\"\n    msg[\"From\"]    = _user\n    msg[\"To\"]      = _to\n\n    try:\n        s = smtplib.SMTP_SSL(\"smtp.qq.com\", 465)\n        s.login(_user, _pwd)\n        s.sendmail(_user, _to, msg.as_string())\n        s.quit()\n        print (\"Success!\")\n    except smtplib.SMTPException:\n        print (\"Falied\")\n\nid=True\nwhile id:\n    for u in range(len(urls)):\n\n        pattern = re.compile('startTime=(.*)&amp;',re.S)\n        starttime = int(re.findall(pattern, urls[u])[0])\n        response = requests.get(urls[u],headers=header,verify=False)\n        data=response.text\n        data1=json.loads(data)\n        orders=data1['data']['modelList']\n        for i in orders:\n            if u&lt;2 and i['startTime']/1000&lt;starttime/1000+64800:\n                continue\n            for j in i['blockModel']:\n                if j['status']!=0:\n                    send_email()\n                    print('has room!')\n                    id=False\n                    break\n        time.sleep(3)\n</code></pre> <p>\u6211\u4eec\u53ea\u9700\u8981\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5982\u679c\u6709\u7a7a\u7684\u573a\u5730\uff0cPython\u5c06\u81ea\u52a8\u7684\u7ed9\u6211\u4eec\u7684\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\u3002\u6211\u4eec\u53ea\u9700\u8981\u53ca\u65f6\u4e0b\u5355\u9884\u5b9a\u573a\u5730\u5373\u53ef\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/","title":"\u53cc\u91cd\u5dee\u5206\u5c0f\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-06-24\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#1","title":"1 \u5f15\u8a00","text":"<p>\u53cc\u91cd\u5dee\u5206\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u5dee\u5206\u4e24\u6b21\u3002\u90a3\u4e48\u5dee\u5206\u548c\u6211\u5c0f\u53ee\u5f53\u53c8\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u66f4\u4f55\u51b5\u662f\u5dee\u5206\u4e24\u6b21\u3002\u522b\u6025\uff0c\u542c\u6211\u4eec\u6162\u6162\u9053\u6765\u3002 \u53cc\u91cd\u5dee\u5206\u6a21\u578b\u662f\u8ba1\u91cf\u7ecf\u6d4e\u5b66\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u7684\u6a21\u578b\u3002\u5b83\u7684\u4f5c\u7528\u662f\u63a2\u7a76\u4e00\u9879\u5b9e\u9a8c\u6216\u4e00\u4e2a\u4e8b\u4ef6\u7684\u5f71\u54cd\uff0c\u6709\u4e00\u4e22\u4e22\u7c7b\u4f3cab test\u3002\u6709\u522b\u4e8e\u523b\u753b\u7b80\u5355\u7684\u76f8\u5173\u5173\u7cfb\u7684\u7ebf\u6027\u56de\u5f52\uff0c\u53cc\u91cd\u5dee\u5206\u662f\u5173\u4e8e\u56e0\u679c\u63a8\u65ad\u7684\u5c0f\u5de7\u3001\u5b9e\u7528\u7684\u6a21\u578b\u3002\u5b83\u7684\u7531\u6765\u8981\u4ece\u7ebf\u6027\u56de\u5f52\u7684\u5047\u8bbe\u8bf4\u8d77\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#2","title":"2 \u7ebf\u6027\u56de\u5f52\u5047\u8bbe","text":"<p>\u6211\u4eec\u90fd\u77e5\u9053\u7ebf\u6027\u56de\u5f52\uff0c\u6211\u4eec\u4e5f\u53ef\u80fd\u90fd\u4e0d\u77e5\u9053\u7ebf\u6027\u56de\u5f52\u3002\u5b83\u5c31\u662f\u5982\u4e0b\u8fd9\u4e2a\u201c\u7b80\u5355\u201d\u7684\u5f0f\u5b50\uff1a</p> \\[ Y=\\beta X+\\varepsilon \\] <p>\u6211\u4eec\u5728\u5feb\u4e50\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u7684\u540c\u65f6\uff0c\u5f80\u5f80\u5ffd\u7565\u4e86\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u76844\u4e2a\u524d\u63d0\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u7ebf\u6027\u5173\u7cfb</p> </li> <li> <p>\u4e25\u5916\u751f\u6027</p> \\[E(\\varepsilon_{t}|X)=E(\\varepsilon_{t}|X_{1},X_{2}\\cdots X_{n})=0\\] </li> <li> <p>\u65e0\u5b8c\u5168\u5171\u7ebf\u6027</p> </li> <li> <p>\u7403\u5f62\u8bef\u5dee\u65b9\u5dee</p> \\[E(\\varepsilon_{t}^{2}|X)=\\sigma^{2}\\] \\[E(\\varepsilon_{t}\\varepsilon_{s}|X)=0\\] </li> </ul> <p>\u7528\u4eba\u8bdd\u6765\u8bf4\uff0cY\u548cX\u5fc5\u987b\u6ee1\u8db3\u7ebf\u6027\u5173\u7cfb(\u5e9f\u8bdd\u3002\u3002)\u3002\u6b8b\u5dee(\u5b9e\u9645\u503c\u4e0e\u4f30\u8ba1\u503c\u7684\u5dee\u5f02)\u4e0eX\u4e0d\u76f8\u5173\u5e76\u4e14\u5b83\u81ea\u8eab\u7684\u5206\u5e03\u6ee1\u8db3\u540c\u65b9\u5dee\u3001\u4e0d\u5b58\u5728\u81ea\u76f8\u5173\u7684\u6027\u8d28\u3002\u4e0d\u80fd\u6709\u4e00\u4e2aX\u662f\u522b\u7684\u51e0\u4e2aX\u7684\u7238\u7238(\u88ab\u7ebf\u6027\u8868\u793a)\u3002\u597d\u7684\uff0c\u806a\u660e\u7684\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u5ffd\u7565\u8fd9\u4e9b\u524d\u63d0\u6761\u4ef6\u4e86\u3002\u4e14\u6162\uff0c\u5982\u679c\u524d\u63d0\u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u8bdd\u53ef\u662f\u4f1a\u4f7f\u4f30\u8ba1\u4e0d\u51c6\u7684\u54e6\u3002  </p> <p>\u5176\u4e2d\uff0c\u4e25\u5916\u751f\u6027\u5c31\u662f\u4e00\u4e2a\u5f88\u50b2\u5a07(\u5bb9\u6613\u4e0d\u6ee1\u8db3)\u7684\u6761\u4ef6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e38\u8bf4\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u5185\u751f\u6027\u95ee\u9898\u3002\u6211\u4eec\u518d\u7528\u5c0f\u5b66\u6570\u5b66\u56de\u987e\u4e00\u4e0b\u4ec0\u4e48\u662f\u4e25\u5916\u751f\u6027\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#3","title":"3 \u4e25\u5916\u751f\u6027","text":"\\[E(\\varepsilon_{t}|X)=E(\\varepsilon_{t}|X_{1},X_{2}\\cdots X_{n})=0\\] \\[t=1,2\\cdots n\\] <p>\u6839\u636e\u91cd\u590d\u671f\u671b\u6cd5\u5219\\(E(Y|X)=E[E(Y|X,Z)|X]\\)\uff0c\u6709</p> \\[E(\\varepsilon_{t}|X_{t})=E[E(\\varepsilon_{t}|X)|X_{t}]=0\\] \\[E(\\varepsilon_{t})=E[E(\\varepsilon_{t}|X)]=0\\] <p>\u4ece\u800c\u6709</p> \\[E(X_{s}\\varepsilon_{t})=E[E(X_{s}\\varepsilon_{t}|X)]=0\\] <p>\u56e0\u6b64\\(cov(X_{s},\\varepsilon_{t})=0\\)\uff0c\u5047\u8bbe\u8981\u6c42\u6270\u52a8\u9879\\(\\varepsilon_{t}\\)\u4e0e\u89e3\u91ca\u53d8\u91cf\u4e4b\u95f4\u6ca1\u6709\u7ebf\u6027\u76f8\u5173\u6027\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#4","title":"4 \u5185\u751f\u6027\u95ee\u9898\u5e38\u89c1\u5f62\u5f0f","text":"<p>\u597d\u7684\uff0c\u6211\u4eec\u5df2\u7ecf\u6210\u529f(\u6ca1)\u641e\u660e\u767d\u4e86\u5b66\u672f\u4e2d\u7684\u4e25\u5916\u751f\u6027\u3002\u90a3\u4e48\uff0c\u5728\u5b9e\u9645\u7684\u6570\u636e\u4e2d\uff0c\u5185\u751f\u6027\u95ee\u9898\u662f\u600e\u4e48\u8868\u73b0\u7684\u5462\uff1f</p> <ul> <li> <p>\u9057\u6f0f\u89e3\u91ca\u53d8\u91cf(\u8fd8\u6709\u522b\u7684X\u53ef\u4ee5\u6709\u6548\u7684\u4f30\u8ba1Y)</p> </li> <li> <p>X\u4e0eY\u4e92\u4e3a\u56e0\u679c(\u5982X\u4e3a\u6559\u80b2\u6c34\u5e73\uff0cY\u4e3a\u6536\u5165\uff0c\u6559\u80b2\u6c34\u5e73\u53ef\u4ee5\u5f71\u54cd\u6536\u5165\uff0c\u540c\u65f6\uff0c\u6536\u5165\u4e5f\u53ef\u4ee5\u5f71\u54cd\u6559\u80b2\u6c34\u5e73\uff0c\u5982\u8bfb\u4e2aMBA)</p> </li> </ul>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#5","title":"5 \u89e3\u51b3\u65b9\u6848","text":"<ul> <li> <p>\u5de5\u5177\u53d8\u91cf\u6cd5(Instrumental Variable)\\     \u627e\u5230\u4e00\u4e2a\u53d8\u91cf\u548c\u5185\u751f\u89e3\u91ca\u53d8\u91cf\u76f8\u5173\uff0c\u4f46\u662f\u548c\u968f\u673a\u6270\u52a8\u9879\u4e0d\u76f8\u5173\u7684\u5916\u751f\u53d8\u91cf\u3002\u540c\u5176\u4ed6\u5df2\u6709\u7684\u5916\u751f\u53d8\u91cf\u4e00\u8d77\u56de\u5f52\uff0c\u5f97\u5230\u5185\u751f\u53d8\u91cf\u7684\u4f30\u8ba1\u503c\uff0c\u4ee5\u6b64\u4f5c\u4e3aIV\uff0c\u653e\u5230\u539f\u6765\u7684\u56de\u5f52\u65b9\u7a0b\u4e2d\u8fdb\u884c\u56de\u5f52\u3002     \u4f8b\u5b50\uff0cY\u4e3a\u5185\u6218\u7206\u53d1\u6982\u7387\uff0cX\u4e3a\u7ecf\u6d4e\u589e\u957f\uff0cIV\u4e3a\u964d\u96e8\u91cf\u3002\u5185\u6218\u7206\u53d1\u6982\u7387\u548c\u7ecf\u6d4e\u589e\u957f\u672c\u8eab\u4e92\u4e3a\u56e0\u679c(\u5b58\u5728\u5185\u751f\u6027\u95ee\u9898)\uff0c\u964d\u96e8\u91cf\u548c\u7ecf\u6d4e\u589e\u957f\u6709\u5173(\u519c\u4e1a\u56fd\u5bb6)\uff0c\u540c\u65f6\uff0c\u964d\u96e8\u91cf\u53ea\u80fd\u901a\u8fc7\u5f71\u54cd\u7ecf\u6d4e\u589e\u957f\u5355\u5411\u7684\u5f71\u54cd\u5185\u6218\u7206\u53d1\u6982\u7387\u3002</p> </li> <li> <p>\u53cc\u91cd\u5dee\u5206\u6cd5(Differences-in-Differences, DID)\\     \u5018\u82e5\u51fa\u73b0\u4e86\u4e00\u6b21\u5916\u90e8\u51b2\u51fb\uff0c\u8fd9\u6b21\u51b2\u51fb\u5f71\u54cd\u4e86\u4e00\u90e8\u5206\u6837\u672c\uff0c\u5bf9\u53e6\u4e00\u90e8\u5206\u6837\u672c\u5219\u65e0\u5f71\u54cd\uff0c\u800c\u6211\u4eec\u60f3\u770b\u4e00\u4e0b\u8fd9\u6b21\u5916\u90e8\u51b2\u51fb\u5230\u5e95\u6709\u4f55\u5f71\u54cd\uff0c\u53cc\u91cd\u5dee\u5206\u6cd5\u5c31\u662f\u7528\u6765\u7814\u7a76\u8fd9\u6b21\u51b2\u51fb\u7684\u51c0\u6548\u5e94\u7684\u3002\u7531\u4e8e\u51b2\u51fb\u76f8\u5bf9\u4e8e\u7814\u7a76\u6837\u672c\u800c\u8a00\u4e00\u822c\u662f\u5916\u751f\u7684\uff0c\u56e0\u800c\u4e0d\u5b58\u5728\u53cd\u5411\u56e0\u679c\u95ee\u9898\u3002  </p> </li> </ul> <p>\u597d\u7684\uff0c\u6211\u4eec\u7684\u5927\u660e\u661f\u53cc\u91cd\u5dee\u5206\u6a21\u578b\u7ec8\u4e8e\u51fa\u73b0\u4e86\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#6","title":"6 \u53cc\u91cd\u5dee\u5206\u6a21\u578b","text":"<p>\u53cc\u91cd\u5dee\u5206\u6a21\u578b\u7684\u5f62\u5f0f\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u3002  </p> \\[Y_{it}=\\beta_{0}+\\beta_{1}D+\\beta_{2}T+\\beta_{3}(D\\times T)+\\varepsilon_{it}\\] <p>D\u4e3a\u5206\u7ec4\u865a\u62df\u53d8\u91cf\u3002\u5728\u7814\u7a76\u4e8b\u4ef6\u6216\u653f\u7b56\u5f71\u54cd\u65f6\uff0c\u82e5\u53d7\u51b2\u51fb\u7684\u5f71\u54cd\uff0c\u5219\u4e2a\u4f53i\u5c5e\u4e8e\u5b9e\u9a8c\u7ec4\uff0c\\(D=1\\)\uff0c\u53cd\u4e4b\u4e2a\u4f53i\u5c5e\u4e8e\u5bf9\u7167\u7ec4\uff0c\\(D=0\\)\u3002T\u4e3a\u65f6\u95f4\u7684\u865a\u62df\u53d8\u91cf(\u4e8b\u4ef6\u6216\u653f\u7b56\u6709\u4e00\u4e2a\u53d1\u751f\u7684\u65f6\u70b9)\uff0c\u51b2\u51fb\u4e4b\u524d\\(T=0\\)\uff0c\u51b2\u51fb\u4e4b\u540e\\(T=1\\)\u3002\\(D\\times T\\)\u4e3a\u5206\u7ec4\u865a\u62df\u53d8\u91cf\u4e0e\u65f6\u95f4\u865a\u62df\u53d8\u91cf\u7684\u4ea4\u4e92\u9879(\u4e58\u5728\u4e00\u8d77)\uff0c\u5176\u7cfb\u6570\\(\\beta_{3}\\)\u5c31\u53cd\u6620\u4e86\u51b2\u51fb\u7684\u51c0\u6548\u5e94\u3002  </p> <p>\u54c7\u585e\uff0c\u662f\u4e0d\u662f\u770b\u4e0a\u53bb\u5f88\u7b80\u5355\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u522b\u7684\u63a7\u5236\u53d8\u91cf\u3002\u540c\u65f6\uff0c\u53cc\u91cd\u5dee\u5206\u6a21\u578b\u4e5f\u6709\u81ea\u5df1\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u5728\u51b2\u51fb\u524d\u6709\u5e73\u884c\u8d8b\u52bf\uff0c\u662f\u4e0d\u662f\u6709\u70b9\u50cfab test\uff1f  </p> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u53cc\u91cd\u5dee\u5206\u6a21\u578b\u53ef\u4ee5\u5e2e\u52a9\u4f60\u79d1\u5b66\u5730\u8bc4\u4f30\u67d0\u9879\u4e8b\u4ef6\u6216\u653f\u7b56\u7684\u5f71\u54cd\u3002\u8ba9\u4f60\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u8001\u677f\u632f\u804b\u53d1\u8069\u5730\u95ee\u4f60\uff0c\u4f60\u8bf4\u8bf4\u8fd9\u5230\u5e95\u6709\u5565\u5f71\u54cd\uff1f</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-24-DID/#7-takeaways","title":"7 Takeaways","text":"<ul> <li>\u5173\u6ce8\u6a21\u578b\u5047\u8bbe</li> <li>\u57fa\u4e8e\u56e0\u679c\u63a8\u65ad\u7684\u673a\u5668\u5b66\u4e60(\u77ac\u95f4\u5347\u534e)</li> </ul>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/","title":"A/B\u6d4b\u8bd5\u5b9e\u6218case\u5206\u4eab\uff0c\u9762\u5bf9\u8003\u5b98\u8ffd\u95ee\u4e5f\u4e0d\u614c","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-06-28\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea610\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#_1","title":"\u524d\u8a00","text":"<p>A/B\u6d4b\u8bd5\u662f\u5728\u589e\u957f\u9ed1\u5ba2\uff0c\u7cbe\u7ec6\u8fd0\u8425\u7406\u8bba\u4e2d\u5e38\u7528\u7684\u6570\u636e\u9a71\u52a8\u4ea7\u54c1\u4f18\u5316\u7684\u65b9\u6cd5\u3002\u5f88\u591a\u540c\u5b66\u6216\u591a\u6216\u5c11\u4e86\u89e3\u8fc7A/B\u6d4b\u8bd5\u80cc\u540e\u7684\u7406\u8bba\u548c\u7edf\u8ba1\u65b9\u6cd5\uff0c\u4f46\u662f\u6ca1\u6709\u673a\u4f1a\u53c2\u52a0\u5b9e\u9645\u9879\u76ee\uff0c\u79ef\u7d2f\u5b9e\u8df5\u7ecf\u9a8c\u3002\u6211\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e5f\u9047\u5230\u8fc7\u7c7b\u4f3c\u7684\u56f0\u6270\uff0c\u4eca\u5929\u60f3\u5411\u5927\u5bb6\u63a8\u8350\u4e00\u4e2a\u53ef\u4ee5\u5f88\u597d\u8865\u5145\u9879\u76ee\u7ecf\u9a8c\u4e0a\u7684\u7a7a\u7f3a\uff0c\u5728\u9047\u5230A/B\u6d4b\u8bd5\u76f8\u5173\u95ee\u9898\u65f6\u53ef\u4ee5\u66f4\u4ece\u5bb9\u5e94\u5bf9\u7684\u5b9e\u6218\u9879\u76ee\uff1a\u4f18\u8fbe\u5b66\u57ce(Udacity)\u4e0a\u7684A/B testing by Google\uff08Udacity\u662f\u4e00\u4e2a\u7ebf\u4e0a\u8bfe\u7a0b\u5e73\u53f0\uff0c\u6709\u5f88\u591a\u9ad8\u8d28\u91cf\u7684\u8ba1\u7b97\u673a\uff0c\u4eba\u5de5\u667a\u80fd\uff0c\u5546\u4e1a\u5206\u6790\u76f8\u5173\u8bfe\u7a0b\uff09\u3002</p> <p>\u8bfe\u7a0b\u94fe\u63a5\uff1a https://www.udacity.com/course/ab-testing--ud257</p> <p></p> <p>\u8fd9\u95e8\u8bfe\u4f1a\u5e26\u4f60\u8be6\u7ec6\u5730\u8bb2\u89e3\u9879\u76ee\u80cc\u666f\uff0c\u771f\u5b9e\u6848\u4f8b\u4e2d\u7684\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u540c\u65f6\u5f00\u653e\u5730\u9f13\u52b1\u4f60\u5bf9\u5b9e\u9a8c\u7ed3\u679c\u8fdb\u884c\u9610\u8ff0\u548c\u5206\u6790\u3002\u60f3\u79ef\u7d2f\u7ecf\u9a8c\u7684\u540c\u5b66\uff0c\u5efa\u8bae\u4eb2\u81ea\u5b8c\u6210\u8be5\u8bfe\u7a0b\uff0c\u4f1a\u53d1\u73b0\u5f88\u591a\u5b9e\u8df5\u4e2d\u624d\u4f1a\u9047\u5230\u7684\u95ee\u9898\u3002\u60f3\u89c2\u671b\u4e00\u4e0b\u6216\u8005\u5feb\u901f\u8fc7\u4e00\u904dA/B\u6d4b\u8bd5\u6d41\u7a0b\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u603b\u7ed3\u7684\u6d4b\u8bd5\u62a5\u544a\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#1","title":"1. \u5b9e\u9a8c\u80cc\u666f\u548c\u7b80\u4ecb","text":"<p>\u4f18\u8fbe\u5b66\u57ce\u662f\u4e00\u4e2a\u5728\u7ebf\u6559\u80b2\u7f51\u7ad9\uff0c\u8be5\u7f51\u7ad9\u901a\u8fc7\u5b66\u751f\u62a5\u540d\u4ed8\u8d39\u8bfe\u7a0b\u7684\u65b9\u5f0f\u76c8\u5229\u3002\u4f18\u8fbe\u5b66\u57ce\u5c06\u62a5\u540d\u5b66\u751f\u7684\u8bfe\u7a0b\u5b8c\u6210\u7387\u4f5c\u4e3a\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u8fd0\u8425\u6307\u6807\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7528\u6237\u7684\u4f7f\u7528\u6ee1\u610f\u5ea6\uff0c\u83b7\u5f97\u8f83\u597d\u7684\u8bfe\u7a0b\u53cd\u9988\u548c\u53e3\u7891\u3002\u4e3a\u4e86\u63d0\u9ad8\u8fd9\u4e00\u6307\u6807\uff0c\u4f18\u8fbe\u5b66\u57ce\u8ba1\u5212\u5bf9\u8bfe\u7a0b\u62a5\u540d\u5165\u53e3\u505a\u4e00\u4e9b\u6539\u52a8\uff0c\u5f15\u5bfc\u5b66\u751f\u9009\u62e9\u6700\u5408\u9002\u7684\u4e0a\u8bfe\u65b9\u5f0f\uff0c\u63d0\u9ad8\u8bfe\u7a0b\u7684\u5b8c\u6210\u7387\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#11","title":"1.1 \u63a7\u5236\u7ec4\uff1a","text":"<p>\u73b0\u6709\u7684\u7528\u6237\u62a5\u540d\u6d41\u7a0b\uff1a</p> <p>\u5728\u8fdb\u884c\u5b9e\u9a8c\u524d\uff0c\u4f18\u8fbe\u5b66\u57ce\u7684\u8bfe\u7a0b\u4e3b\u9875\u4e0a\u6709\u4e24\u4e2a\u9009\u9879\uff1a\u201c\u5f00\u59cb\u514d\u8d39\u8bd5\u7528\u201d \u548c\u201c\u83b7\u53d6\u8bfe\u7a0b\u8d44\u6599\u201d\u3002\u5982\u679c\u5b66\u751f\u70b9\u51fb\u201c\u5f00\u59cb\u514d\u8d39\u8bd5\u7528\u201d\uff0c\u7cfb\u7edf\u5c06\u8981\u6c42\u8f93\u5165\u94f6\u884c\u5361\u4fe1\u606f\uff0c\u7136\u540e\u8fdb\u5165\u514d\u8d39\u8bd5\u5b66\u9636\u6bb5\uff0c\u8be5\u9636\u6bb5\u5b66\u751f\u53ef\u4ee5\u9009\u62e9\u53d6\u6d88\u4f7f\u7528\uff0c\u5426\u521914\u5929\u540e\u4ed6\u4eec\u5c06\u81ea\u52a8\u6536\u8d39\u3002\u5982\u679c\u5b66\u751f\u70b9\u51fb\u201c\u83b7\u53d6\u8bfe\u7a0b\u8d44\u6599\u201d\uff0c\u90a3\u4e48\u4ed6\u4eec\u53ef\u4ee5\u514d\u8d39\u89c2\u770b\u89c6\u9891\u4ee5\u53ca\u505a\u968f\u5802\u6d4b\u8bd5\uff0c\u4f46\u662f\u4ed6\u4eec\u65e0\u6cd5\u83b7\u5f97\u5bfc\u5e08\u6307\u5bfc\u4ee5\u53ca\u8bc1\u4e66\uff0c\u4e5f\u65e0\u6cd5\u63d0\u4ea4\u6700\u7ec8\u9879\u76ee\u83b7\u5f97\u53cd\u9988\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#12","title":"1.2 \u5bf9\u7167\u7ec4\uff1a","text":"<p>\u5b9e\u9a8c\u6d4b\u8bd5\u7684\u62a5\u540d\u6d41\u7a0b\uff1a\u5728\u5b9e\u9a8c\u4e2d\uff0c\u5982\u679c\u5b66\u751f\u5355\u51fb\u201c\u5f00\u59cb\u514d\u8d39\u8bd5\u7528(14\u5929\u8bd5\u7528)\u201d\uff0c\u5219\u4f1a\u8be2\u95ee\u4ed6\u4eec\u6709\u591a\u5c11\u65f6\u95f4\u53ef\u7528\u4e8e\u8be5\u8bfe\u7a0b\u3002\u5982\u679c\u5b66\u751f\u56de\u590d\u6bcf\u5468\u5b66\u4e605\u4e2a\u5c0f\u65f6\u6216\u4ee5\u4e0a\uff0c\u5219\u8fdb\u5165\u6b63\u5e38\u6d41\u7a0b\uff0c\u514d\u8d39\u8bd5\u752814\u5929\u540e\u6309\u6708\u6536\u8d39\u3002\u5982\u679c\u4ed6\u4eec\u8868\u793a\u6bcf\u5468\u5c11\u4e8e5\u4e2a\u5c0f\u65f6\uff0c\u5219\u4f1a\u51fa\u73b0\u4e00\u6761\u6d88\u606f\uff0c\u63d0\u793aUdacity\u8bfe\u7a0b\u901a\u5e38\u9700\u8981\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u624d\u80fd\u6210\u529f\u5b8c\u6210\u8bfe\u7a0b\uff0c\u5e76\u5efa\u8bae\u5b66\u751f\u9009\u62e9\u7eaf\u514d\u8d39\u7248\uff08\u53ea\u83b7\u5f97\u8bfe\u7a0b\u8d44\u6599\uff09\u3002\u6b64\u65f6\uff0c\u5b66\u751f\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u6ce8\u518c\u514d\u8d39\u8bd5\u7528\u7248\uff0c\u6216\u6539\u4e3a\u7eaf\u514d\u8d39\u7248\u3002\u754c\u9762\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#13","title":"1.3 \u5b9e\u9a8c\u5047\u8bbe\uff1a","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u7684\u5047\u8bbe\u662f\u8fd9\u4f1a\u63d0\u524d\u4e3a\u5b66\u751f\u8bbe\u5b9a\u66f4\u660e\u786e\u7684\u671f\u671b\uff0c\u4ece\u800c\u51cf\u5c11\u56e0\u4e3a\u6ca1\u6709\u8db3\u591f\u65f6\u95f4\u5b66\u4e60\u800c\u9000\u51fa\u514d\u8d39\u8bd5\u7528\uff0c\u5e76\u56e0\u6b64\u53d7\u632b\u7684\u5b66\u751f\u6570\u91cf\uff0c\u540c\u65f6\u5b8c\u6210\u4ed8\u8d39\u5e76\u5b8c\u6210\u8bfe\u7a0b\u7684\u5b66\u751f\u6570\u91cf\u4e0d\u4f1a\u663e\u8457\u4e0b\u964d\u3002\u5982\u679c\u5047\u8bbe\u6210\u7acb\uff0cUdacity\u53ef\u4ee5\u6539\u5584\u5b66\u751f\u7528\u6237\u7684\u6574\u4f53\u4f53\u9a8c\uff0c\u5e76\u5c06\u6bd4\u8f83\u73cd\u7a00\u7684\u5bfc\u5e08\u8d44\u6e90\u63d0\u4f9b\u7ed9\u66f4\u6709\u610f\u613f\u5b8c\u6210\u8bfe\u7a0b\u7684\u5b66\u751f\u3002</p> <p>\u6d4b\u8bd5\u4e2d\u5206\u7ec4\u7684\u5355\u4f4d\u662fcookie\uff0c\u5b66\u751f\u53c2\u52a0\u514d\u8d39\u8bd5\u5b66\u767b\u9646\u540e\u7528\u6237id\u4f1a\u88ab\u8ddf\u8e2a\u3002\u540c\u4e00id\u53ea\u80fd\u53c2\u52a0\u4e00\u6b21\u514d\u8d39\u8bd5\u5b66\u3002\u5bf9\u4e8e\u4e0d\u80fd\u53c2\u52a0\u514d\u8d39\u8bd5\u5b66\u7684\u7528\u6237\uff0cid\u4e0d\u4f1a\u5728\u5b9e\u9a8c\u4e2d\u88ab\u8ddf\u8e2a\u3002\u5728\u6307\u6807\u9009\u62e9\u4e2d\uff0c\u5206\u6790\u5355\u4f4d\u6700\u597d\u6309\u7167\u5206\u7ec4\u5355\u4f4d\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#2","title":"2. \u6307\u6807\u9009\u62e9","text":"","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#21","title":"2.1 \u4e0d\u53d8\u6307\u6807\uff1a","text":"<p>\u9009\u62e9\u4ee5\u4e0b\u6307\u6807\u4f5c\u4e3a\u4e0d\u53d8\u6307\u6807\uff0c\u7528\u4e8e\u68c0\u9a8c\u5b9e\u9a8c\u53ef\u9760\u6027\uff1a</p> \u6307\u6807\u540d \u6307\u6807\u63cf\u8ff0 Dmin \u6700\u5c0f\u53d8\u5316\u503c \u7b26\u53f7 \u552f\u4e00cookie\u6570\u91cf \u8bbf\u95ee\u8bfe\u7a0b\u6982\u89c8\u9875\u9762\u7684\u552f\u4e00cookie\u6570\u91cf\uff08\u6bcf\u65e5\u7edf\u8ba1\uff09 3000 Cookies \u70b9\u51fb\u6570 \u70b9\u51fb\u201c\u5f00\u59cb\u514d\u8d39\u8bd5\u5b66\u201d\u6309\u94ae\u7684\u552f\u4e00 cookie \u7684\u6570\u91cf 240 Clicks \u8bbf\u95ee-\u70b9\u51fb\u8f6c\u5316\u7387 Clicks/Cookies 0.01 View_click_CTR","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#22","title":"2.2 \u8bc4\u4f30\u6307\u6807\uff1a","text":"<p>Udacity \u5e0c\u671b\u51cf\u5c11\u62a5\u540d\u8bfe\u7a0b\u4f46\u672a\u6210\u529f\u652f\u4ed8\u7684\u7528\u6237\u6bd4\u4f8b\uff0c\u7528\u6d41\u5931\u7387\u6307\u6807\u53cd\u6620\u3002\u8be5\u6307\u6807\u5b9a\u4e49\u4e3a\uff1a</p> <p>(\u62a5\u540d\u7528\u6237id\u6570 \u2013 \u4ed8\u8d39\u7528\u6237id\u6570) / \u8bd5\u5b66\u70b9\u51fb\u6570</p> <p>\u540c\u65f6\uff0cUdacity\u5e0c\u671b\u6700\u7ec8\u4ed8\u8d39\u7528\u6237\u6570\u91cf\u4e0d\u4f1a\u660e\u663e\u4e0b\u964d\uff0c\u9009\u62e9\u51c0\u8f6c\u5316\u7387\u53cd\u6620\uff0c\u7406\u60f3\u72b6\u51b5\u4e0b\u8be5\u6307\u6807\u5728\u5b9e\u9a8c\u4e2d\u5e94\u8be5\u6ca1\u6709\u663e\u8457\u53d8\u5316\u3002\u8be5\u6307\u6807\u5b9a\u4e49\u4e3a:</p> <p>\u4ed8\u8d39\u7528\u6237id\u6570(payments)/ \u70b9\u51fb\u6570(Clicks)</p> <p>\u6700\u540e\uff0cUdacity\u7684\u5b9e\u9a8c\u5982\u679c\u6709\u6548\uff0c\u5219\u62a5\u540d\u8bfe\u7a0b\u7684\u603b\u7528\u6237\u6570\u4e5f\u4f1a\u76f8\u5e94\u51cf\u5c11\uff0c\u9009\u62e9\u603b\u8f6c\u5316\u7387\u53cd\u5e94\u8be5\u53d8\u5316\u3002\u603b\u8f6c\u5316\u7387\u7684\u5b9a\u4e49\u4e3a\uff1a</p> <p>\u62a5\u540d\u7528\u6237id\u6570(enrollments) / \u70b9\u51fb\u6570(Clicks)</p> \u6307\u6807\u540d \u6307\u6807\u63cf\u8ff0 Dmin \u6700\u5c0f\u53d8\u5316\u7edd\u5bf9\u503c \u7b26\u53f7 \u6d41\u5931\u7387 (\u62a5\u540d\u7528\u6237id\u6570(enrollments) \u2013 \u4ed8\u8d39\u7528\u6237id\u6570(payments)) / \u70b9\u51fb\u6570(Clicks) 0.01 Churn_rate \u603b\u8f6c\u5316\u7387 \u62a5\u540d\u7528\u6237id\u6570(enrollments) /\u70b9\u51fb\u6570(Clicks) 0.0075 Gross_conversion \u51c0\u8f6c\u5316\u7387 \u4ed8\u8d39\u7528\u6237id\u6570(payments) / \u70b9\u51fb\u6570(Clicks) 0.0075 Net_conversion","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#3","title":"3. \u5b9e\u9a8c\u8bbe\u8ba1","text":"","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#31","title":"3.1 \u6837\u672c\u91cf\u8ba1\u7b97\uff1a","text":"<p>\u4e3a\u4e86\u8ba1\u7b97\u51fa\u5b9e\u9a8c\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6570\u91cf\u548c\u5b9e\u9a8c\u65f6\u95f4\u957f\u5ea6\uff0c\u6211\u4eec\u9700\u8981Udacity\u5e73\u53f0\u7684\u9884\u4f30\u6570\u636e\u3002\u5bf9\u6b64\uff0cUdacity \u63d0\u4f9b\u4e86\u4e00\u4efd\u6d41\u91cf\u548c\u8f6c\u5316\u6307\u6807\u7684\u65e5\u5747\u4f30\u503c\uff1a</p> \u6307\u6807 \u4f30\u8ba1\u65e5\u5747\u503c \u552f\u4e00cookie\u6570\u91cf 40,000 \u8bd5\u5b66\u70b9\u51fb\u6570 3,200 \u62a5\u540d\u7528\u6237\u6570 660 \u8bbf\u95ee-\u70b9\u51fb\u8f6c\u5316\u7387 0.08 \u70b9\u51fb-\u62a5\u540d\u8f6c\u5316\u7387 0.20625 \u62a5\u540d-\u4ed8\u8d39\u8f6c\u5316\u7387 0.53 \u6d41\u5931\u7387 0.096937 \u70b9\u51fb-\u4ed8\u8d39\u8f6c\u5316\u7387 0.109313 <p>\u8bbe\u5b9a\u663e\u8457\u6027\u6c34\u5e73 \u03b1 = 0.05\uff0c\u68c0\u9a8c\u529f\u6548 \u03b2 = 0.20\u3002</p> <p>\u6839\u636e\u6837\u672c\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ n_{clicks}=\\left(Z_{(1-\\alpha / 2)} s d_{1}+Z_{(1-\\beta)} s d_{2}\\right)^{2} / d^{2} \\] <p>\u5176\u4e2d\uff1a</p> \\[ sd_{1}=\\sqrt{p(1-p)+p(1-p)} \\] \\[ sd_{2}=\\sqrt{\\{p(1-p)+(p+d)(1-(1-(p+d)\\}} \\] <p>\uff08p\u4e3a\u57fa\u51c6\u8f6c\u5316\u7387\uff0cd\u4e3a\u6700\u5c0f\u53d8\u5316\u503c\uff09</p> <p>\u9875\u9762\u6d4f\u89c8cookies\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570\u91cf = \\(\\frac{n}{0.08} \\times 2\\)</p> <p>\u5404\u8bc4\u4f30\u6307\u6807\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u6570\u91cf\u5206\u522b\u4e3a\uff1a</p> \u6307\u6807\u540d \u6700\u5c0f\u70b9\u51fb\u6570\u91cf(clicks) \u6700\u5c0f\u6837\u672c\u6570\u91cf(cookies) \u6d41\u5931\u7387 13928 348200 \u603b\u8f6c\u5316\u7387 25835 645876 \u51c0\u8f6c\u5316\u7387 27413 685326 <p>\u9009\u62e9\u5176\u4e2d\u6570\u503c\u8f83\u5927\u7684\u4f5c\u4e3a\u6837\u672c\u6570\u91cf\uff0c\u5373685326\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#32","title":"3.2 \u66dd\u5149\u6d41\u91cf\u548c\u5b9e\u9a8c\u957f\u5ea6\uff1a","text":"<p>\u9996\u5148\u9700\u8981\u5173\u6ce8\u672c\u6b21\u5b9e\u9a8c\u8bbe\u8ba1\u662f\u5426\u4f1a\u5bf9\u73b0\u6709\u7cfb\u7edf\u4ea7\u751f\u8f83\u5927\u98ce\u9669\uff0c\u6211\u7684\u89c2\u70b9\u662f\u4e0d\u5b58\u5728\u8f83\u5927\u98ce\u9669\uff1a</p> <p>\u5bf9\u7528\u6237\u800c\u8a00\uff1a\u5bf9\u7528\u6237\u540e\u7eed\u4ed8\u8d39\uff0c\u8f6c\u5316\u6d41\u7a0b\u6ca1\u6709\u5f71\u54cd\uff1b\u6536\u96c6\u7684\u7528\u6237\u5b66\u4e60\u65f6\u957f\u4e0d\u5c5e\u4e8e\u654f\u611f\u6570\u636e\u3002</p> <p>\u5bf9\u7f51\u7ad9\u800c\u8a00\uff1a\u7f51\u7ad9\u754c\u9762\u6ca1\u6709\u5927\u5e45\u6539\u52a8\uff1b\u6ca1\u6709\u6570\u636e\u5e93\u53ca\u540e\u53f0\u6539\u53d8\u3002</p> <p>\u6240\u4ee5\uff0c\u7efc\u5408\u6765\u770b\uff0c\u53ef\u4ee5\u9009\u62e9\u66dd\u514975%\u6d41\u91cf\uff0c\u6bcf\u5929cookies\u6570\u91cf\u7ea6\u4e3a30000\uff0c\u9700\u8981\u8fdb\u884c23\u5929\u5b9e\u9a8c\u3002\u5176\u4e2d\uff0c\u7531\u4e8e\u70b9\u51fb\u8bd5\u5b66\u7528\u6237\u572814\u5929\u540e\u624d\u6709\u4ed8\u8d39\u884c\u4e3a\uff0c\u6240\u4ee5\u5b9e\u9645\u5b9e\u9a8c\u6570\u636e\u5e94\u8be5\u6536\u96c6\u81f3\u7b2c37\u5929\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#4","title":"4. \u5b9e\u9a8c\u7ed3\u679c\u5206\u6790","text":"","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#41","title":"4.1 \u53ef\u9760\u6027\u68c0\u9a8c\uff1a","text":"<p>\u68c0\u9a8cPageviews(cookies), Clicks, View_click_CTR\u3002 Cookies \u548c Clicks\u670d\u4ece\u4e8c\u9879\u5206\u5e03\uff0cp = 0.5; \u6839\u636e\u4e2d\u503c\u5b9a\u7406\uff0c\u53ef\u5f97X\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff1a</p> \\[ N\\sim(p,\\sqrt{p(1-p)/N}) \\] <p>\u5bf9\u4e8eCTR\u800c\u8a00\uff0c\u6807\u51c6\u504f\u5dee\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a</p> \\[ SD_{pool}=\\sqrt{p_{\\text{pool}}\\left(1-p_{\\text{pool}}\\left(\\frac{1}{N_{\\text{cont}}}+\\frac{1}{N_{\\text{exp}}}\\right)\\right.} \\] <p>\u53ef\u9760\u6027\u68c0\u9a8c\u7ed3\u679c\uff1a</p> \u6837\u672c\u91cf\u5206\u5e03 \u70b9\u51fb\u91cf\u5206\u5e03 \u70b9\u51fb-\u8bbf\u95ee\u8f6c\u5316\u7387\u5206\u5e03 \u89c2\u5bdf\u503c 0.5006 0.4994 0.08218 \u7f6e\u4fe1\u533a\u95f4(95%) [0.4988,0.5012] [0.4959,0.5041] [0.0799,0.0832] <p>\u4e09\u7ec4\u4e0d\u53d8\u6307\u6807\u5dee\u5f02\u5747\u5728\u7f6e\u4fe1\u533a\u95f4\u5185\uff0c\u901a\u8fc7\u53ef\u9760\u6027\u68c0\u9a8c\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#42","title":"4.2 \u663e\u8457\u6027\u68c0\u9a8c\uff1a","text":"<p>\u5b9e\u9a8c\u6307\u6807\u5747\u4e3a\u6bd4\u4f8b\u6307\u6807\uff0c\u4e14\u6837\u672c\u6570\u91cf\u8f83\u5927\uff0c\u9002\u5b9c\u91c7\u7528Z\u68c0\u9a8c\uff0c\u8ba1\u7b97\u5bf9\u7167\u7ec4\u548c\u5b9e\u9a8c\u7ec4\u7edd\u5bf9\u5dee\u503c\u548c\u7f6e\u4fe1\u533a\u95f4\uff0c\u5224\u65ad\u7f6e\u4fe1\u533a\u95f4\u662f\u5426\u5305\u542b\u96f6\u70b9\u548c\u6700\u5c0f\u53d8\u5316\u503c\u3002</p> <p>Z\u68c0\u9a8c\u7ed3\u679c\uff1a</p> \u6307\u6807\u540d \u7edd\u5bf9\u53d8\u5316\u91cf \u7f6e\u4fe1\u533a\u95f4(95%) \u6700\u5c0f\u53d8\u5316\u503cDmin \u662f\u5426\u7edf\u8ba1\u6027\u663e\u8457 \u662f\u5426\u5b9e\u9645\u6027\u663e\u8457 \u6d41\u5931\u7387 -0.0157 [-0.0218, -0.0096] 0.01 \u662f \u5426 \u603b\u8f6c\u5316\u7387 -0.0206 [-0.0292, -0.012] 0.0075 \u662f \u662f \u51c0\u8f6c\u5316\u7387 -0.0049 [-0.0116, 0.0018] 0.0075 \u5426 \u5426","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-06-28-AB-Testing/#5","title":"5. \u5b9e\u9a8c\u7ed3\u8bba","text":"<p>\u5b9e\u9a8c\u4e2d\u6d41\u5931\u7387\u7684\u53d8\u5316\u5177\u6709\u7edf\u8ba1\u663e\u8457\u6027\uff0c\u4f46\u662f\u79bb\u5177\u6709\u5b9e\u9645\u663e\u8457\u6027\u8fd8\u5dee\u4e00\u70b9\u70b9\uff0c\u603b\u8f6c\u5316\u7387\u7684\u53d8\u5316\u5177\u6709\u5b9e\u9645\u663e\u8457\u6027\uff0c\u800c\u51c0\u8f6c\u5316\u7387\u6ca1\u6709\u7edf\u8ba1\u663e\u8457\u6027\uff0c\u8bf4\u660e\u62a5\u540d\u8bd5\u5b66\u7684\u7528\u6237\u5728\u5bf9\u7167\u7ec4\u4e2d\u6709\u663e\u8457\u51cf\u5c11\uff0c\u540c\u65f6\u6ca1\u6709\u663e\u8457\u5f71\u54cd\u5230\u6700\u7ec8\u4ed8\u6b3e\u5b66\u751f\u7684\u6570\u91cf\uff0c\u8fd9\u7b26\u5408Udacity\u7684\u9884\u671f\u76ee\u6807\u3002</p> <p>\u7efc\u5408\u800c\u8a00\uff0c\u672c\u6b21\u5b9e\u9a8c\u6539\u52a8\u57fa\u672c\u7b26\u5408Udacity \u7684\u9884\u671f\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u8fbe\u4e0d\u5230Udacity \u671f\u671b\u7684\u6548\u5e94\u5927\u5c0f\u3002\u540e\u671f\u53ef\u4ee5\u8003\u8651\u5c1d\u8bd5\u7684\u5de5\u4f5c\u6709\uff1a</p> <ol> <li> <p>\u5c1d\u8bd5\u9002\u5f53\u5ef6\u957f\u5b9e\u9a8c\u65f6\u95f4\u83b7\u5f97\u66f4\u591a\u7684\u4ed8\u8d39\u7528\u6237\u6837\u672c\u6570\u91cf\uff0c\u89c2\u5bdf\u6d41\u5931\u7387\u662f\u5426\u53d8\u6210\u6709\u5b9e\u9645\u663e\u8457\u6027\u3002</p> </li> <li> <p>\u8bbe\u8ba1\u63d0\u9ad8\u7559\u5b58\u7684\u7248\u672c\u8fed\u4ee3\u65b9\u6848\u91cd\u65b0\u6d4b\u8bd5\uff0c\u4f8b\u5982\u5bf9\u5b8c\u6210\u4e00\u90e8\u5206\u8bfe\u7a0b\u7684\u8bd5\u5b66\u5b66\u5458\u63d0\u4f9b\u9f13\u52b1\u63d0\u793a\u6216\u5c11\u91cf\u5956\u52b1\uff08\u5982\u79ef\u5206\u7b49\uff09\u3002</p> </li> </ol>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/","title":"\u722c\u53d6\u5e76\u4e0b\u8f7dURL\u4e0d\u53d8\u7684pdf\u6587\u4ef6","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-07-01\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#1","title":"1 \u5f15\u8a00","text":"<p>\u4e3a\u4e86\u66f4\u597d\u7684\u5356\u4fdd\u9669(\u5bfc\u5e08\u8981\u6c42)\uff0c\u9700\u8981\u4e0b\u8f7d\u4fdd\u9669\u4e1a\u534f\u4f1a\u5b98\u7f51-\u4fe1\u606f\u62ab\u9732\u4e2d\u4fdd\u9669\u516c\u53f8\u62ab\u9732\u7684pdf\u6587\u4ef6\u3002\u4fdd\u9669\u516c\u53f8\u5f88\u591a\uff0c\u6bcf\u5bb6\u53c8\u6709\u4e0d\u5c11\u5e74\u5ea6\u62ab\u9732\u7684pdf\u3002\u540c\u65f6\uff0c\u795e\u5947\u7684\u662f\uff0c\u65e0\u8bba\u600e\u4e48\u70b9\u51fb\u9875\u9762\uff0c\u7f51\u9875\u7684URL\u90fd\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\u4e3a\u4e86\u62d2\u7edd\u5f53\u4eba\u8089\u722c\u866b\uff0c\u6211\u4eec\u518d\u6b21\u5c1d\u8bd5\u4f7f\u7528Python\u5e2e\u52a9\u6211\u4eec\u9ad8\u6548\u3001\u81ea\u52a8\u5730\u4e0b\u8f7d\u8fd9\u4e9bpdf\u6587\u4ef6\u3002  </p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#2","title":"2 \u5177\u4f53\u6b65\u9aa4","text":"<p>\u6211\u4eec\u6253\u5f00\u4fdd\u9669\u4e1a\u534f\u4f1a\u7f51\u7ad9\uff0c\u70b9\u51fb\u4e0d\u540c\u7684\u79d1\u76ee\uff0c\u5982\u4fdd\u9669\u516c\u53f8\u5e74\u5ea6\u4fe1\u606f\u62ab\u9732\uff0c\u6211\u4eec\u53d1\u73b0\u9875\u9762\u7684URL\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u65f6\uff0c\u8bf7\u4e0d\u8981\u6000\u7591\u81ea\u5df1\u7684\u773c\u775b\u6216\u662f\u7838\u70c2\u7535\u8111\uff0c\u6211\u4eec\u5e94\u8be5\u5408\u7406\u5730\u6000\u7591\u9875\u9762\u91c7\u53d6\u4e86\u67d0\u4e9b\u5f02\u6b65\u8bf7\u6c42(Ajax)\u7684\u65b9\u5f0f\u3002 \u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u53d1\u9001\u771f\u5b9e\u8bf7\u6c42\u7684\u9875\u9762\u3002\u6211\u4eec\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u5728Network\u4e2d\u52fe\u9009ALL\uff0c\u6e05\u7a7a\u540e\u91cd\u65b0\u70b9\u51fb\u6211\u4eec\u8981\u9009\u53d6\u7684\u79d1\u76ee\uff0c\u5982\u5173\u8054\u4ea4\u6613\u5408\u5e76\u62ab\u9732\u3002\u795e\u5947\u7684\u4e8b\u60c5\u51fa\u73b0\u4e86\uff0c\u7ea2\u6846\u4e2d\u6807\u793a\u51fa\u6765\u4e86\u4e00\u4e2a\u65b0\u7684URL\uff0c\u90a3\u4e48\u8fd9\u4e2aURL\u662f\u4e0d\u662f\u6211\u4eec\u771f\u6b63\u8981\u627e\u7684OnePiece\u5462\uff1f</p> <pre><code>http://icid.iachina.cn/ICID/front/leafColComType.do?columnid=2016072012158397\n</code></pre> Real URL <p>\u6211\u4eec\u8fdb\u5165\u6b64URL\u3002\u5b8c\u86cb\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u548c\u4e0a\u4e00\u9875\u9762\u795e\u4f3c\u4f46\u662f\u957f\u5f97\u66f4\u4e11\u7684\u7f51\u5740\u3002</p> Enter URL <p>\u6211\u4eec\u7834\u7f50\u5b50\u7834\u6454\uff0c\u70b9\u51fb\u7b2c\u4e00\u5bb6\u4fdd\u9669\u516c\u53f8\uff1a\u4e2d\u56fd\u4eba\u5bff\u8d44\u4ea7\u7ba1\u7406\u6709\u9650\u516c\u53f8\uff0c\u540c\u6837\u6211\u4eec\u53d1\u73b0URL\u5e76\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\u6211\u4eec\u201c\u81ea\u66b4\u81ea\u5f03\u201d\u7684\u6309\u540c\u6837\u7684\u64cd\u4f5c\u89c2\u5bdf\u5b83\u7684XHR\uff0c\u53d1\u73b0URL\u53c8\u53d8\u4e86\uff1a</p> <pre><code>http://icid.iachina.cn/ICID/front/getCompanyInfos.do?columnid=2016072012158397&amp;comCode=GSZC&amp;attr=01\n</code></pre> <p>\u8fd9\u4e0b\uff0c\u4e8b\u60c5\u4f3c\u4e4e\u6709\u8f6c\u673a\u4e86\u3002\u6211\u4eec\u53d1\u73b0\u4f3c\u4e4e\u53ea\u9700\u8981\u5728comCode\u8fd9\u8fb9\u8d4b\u503c\u6240\u6709\u7684\u4fdd\u9669\u516c\u53f8\u7b80\u79f0\u5373\u53ef\u3002 \u4e0b\u4e00\u6b65\u5c31\u662f\u83b7\u53d6\u6240\u6709\u7684\u4fdd\u9669\u516c\u53f8\u7684\u7b80\u79f0\uff0c\u6211\u4eec\u5728\u4e0a\u4e00\u9875\u9762\uff0c\u5373</p> <pre><code>http://icid.iachina.cn/ICID/front/leafColComType.do?columnid=2016072012158397\n</code></pre> <p>\u4e2d\uff0c\u4f7f\u7528select an element\u53bb\u5ba1\u67e5\u6bcf\u5bb6\u4fdd\u9669\u516c\u53f8\u7684\u540d\u5b57\uff0c\u53d1\u73b0\u5176\u7b80\u79f0\u90fd\u5b58\u50a8\u5728\u63a7\u4ef6a\u7684id\u4e2d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u7684\u65b9\u5f0f\u5f97\u5230\u6240\u6709\u4fdd\u9669\u516c\u53f8\u7684\u7b80\u79f0\uff0c\u5e76\u5e26\u5165\u5230comCode\u4e2d\u3002 \u4ee5\u56fd\u5bff\u8d44\u4ea7(GSZC)\u4e3a\u4f8b\uff0c\u6211\u4eec\u8fdb\u5165\u65b0\u7684\u7f51\u5740\uff1a</p> Example <p>\u5176\u4e2d\u6bcf\u4e00\u4e2apdf\u5c31\u662f\u6211\u4eec\u6700\u7ec8\u60f3\u5f97\u5230\u7684\u7ed3\u679c\u4e86\uff0c\u6211\u4eec\u70b9\u51fb\u4e00\u4e2a\u516c\u544a\uff0c\u540c\u6837\u67e5\u770b\u5b83\u7684XHR\u3002</p> <pre><code>http://icid.iachina.cn/front/infoDetail.do?informationno=2020012109398975\n</code></pre> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u83b7\u53d6informationno\uff0c\u5b83\u5728\u8fd9\u4e2a\u9875\u9762\u63a7\u4ef6\u4e3aa\u7684id\u5904\u3002\u6211\u4eec\u8fdb\u5165\u8fd9\u4e2aURL\u3002  </p> <p>\u90a3\u4e48\u6700\u540e\u4e00\u6b65\u5c31\u662f\u83b7\u53d6\u56fd\u5bff\u8d44\u4ea7\u8fd9\u4e00\u5e74\u5ea6\u516c\u544a\u7684pdf\u4e86\u3002\u70b9\u5f00\u516c\u544a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230URL\u4e3a</p> <pre><code>http://icid.iachina.cn/ICID/files/piluxinxi/pdf/viewer.html?file=8f993c5a-1c1c-4f91-a8a5-7fad85a14616.PDF\n</code></pre> <p>file\u540d\u6070\u597d\u4e5f\u5b58\u5728\u4e0a\u4e00\u9875\u9762\u63a7\u4ef6\u4e3aa\u7684id\u4e2d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u8fb9\u662fviewer\u65b9\u5f0f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u539f\u59cb\u7684pdf\uff0c\u56e0\u6b64\u6539\u4e3a\u4ee5\u4e0bURL\u5373\u53ef\u3002</p> <pre><code>http://icid.iachina.cn/ICID/files/piluxinxi/pdf/8f993c5a-1c1c-4f91-a8a5-7fad85a14616.PDF\n</code></pre> <p>\u6211\u4eec\u5982\u540c\u62c6\u5f00\u5957\u5a03\u4e00\u822c\uff0c\u6210\u529f\u62ff\u5230\u4e86\u6700\u7ec8\u7684pdf\u3002\u4e0b\u9762\u5c31\u662f\u4f7f\u7528Python\u628a\u5b83\u4e0b\u8f7d\u4e0b\u6765\u4e86\u3002\u53ea\u9700\u8981\u5199\u51e0\u4e2a\u7b80\u5355\u7684\u5faa\u73af\uff0c\u70b9\u51fb\u8fd0\u884c\u7a0b\u5e8f\uff0c\u518d\u6253\u5f00Dota2\uff0c\u4e00\u628adota\u7684\u65f6\u95f4\uff0cPython\u5df2\u7ecf\u5e2e\u6211\u4eec\u4e0b\u8f7d\u5b8c\u6210\u4e86\u8fd11\u4e2aG\u7684pdf\u6587\u4ef6\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#3","title":"3 \u603b\u7ed3","text":"<p>\u6211\u4eec\u5f80\u5f80\u4f1a\u78b0\u5230\u4e00\u4e9b\u9700\u8981\u673a\u68b0\u3001\u91cd\u590d\u64cd\u4f5c\u5b8c\u6210\u7684\u8bf7\u6c42\u3002\u8fd9\u65f6\uff0c\u7528\u7a0b\u5e8f\u5b9e\u73b0\u5f80\u5f80\u662f\u9ad8\u6548\u3001\u7701\u529b\u7684\u9009\u62e9\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528Python\u6210\u529f\u4e0b\u8f7d\u4e86\u6240\u9700\u8981\u7684\u5927\u91cfpdf\u6587\u4ef6\u3002\u7531\u4e8e\u4e0d\u540c\u7f51\u7ad9\u7684\u6784\u9020\u4e0d\u540c\uff0c\u4fdd\u9669\u4e1a\u534f\u4f1a\u7684\u7f51\u7ad9\u91c7\u7528\u4e86\u5f02\u6b65\u52a0\u8f7d\u7684\u65b9\u5f0f\uff0c\u5bfc\u81f4\u9875\u9762\u7684URL\u4e00\u76f4\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u901a\u8fc7\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u6210\u529f\u627e\u5230\u4e86\u53d1\u9001\u7684\u771f\u5b9e\u8bf7\u6c42\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#4","title":"4 \u4ee3\u7801","text":"<p>\u6700\u7ec8code\u6574\u7406\u5982\u4e0b\uff1a</p> <pre><code>from bs4 import BeautifulSoup\nimport requests\nimport time\nfrom tqdm import tqdm\nimport os\nheader={\"User-Agent\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\"}\n\nurl=\"http://icid.iachina.cn/front/leafColComType.do?columnid=2016072012158397\"\nresponse=requests.get(url,headers=header)\nresponse.encoding='GBK'\nsoup=BeautifulSoup(response.text,'lxml')\ndata=soup.select('a')\nn=[]\nfor i in data:\n    try:\n        n.append(i.attrs['id'])\n    except:\n        continue\nfor z in tqdm(n):\n\n    url=\"http://icid.iachina.cn/front/getCompanyInfos.do?columnid=2016072012158397&amp;comCode={}&amp;attr=01#\".format(z)\n    response=requests.get(url,headers=header)\n    response.encoding='GBK'\n    soup=BeautifulSoup(response.text,'lxml')\n    data=soup.select('a')\n    l=[]\n    name=[]\n    for i in data:\n        try:\n            l.append(i.attrs['id'])\n            name.append(i.text)\n        except:\n            continue\n    l=l[:-1]\n    name=name[:-1]\n    for j in range(len(l)):\n        url=\"http://icid.iachina.cn/front/infoDetail.do?informationno={}\".format(l[j])\n        response=requests.get(url,headers=header)\n        response.encoding='GBK'\n        soup=BeautifulSoup(response.text,'lxml')\n        data=soup.select('a')\n        link=data[1].attrs['id']\n\n        url=\"http://icid.iachina.cn/files/piluxinxi/pdf/{}\".format(link)\n        response=requests.get(url,headers=header)\n        pdf = response.content\n        #\u5199\u5165pdf\n        c=0\n        with open(r\"C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf\".format(name[j]),'wb') as f:\n            f.write(pdf)\n        while os.path.getsize(r'C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf'.format(name[j]))==0:\n            time.sleep(3)\n            url=\"http://icid.iachina.cn/files/piluxinxi/pdf/{}\".format(link)\n            response=requests.get(url,headers=header)\n            pdf = response.content\n            with open(r\"C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf\".format(name[j]),'wb') as f:\n                f.write(pdf)  \n            c+=1\n            if c&gt;=5:\n                break\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/","title":"Python\u722c\u866b\u5e94\u7528 - PayPal\u804c\u4f4d\u6293\u53d6","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-07-18\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#1","title":"1 \u524d\u8a00","text":"<p>\u91d1\u4e09\u94f6\u56db\u521a\u8fc7\u53bb\u6ca1\u591a\u4e45\uff0c\u79cb\u62db\u53c8\u5373\u5c06\u5230\u6765\uff0c\u5728\u5fd9\u788c\u53c8\u5377\u7684\u5b63\u8282\uff0c\u7b14\u8005\u66fe\u7ecf\u5e7b\u60f3\u7740\u80fd\u4e00\u952e\u6293\u53d6\u5fc3\u4eea\u516c\u53f8\u6240\u6709\u7684\u804c\u4f4d\uff0c\u7136\u540e\u6839\u636e\u81ea\u5df1\u7684\u5f3a\u9879\u548c\u6c42\u804c\u610f\u613f\u9010\u4e2a\u51fb\u7834\uff0c\u6536\u83b7\u4e00\u7bee\u5b50offer\u3002\u5176\u5b9e\uff0c\u501f\u52a9Python\u5c31\u80fd\u8f7b\u6613\u5b8c\u6210\u8fd9\u4e2a\u76ee\u6807\u7684\u7b2c\u4e00\u6b65\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ee5\u8457\u540d\u91d1\u878d\u79d1\u6280\u516c\u53f8PayPal\u5b98\u7f51\u4e3a\u4f8b\uff0c\u5c55\u793aPython\u81ea\u52a8\u6279\u91cf\u6293\u53d6\u804c\u4f4d\u7684\u5c0f\u6280\u5de7\uff0c\u5e2e\u4f60\u5728\u6c42\u804c\u8def\u4e0a\u5feb\u4eba\u4e00\u6b65!</p> <p>Warning</p> <p>\u6ce8\uff1a\u672c\u6587\u4ec5\u7528\u4e8e\u5b66\u4e60\u7814\u7a76Python\u7f16\u7a0b\u6280\u5de7\uff0c\u5982\u679c\u4fb5\u6743\uff0c\u5c06\u7acb\u5373\u5220\u9664\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#2","title":"2 \u51c6\u5907\u5de5\u4f5c","text":"PayPal\u62db\u8058\u5b98\u7f51 <p>\u9996\u5148\uff0c\u67e5\u770bPayPal\u6c42\u804c\u5b98\u7f51\u7684\u7ed3\u6784\uff0c\u6240\u53d1\u5e03\u7684\u804c\u4f4d\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u5c55\u793a\uff0c\u70b9\u51fb\u5217\u8868\u91cc\u7684\u804c\u4f4d\uff0c\u5c31\u53ef\u4ee5\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u8be6\u60c5\u9875\u3002\u540c\u65f6\uff0c\u67d0\u4e9b\u56fd\u5bb6\u548c\u5730\u533a\u7684\u804c\u4f4d\u6bd4\u8f83\u591a\uff0c\u5206\u6210\u4e86\u591a\u9875\u663e\u793a\uff0c\u5219URL\u4f1a\u4ee5\u76f8\u5e94\u7684\u9875\u9762\u7f16\u53f7\u6765\u533a\u5206\uff0c\u4f8b\u5982<code>https://jobsearch.paypal-corp.com/en-US/search?facetcitystate=san%20jose,ca&amp;pagenumber=2</code>\u3002\u56e0\u6b64\u5224\u65ad\u5927\u81f4\u9700\u8981\u5982\u4e0b\u51e0\u6b65\u5373\u53ef\u6293\u53d6\u5230\u6bcf\u4e2a\u804c\u4f4d\u7684\u8be6\u60c5\uff1a</p> <ul> <li>\u5b9a\u4f4d\u804c\u4f4d\u5217\u8868\uff0c\u627e\u5230\u6bcf\u4e2a\u804c\u4f4d\u5bf9\u5e94\u7684URL</li> <li>\u904d\u5386\u6240\u6709\u9875\u9762\uff0c\u91cd\u590d\u5b8c\u6210\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u5b58\u50a8\u6240\u6709\u804c\u4f4dURL</li> <li>\u901a\u8fc7\u804c\u4f4d\u7684URL\uff0c\u8bbf\u95ee\u804c\u4f4d\u63cf\u8ff0\uff0c\u5b9a\u4f4d\u8be6\u60c5\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5e76\u4fdd\u5b58\u804c\u4f4d\u63cf\u8ff0</li> </ul> PayPal\u804c\u4f4d\u63cf\u8ff0","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#3","title":"3 \u7528\u4ee3\u7801\u6784\u5efa\u722c\u866b","text":"<p>Python\u73af\u5883\u7684\u914d\u7f6e\u8bf7\u53c2\u8003\u4e4b\u524d\u7684\u6587\u7ae0\uff1a\u4e24\u5206\u949f\u6253\u9020\u6dd8\u5b9d\u62a2\u5355\u673a\u5668\u4eba</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#31","title":"3.1 \u5bfc\u5165\u4f9d\u8d56\u7684\u5305","text":"<pre><code># \u89e3\u6790\u7f51\u9875\nimport requests\nfrom bs4 import BeautifulSoup\n\n# \u8868\u683c\u64cd\u4f5c\nimport numpy as np\nimport pandas as pd\n\n# \u901a\u7528\nimport re\nimport os\nimport unicodedata\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#32","title":"3.2 \u8bbf\u95ee\u804c\u4f4d\u5217\u8868","text":"<pre><code># \u8bbf\u95eeURL\uff0c\u5e76\u53d6\u56de\u8fd4\u56de\u7ed3\u679c\ndef url_request(url):\n    header = {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36'}\n    r = requests.get(url, headers=header)\n    print('Connection status:', r.status_code, '\\n')\n    return r.text\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#33","title":"3.3 \u89e3\u6790\u804c\u4f4d\u7c7b\u522b","text":"<pre><code># \u627e\u5230\u9875\u9762\u4e2d\u9700\u8981\u7684\u5143\u7d20\uff0c\u5b58\u50a8\u804c\u4f4d\u5217\u8868\u4fe1\u606f\ndef job_parser(html):\n    header,desc,link = [[] for i in range(3)]\n    soup = BeautifulSoup(html, 'html.parser')\n    # \u53f3\u952e\u901a\u8fc7\u6253\u5f00\u6d4f\u89c8\u5668\u68c0\u67e5\u5668\uff0c\u5728\u5143\u7d20tab\u4e2d\u67e5\u770b\u7f51\u9875\u6e90\u7801\uff0c\u53ef\u770b\u5230\u804c\u4f4d\u540d\u79f0\u7684\u7c7b\u522b\u540d\u5b57\u4e3aprimary-text-color job-result-title\uff0c\u5e76\u4e14\u662f\u4e00\u4e2aa\u6807\u7b7e\n    job_header = soup.find_all('a', attrs={'class': 'primary-text-color job-result-title'})\n    # \u5143\u7d20\u67e5\u627e\u65b9\u6cd5\u540c\u4e0a\n    job_link = soup.find_all('a', attrs={'class': 'primary-text-color job-result-title'}, href=True)\n\n    header = [i.contents[0] for i in job_header]\n    link = ['https://jobsearch.paypal-corp.com/'+i['href'] for i in job_link]\n\n    # \u5c06\u7ed3\u679c\u5b58\u8d77\u6765\n    return pd.DataFrame({'Title':header, 'Link':link})\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#34","title":"3.4 \u904d\u5386\u6240\u6709\u9875\u9762","text":"<pre><code># \u521b\u5efa\u4e00\u4e2a\u5b58\u50a8\u7ed3\u679c\u7684dataframe\ndf = pd.DataFrame(columns=['Title','Link'])\n# \u521b\u5efaURL\u7684\u6a21\u677f\uff0c\u6dfb\u52a0\u4e0d\u540c\u7684\u9875\u7801\u5c31\u53ef\u5339\u914d\u4e0d\u540c\u7684\u9875\u9762\njob_url_header = 'https://jobsearch.paypal-corp.com/en-US/search?facetcountry=cn&amp;facetcity=shanghai&amp;pagenumber='\n\n# \u904d\u5386\u6240\u6709\u9875\u9762\uff0c\u5e76\u5b58\u50a8\u7ed3\u679c\nfor i in range(2):\n  job_url = job_url_header + str(i+1)\n  print('URL: {}'.format(job_url))\n  job_html = url_request(job_url)\n  # \u5c06\u6bcf\u4e2a\u9875\u9762\u7684\u7ed3\u679c\u5b58\u8d77\u6765\n  df = df.append(job_parser(job_html))\n</code></pre>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#35","title":"3.5 \u6293\u53d6\u804c\u4f4d\u8be6\u60c5","text":"<pre><code>def get_jd(url):\n  jd_html = url_request(url)\n  soup = BeautifulSoup(jd_html, 'html.parser')\n  jd_desc = soup.find('div', attrs={'class': 'jdp-job-description-card content-card'})\n  # JD\u683c\u5f0f\u4e0d\u4e00\uff0c\u6b64\u5904\u4ec5\u505a\u6f14\u793a\n  if jd_desc:\n    if jd_desc.findAll('ul')[:]:\n      desc = [i.text + '\\n{}'.format(j.text) for i,j in zip(jd_desc.findAll('p')[:], jd_desc.findAll('ul')[:])]\n    else:\n      desc = [i.text  for i in jd_desc.findAll('p')[:]]\n\n    return unicodedata.normalize('NFKD', '\\n'.join(i for i in desc))\n\n# \u5bf9\u4e4b\u524d\u5b58\u50a8\u7684\u5185\u5bb9\u4f7f\u7528\u8be6\u60c5\u6293\u53d6\u51fd\u6570\uff0c\u5c06\u8be6\u60c5\u4fdd\u5b58\u4e0b\u6765\u3002\ndf['JD'] = df['Link'].apply(get_jd)\n\n# \u6253\u5370\u7ed3\u679c\ndf.tail(2)\n</code></pre> Title Link JD Manager, APAC Portfolio Management https://jobsearch.paypal-corp.com//en-US/job/manager-apac-portfolio-management/J3N1SM76FQPVMX4VFZG As the Shanghai Team Manager of PayPal APAC Portfolio Management team in GSR Enterprise Seller Risk Ops, you will manage a team of underwriters, and drive a risk management strategy and framework leveraging your strong business and financial acumen, logical reasoning and communication skills. This role will be covering the markets such as Hong Kong, Taiwan, Korea and Japan, based out of Shanghai. FBO Accountant https://jobsearch.paypal-corp.com//en-US/job/fbo-accoutant/J3W8C0677G8FLJQQZDL Responsibilities    Timely and effective reconciliation of all assigned General Ledger accounts, including timely and accurate clearing of reconciling items in accordance with Company Policy.   Ensure accurate posting of general ledger... <p>\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6210\u529f\u5730\u6293\u53d6\u5230\u4e86\u804c\u4f4d\u7684\u4fe1\u606f\uff08\u5185\u5bb9\u6709\u622a\u53d6\uff09\u3002\u7f51\u9875\u4e0a\u8fd8\u6709\u5176\u4ed6\u4fe1\u606f\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u518d\u7ee7\u7eed\u6dfb\u52a0\u4fe1\u606f\uff0c\u5982\u679c\u6709\u7591\u95ee\uff0c\u53ef\u4ee5\u6dfb\u52a0BulletTech\u5fae\u4fe1\u5ba2\u670d\u8be6\u7ec6\u8ba8\u8bba\uff01</p>","tags":["python","automation"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/","title":"SQL tips","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-08-18\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/#1","title":"1 \u5f15\u8a00","text":"<p>SQL\u662f\u64cd\u4f5c\u6570\u636e\u5e93\u7684\u8bed\u8a00\u3002\u4f5c\u4e3a\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u8005\uff0c\u5199SQL\u53ef\u80fd\u548c\u5e72\u996d\u4e00\u6837\u662f\u6211\u4eec\u6bcf\u5929\u5fc5\u505a\u7684\u4e8b\u60c5\u4e4b\u4e00\u3002SQL\u5e76\u4e0d\u590d\u6742\uff0c\u4f46\u662f\u4ecd\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u4e00\u4e9b\u7ecf\u9a8c\u503c\u5f97\u5206\u4eab\u3002 \u672c\u6587\u8bb0\u5f55\u4e86\u5728\u548c\u6570\u636e\u5e93\u6253\u4ea4\u9053\u7684\u6bcf\u4e00\u5929\u4e2d\uff0c\u89c9\u5f97\u6709\u7528\u7684\u4e00\u4e9b\u7ecf\u9a8c\u53ca\u77e5\u8bc6\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/#2-mysql-sql-server-oracle","title":"2 MySQL, SQL Server, Oracle","text":"<p>\u8fd9\u4e09\u5144\u5f1f\u53ef\u4ee5\u8bf4\u662f\u77e5\u540d\u5ea6\u6700\u9ad8\uff0c\u95e8\u69db\u8f83\u4f4e\u7684\u6570\u636e\u5e93\uff0c\u4e5f\u9002\u5408\u4e2a\u4eba\uff0c\u5c0f\u6570\u636e\u91cf\u7684\u5b58\u50a8\u3002\u9002\u5408\u81ea\u5df1\u4e0a\u624b\u73a9\u73a9\uff0c\u5b58\u70b9\u611f\u5174\u8da3\u7684\u6570\u636e\uff0c\u5199\u70b9query\u627e\u627efeel\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/#3-teradata-snowflake","title":"3 Teradata, Snowflake","text":"<p>\u8fd9\u4e24\u4e2a\u6570\u636e\u5e93\u662f\u5de5\u4f5c\u4e2d\u63a5\u89e6\u5230\u7684\u6570\u636e\u5e93\u3002Teradata\u7684\u4e00\u5927\u7279\u70b9\u662f\u5e76\u884c\u5316\uff0c\u6709\u522b\u4e8eHadoop\u7684Master-Slave\u7ed3\u6784\uff0c\u5b83\u57fa\u4e8e\u5927\u89c4\u6a21\u5e76\u884c\u5904\u7406\uff08MPP\uff09\u67b6\u6784\uff0c\u53ef\u4ee5\u5206\u914d\u8d1f\u8f7d\uff0c\u5206\u9694\u4efb\u52a1\u3002  </p> <p>Teradata SQL\u7684\u8bed\u6cd5\u5e76\u6ca1\u6709\u592a\u591a\u4e0d\u540c\uff0c\u5b83\u6ca1\u6709limit\uff0c\u53ea\u80fd\u7528top\u3002\u53e6\u5916\uff0c\u5404\u5b50\u53e5\u7684\u6267\u884c\u987a\u5e8f\u4e3a:  </p> <pre><code>where-&gt;join-&gt;group by-&gt;qualify-&gt;select\n</code></pre> <p>\u8fd9\u8fb9\u548cHive\u4e0d\u540c\u7684\u662f\uff0cHive\u7684\u591a\u8868join\u5728where\u4e4b\u524d\uff0c\u540c\u65f6Hive\u4f1a\u628a\u5de6\u8868\u8f7d\u5165\u5185\u5b58\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5148\u5bf9\u6bcf\u4e2a\u8868\u505a\u7b5b\u9009\u518djoin\u6765\u4f18\u5316\u67e5\u8be2\u3002 \u5173\u4e8eTeradata\u7684\u4f18\u5316\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u6700\u5c0f\u5316I/O\uff0c\u786e\u4fdd\u6bcf\u4e2a\u6b65\u9aa4\u8fc7\u6ee4\u6389\u5c3d\u53ef\u80fd\u591a\u7684\u6570\u636e\u3002  </p> <p>Snowflake\u662f\u6bd4\u8f83\u65b0\u7684\u6570\u636e\u5e93\uff0c\u516c\u53f8\u521a\u4e0a\u5e02\u4e0d\u4e45\uff0c\u4e4b\u524d\u6240\u8ff0\u7684\u6570\u636e\u5e93\u90fd\u6709\u51e0\u5341\u5e74\u7684\u5386\u53f2\u4e86\u3002\u5b83\u7684\u7279\u70b9\u662f\u4e91\u6570\u636e\u5e93\uff0c\u5728\u4e07\u7269\u4e0a\u4e91\u7684\u4eca\u5929\uff0c\u4e0a\u4e91\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u79cd\u5fc5\u987b\u3002 \u9664\u4e86\u5b83\u7684\u6280\u672f\u67b6\u6784\u6bd4\u8f83\u65b0\u9896\uff0c\u5bf9\u4e8e\u7528\u6237\u4f53\u9a8c\u6765\u8bf4\uff0cSnowflake\u6709\u5982\u4e0b\u4f18\u70b9\uff1a  </p> <ul> <li>\u529f\u80fd\u7e41\u591a(\u4e00\u4e9bEDA\u7684\u56fe\u8868\u7b49)\uff0c\u7f8e\u89c2\u7684UI\u3002</li> <li>\u529f\u80fd\u5f3a\u5927\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u5982\u652f\u6301qualify\u7b49\uff0c\u6216\u8005\u8bf4\u6ca1\u4ec0\u4e48\u7f3a\u9677\u548c\u786c\u4f24\u3002</li> </ul>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/#4-hadoop","title":"4 Hadoop","text":"<p>\u5728Hadoop\u751f\u6001\u5708\u4e2d\uff0c\u7528\u7684\u8f83\u591a\u662fHive\u548cSpark\u3002Hive\u662f\u57fa\u4e8eHadoop\u7684\u4e00\u4e2a\u6570\u636e\u4ed3\u5e93\u5de5\u5177\uff0c\u53ef\u4ee5\u7528Hive SQL\u6267\u884cMapReduce\u64cd\u4f5c\u3002\u76ee\u524d\u5927\u89c4\u6a21\u7684\u6570\u636e\u5b58\u50a8(\u56fd\u5185\u5916\u4e92\u8054\u7f51)\u611f\u89c9\u8fd8\u662f\u4ee5Hadoop\u4e3a\u4e3b\u3002 \u5728\u5de5\u4f5c\u4e2d\u4e5f\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684Hive\u4e86\uff0c\u8fd9\u91cc\u603b\u7ed3\u4e0b\u8e29\u8fc7\u7684\u5751\u3002</p> <ul> <li>Hive\u7684\u5b50\u67e5\u8be2\u4e00\u5b9a\u8981\u6709\u522b\u540d\u3002</li> </ul> <pre><code>select * from\n(select * from table) a\n</code></pre> <ul> <li>Hive\u4e2d\u7684limit\u4f1a\u5728\u6240\u6709\u903b\u8f91\u6267\u884c\u5b8c\u540e\u624dlimit\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u8bbe\u7f6e\u4f18\u5316(\u4f1a\u5bf9\u6570\u636e\u6e90\u8fdb\u884c\u62bd\u6837)\uff1a</li> </ul> <pre><code>set hive.limit.optimize.enable=true;\n</code></pre> <ul> <li>Hive\u4f20\u9012\u53c2\u6570\uff1a</li> </ul> <pre><code>set hivevar:var=1;\nselect ${var}\n\u5176\u4e2d\uff0c\u82e5\u53c2\u6570\u672c\u8eab\u662f\u5b57\u7b26\u4e32\u8fd8\u9700\u8981\u52a0\u4e0a\u5f15\u53f7\uff0c\u5982date_sub('${timestamp}',7)\n</code></pre> <ul> <li>\u6570\u636e\u503e\u659c(\u5982\u67d0\u4e9b\u5b57\u6bb5\u4e2d\u7684\u503c\u8fc7\u4e8e\u96c6\u4e2d)\u4f1a\u4f7f\u5c11\u91cfreduce\u5b50\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u8fc7\u957f\uff0c\u4f1a\u6781\u5927\u7684\u5f71\u54cd\u67e5\u8be2\u6548\u7387\u3002</li> <li>\u5c3d\u91cf\u6bcf\u4e2a\u5b50\u8868\u90fd\u8fc7\u6ee4\u6570\u636e</li> <li>Merge\u8fc7\u591a\u7684\u5c0f\u6587\u4ef6\uff1a</li> </ul> <pre><code>set hive.execution.engine=tez;\nset hive.merge.tezfiles=true; -- for namespace issue\nset tez.output.compression.type=BLOCK;\nset hive.merge.size.per.task=256000000;\nset hive.merge.smallfiles.avgsize=256000000;\nset hive.exec.compress.output=true;\n</code></pre> <ul> <li>Hive\u7684update\uff0cdelete\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u66f4\u6539\u8bbe\u7f6e\u3002</li> <li>\u53ef\u4ee5\u901a\u8fc7YARN\u67e5\u770b\u4efb\u52a1\u8fdb\u7a0b\uff0c\u5982\uff1a</li> </ul> <pre><code>yarn application -list\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-18-Sql-tips/#5","title":"5 \u5c0f\u7ed3","text":"<p>\u7b14\u8005\u5e76\u4e0d\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u6570\u636e\u4ed3\u5e93\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u4ee5\u4e0a\u7ecf\u9a8c\u53ea\u662f\u57fa\u4e8e\u81ea\u5df1\u7684\u5b9e\u9645\u4f7f\u7528\u3002\u5728\u6bcf\u5929\u5fd9\u788c\u7684\u67e5\u8be2\u4e4b\u4f59\uff0c\u4e86\u89e3\u4e0b\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u4e0d\u540c\uff0c\u4e4b\u524d\u7684\u7279\u6027\u4e0e\u5dee\u5f02\u4e5f\u662f\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u60c5\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/","title":"\u5229\u7528\u9012\u5f52\u601d\u60f3\u5904\u7406\u534a\u7ed3\u6784\u5316\u6570\u636e","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJermey\uff0c\u53d1\u5e03\u4e8e2021-08-20\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/#1","title":"1 \u80cc\u666f","text":"<p>\u5728\u65e5\u5e38\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u6536\u96c6\u5230\u7684\u539f\u59cb\u6570\u636e\u6709\u65f6\u5e76\u4e0d\u662f\u6574\u9f50\u7684\u8868\u683c\u5f62\u5f0f\uff0c\u4f8b\u5982\u5728\u722c\u53d6\u7f51\u9875\u6216\u8005\u722c\u53d6API\u91cc\u7684\u6570\u636e\u65f6\uff0c\u7ed3\u679c\u5f80\u5f80\u662f\u4ee5XML\u6216\u8005JSON\uff08\u7c7b\u4f3cPython\u4e2d\u7684\u5b57\u5178\uff09\u683c\u5f0f\u8fd4\u56de\uff0c\u5e76\u4e14\u5c42\u5c42\u5d4c\u5957\u3002\u5c31\u50cf\u5982\u4e0b\u8fd9\u6837\u7684JSON\u683c\u5f0f\uff1a</p> <pre><code>[{\n    'state': 'Florida',\n    'shortname': 'FL',\n    'info': {\n        'governor': 'Rick Scott'\n    },\n    'counties': [\n        {'name': 'Dade', 'population': 12345},\n        {'name': 'Broward', 'population': 40000},\n        {'name': 'Palm Beach', 'population': 60000}\n    ]},\n    {\n    'state': 'Ohio',\n    'shortname': 'OH',\n    'info': {\n        'governor': 'John Kasich'\n    },\n    'counties': [\n        {'name': 'Summit', 'population': 1234},\n        {'name': 'Cuyahoga', 'population': 1337}]\n    }]\n</code></pre> <p>\u8fd9\u79cd\u5d4c\u5957\u5f62\u5f0f\u7684\u6570\u636e\u5982\u679c\u5f88\u590d\u6742\uff0c\u786e\u5b9e\u4e0d\u9002\u5408\u4eba\u7c7b\u9605\u8bfb\uff0c\u5982\u679c\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u8fdb\u4e00\u6b65\u5730\u6e05\u6d17\u6216\u8005\u5206\u6790\uff0c\u6211\u4eec\u8981\u505a\u7684\u7b2c\u4e00\u6b65\u662f\u628a\u5d4c\u5957\"\u6253\u5f00\"\uff0c\u8f6c\u5316\u6210\u7c7b\u4f3c\u5982\u4e0b\u5f62\u5f0f\u7684\u8868\u683c\uff1a</p> name population state shortname info.governor Dade 12345 Florida FL Rick Scott Broward 40000 Florida FL Rick Scott Palm Beach 60000 Florida FL Rick Scott Summit 1234 Ohio OH John Kasich Cuyahoga 1337 Ohio OH John Kasich <p>\u6211\u4eec\u5e0c\u671b\u8868\u683c\u5185\u6bcf\u4e00\u6761\u8bb0\u5f55\u662fcounty-level\uff0c\u548c\u53ef\u662f\u600e\u4e48\u8f6c\u5316\u5462\uff1f\u8bd5\u8bd5\u4e07\u80fd\u7684pandas\u5427\uff1a</p> <pre><code># \u5c1d\u8bd5\u76f4\u63a5\u8f6c\u5316\u4e3aDataFrame\ndf = pd.DataFrame(data)\nprint(df)\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> name shortname info counties name\" Florida FL {'governor': 'Rick Scott'} [{'name': 'Dade', 'population': 12345}, {'name... NaN NaN OH {'governor': 'John Kasich'} [{'name': 'Summit', 'population': 1234}, {'nam... Ohio <p>\u53d1\u73b0pandas\u53ea\u89e3\u6790\u4e86\u7b2c\u4e00\u5c42state-level\u7684\u8bb0\u5f55\uff0c\u800ccounty-level\u7684\u6570\u636e\u8fd8\u662f\u4ee5\u5d4c\u5957\u7684\u5f62\u5f0f\u5c55\u73b0\u3002\u7ecf\u8fc7\u4ebf\u70b9\u70b9\u67e5\u627e\uff0c\u53d1\u73b0pandas\u81ea\u5e26\u4e00\u4e2a\u53eb\u505ajson_normalize\u7684\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u6211\u4eec\u7684\u9700\u6c42:</p> <pre><code># \u4f7f\u7528json_normalize():\npd.json_normalize(\n    data,\n    record_path = 'counties',  # \u5b9a\u4e49\u6570\u636e\u7c92\u5ea6\n    meta = ['state', 'shortname',['info', 'governor']] # \u5b9a\u4e49\u5b58\u5165\u7ed3\u679c\u8868\u7684\u5217\u540d\n    )\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> name population state shortname info.governor Dade 12345 Florida FL Rick Scott Broward 40000 Florida FL Rick Scott Palm Beach 60000 Florida FL Rick Scott Summit 1234 Ohio OH John Kasich Cuyahoga 1337 Ohio OH John Kasich <p>\u8fd9\u548c\u6211\u4eec\u9884\u671f\u7684\u7ed3\u679c\u4e00\u6837\u3002\u4f46\u662f\u8fd9\u4e00\u8fc7\u7a0b\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f\u5176\u5b9e\uff0c\u8fd9\u662f\u9012\u5f52\u601d\u60f3\u7684\u5728\u5b9e\u9645\u5e94\u7528\u7684\u8303\u4f8b\u4e4b\u4e00\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/#2","title":"2 \u4ec0\u4e48\u662f\u9012\u5f52\uff1f","text":"<p>\u60f3\u8981\u77e5\u9053\u4ec0\u4e48\u662f\u9012\u5f52\uff1f\u5148\u4e86\u89e3\u4ec0\u4e48\u662f\u9012\u5f52\u3002</p> <p>\u6ca1\u9519\uff0c\u9012\u5f52\u7684\u672c\u8d28\u5c31\u662f\"\u590d\u8bfb\"\uff0c\u5728\u8ba1\u7b97\u673a\u7f16\u7a0b\u4e2d\uff0c\u9012\u5f52\u5c31\u662f\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u81ea\u8eab\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u6210\u89e3\u51b3\u4e00\u4e2a\u8fc7\u7a0b\u76f8\u4f3c\uff0c\u4f46\u662f\u89c4\u6a21\u8f83\u5c0f\u7684\u95ee\u9898\uff0c\u76f4\u5230\u5230\u8fbe\u8fb9\u754c\u6761\u4ef6\u5373\u6700\u5c0f\u5316\u7684\u95ee\u9898\u3002\u4e00\u4e2a\u5b8c\u6574\u7684\u9012\u5f52\u51fd\u6570\u4e00\u822c\u5177\u6709\u4ee5\u4e0b\u4e09\u8981\u7d20\uff1a</p> <ul> <li>\u7ec8\u6b62\u6761\u4ef6</li> <li>\u51fd\u6570\u8fd0\u884c\u72b6\u6001\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u9010\u6b65\u903c\u8fd1\u7ec8\u6b62\u6761\u4ef6</li> <li>\u8c03\u7528\u51fd\u6570\u81ea\u8eab</li> </ul> <p>\u4ee5\u901a\u8fc7\u9012\u5f52\u7b97\u6cd5\u6c42\u89e3\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e3a\u4f8b:</p> <pre><code>def Fibonacci(n):\n    def _recurse(n):\n        if n == 0: # \u8fb9\u754c\u6761\u4ef6\n            return 0\n        elif n == 1: # \u8fb9\u754c\u6761\u4ef6\n            return 1\n        else:\n            return _recurse(n-1) + _recurse(n-2) # \u8c03\u7528\u81ea\u8eab\uff0c\u7f29\u5c0f\u95ee\u9898\u89c4\u6a21\n    return _recurse(n)\n</code></pre> <p>\u60f3\u8981\u6c42\u7b2cn\u4e2a\u6590\u6ce2\u90a3\u5951\u6570f(n)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97f(n-1)\u548cf(n-2)\u7684\u503c\uff0c\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u628a\u95ee\u9898\u89c4\u6a21\u7f29\u5c0f\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u9012\u63a8\u5230\u8ba1\u7b97f(2)=f(1)+f(0)\u3002\u53c8\u56e0\u4e3af(1)\u548cf(0)\u7684\u503c\u662f\u6211\u4eec\u5df2\u77e5\u7684\u8fb9\u754c\u6761\u4ef6\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u63a8\u5bfc\u51faf(2)\u503c\uff0c\u7531\u6b64\u9010\u6b65\u5f97\u51faf(n)\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u5728\u89e3\u6790\u5d4c\u5957\u7684JSON\u6570\u636e\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570f()\u89e3\u6790\u5f53\u524d\u5c42\u7684\u5b57\u5178\uff0c\u5f53\u5b57\u5178\u4e2d\u7684\u67d0\u4e2a\u503c(value)\u4e3a\u7684type\u4e3a\u5b57\u5178\u6216\u8005\u5b57\u5178\u5217\u8868\u65f6\uff0c\u8c03\u7528\u540c\u6837\u7684\u51fd\u6570f(n)\uff0c\u76f4\u5230\u6ee1\u8db3value\u4e2d\u4e0d\u542b\u5b57\u5178\u8fd9\u4e00\u8fb9\u754c\u6761\u4ef6\u3002\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u89e3\u6790\u904d\u5386\u7684\u952e\u503c\u5bf9\uff0c\u5b57\u5178\u7684\u952e\u5373\u4e3a\u8f93\u51fa\u8868\u683c\u4e2d\u7684\u5b57\u6bb5\uff0c\u5b57\u5178\u7684\u503c\u4e3a\u8868\u683c\u4e2d\u7684record\u3002</p> <p>\u6211\u4eec\u6765\u770b\u4e0bpandas v1.2.0 \u6e90\u7801\u4e2d_json_normalize()\u7684\u6838\u5fc3\u4ee3\u7801\uff1a</p> <pre><code>def _json_normalize(\n    data: Union[Dict, List[Dict]],\n    record_path: Optional[Union[str, List]] = None,\n    meta: Optional[Union[str, List[Union[str, List[str]]]]] = None,\n    meta_prefix: Optional[str] = None,\n    record_prefix: Optional[str] = None,\n    errors: str = \"raise\",\n    sep: str = \".\",\n    max_level: Optional[int] = None,\n)\n    # \u5b9a\u4e49\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\n    def _pull_field(js: Dict[str, Any], spec: Union[List, str])\uff1a\n\"\"\"Internal function to pull field\"\"\"\n        # \u7701\u7565\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\n        ...\n        return result\n\n    def _pull_records(js: Dict[str, Any], spec: Union[List, str]) -&gt; List:\n\"\"\"\n        Internal function to pull field for records, and similar to\n        _pull_field, but require to return list.\n        \"\"\"\n        # \u7701\u7565\u5177\u4f53\u5b9e\u73b0\u4ee3\u7801\n        ...\n        return result  \n\n    # \u7701\u7565\u4e00\u4e9b\u5bf9\u8f93\u5165\u53c2\u6570\u7684\u5904\u7406\u548c\u5224\u5b9a\u7684\u4ee3\u7801   \n\n    # \u5b9a\u4e49\u4e00\u4e9b\u51fd\u6570\u5185\u53d8\u91cf\n    _meta = [m if isinstance(m, list) else [m] for m in meta] # \u9700\u8981\u5c55\u73b0\u5728\u7ed3\u679c\u91cc\u7684\u5b57\u6bb5\n    records: List = []\n    lengths = []\n    # meta_val\u7528\u4e8e\u5b58\u50a8fields\u5bf9\u5e94\u7684\u6570\u503c\n    meta_vals: DefaultDict = defaultdict(list)\n    # \u5728\u6df1\u5c42\u5b57\u5178\u91cc\u7684\u5b57\u6bb5\uff0c\u7528\u4e0a\u4e00\u5c42\u7684\u5b57\u6bb5\u540d+\u5206\u9694\u7b26+\u8fd9\u4e00\u5c42\u7684\u5b57\u6bb5\u540d\u4ee3\u66ff\uff0c\u9632\u6b62\u5b57\u6bb5\u91cd\u590d\uff0c\u5982\u4f8b\u5b50\u4e2d\u7684 ['info', 'governor'] \u5904\u7406\u6210 info.governor\n    meta_keys = [sep.join(val) for val in _meta]\n\n    # \u6838\u5fc3\u4ee3\u7801\uff1a\n    # Disastrously inefficient for now\n    def _recursive_extract(data, path, seen_meta, level=0):\n        if isinstance(data, dict):\n            data = [data]\n\n        if len(path) &gt; 1: #\u8fd9\u91cc\u5bf9\u4e8e\u591a\u4e2arecord_path\u7684\u60c5\u51b5\u8fdb\u884c\u9012\u5f52\n            for obj in data:\n                for val, key in zip(_meta, meta_keys):\n                    if level + 1 == len(val):\n                        seen_meta[key] = _pull_field(obj, val[-1])\n\n                _recursive_extract(obj[path[0]], path[1:], seen_meta, level=level + 1)\n\n        else:\n            # \u904d\u5386\u5f53\u524d\u5c42\u7684data\n            for obj in data:\n                # \u53d6\u51fa\u5f53\u524d\u5c42\u6240\u6709\u7684records (list of dict)\n                recs = _pull_records(obj, path[0])\n                # pandas \u4e2d\u7684\u53e6\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570\uff0c\u5982\u679crecords\u91cc\u9762\u6709dict,\u5c06dict\u6253\u5f00\u3002\n                # \u4f8b\u5982\u5982\u679c\u6709\u4e00\u6761\u8bb0\u5f55\u662f{'a':{'b':1}} \u5219\u4f1a\u53d8\u6210 {'a.b':1}\n                recs = [\n                    nested_to_record(r, sep=sep, max_level=max_level)\n                    if isinstance(r, dict)\n                    else r\n                    for r in recs\n                ]\n\n                # For repeating the metadata later\n                lengths.append(len(recs)) # \u8bb0\u5f55\u5f53\u524d\u5c42\u7ea7records\u7684\u6570\u91cf\n                for val, key in zip(_meta, meta_keys):\n                    if level + 1 &gt; len(val): # \u5982\u679c\u5b57\u6bb5\u5728\u4e0b\u4e00\u5c42dict\uff0c\u5982val\u4e3a['info', 'governor']\uff0c\u5219\u53d6seen_meta['info.governer']\n                        meta_val = seen_meta[key]\n                    else: # \u53d6\u51fa\u5f53\u524d\u5c42\u5b57\u6bb5\u5bf9\u5e94\u7684value\n                        try:\n                            meta_val = _pull_field(obj, val[level:])\n                        except KeyError as e:\n                            if errors == \"ignore\":\n                                meta_val = np.nan\n                            else:\n                                raise KeyError(\n                                    \"Try running with errors='ignore' as key \"\n                                    f\"{e} is not always present\"\n                                ) from e\n                    meta_vals[key].append(meta_val)\n                records.extend(recs)\n\n    _recursive_extract(data, record_path, {}, level=0)\n\n    # \u7701\u7565\u4e00\u4e9b\u5bf9result\u7684\u683c\u5f0f\u540e\u5904\u7406\u4ee3\u7801\n\n    return result\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u6e90\u7801\u8fd8\u662f\u7a0d\u5fae\u6709\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\uff0c\u6b64\u5916\u4ee3\u7801\u4f5c\u8005\u4e5f\u5410\u69fd\u76ee\u524d\u7684\u6267\u884c\u6548\u7387\u5f88\u4f4e\uff0c\u4f46\u8fd9\u4e2a\u51fd\u6570\u597d\u5728\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49record_path\u63a7\u5236\u89e3\u6790\u7684\u6df1\u5ea6\uff0c\u9632\u6b62\u5c06\u8fc7\u6df1\u7684\u534a\u7ed3\u6784\u5316\u6570\u636e\u5b8c\u5168\u5c55\u5f00\uff0c\u4ea7\u751f\u8fc7\u591a\u7684\u8bb0\u5f55\u3002</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/#3","title":"3 \u603b\u7ed3","text":"<p>\u867d\u7136\u6570\u636e\u5206\u6790\u5e08\u7684\u65e5\u5e38\u5de5\u4f5c\u4e2d\u5f80\u5f80\u4e0d\u9700\u8981\u76f4\u63a5\u63a5\u89e6\u7b97\u6cd5\uff0c\u4f46\u638c\u63e1\u4e00\u4e9b\u7b97\u6cd5\u601d\u60f3\u5f80\u5f80\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u7406\u89e3\u624b\u8fb9\u7684\u5de5\u5177\u3002\u5fc5\u8981\u65f6\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7f16\u5199\u4ee3\u7801\u63d0\u9ad8\u6548\u7387\u3002\u9664\u4e86\u5237\u7b97\u6cd5\u9898\u4e4b\u5916\uff0c\u8bfb\u8bfb\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\u5730\u6e90\u7801\u4e5f\u662f\u5f88\u597d\u7684\u63d0\u5347\u65b9\u5f0f\u3002\u5982\u679c\u5b9e\u5728\u6ca1\u6709\u65f6\u95f4\uff0c\u90a3\u5c31\u5e38\u6765\u6211\u4eec\u7684\u516c\u4f17\u53f7\u4e0a\u770b\u770b\u5427\uff01</p>","tags":["analytics"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/","title":"SQL tips","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-08-27\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#1","title":"1 \u5f15\u8a00","text":"<p>\u4e0a\u56deVoid\u540c\u5b66\u4e3b\u8981\u804a\u4e86\u804a\u4ed6\u5bf9\u4f7f\u7528\u8fc7\u7684\u6570\u636e\u4ed3\u5e93\u7684\u4f53\u9a8c\u548c\u6d4b\u8bc4\u3002\u4e0eVoid\"\u82b1\u5f0f\u5e72\u996d\"\u4e0d\u540c\uff0c\u672c\u4eba\u5728\u5de5\u4f5c\u4e2d\u4e3b\u8981\u63a5\u89e6\u7684\u662fSnowflake\uff0c\u4ee5\u53ca\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u91cc\u8fde\u63a5Snowflake\u5199SQL\uff0c\u4e5f\u6574\u7406\u4e00\u4e9b\u521d\u5165\u6570\u636e\u5206\u6790\u5e38\u8e29\u7684\u5751\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7ed5\u8fc7\u8fd9\u4e9b\u95ee\u9898\u3002</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#2-sql","title":"2 SQL\u7ed3\u6784\u7bc7","text":"","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#21","title":"2.1 \u9009\u62e9\u5408\u9002\u9a71\u52a8\u8868","text":"<p>\u8fdb\u884c\u4e24\u8868\u6216\u8005\u591a\u8868Join\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4f1a\u8003\u8651\u9700\u6c42\u548c\u6027\u80fd\u4e24\u4e2a\u65b9\u9762:</p> <ul> <li>\u4e1a\u52a1\u9700\u6c42\u4e0a\uff1a\u9009\u62e9\u548c\u7ed3\u679c\u8868\u7c92\u5ea6\u76f8\u540c\u7684\u8868\u4f5c\u4e3a\u9a71\u52a8\u8868\uff1a\u4f8b\u5982\uff0c\u5982\u679c\u7ed3\u679c\u8868\u662f\u7edf\u8ba1\u67d0\u4e00\u5929\u4e00\u7fa4\u76ee\u6807\u7528\u6237\u7684\u67d0\u4e2a\u884c\u4e3a\u6307\u6807\uff0c\u4e00\u822c\u4f1a\u9009\u62e9\u7528\u4e00\u5f20\u7528\u6237\u8868\u7684\u5feb\u7167\u4f5c\u4e3a\u9a71\u52a8\u8868\u8fdb\u884c\u7b5b\u9009\uff0c\u7136\u540e\u5de6\u8fde\u63a5\u76f8\u5e94\u7684\u7528\u6237\u884c\u4e3a\u8868\u3002</li> <li>\u6027\u80fd\u4e0a\uff1a\u9009\u62e9\u5c0f\u8868\u4f5c\u4e3a\u9a71\u52a8\u8868\u8fde\u63a5\u5927\u8868\uff0c\u5bf9\u5927\u8868\u5efa\u7acb\u7d22\u5f15\uff1a\u5982\u679c\u4e24\u5f20\u9700\u8981Join\u7684\u8868\u8bb0\u5f55\u6570\u91cf\u5dee\u5f02\u5f88\u5927\uff0c\u4e00\u822c\u4f1a\u628a\u5c0f\u8868\u653e\u5728\u524d\u9762\u3002\u56e0\u4e3a\u5728\u8868\u8fde\u63a5\u65f6\uff0c\u53ea\u6709\u53f3\u8fde\u63a5\u8868\u91cc\u7684\u7d22\u5f15\u4f1a\u751f\u6548\uff0c\u4e14\u7d22\u5f15\u5728\u5927\u8868\u4e2d\u6548\u7387\u63d0\u5347\u66f4\u660e\u663e\u3002</li> </ul>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#22-join","title":"2.2 join\u524d\u53bb\u91cd","text":"<p>\u8868\u8fde\u63a5\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u5bf9\u4e24\u8868\u8fdb\u884c\u53bb\u91cd\uff0c\u5219\u4f1a\u56e0\u4e3a\u7b1b\u5361\u5c14\u79ef\u51fa\u73b0\u5927\u91cf\u91cd\u590d\u8bb0\u5f55\u3002\u4e00\u822c\u6765\u8bf4Join\u524d\u53bb\u91cd\u65b9\u5f0f\u6709\u4ee5\u4e0b\u79cd\uff1a</p> <ul> <li>distinct \u53bb\u91cd</li> <li>group by \u53bb\u91cd</li> <li>\u7a97\u53e3\u51fd\u6570 row_number() \u53bb\u91cd\uff08\u6ce8\u610fMySQL 8.0\u7248\u672c\u4ee5\u4e0a\u624d\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u51fd\u6570\uff09</li> </ul> <p>\u5047\u8bbe\u6211\u4eec\u76ee\u524d\u6709\u4e24\u5f20\u8868\uff0c\u4e00\u5f20\u5458\u5de5\u8868dept_emp\uff0c\u5305\u542b\u6570\u636e\u5982\u4e0b\uff1a</p> emp_no dept_no from_date to_date 10001 d001 1986-06-26 9999-01-01 10002 d001 1996-08-03 2000-01-01 10002 d001 2001-08-03 9999-01-01 10003 d002 1995-12-03 9999-01-01 <p>\u53e6\u4e00\u5f20manager\u8868\uff0c\u6570\u636e\u5982\u4e0b\uff1a</p> dept_no emp_no from_date to_date d001 10001 1996-08-03 9999-01-01 d002 10003 1990-08-05 9999-01-01 <p>\u6211\u4eec\u60f3\u8981\u627e\u5230\u6240\u6709\u5458\u5de5\u5bf9\u5e94\u7684\u7ecf\u7406\uff0c\u5982\u679c\u5458\u5de5\u672c\u8eab\u662f\u7ecf\u7406\u7684\u8bdd\u5219\u4e0d\u663e\u793a\uff0c\u4ee5\u4e0a\u4f8b\u5b50\u5982\u4e0b\uff1a</p> emp_no manger 10002 10001 <p>\u6ce8\u610f\u7b2c\u4e00\u5f20\u8868\u4e2d\uff0cemp_no\u662f\u6709\u91cd\u7684\uff0c\u4e0d\u53bb\u91cd\u76f4\u63a5\u8fde\u63a5\u7684\u8bdd\u4f1a\u51fa\u73b0\u4e24\u6761\u8bb0\u5f55:</p> emp_no manger 10002 10001 10002 10001 <p>\u4e0a\u8ff0\u4e09\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u5b9e\u73b0\u53bb\u91cd:</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#distinct","title":"distinct \u53bb\u91cd","text":"<pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect distinct emp_no,dept_no\nFrom dept_emp\n) dept\nLeft Join\n(\nSelect distinct emp_no,dept_no\nFrom dept_manager\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#group-by","title":"group by \u53bb\u91cd","text":"<pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect emp_no,dept_no\nFrom dept_emp\ngroup by 1\n) dept\nLeft Join\n(\nSelect emp_no,dept_no\nFrom dept_manager\ngroup by 1\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#_1","title":"\u5229\u7528\u7a97\u53e3\u51fd\u6570\u53bb\u91cd","text":"<p>\u4ee5\u4e0a\u4e24\u79cd\u53bb\u91cd\u65b9\u5f0f\u867d\u7136\u90fd\u80fd\u8fbe\u5230\u6548\u679c\uff0c\u4f46\u5176\u5b9e\u4ed6\u4eec\u5728\u9009\u62e9\u91cd\u590d\u8bb0\u5f55\u65f6\u662f\u6709\u968f\u673a\u6027\u7684\uff0c\u6211\u4eec\u4e0d\u786e\u5b9a\u67e5\u8be2\u6700\u7ec8\u9009\u62e9\u7684\u662f\u54ea\u4e00\u6761\u91cd\u590d\u7684\u8bb0\u5f55\u3002 \u5728\u5b9e\u9645\u4e1a\u52a1\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u4fdd\u8bc1\u8fd0\u884c\u7ed3\u679c\u7684\u4e00\u81f4\u6027\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u501f\u52a9\u7a97\u53e3\u51fd\u6570\uff0c\u5229\u7528\u989d\u5916\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u53d6\u7b2c\u4e00\u6761(\u5982\u53d6\u65f6\u95f4\u5b57\u6bb5from_date\u6700\u8fd1\u7684\u4e00\u6761\u8bb0\u5f55)\u8fdb\u884c\u53bb\u91cd\uff0c\u8f6c\u5316\u6210sql\u5c31\u662f:</p> <pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect emp_no,dept_no,\nrow_number() over(partition by emp_no,dept_no order by from_date desc) as rec_rank\nFrom dept_emp\ngroup by 1\nwhere rec_rank = 1\n) dept\nLeft Join\n(\nSelect emp_no,dept_no\nFrom dept_manager\ngroup by 1\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#23-cte","title":"2.3 \u5584\u7528\u516c\u7528\u8868\u8fbe\u5f0f(CTE)","text":"<p>\u516c\u7528\u8868\u8fbe\u5f0f\uff08CTE\uff09\u7c7b\u4f3c\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u4e8e\u63d0\u70bc\u51fa\u672c\u6765\u9700\u8981\u51fa\u73b0\u591a\u6b21\u7684\u5b50\u67e5\u8be2\u8bed\u53e5\uff0c\u6709\u6548\u51cf\u5c11\u4ee3\u7801\u884c\u6570\u3002</p> <p>\u9664\u4e86\u8ba9\u67e5\u8be2\u8bed\u53e5\u53d8\u5f97\u66f4\u52a0\u6e05\u723d\u6574\u6d01\u4ee5\u5916\uff0c\u516c\u7528\u8868\u8fbe\u5f0f\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u9012\u5f52\u8fd9\u7c7b\"\u9ad8\u7ea7\"\u67e5\u8be2\u529f\u80fd\u3002\u6309\u7167\u9012\u5f52\u4e09\u8981\u7d20\uff1a</p> <ul> <li>\u7ec8\u6b62\u6761\u4ef6</li> <li>\u51fd\u6570\u8fd0\u884c\u72b6\u6001\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u9010\u6b65\u903c\u8fd1\u7ec8\u6b62\u6761\u4ef6</li> <li>\u8c03\u7528\u51fd\u6570\u81ea\u8eab</li> </ul> <p>\u5728CTE\u4e2d\u9700\u8981\u5305\u542b\u4e24\u4e2a\u67e5\u8be2\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u5b9a\u70b9\u67e5\u8be2\uff0c\u5373\u8fd4\u56de\u4ee5\u4e00\u4e2a\u6709\u6548\u8868\u7684\u666e\u901a\u67e5\u8be2\uff0c\u518d\u901a\u8fc7union all \u53e0\u52a0\u4e00\u4e2a\u8c03\u7528CTE\u81ea\u8eab\u7684\u9012\u5f52\u67e5\u8be2\u3002\u4e0e\u51fd\u6570\u4e0d\u540c\u7684\u7684\u662f\uff0c\u9012\u5f52\u67e5\u8be2\u6ca1\u6709\u663e\u793a\u7684\u7ec8\u6b62\u6761\u4ef6\uff0c\u5f53\u7b2c\u4e8c\u4e2a\u9012\u5f52\u67e5\u8be2\u8fd4\u56de\u7ed3\u679c\u4e3a\u7a7a\u65f6\u5373\u505c\u6b62\u9012\u5f52\u3002</p> <p>\u5e38\u89c1\u7684\u9012\u5f52\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>WITH CTE AS (\nSELECT column1,column2... FROM tablename WHERE conditions\nUNION ALL\nSELECT column1,column2... FROM tablename\nINNER JOIN CTE ON conditions\n)\n\nSELECT *\nFROM CTE\n</code></pre>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#3","title":"3 \u5c0f\u7ed3","text":"<p>\u4ee5\u4e0a\u662f\u5bf9SQL\u77e5\u8bc6\u70b9\u7684\u8d85\u7ea7\u4e0d\u5b8c\u5168\u603b\u7ed3\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u4e1a\u52a1\u4e2d\u5f80\u5f80\u4e0d\u9700\u8981\u975e\u5e38fancy\u7684\u4ee3\u7801\uff0c\u7406\u89e3\u5e76\u8fd0\u7528\u597d\u53bb\u91cd\uff0c\u8fde\u63a5\uff0c\u5b50\u67e5\u8be2\uff0c\u7a97\u53e3\u51fd\u6570\u548cCTE\u5df2\u7ecf\u80fd\u591f\u8986\u76d6\u7edd\u5927\u591a\u6570\u4e1a\u52a1\u573a\u666f\uff0c\u66f4\u591a\u7684\u662f\u9700\u8981\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u8fd0\u884c\u6027\u80fd\u3002\u5982\u679c\u5927\u5bb6\u5bf9SQL\u5728\u4e1a\u52a1\u6216\u9762\u8bd5\u4e2d\u7684\u5c0f\u6280\u5de7\u611f\u5174\u8da3\uff0c\u63a8\u8350\u4ee5\u4e0b\u4e24\u672c\u8bfb\u7269\uff1a * SQL\u5fc5\u77e5\u5fc5\u4f1a\uff08\u57fa\u7840\uff09 * SQL\u8bed\u8a00\u827a\u672f\uff08\u8fdb\u9636\uff09</p> <p>\u5982\u679c\u5e0c\u671b\u591a\u770b\u5230\u7c7b\u4f3c\u7684SQL\u6216\u7ecf\u9a8c\u5206\u4eab\u8bdd\u9898\uff0c\u4e5f\u6b22\u8fce\u591a\u591a\u7ed9\u6211\u4eec\u7559\u8a00\u8bc4\u8bba~</p>","tags":["analytics","database"]},{"location":"Main_Course/Data_Analytics/2021-09-20-pyspark_intro/","title":"PySpark\u7b80\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-09-20\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#1","title":"1 \u5f15\u8a00","text":"<p>Hadoop\u751f\u6001\u4f9d\u65e7\u662f\u5f53\u4eca\u4e0d\u5c11\u516c\u53f8\u4f7f\u7528\u7684\u6570\u636e\u5b58\u50a8\u65b9\u6848\u3002\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u5de5\u5177\u6709Hive(\u4e3b\u8981\u662f\u5199SQL)\uff0cPig(\u76f4\u63a5\u5904\u7406\u5e95\u5c42\u7684\u6570\u636e\u6587\u4ef6\uff0c\u8bfb\u53d6\u3001\u8fc7\u6ee4\u3001\u62fc\u63a5\u3001\u5b58\u50a8\u7b49\u7b49)\u8fd8\u6709Spark\u3002 Spark\u636e\u79f0\u5728\u6027\u80fd\u4e0a\u66f4\u5feb\u4e4b\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4e0d\u5c11\u5e93\uff0c\u5982SQL\u67e5\u8be2\uff0c\u6d41\u5f0f\u8ba1\u7b97\uff0c\u673a\u5668\u5b66\u4e60\u7b49\u3002 \u800cPySpark\u7684\u51fa\u73b0\u4f7f\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528Python\u7684API\u6765\u8fd0\u884cSpark\u4efb\u52a1\u3002\u6709\u4e86\u5b83\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u629b\u5f03\u529f\u80fd\u7565\u663e\u5355\u4e00\u7684Pig\u3002\u4e5f\u4e0d\u9700\u8981\u628a\u6570\u636e\u5148\u5b58\u50a8\u6210Hive\u7684\u8868\u683c\uff0c\u624d\u80fd\u6267\u884cHive SQL\u3002 \u672c\u6587\u5c06\u4ecePySpark\u6587\u6863\u51fa\u53d1\uff0c\u4ecb\u7ecd\u76f8\u5173\u529f\u80fd\u53ca\u8bed\u6cd5\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#2-pyspark","title":"2 PySpark\u4ecb\u7ecd","text":"<p>PySpark\u7684\u5b89\u88c5\u9700\u8981\u9002\u914dHadoop\u7248\u672c\uff0c\u5b89\u88c5\u597d\u540e\uff0c\u6211\u4eec\u6309\u5982\u4e0b\u4ee3\u7801\u5373\u53ef\u542f\u52a8Spark\u8fdb\u7a0b\u3002</p> <pre><code>from pyspark.sql import SparkSession\nspark = SparkSession.builder.getOrCreate()\n</code></pre> <p>\u8868\u683c\u578b\u7684\u6570\u636e\u5728PySpark\u4e2d\u4ee5Spark DataFrame\u7684\u5f62\u5f0f\u5b58\u5728\u3002\u6211\u4eec\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u76f4\u63a5\u521b\u5efa\u4e00\u4e2aDataFrame\uff1a</p> <pre><code>from datetime import datetime, date\nimport pandas as pd\nfrom pyspark.sql import Row\n\ndf = spark.createDataFrame([\n    Row(a=1, b=2., c='string1', d=date(2000, 1, 1), e=datetime(2000, 1, 1, 12, 0)),\n    Row(a=2, b=3., c='string2', d=date(2000, 2, 1), e=datetime(2000, 1, 2, 12, 0)),\n    Row(a=4, b=5., c='string3', d=date(2000, 3, 1), e=datetime(2000, 1, 3, 12, 0))\n])\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u5e95\u5c42\u7684\u6570\u636e\u4ee5Spark DataFrame\u7684\u5f62\u5f0f\u76f4\u63a5\u8bfb\u5165(\u5e38\u7528)\u3002 \u6709\u4e86DataFrame\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7df.show()\u6765\u5c55\u793a\u6570\u636e\u3002</p> <pre><code>df.show(1)\n</code></pre> <p>Spark DataFrame\u7684\u57fa\u672c\u64cd\u4f5c\u6709\uff1a</p> <ul> <li>\u9009\u62e9\u5217\uff1adf.select(df.c)</li> <li>\u589e\u52a0\u5217\uff1adf.withColumn('upper_c', upper(df.c))</li> <li>\u7b5b\u9009\u884c\uff1adf.filter(df.a == 1)</li> <li>\u805a\u5408\uff1adf.groupby('color').avg()</li> <li>\u81ea\u5b9a\u4e49\u7684\u51fd\u6570(UDF)\u7b49</li> </ul> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7df.toPandas()\u5c06Spark DataFrame\u8f6c\u6362\u6210Python DataFrame\u4ee5\u76f4\u63a5\u4f7f\u7528\u76f8\u5173\u65b9\u6cd5\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5c06Python DataFrame\u8f6c\u6362\u6210Spark DataFrame\uff1a</p> <pre><code>df = pd.DataFrame([[\"jack\",23], [\"tony\", 34]], columns = [\"name\", \"age\"])\ndf_values = df.values.tolist()\ndf_columns = list(df.columns)\nspark_df = spark.createDataFrame(df_values, df_columns)\n</code></pre> <p>\u7531\u4e8eSpark DataFrame\u548cSpark SQL\u5171\u4eab\u540c\u6837\u7684\u6267\u884c\u5f15\u64ce\u3002\u6211\u4eec\u53ef\u4ee5\u5c06Spark DataFrame\u6ce8\u518c\u6210\u8868\u683c\uff0c\u4f7f\u7528SQL\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u3002</p> <pre><code>df.createOrReplaceTempView(\"tableA\")\ndf2 = spark.sql(\"SELECT count(*) from tableA\")\n#\u5b58\u50a8\u8ba1\u7b97\u7ed3\u679c\ndf2.write.csv('data.csv', header=True)\ndf2.show()\n</code></pre> <p>\u6709\u4e86\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7SQL\u7684join\u62fc\u63a5\u6570\u636e(\u66ff\u4ee3Pig join\u7684\u529f\u80fd)\uff0c\u4e5f\u53ef\u4ee5\u6267\u884c\u590d\u6742\u7684SQL\u903b\u8f91(\u7c7b\u4f3cHive SQL)\u5e76\u5c06\u6700\u7ec8\u7684\u8ba1\u7b97\u7ed3\u679c\u5b58\u50a8\u6210\u4e0d\u540c\u683c\u5f0f\u7684\u6570\u636e(csv\uff0cparquet\u7b49)\u3002\u53ef\u4ee5\u8bf4Spark\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u5b8c\u5584\uff0c\u66f4\u6613\u7528\u7684\u6846\u67b6\u3002</p> <p>Spark DataFrame\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684API\uff0c\u7531\u4e8e\u5de5\u4f5c\u4e2d\u5e76\u6ca1\u6709\u592a\u591a\u63a5\u89e6\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\u3002\u9700\u8981\u7684\u65f6\u5019\u4e0d\u59a8\u53bb\u5b98\u65b9\u6587\u6863\u67e5\u8be2\u5373\u53ef\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#3","title":"3 \u5c0f\u7ed3","text":"<p>\u5728Hadoop\u751f\u6001\u5708\u4e2d\uff0cSpark\u4ee5\u53caPySpark\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u5957\u5f88\u5f3a\u5927\u7684\u5de5\u5177\u3002\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u5e95\u5c42\u7684MapReduce\u5177\u4f53\u662f\u5982\u4f55\u6267\u884c\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u7b80\u5355\u7684PySpark\u8bed\u6cd5\uff0c\u751a\u81f3\u5e38\u7528\u7684SQL\u8bed\u8a00\u5373\u53ef\u7075\u6d3b\uff0c\u81ea\u5982\u5730\u64cd\u4f5c\u5e95\u5c42\u7684\u6570\u636e\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/","title":"\u6d45\u8c08\u6570\u636e\u7684\u641c\u7d22\u548c\u6392\u5e8f","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-10-26\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#1","title":"1 \u5f15\u8a00","text":"<p>\u4f5c\u4e3a\u4e00\u540d\u6570\u636e\u5206\u6790\u5e08\uff0c\u5f53\u7136\u79bb\u4e0d\u5f00\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u91cd\u8981\u6982\u5ff5\u2014\u2014\u641c\u7d22\u548c\u6392\u5e8f\u3002</p> <p>\u4e86\u89e3\u5404\u7c7b\u6392\u5e8f\u548c\u641c\u7d22\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u9009\u62e9\u6392\u5e8f\u548c\u641c\u7d22\u65b9\u5f0f\u65f6\uff0c\u4e0d\u4ec5\u8981\u8003\u8651\u6570\u636e\u7684\u7279\u70b9\uff0c\u8fd8\u8981\u8003\u8651\u8ba1\u7b97\u8d44\u6e90\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u6765\u7b80\u5355\u5730\u7528Python\u4ee3\u7801\u4ecb\u7ecd\u51e0\u79cd\u6570\u636e\u641c\u7d22\u548c\u6570\u636e\u6392\u5e8f\u65b9\u6cd5\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#2-python","title":"2 Python\u7684\u4ee3\u7801\u5b9e\u73b0","text":"","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#21","title":"2.1 \u6570\u636e\u641c\u7d22","text":"","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#211","title":"2.1.1 \u987a\u5e8f\u641c\u7d22","text":"<p>Python\u5217\u8868\u7684\u7279\u70b9\u4e4b\u4e00\u5c31\u662f\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u6709\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u6570\u636e\u9879\u7684\u4f4d\u7f6e\u5c31\u662f\u5b83\u7684\u4e0b\u6807\u3002\u56e0\u4e3a\u4e0b\u6807\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u80fd\u591f\u6709\u5e8f\u8bbf\u95ee\u6bcf\u4e2a\u5143\u7d20\uff0c\u7531\u6b64\u53ef\u4ee5\u8fdb<code>\u987a\u5e8f\u641c\u7d22</code>\u3002\u987e\u540d\u601d\u4e49\uff0c\u987a\u5e8f\u641c\u7d22\u5c06\u4f1a\u4ece\u5217\u8868\u4e2d\u6700\u5f00\u59cb\u7684\u4f4d\u7f6e\u5f00\u59cb\u6309\u7167\u987a\u5e8f\u9010\u4e2a\u67e5\u770b\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u67e5\u5b8c\u5217\u8868\u4e3a\u6b62\u3002</p> <pre><code>##\u6b64\u51fd\u6570\u63a5\u53d7\u5217\u8868\u4e0e\u76ee\u6807\u5143\u7d20\u4f5c\u4e3a\u53c2\u6570\uff0c \u5e76\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u76ee\u6807\u5143\u7d20\u662f\u5426\u5b58\u5728\u7684\u5e03\u5c14\u503c\u3002\ndef sequential_Search(alist, item):\n    pos = 0\n    found = False\n    while pos &lt; len(alist) and not found:\n        if alist[pos] == item:\n            found = True\n        else:\n            pos = pos + 1\n    return found\n</code></pre> <p>\u5176\u5b9e\uff0c\u8ba1\u7b97\u673a\u5728\u5206\u6790\u641c\u7d22\u7b97\u6cd5\u524d\uff0c\u9700\u8981\u5b9a\u4e49\u8ba1\u7b97\u7684\u57fa\u672c\u5355\u5143\u3002\u6bcf\u4e00\u6b21\u6bd4\u8f83\u53ea\u6709\u4e24\u79cd\u7ed3\u679c\uff0c\u627e\u5230\u6216\u6ca1\u6709\u627e\u5230\u3002\u5728\u8fd9\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u5047\u8bbe\uff0c\u5373\u5143\u7d20\u7684\u6392\u5217\u662f\u65e0\u5e8f\u7684\uff0c\u6362\u8a00\u4e4b\uff0c\u76ee\u6807\u5143\u7d20\u4f4d\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u53ef\u80fd\u6027\u662f\u4e00\u6837\u5927\u7684\u3002\u5982\u679c\u662f\u6709\u5e8f\u6392\u5217\uff0c\u90a3\u4e48\u8ba1\u7b97\u8d44\u6e90\u5c31\u4f1a\u968f\u76ee\u6807\u5143\u7d20\u5728\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u800c\u53d8\u5316\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#212","title":"2.1.2 \u4e8c\u5206\u641c\u7d22","text":"<p>\u4e0e\u987a\u5e8f\u641c\u7d22\u4e0d\u4e00\u6837\u7684\u662f\uff0c\u4e8c\u5206\u641c\u7d22\u4e0d\u662f\u4ece\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u641c\u7d22\u5217\u8868\uff0c\u800c\u662f\u4ece\u4e2d\u95f4\u5143\u7d20\u7740\u624b\u3002\u5982\u679c\u8fd9\u4e2a\u5143\u7d20\u5c31\u662f\u76ee\u6807\u5143\u7d20\uff0c\u90a3\u5c31\u7acb\u5373\u505c\u6b62\u641c\u7d22\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u53ef\u4ee5\u5229\u7528\u5217\u8868\u6709\u5e8f\u7684\u7279\u6027\uff0c\u6392\u9664\u4e00\u534a\u7684\u5143\u7d20\u3002</p> <p>\u9488\u5bf9\u53f3\uff08\u5de6\uff09\u534a\u90e8\u5206\u91cd\u590d\u4e8c\u5206\u8fc7\u7a0b\u3002\u4ece\u4e2d\u95f4\u5143\u7d20\u7740\u624b\uff0c\u5c06\u5176\u548c\u76ee\u6807\u5143\u7d20\u6bd4\u8f83\u3002\u540c\u7406\uff0c\u8981\u4e48\u76f4\u63a5\u627e\u5230\u76ee\u6807\u5143\u7d20\uff0c\u8981\u4e48\u6839\u636e\u6bd4\u8f83\u7ed3\u679c\u5c06\u53f3\uff08\u5de6\uff09\u534a\u90e8\u5206\u4e00\u5206\u4e3a\u4e8c\uff0c\u518d\u6b21\u7f29\u5c0f\u641c\u7d22\u8303\u56f4\u3002</p> <pre><code>## \u6709\u5e8f\u5217\u8868\u7684\u4e8c\u5206\u641c\u7d22\ndef binary_Search(alist,item):\n    first = 0\n    last = len(alist) - 1\n    found = False\n\n    while first &lt;= last and not found:\n        midpoint = (first + last) //2\n        if alist[midpoint] == item:\n            found = True\n        else:\n            if item &lt; alist[midpoint]:\n                last = midpoint - 1\n            else:\n                first = midpoint + 1\n     return found\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#22","title":"2.2 \u6570\u636e\u6392\u5e8f","text":"","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#221","title":"2.2.1 \u5192\u6ce1\u6392\u5e8f","text":"<p>\u5192\u6ce1\u6392\u5e8f\u591a\u6b21\u904d\u5386\u5217\u8868\u3002\u5b83\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5c06\u4e0d\u5408\u987a\u5e8f\u7684\u4ea4\u6362\uff0c\u5de6\u5c0f\u53f3\u5927\u7684\u987a\u5e8f\u6392\u5217\u3002\u6bcf\u4e00\u8f6e\u904d\u5386\u90fd\u5c06\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u3002\u672c\u8d28\u4e0a\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u901a\u8fc7\u201c\u5192\u6ce1\u201d\u627e\u5230\u81ea\u5df1\u6240\u5c5e\u7684\u4f4d\u7f6e\u3002</p> <p>\u7b2c\u4e00\u8f6e\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u7b2c\u4e00\u4e2a\u8fde\u7eed\u4e24\u4e2a\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6709n\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5c06\u8fdb\u884cn-1\u6b21\u6bd4\u8f83\u3002\u6ce8\u610f\uff0c\u6bcf\u6b21\u6bd4\u8f83\u4e2d\uff0c\u5927\u7684\u4f1a\u4e00\u76f4\u5f80\u5de6\u632a\uff0c\u76f4\u5230\u904d\u5386\u7ed3\u675f\u3002</p> <p>\u7b2c\u4e8c\u8f6e\u904d\u5386\u5f00\u59cb\uff0c\u6700\u5927\u503c\u5df2\u7ecf\u5728\u6b63\u786e\u4f4d\u7f6e\u4e0a\u4e86\u3002\u8fd8\u5269n-1\u4e2a\u5143\u7d20\u9700\u8981\u6392\u5217\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u6bd4\u8f83n-2\u5bf9\u3002\u65e2\u7136\u6bcf\u4e00\u8f6e\u90fd\u5c06\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u653e\u5230\u6b63\u786e\u4f4d\u7f6e\u4e0a\uff0c\u90a3\u4e48\u9700\u8981\u904d\u5386\u7684\u8f6e\u6570\u5c31\u662fn-1\u3002</p> <pre><code>def bubble_Sort(alist):\n    for passnum in range(len(alist)-1, 0, -1):\n        for i in range(passnum):\n            if alist[i] &gt; alist[i+1]:\n                temp = alist[i]\n                alist[i] = alist[i+1]\n                alist[i+1] = temp\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#222","title":"2.2.2 \u9009\u62e9\u6392\u5e8f","text":"<p><code>\u9009\u62e9\u6392\u5e8f</code>\u5728\u5192\u6ce1\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u6539\u8fdb\uff0c\u6bcf\u6b21\u904d\u5386\u5217\u8868\u53ea\u505a\u4e00\u6b21\u4ea4\u6362\u3002\u8fd9\u5c31\u8981\u6c42\u9009\u62e9\u6392\u5e8f\u5728\u6bcf\u6b21\u904d\u5386\u65f6\u53ea\u5bfb\u627e\u6700\u5927\u503c\uff0c\u5e76\u5728\u904d\u5386\u4e4b\u540e\u5c06\u5b83\u653e\u5230\u6b63\u786e\u4f4d\u7f6e\u4e0a\u3002</p> <pre><code>def select_Sort(alist):\n    for s in range(len(alist)-1, 0, -1):\n        max_p = 0\n        for p in range(1, s + 1):\n            if alist[p] &gt; alist[max_p]:\n                max_p = p\n\n        temp = alist[s]\n        alist[s] = alist[max_p]\n        alist[max_p] = temp\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#223","title":"2.2.3 \u63d2\u5165\u6392\u5e8f","text":"<p><code>\u63d2\u5165\u6392\u5e8f</code>\u662f\u5728\u5217\u8868\u8f83\u5c0f\u7684\u4e00\u7aef\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u7684\u5b50\u5217\u8868\uff0c\u5e76\u9010\u4e2a\u5c06\u6bcf\u4e2a\u65b0\u5143\u7d20\u201c\u63d2\u5165\u201d\u8fd9\u4e2a\u5b50\u5217\u8868\u3002</p> <p>\u9996\u5148\u5047\u8bbe\u4f4d\u7f6e0\u5904\u7684\u5143\u7d20\u662f\u53ea\u542b\u5355\u4e2a\u5143\u7d20\u7684\u6709\u5e8f\u5b50\u5217\u8868\u3002\u4ece\u5143\u7d201\u5230\u5143\u7d20n-1\uff0c\u6bcf\u4e00\u8f6e\u90fd\u5c06\u5f53\u524d\u5143\u7d20\u4e0e\u6709\u5e8f\u5b50\u5217\u8868\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u3002\u5728\u6709\u5e8f\u5b50\u5217\u8868\u4e2d\uff0c\u5c06\u6bd4\u5b83\u5927\u7684\u90fd\u53f3\u79fb\uff1b\u5f53\u9047\u5230\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\u6216\u62b5\u8fbe\u5b50\u5217\u8868\u7ec8\u70b9\u65f6\uff0c\u5c31\u53ef\u4ee5\u63d2\u5165\u5f53\u524d\u5143\u7d20\u4e86\u3002</p> <pre><code>def insert_Sort(alist):\n    for index in range(1,len(alist)):\n        current_value = alist[index]\n        position = index\n\n        while position &gt; 0 and alist[position-1] &gt; current_value:\n            alist[position] = alist[position-1]\n            position = position -1\n\n        alist[position] = current_value\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#224","title":"2.2.4 \u5e0c\u5c14\u6392\u5e8f","text":"<p><code>\u5e0c\u5c14\u6392\u5e8f</code>\u4e5f\u79f0\u201c\u9012\u51cf\u589e\u91cf\u6392\u5e8f\u201d\uff0c\u5b83\u57fa\u4e8e\u63d2\u5165\u6392\u5e8f\u505a\u4e86\u6539\u8fdb\uff0c\u5c06\u5217\u8868\u5206\u6210n\u4e2a\u5b50\u5217\u8868\uff0c\u5e76\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u5217\u8868\u5e94\u7528\u63d2\u5165\u6392\u5e8f\u3002\u5e0c\u5c14\u6392\u5e8f\u5e76\u4e0d\u91c7\u7528\u8fde\u7eed\u5207\u5206\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u53ef\u4ee5\u63a7\u5236\u7684\u589e\u91cf\u53c2\u6570i\u6765\u9009\u53d6\u95f4\u9694\u4e3ai\u7684\u5143\u7d20\u4ece\u800c\u7ec4\u6210\u5b50\u5217\u8868\u3002</p> <pre><code>def shell_Sort(alist):\n    count_sub = len(alist) // 2\n    while count_sub &gt; 0:\n        for start in range(count_sub):\n            gap_sort(alist, start, count_sub)\n        print(\"After increments of size\", count_sub, \"The list is\", alist)\n\n        count_sub = count_sub // 2\n\ndef gap_sort(alist,start,gap):\n    for i in range(start+gap,len(alist), gap):\n        current_value = alist[i]\n        p = i\n\n        while p &gt;=gap and alist[p-gap] &gt; current_value:\n            alist[p] = alist[p-gap]\n            p = p - gap\n        alist[p] = current_value  \n</code></pre> <p>\u56e0\u4e3a\u5e0c\u5c14\u6392\u5e8f\u6700\u540e\u4e00\u6b65\u8981\u505a\u4e00\u6b21\u5b8c\u6574\u7684\u63d2\u5165\u6392\u5e8f\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u5e0c\u5c14\u6392\u5e8f\u6ca1\u6709\u63d2\u5165\u6392\u5e8f\u597d\uff1f\u5176\u5b9e\u4e0d\u7136\uff0c\u5217\u8868\u5df2\u7ecf\u7531\u589e\u91cf\u7684\u63d2\u5165\u6392\u5e8f\u505a\u4e86\u9884\u5904\u7406\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u6b65\u63d2\u5165\u6392\u5e8f\u4e0d\u9700\u8981\u8fdb\u884c\u591a\u6b21\u6bd4\u8f83\u6216\u8005\u79fb\u52a8\u7684\uff0c\u5e76\u4e0d\u4f1a\u6d88\u8017\u592a\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#225","title":"2.2.5 \u5f52\u5e76\u6392\u5e8f","text":"<p><code>\u5f52\u5e76\u6392\u5e8f</code>\u662f\u4e00\u79cd\u9012\u5f52\u7b97\u6cd5\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5217\u8868\u4e00\u5206\u4e3a\u4e8c\u3002\u5982\u679c\u5217\u8868\u4e3a\u7a7a\u6216\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u4ece\u5b9a\u4e49\u4e0a\u8bf4\u5b83\u5c31\u662f\u6709\u5e8f\u7684\u3002\u5982\u679c\u5217\u8868\u4e0d\u6b62\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5c31\u5c06\u4e00\u5206\u4e3a\u4e8c\uff0c\u5e76\u5bf9\u4e24\u90e8\u5206\u90fd\u5148\u9012\u5f52\u8c03\u7528\u518d\u5f52\u5e76\u6392\u5e8f\u3002\u5f53\u4e24\u90e8\u5206\u90fd\u6709\u5e8f\u540e\uff0c\u5c31\u518d\u4e00\u6b21\u8fdb\u884c<code>\u5f52\u5e76</code>\u64cd\u4f5c\u3002</p> <pre><code>def merge_Sort(alist):\n    print(\"Splitting \", alist)\n    if len(alist) &gt; 1:\n        mid = len(alist) // 2\n        left_half = alist[:mid]\n        right_half = alist[mid:]\n\n        merge_Sort(left_half)\n        merge_Sort(right_half)\n\n        i = 0\n        j = 0\n        k = 0\n        while i &lt; len(left_half) and j &lt; len(right_half):\n            if left_half[i] &lt; right_half[j]:\n                alist[k] = left_half[i]\n                i = i + 1\n            else:\n                alist[k] = right_half[j]\n                j = j +1\n            k = k + 1\n\n        while i &lt; len(left_half):\n            alist[k] = left_half[i]\n            i = i + 1\n            l = k + 1\n\n        while j &lt; len(right_half):\n            alist[k] = right_half[j]\n            j = j + 1\n            k = k + 1\n        print(\"Merging \", alist)\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#226","title":"2.2.6 \u5feb\u901f\u6392\u5e8f","text":"<p>\u548c\u5f52\u5e76\u6392\u5e8f\u4e00\u6837\uff0c<code>\u5feb\u901f\u6392\u5e8f</code>\u4e5f\u91c7\u7528\u5206\u6cbb\u7b56\u7565\uff0c\u4f46\u4e0d\u4f1a\u4f7f\u7528\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u4e0d\u8fc7\uff0c\u4ee3\u4ef7\u662f\u5217\u8868\u53ef\u80fd\u4e0d\u4f1a\u88ab\u4e00\u5206\u4e3a\u4e8c\u3002\u5feb\u901f\u6392\u5e8f\u9996\u5148\u4f1a\u9009\u51fa\u4e00\u4e2a\u57fa\u51c6\u503c\u3002\u57fa\u51c6\u503c\u7684\u4f5c\u7528\u662f\u5e2e\u52a9\u5207\u5206\u5217\u8868\uff0c\u4e5f\u53ef\u7406\u89e3\u4e3a<code>\u5206\u5272\u70b9</code>\uff0c\u7b97\u6cd5\u5728\u5206\u5272\u70b9\u5207\u5206\u5217\u8868\uff0c\u4ee5\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u7684\u5b50\u8c03\u7528\u3002</p> <pre><code>def quick_Sort(alist):\n    quick_Sort_Helper(alist, 0, len(alist)-1)\n\ndef quick_Sort_Helper(alist, first, last):\n    if first &lt; last:\n        split_point = partition(alist,first,last)\n        quick_Sort_Helper(alist, first, split_point - 1)\n        quick_Sort_Helper(alist, split_point + 1, last)\n\ndef partition(alist, first, last):\n    pivot_value = alist[first]\n    left_mark = first + 1\n    right_mark = last\n    done = False\n    while not done:\n\n        while left_mark &lt;= right_mark and alist[left_mark] &lt;= pivot_value:\n            left_mark = left_mark + 1\n        while alist[right_mark] &gt;= pivot_value and right_mark &gt;= left_mark:\n            right_mark = right_mark - 1\n        if right_mark &lt; left_mark:\n            done = True\n        else:\n            temp = alist[left_mark]\n            alist[left_mark] = alist[right_mark]\n            alist[right_mark] = temp\n    temp = alist[first]\n    alist[first] = alist[right_mark]\n    alist[right_mark] = temp\n\n    return right_mark\n</code></pre>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#3","title":"3 \u603b\u7ed3","text":"<p>\u603b\u7684\u6765\u8bf4\uff0c\u641c\u7d22\u548c\u6392\u5e8f\u7684\u7b97\u6cd5\u6709\u5f88\u591a\uff0c\u4f46\u662f\u6ca1\u6709\u54ea\u4e00\u79cd\u662f\u5b8c\u7f8e\u65e0\u7f3a\u7684\u3002\u53ea\u6709\u4e86\u89e3\u6bcf\u79cd\u7b97\u6cd5\u7684\u57fa\u672c\u539f\u7406\u548c\u4f18\u7f3a\u70b9\uff0c\u5c3d\u53ef\u80fd\u5730\u53bb\u89c4\u907f\u5b83\u7684\u4e0d\u8db3\uff0c\u624d\u6709\u53ef\u80fd\u5e2e\u52a9\u6211\u4eec\u9009\u62e9\u6700\u9002\u5408\u81ea\u5df1\u5de5\u4f5c\u5185\u5bb9\u7684\u65b9\u6cd5\u548c\u76f8\u5bf9\u5e94\u7684\u5f00\u6e90\u63a5\u53e3\u3002</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u7b80\u5355\u7684\u4ecb\u7ecd\u53ef\u4ee5\u8ba9\u4f60\u6709\u6240\u6536\u83b7\uff0c\u4e5f\u6b22\u8fce\u5404\u4f4d\u5c0f\u4f19\u4f34\u7559\u8a00\u8ba8\u8bba\u54e6\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/","title":"\u529f\u6548\u5206\u6790 \u2014 \u6700\u5c0f\u6837\u672c\u91cfn\u7684\u9009\u53d6","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aEcho\uff0c\u53d1\u5e03\u4e8e 2021-12-11\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#1","title":"1 \u524d\u8a00","text":"<p>\u8bfb\u66fc\u6606\u7684\u7ecf\u6d4e\u5b66\u539f\u7406\u7684\u65f6\u5019\uff0c\u5370\u8c61\u6700\u6df1\u523b\u7684\u4e00\u53e5\u8bdd\u662f\uff1aPeople face trade-offs, the cost of something is what you give up to get it. \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e8b\u7269\u90fd\u6709\u6210\u672c\uff0c\u6bcf\u4e2a\u9009\u62e9\u90fd\u9762\u4e34\u53d6\u820d\u3002\u8fd9\u53e5\u8bdd\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5c24\u4e3a\u5408\u9002\u3002\u5f53\u7814\u53d1\u65b0\u836f\u7684\u65f6\u5019\uff0c\u5f53\u91d1\u878d\u673a\u6784\u5bf9\u7b56\u7565\u8fdb\u884c\u5206\u6790\u7684\u65f6\u5019\uff0c\u5f53\u5224\u65ad\u7cfb\u7edf\u67d0\u4e2a\u65b0\u529f\u80fd\u662f\u5426\u6709\u6548\u7684\u65f6\u5019\uff0c\u5728\u4e00\u5207\u9700\u8981\u5047\u8bbe\u68c0\u9a8c\u7684\u5730\u65b9\uff0c\u5c31\u4f1a\u9762\u4e34\u68c0\u9a8c\u6837\u672c\u91cf\u7684\u9009\u62e9\u3002\u6837\u672c\u91cf\u592a\u5c0f\uff0c\u5219\u68c0\u9a8c\u7684\u53ef\u4fe1\u5ea6\u4e0d\u9ad8\uff0c\u6ca1\u6709\u8bf4\u670d\u529b\uff1b\u6837\u672c\u91cf\u592a\u5927\uff0c\u5219\u6210\u672c\u8fc7\u9ad8\uff0c\u4e0d\u53ef\u53d6\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u4f55\u9009\u62e9\u4f7f\u6837\u672c\u6709\u4ee3\u8868\u6027\u3001\u4f7f\u68c0\u9a8c\u6709\u6548\u7684\u6700\u5c0f\u6837\u672c\u91cf\u53d8\u5f97\u5c24\u5176\u91cd\u8981\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#2","title":"2 \u8fc7\u7a0b\u4ecb\u7ecd","text":"<p>\u5f00\u59cb\u4e4b\u524d\u5148\u56de\u987e\u4e00\u4e0b\u5047\u8bbe\u68c0\u9a8c\u7684\u57fa\u7840\u6982\u5ff5\u3002\u7c7b\u4f3c\u4e8e\u53cd\u8bc1\u6cd5\uff0c\u901a\u5e38\u6211\u4eec\u5c06\u60f3\u8981\u62d2\u7edd\u7684\u5047\u8bbe\uff08\u6bd4\u5982\u5b9e\u9a8c\u7ec4\u4e0e\u5bf9\u7167\u7ec4\u65e0\u5dee\u5f02\uff09\u8bbe\u4e3a\u539f\u5047\u8bbe\uff08H0)\uff0c\u60f3\u8981\u8bc1\u660e\u7684\u5047\u8bbe\uff08\u53cc\u8fb9\uff1a\u5b9e\u9a8c\u7ec4\u4e0e\u5bf9\u7167\u7ec4\u663e\u8457\u4e0d\u540c\uff1b\u5355\u8fb9\uff1a\u5b9e\u9a8c\u7ec4\u660e\u663e\u4f18\u4e8e/\u52a3\u4e8e\u5bf9\u7167\u7ec4\uff09\u8bbe\u4e3a\u5907\u62e9\u5047\u8bbe\uff08H1\uff09\u3002\u5b9e\u9a8c\u76ee\u7684\u4e3a\u63a8\u7ffb\u539f\u5047\u8bbe\u3002</p> <p>\u72af\u7b2c\u4e00\u7c7b\u9519\u8bef\uff08\u62d2\u771f\uff09\u7684\u6982\u7387\u4e3a\u03b1\uff0c\u4e5f\u53eb\u505a\u663e\u8457\u6027\u6c34\u5e73\uff1b\u7b2c\u4e8c\u7c7b\u9519\u8bef\uff08\u53d7\u4f2a\uff09\u7684\u6982\u7387\u4e3a\u03b2\u3002\u5219\u68c0\u9a8c\u529f\u6548\uff08power of effect\uff09\u4e3a1-\u03b2\uff0c\u4e5f\u5c31\u662f\u5f53\u539f\u5047\u8bbe\u4e3a\u5047\u65f6\uff0c\u6b63\u786e\u62d2\u7edd\u539f\u5047\u8bbe\u7684\u6982\u7387\u3002</p> <p>\u6b64\u5916\uff0c\u68c0\u9a8c\u6548\u5e94\u91cf\uff08effect size\uff09\u662f\u8861\u91cf\u6548\u5e94\u5927\u5c0f\u7684\u6307\u6807\uff0c\u53ef\u4ee5\u7528\u6765\u53cd\u6620\u5177\u6709\u663e\u8457\u5dee\u5f02\u7684\u7814\u7a76\u7ed3\u679c\u662f\u5426\u5177\u6709\u5b9e\u9645\u610f\u4e49\u6216\u91cd\u8981\u6027\u3002\u5b83\u901a\u5e38\u662f\u5747\u503c\u7684\u7ec4\u95f4\u5dee\u503c\u6216\u6807\u51c6\u5316\u5dee\u503c\uff0c\u6bd4\u7387\u7684\u7ec4\u95f4\u5dee\u503c\u6216\u6bd4\u503c(RR\u3001HR)\u3001OR\uff0c\u6216\u76f8\u5173\u7cfb\u6570\u3001\u56de\u5f52\u7cfb\u6570\u7b49\u3002\u7531\u4e8e\u6548\u5e94\u91cf\u662f\u4e8b\u540e\u7684\u6982\u5ff5\uff0c\u800c\u6700\u5c0f\u6837\u672c\u91cf\u9009\u53d6\u662f\u4e8b\u524d\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\u901a\u5e38\u53ef\u901a\u8fc7\u5386\u53f2\u6570\u636e\u6216\u9884\u671f\u672c\u6b21\u8bd5\u9a8c\u7ed3\u679c\u5f97\u51fa\u6240\u9700\u8981\u7684\u6548\u5e94\u91cf\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#21","title":"2.1 \u786e\u5b9a\u7814\u7a76\u5bf9\u8c61","text":"<p>\u5728\u8003\u8651\u7528\u4ec0\u4e48\u68c0\u9a8c\u65b9\u6cd5\u4e4b\u524d\uff0c\u9996\u5148\u8981\u660e\u786e\u7684\u662f\u6211\u4eec\u7684\u7814\u7a76\u5bf9\u8c61\u3002\u8003\u8651\u7684\u601d\u8def\u5982\u4e0b\uff1a</p> <ul> <li>\u6bd4\u8f83\u7684\u662f\u5747\u503c\u8fd8\u662f\u65b9\u5dee\uff1f\uff08\u5f71\u54cd\u68c0\u9a8c\u65b9\u6cd5\u7684\u9009\u62e9\uff09\uff1b</li> <li>\u5982\u679c\u662f\u5747\u503c\uff0c\u662f\u7edd\u5bf9\u503c\uff08\u70b9\u51fb\u91cf\uff09\u8fd8\u662f\u6bd4\u7387\uff08\u70b9\u51fb\u7387\uff09\uff1f\uff08\u5f71\u54cd\u6807\u51c6\u5dee\u7684\u8ba1\u7b97\uff09</li> <li>\u662f\u6709\u653e\u56de\u62bd\u6837\u8fd8\u662f\u65e0\u653e\u56de\u62bd\u6837\uff1f\uff08\u5f71\u54cd\u6807\u51c6\u5dee\u7684\u8ba1\u7b97\uff09</li> <li>\u72ec\u7acb\u6837\u672c\u8fd8\u662f\u4e0d\u72ec\u7acb\uff1f\uff08\u5f71\u54cd\u6807\u51c6\u5dee\u7684\u8ba1\u7b97\uff09</li> <li>\u65b9\u5dee\u5df2\u77e5\u8fd8\u662f\u672a\u77e5\uff1f\uff08\u5f71\u54cd\u5206\u5e03\u7684\u9009\u62e9\uff09</li> <li>\u5355\u6837\u672c\u8fd8\u662f\u4e24\u6837\u672c\uff1f\uff08\u5f71\u54cd\u6807\u51c6\u5dee\u7684\u8ba1\u7b97\uff09</li> <li>\u5355\u8fb9\u68c0\u9a8c\u8fd8\u662f\u53cc\u8fb9\u68c0\u9a8c\uff1f\uff08\u5f71\u54cd\u67e5\u8868\u7edf\u8ba1\u91cf\u5206\u4f4d\u6570\u03b1\u6216\u03b1/2\u7684\u9009\u62e9\uff09</li> <li>\u7b49\u7b49\u3002</li> </ul> <p>\u8003\u8651\u5230\u591a\u6837\u672c\u7684\u68c0\u9a8c\u53ef\u4ee5\u53e6\u5f00\u4e00\u7bc7\u65b9\u5dee\u5206\u6790\u6765\u8bb2\uff08\u5305\u62ecF\u68c0\u9a8c\uff0cANOVA\u7b49\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u4fa7\u91cd\u5355/\u4e24\u6837\u672c\u7684\u5747\u503c/\u6bd4\u7387\u7684\u5047\u8bbe\u68c0\u9a8c\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#22","title":"2.2 \u786e\u5b9a\u68c0\u9a8c\u65b9\u6cd5","text":"<p>\u660e\u786e\u597d\u7814\u7a76\u5bf9\u8c61\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u9009\u62e9\u5408\u9002\u7684\u68c0\u9a8c\u65b9\u6cd5\u3002\u82e5\u5bf9\u8c61\u4e3a\u5747\u503c\uff0c\u591a\u91c7\u7528Z\u68c0\u9a8c/t\u68c0\u9a8c\uff1b\u82e5\u4e3a\u6bd4\u7387\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u5361\u65b9\u68c0\u9a8c\u3002\u5f53\u786e\u5b9a\u4e86\u68c0\u9a8c\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u7edf\u8ba1\u91cf\u7684\u516c\u5f0f\uff0c\u53cd\u63a8\u4e4b\u540e\u5373\u53ef\u5f97\u5230\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u8ba1\u7b97\u516c\u5f0f\u3002\u7edf\u8ba1\u91cf\u516c\u5f0f\u7e41\u591a\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u5747\u503c\u516c\u5f0f\u4e3e\u4f8b\u5982\u4e0b\u56fe\u3002\u6ce8\u610f\uff0c\u5982\u4e3a\u53cc\u8fb9\u68c0\u9a8c\uff0c\u5219\u5c06\u03b1\u6539\u6210\u03b1/2\u5373\u53ef\u3002</p> \u5747\u503c\u7684\u68c0\u9a8c\u65b9\u5f0f\u9009\u62e9","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#23","title":"2.3 \u70b9\u51fb\u7387\u68c0\u9a8c\u4e3e\u4f8b","text":"<p>\u5728\u751f\u4ea7\u73af\u5883\u4e2dAB test\u7ecf\u5e38\u88ab\u63d0\u5230\uff0c\u6bd4\u5982\u5f53\u524d\u7528\u6237\u5728app\u4e0a\u770b\u5230\u7684\u662fA\u578b\u5e7f\u544a\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u5982\u679c\u6362\u6210B\u578b\u5e7f\u544a\uff0c\u70b9\u51fb\u7387\u662f\u5426\u4f1a\u4f18\u4e8eA\u3002\u8003\u8651\u5230\u70b9\u51fb\u6216\u4e0d\u70b9\u51fb\u670d\u4ece\uff080\uff0c1\uff09\u79bb\u6563Bernoulli\u5206\u5e03\uff0c\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u662f\u4e00\u4e2a\u6bd4\u7387\u7684\u4e24\u6837\u672c\u5361\u65b9\u68c0\u9a8c\uff0c\u4e5f\u662f\u4e00\u4e2a\u4e8c\u4e58\u4e8c\u5217\u8054\u8868\u68c0\u9a8c\uff0c\u8fd9\u91cc\u4e5f\u7b49\u540c\u4e8ez\u68c0\u9a8c\u3002\u5047\u8bbe\u5f53\u524dA\u578b\u5e7f\u544a\u70b9\u51fb\u7387\u4e3a30%\uff0c\u6211\u4eec\u5e0c\u671bB\u578b\u5e7f\u544a\u80fd\u63d0\u534710%\u7684\u70b9\u51fb\u7387\u81f330%*1.1=33%\u3002\u5f53\u4e24\u7ec4\u6837\u672c\u7684\u6837\u672c\u91cf\u548c\u65b9\u5dee\u76f8\u4f3c\u65f6\uff0c\u53ef\u7528Cohen\u2019s d \u6765\u8ba1\u7b97\u6807\u51c6\u5747\u5dee\u4ece\u800c\u8861\u91cf\u6548\u5e94\u91cf\u3002\u5e26\u5165\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u8ba1\u7b97\u516c\u5f0f\u4e2d\u53ef\u5f97\u6bcf\u7ec4\u7684n\u4e3a1881\uff0c\u56e0\u6b64\u603b\u6837\u672c\u91cf\u4e3a3762\u3002\u8ba1\u7b97\u7531\u4e0b\u4e00\u8282\u4e2d\u4ee3\u7801\u5b9e\u73b0\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#24","title":"2.4 \u4ee3\u7801\u5b9e\u73b0","text":"<p>\u6700\u5c0f\u6837\u672c\u91cf\u8ba1\u7b97\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff0c\u5e38\u7528\u7684\u5982Python\u4e2d\u7684statsmodels\u5305\u3002</p> <pre><code>from statsmodels.stats.power import GofChisquarePower\nfrom statsmodels.stats.power import zt_ind_solve_power\n\nfrom statsmodels.stats.proportion import proportion_effectsize as es\n\n#\u5361\u65b9\u68c0\u9a8c\n#\u8bbe\u5b9a\u663e\u8457\u6027\u6c34\u5e73\u4e3a0.05\uff0c\u68c0\u9a8c\u529f\u6548\u4e3a0.8\uff0c\u6548\u5e94\u91cf\u4e3a\u6807\u51c6\u5747\u5dee\u8ba1\u7b97\u65b9\u5f0f\uff0c\u5bf9\u7167\u7ec4\u548c\u5b9e\u9a8c\u7ec4\u7684\uff08\u9884\u671f\uff09\u6bd4\u7387\u5206\u522b\u4e3a30%\u548c33%\uff0c\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u6570\u91cf\u76f8\u7b49\uff0c\u53cc\u8fb9\u68c0\u9a8c\u3002\nGofChisquarePower().solve_power(effect_size=es(prop1=0.33, prop2=0.30, method= 'normal'), alpha=0.05, power=0.8,n_bins=2)\n\n#z\u68c0\u9a8c\n#\u8bbe\u5b9a\u663e\u8457\u6027\u6c34\u5e73\u4e3a0.05\uff0c\u68c0\u9a8c\u529f\u6548\u4e3a0.8\uff0c\u6548\u5e94\u91cf\u4e3a\u6807\u51c6\u5747\u5dee\u8ba1\u7b97\u65b9\u5f0f\uff0c\u5bf9\u7167\u7ec4\u548c\u5b9e\u9a8c\u7ec4\u7684\uff08\u9884\u671f\uff09\u6bd4\u7387\u5206\u522b\u4e3a30%\u548c33%\uff0c\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u6570\u91cf\u76f8\u7b49\uff0c\u53cc\u8fb9\u68c0\u9a8c\u3002\nzt_ind_solve_power(effect_size=es(prop1=0.33, prop2=0.30, method= 'normal'), alpha=0.05, power=0.8, ratio=1.0, alternative=\"two-sided\")\n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b\u3002</p> \u6700\u5c0f\u6837\u672c\u91cf\u8ba1\u7b97\u7ed3\u679c <p>\u6ce8\u610f\u6b64\u5904\u4e3a\u8fc7\u5269\u8fd1\u4f3c\uff0c\u4e14\u5361\u65b9\u68c0\u9a8c\u663e\u793a\u7684\u6700\u5c0f\u6837\u672c\u91cf\u4e3a\u6bcf\u7ec4\u6837\u672c\u91cf\uff0cz\u68c0\u9a8c\u663e\u793a\u7684\u6700\u5c0f\u6837\u672c\u91cf\u4e3a\u8bd5\u9a8c\u7684\u603b\u6837\u672c\u91cf\u3002\u53ef\u77e5\u6bcf\u7ec4\u6700\u5c0f\u6837\u672c\u91cf\u4e3a1881\uff0c\u603b\u6837\u672c\u91cf\u4e3a3762\u3002</p> <p>\u6b64\u5916\uff1a\u5e38\u7528\u03b1\u4e3a0.05\uff0c\u5e38\u7528\u03b2\u4e3a0.2\u3002\u4ece\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u51fa\u504f\u597d\u3002\u4eba\u4eec\u503e\u5411\u4e8e\u4e25\u683c\u63a7\u5236\u62d2\u771f\u7684\u6982\u7387\uff0c\u4e3a\u6b64\u5b81\u613f\u4ed8\u51fa\u63a5\u53d7\u9519\u8bef\u539f\u5047\u8bbe\u7684\u4ee3\u4ef7\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2021-12-15-min_n_choice/#3","title":"3 \u5c0f\u7ed3","text":"<p>\u5047\u8bbe\u68c0\u9a8c\u65b9\u6cd5\u5343\u5343\u4e07\uff0c\u4f46\u4e07\u53d8\u4e0d\u79bb\u5176\u5b97\u3002\u53ea\u8981\u660e\u786e\u4e86\u7814\u7a76\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u5c31\u987a\u7406\u6210\u7ae0\u975e\u5e38\u987a\u6ed1\u3002\u6837\u672c\u5927\u5c0f\u3001\u663e\u8457\u6027\u6c34\u5e73\u03b1\u3001\u68c0\u9a8c\u529f\u6548\uff081-\u03b2\uff09\u3001\u6548\u5e94\u91cf\uff0c\u7ed9\u5b9a\u5176\u4e2d\u4efb\u610f\u4e09\u4e2a\u91cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u7b97\u51fa\u7b2c\u56db\u4e2a\u91cf\u3002\u7f51\u7edc\u4e0a\u4e5f\u6709\u5f88\u591a\u73b0\u6210\u7684AB test\u8ba1\u7b97\u5668\uff0c\u4f8b\u5982Evan's Awesome A/B Tools\uff0c\u53ef\u4f9b\u5927\u5bb6\u53c2\u8003\u3002</p> <p>\u6700\u540e\u7559\u4e00\u4e2a\u5f00\u653e\u6027\u95ee\u9898\u3002\u8fd8\u662f\u521a\u521a\u7684\u4f8b\u5b50\uff0c\u5f53\u671f\u5f85B\u578b\u5e7f\u544a\u7684\u70b9\u51fb\u7387\u63d0\u5347\u5f97\u66f4\u591a\u65f6\uff0c\u9700\u8981\u7684\u6700\u5c0f\u6837\u672c\u91cf\u662f\u589e\u591a\u8fd8\u662f\u51cf\u5c11\u5462\uff1f</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/","title":"\u65b9\u5dee\u5206\u6790(Analysis of Variance)","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aEcho\uff0c\u53d1\u5e03\u4e8e 2022-01-03\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea68\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#1","title":"1 \u524d\u8a00","text":"<p>\u4e0a\u56de\u4e66\u8bf4\u5230\u6700\u5c0f\u6837\u672c\u91cf\u7684\u9009\u62e9\u66f4\u4fa7\u91cd\u5355\u6837\u672c\u6216\u4e24\u6837\u672c\u5747\u503c\u548c\u6bd4\u7387\u7684\u68c0\u9a8c\u3002\u5173\u4e8e\u591a\u4e2a\u6837\u672c\u7684\u5747\u503c\u68c0\u9a8c\u53ef\u4ee5\u53e6\u5f00\u4e00\u7bc7ANOVA\u65b9\u5dee\u5206\u6790(Analysis of Variance)\u6765\u8bb2\u3002\u65b0\u7684\u4e00\u5e74\u4ece\u6276\u8d77\u53bb\u5e74\u7684flag\u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u6765\u586b\u5751\u5566\uff01</p> <p>\u5f00\u59cb\u4e4b\u524d\u5148\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u5df2\u7ecf\u6709\u4e86\u4e07\u80fd\u53c8\u597d\u7528\u7684AB test\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u65b9\u5dee\u5206\u6790\u5462\uff1f\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u56e0\u53d8\u91cf\u901a\u5e38\u4f1a\u53d7\u5230\u4f17\u591a\u56e0\u7d20\u7684\u5f71\u54cd\u3002\u6bd4\u5982\u65b0\u836f\u7684\u6709\u6548\u6027\u53d7\u5230\u9002\u5e94\u75c7\u3001\u5242\u91cf\u3001\u7ed9\u836f\u9014\u5f84\u548c\u65b9\u6cd5\u3001\u6bcf\u65e5\u7ed9\u836f\u6b21\u6570\u7b49\u6761\u4ef6\u7684\u5f71\u54cd\uff0c\u6bd4\u5982\u5546\u54c1\u9500\u91cf\u53d7\u5230\u5e7f\u544a\u6295\u653e\uff0c\u5546\u54c1\u4ef7\u683c\uff0c\u6de1\u65fa\u5b63\u7b49\u7b49\u6761\u4ef6\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0c\u6bcf\u4e2a\u5f71\u54cd\u56e0\u7d20\u53ef\u80fd\u6709\u591a\u4e2a\u89c2\u6d4b\u6c34\u5e73\u3002\u6bd4\u5982\u7f51\u9875\u7684UI\u8bbe\u8ba1\u53ef\u80fd\u6709ABCDEFG\u591a\u4e2a\u7248\u672c\uff08\u6bd5\u7adf\u542c\u8bf4\u540c\u6837\u662f\u9ed1\uff0c\u4e5f\u53ef\u80fd\u6709\u4e94\u5f69\u6591\u6593\u7684\u9ed1\uff09\u3002\u5f53\u8001\u677f\u95ee\u4f60\uff0c\u8fd9\u4e9b\u56e0\u7d20\u5bf9\u56e0\u53d8\u91cf\u662f\u5426\u6709\u5f71\u54cd\uff0c\u4ee5\u53ca\u56e0\u7d20\u7684\u6bcf\u4e00\u4e2a\u6c34\u5e73\u7684\u89c2\u6d4b\u503c\u662f\u5426\u6709\u663e\u8457\u4e0d\u540c\u65f6\uff0c\u6b64\u65f6\u53ea\u4fa7\u91cd\u5355\u56e0\u7d20\u4e24\u6c34\u5e73\u7684AB test\u7565\u663e\u6349\u6025\uff0c\u9664\u975e\u6211\u4eec\u4e24\u4e24\u6392\u5217\u7ec4\u5408\uff0c\u6d4b\u5230\u5929\u8352\u5730\u8001\uff0c\u7136\u800c\u591a\u6b21\u68c0\u9a8c\u4f1a\u4f7f\u5f97\u72af\u7b2c\u4e00\u7c7b\u9519\u8bef\u7684\u6982\u7387\u5927\u5927\u589e\u52a0\uff0c\u4e14\u65e0\u6cd5\u540c\u65f6\u8003\u8651\u6240\u6709\u7684\u6837\u672c\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981ANOVA\u524d\u6765\u6551\u573a\u4e86\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#2","title":"2 \u539f\u7406\u4ecb\u7ecd","text":"<p>\u5728\u5355\u56e0\u7d20\u7684\u60c5\u51b5\u4e0b\uff0cANOVA\u65b9\u5dee\u5206\u6790\u5b9e\u9645\u4e0a\u8fd8\u662f\u7528\u6765\u6bd4\u8f83\u591a\u4e2a\u6837\u672c\u7684\u5747\u503c\u662f\u5426\u76f8\u540c/\u591a\u4e2a\u6837\u672c\u662f\u5426\u540c\u5206\u5e03\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8981\u53eb\u65b9\u5dee\u5206\u6790\u5462\uff1f\u7b80\u5355\u6765\u8bf4\uff0c\u5b83\u6765\u6e90\u4e8e\u5bf9\u8bef\u5dee\u7684\u5206\u89e3\u3002\u6211\u4eec\u7528\u6837\u672c\u7684\u79bb\u5dee\u5e73\u65b9\u548c\u6765\u8861\u91cf\u603b\u4f53\u7684\u8bef\u5dee\uff0c\u603b\u4f53\u8bef\u5deeSST\uff08Sum of Square for Total\uff09= \u7ec4\u5185\u968f\u673a\u8bef\u5deeSSE\uff08Sum of Square for Error\uff09+ \u7ec4\u95f4\u8bef\u5deeSSA\uff08Sum of Square for factor A\uff09\u3002\u7edf\u8ba1\u91cf\u5982\u4e0b\u3002SSE\u9664\u4ee5\u5176\u81ea\u7531\u5ea6\u76f8\u5f53\u4e8e\u6bcf\u7ec4\u5185\u81ea\u8eab\u7684\u65b9\u5dee\uff0cSSA\u9664\u4ee5\u5176\u81ea\u7531\u5ea6\u76f8\u5f53\u4e8e\u6bcf\u7ec4\u76f8\u5bf9\u4e8e\u603b\u4f53\u7684\u65b9\u5dee\u3002\u5f53\u6837\u672c\u670d\u4ece\u6b63\u6001\u5206\u5e03\u7684\u65f6\u5019\uff0c\u79bb\u5dee\u5e73\u65b9\u548c\u670d\u4ece\u5361\u65b9\u5206\u5e03\uff0c\u56e0\u6b64\u8be5\u7edf\u8ba1\u91cf\u76f8\u5f53\u4e8e\u4e24\u4e2a\u5361\u65b9\u5206\u5e03\u4e4b\u6bd4\uff0c\u5373\u4e3a\u670d\u4eceF\u5206\u5e03\u3002\u5f53F\u7edf\u8ba1\u91cf\u8d8a\u5927\u65f6\uff0c\u8bf4\u660e\u5206\u6bcd\u5c0f\uff0c\u7ec4\u5185\u65b9\u5dee\u5c0f\uff0c\u90fd\u5f88\u96c6\u4e2d\uff1b\u5206\u5b50\u5927\uff0c\u7ec4\u95f4\u65b9\u5dee\u5927\uff0c\u6bcf\u7ec4\u5206\u9694\u8f83\u8fdc\uff0c\u8d8a\u8d8b\u5411\u4e8e\u62d2\u7edd\u591a\u6837\u672c\u5747\u503c\u76f8\u540c/\u540c\u5206\u5e03\u7684\u539f\u5047\u8bbe\u3002</p> F\u7edf\u8ba1\u91cf\u516c\u5f0f <p>ANOVA\u65b9\u5dee\u5206\u6790\u6709\u975e\u5e38\u591a\u7684\u53d8\u5316\uff0c\u53ef\u4ee5\u6839\u636e\u56e0\u5b50\u6570\u91cf\u5206\u4e3a\u5355\u56e0\u7d20\u65b9\u5dee\u5206\u6790\u548c\u591a\u56e0\u7d20\u65b9\u5dee\u5206\u6790\u3002\u5f53\u4e0e\u5b9e\u9a8c\u8bbe\u8ba1DOE\uff08Design of Experiment\uff09\u8054\u7cfb\u8d77\u6765\u65f6\uff0c\u5219\u6709\u5b8c\u5168\u968f\u673a\u8bbe\u8ba1\uff0c\u968f\u673a\u533a\u7ec4\u8bbe\u8ba1\uff0c\u62c9\u4e01\u65b9\u8bbe\u8ba1\uff0c\u6b63\u4ea4\u8bbe\u8ba1\u7b49\u7b49\u591a\u79cd\u5f62\u5f0f\u3002\u4f46\u5927\u9053\u81f3\u7b80\uff0c\u6b8a\u9014\u540c\u5f52\u3002\u53ea\u8981\u638c\u63e1\u4e86\u65b9\u5dee\u5206\u6790\u7684\u57fa\u672c\u903b\u8f91\uff0c\u5404\u79cd\u53d8\u5316\u90fd\u53ef\u4ee5\u4fe1\u624b\u62c8\u6765\u3002\u8fd9\u91cc\u4e3b\u8981\u6309\u56e0\u5b50\u6570\u91cf\u5206\u7c7b\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#21-one-way-anova","title":"2.1 \u5355\u56e0\u7d20\u65b9\u5dee\u5206\u6790\uff08One Way ANOVA\uff09","text":"<p>\u5355\u56e0\u7d20\u65b9\u5dee\u5206\u6790\u53ea\u5173\u5fc3\u4e00\u4e2a\u5f71\u54cd\u56e0\u7d20\uff0c\u4f46\u53ef\u80fd\u6709\u591a\u4e2a\u89c2\u6d4b\u6c34\u5e73\u3002\u6bd4\u5982\u4e0a\u9762\u8bf4\u5230\u7684UI\u8bbe\u8ba1\u7684ABC\u4e09\u79cd\u7248\u672c\u5bf9\u6d41\u91cf\u7684\u5f71\u54cd\uff0cUI\u8bbe\u8ba1\u4e3a\u4e00\u4e2a\u56e0\u7d20\uff0cABC\u4e09\u4e2a\u7248\u672c\u4e3a\u8fd9\u4e2a\u56e0\u7d20\u7684\u4e09\u4e2a\u89c2\u6d4b\u6c34\u5e73\u3002\u5177\u4f53\u68c0\u9a8c\u8fc7\u7a0b\u5982\u4e0b\u3002</p> <ul> <li>\u786e\u7acb\u68c0\u9a8c\u7684\u539f\u5047\u8bbe\u4e0e\u5907\u62e9\u5047\u8bbe\uff1a\u901a\u5e38\u539f\u5047\u8bbe\u4e3a\u5404\u7ec4\u5747\u503c\u76f8\u540c\uff0c\u5907\u62e9\u5047\u8bbe\u4e3a\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u540c\u3002</li> <li>\u8ba1\u7b97F\u7edf\u8ba1\u91cf\uff1a\u8ba1\u7b97\u7ec4\u5185\u6837\u672c\u5747\u503c\uff0c\u603b\u5747\u503c\uff0c\u5404\u8bef\u5dee\u5e73\u65b9\u548c\u53ca\u81ea\u7531\u5ea6\uff0c\u4ece\u800c\u7b97\u51faF\u7edf\u8ba1\u91cf\u7684\u503c\u3002</li> <li>\u5f97\u5230\u68c0\u9a8c\u7ed3\u8bba\uff1a\u5c06F\u7edf\u8ba1\u91cf\u4e0e\u67e5\u8868\u5f97\u5230\u7684\u4e34\u754c\u503c\u76f8\u6bd4\uff0c\u82e5\u7edf\u8ba1\u91cf\u5927\u4e8e\u4e34\u754c\u503c\uff0c\u5219\u53ef\u4ee5\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u8ba4\u4e3a\u603b\u4f53\u5747\u503c\u5b58\u5728\u5dee\u5f02\u3002\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u68c0\u9a8c\u7684P\u503c\uff0c\u4e0e\u4e8b\u5148\u8bbe\u7acb\u7684\u663e\u8457\u6027\u6c34\u5e73\u03b1\u5bf9\u6bd4\u3002\u82e5P\u503c\u5c0f\u4e8e\u03b1\uff0c\u5219\u53ef\u4ee5\u62d2\u7edd\u539f\u5047\u8bbe\u3002</li> <li>\u4e8b\u540e\u5206\u6790\uff1a\u5373\u4e24\u4e24\u6bd4\u8f83\u5206\u6790\u3002\u5f53\u4e0a\u4e00\u6b65\u4e2d\u62d2\u7edd\u539f\u5047\u8bbe\u540e\uff0c\u8bf4\u660e\u5404\u7ec4\u5747\u503c\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u540c\u3002\u6b64\u65f6\u518d\u505aTukey's test\u6216Bonferroni test\u4e24\u4e24\u6bd4\u8f83\uff0c\u53ef\u77e5\u54ea\u4e24\u7ec4\u95f4\u5b58\u5728\u663e\u8457\u5dee\u5f02\u3002</li> </ul> <p>\u4e3e\u4f8b\u5982\u4e0b\uff0c\u6ca1\u6709\u5b9e\u9a8c\u6570\u636e\u5c31\u968f\u673a\u751f\u6210\u6a21\u62df\u6570\u636e\u3002</p> <p><pre><code>import numpy as np\n#\u6a21\u62df\u4e00\u4e2a\u5355\u56e0\u7d20\u4e09\u6c34\u5e73\u7684\u6570\u636e\u96c6\uff0c\u4e09\u6c34\u5e73\u5206\u522b\u4e3a\u5bf9\u7167\u7ec4\u548c\u4e24\u4e2a\u4e0d\u540c\u7684\u5b9e\u9a8c\u7ec4\n#\u5176\u4e2dtreat1\u548c\u5bf9\u7167\u7ec4\u5747\u503c\u975e\u5e38\u63a5\u8fd1\uff0ctreat2\u5219\u76f8\u5dee\u5f88\u5927\ndf = {'control':list(np.random.normal(10,5,100)),\n      'treat1':list(np.random.normal(11,5,100)),\n      'treat2':list(np.random.normal(20,5,100))}\nimport pandas as pd\ndf = pd.DataFrame(df)\ndf.head()\n\n#\u8f6c\u6362\u6570\u636e\u683c\u5f0f\ndf_melt = df.melt()\ndf_melt.head()\ndf_melt.columns = ['Treat','Value']\ndf_melt.head()\n\n#\u7bb1\u7ebf\u56fe\u53ef\u89c6\u5316\nimport seaborn as sns\nsns.boxplot(x='Treat',y='Value',data = df_melt)\n\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.anova import anova_lm\n# \u6b64\u5904\u4e3e\u4f8b\u4e3a\u5355\u56e0\u7d20\u65b9\u5dee\u5206\u6790\uff0c\u82e5\u4e3a\u591a\u56e0\u7d20\uff0c\u5219Value~C(factor1)+C(factor2)...\n# \u82e5\u591a\u56e0\u7d20\u4e4b\u95f4\u6709\u76f8\u4e92\u5f71\u54cd\uff0c\u5219\u518d\u52a0\u4e0a\u4ea4\u4e92\u9879\u5982C(factor1):C(factor2)\nmodel = ols('Value~C(Treat)',data=df_melt).fit()\nanova_table = anova_lm(model, typ = 2)\nprint(anova_table)\n\n#\u5404\u7ec4\u6837\u672c\u6570\u91cf\u76f8\u540c\uff0c\u53ef\u7528tukey test\u505a\u4e24\u4e24\u6bd4\u8f83\u5206\u6790\nfrom statsmodels.stats.multicomp import MultiComparison\nmc = MultiComparison(df_melt['Value'],df_melt['Treat'])\ntukey_result = mc.tukeyhsd(alpha = 0.5)\nprint(tukey_result)\n</code></pre> \u6a21\u62df\u7ed3\u679c\u5982\u4e0b\u3002\u53ef\u77e5\u8be5\u56e0\u7d20\u7684P\u503c\u8d8b\u4e8e0\uff0cF\u7edf\u8ba1\u91cf\u503c\u5f88\u5927\uff0c\u53ef\u4ee5\u663e\u8457\u62d2\u7edd\u539f\u5047\u8bbe\u3002\u901a\u8fc7\u4e8b\u540e\u4e24\u4e24\u6bd4\u8f83\u5206\u6790\u53ef\u77e5\uff0c\u5bf9\u7167\u7ec4\u548ctreat1\u65e0\u663e\u8457\u5dee\u5f02\uff0ctreat2\u548c\u4f59\u4e0b\u4e24\u7ec4\u7684\u5dee\u8ddd\u90fd\u975e\u5e38\u663e\u8457\u3002</p> \u5355\u56e0\u7d20ANOVA\u7ed3\u679c","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#22-manova","title":"2.2 \u591a\u56e0\u7d20\u65b9\u5dee\u5206\u6790\uff08MANOVA\uff09","text":"<p>\u591a\u56e0\u7d20\u65b9\u5dee\u5206\u6790\u5173\u5fc3\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u5f71\u54cd\u56e0\u7d20\uff0c\u5982\u4e0a\u9762\u8bf4\u7684\u5546\u54c1\u9500\u91cf\u53d7\u5230\u4ef7\u683c\u548c\u5e7f\u544a\u6295\u653e\u7684\u5f71\u54cd\u3002\u4ef7\u683c\u548c\u5e7f\u544a\u4e3a\u4e24\u4e2a\u56e0\u7d20\uff0c\u6bcf\u4e2a\u56e0\u7d20\u5404\u6709\u82e5\u5e72\u4e2a\u6c34\u5e73\u3002\u6211\u4eec\u60f3\u77e5\u9053\u5546\u54c1\u9500\u91cf\u662f\u5426\u53d7\u5176\u5f71\u54cd\u3002</p> <p><pre><code>import numpy as np\n#\u6a21\u62df\u4e00\u4e2a\u4e24\u56e0\u7d20\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e3a3\u6c34\u5e73\uff0c\u4e00\u4e2a\u4e3a5\u6c34\u5e73\u3002\ndata = np.array([\n    [276, 352, 178, 295, 273],\n    [114, 176, 102, 155, 128],\n    [364, 547, 288, 392, 378]\n])\ndf = pd.DataFrame(data)\ndf.index=pd.Index(['A1','A2','A3'],name='ad')\ndf.columns=pd.Index(['B1','B2','B3','B4','B5'], name='price')\nprint(df)\n#\u8f6c\u6362\u6570\u636e\u683c\u5f0f\ndf1 = df.stack().reset_index().rename(columns={0:'value'})\nprint(df1)\n\nfrom statsmodels.formula.api import ols\nfrom statsmodels.stats.anova import anova_lm\n# \u4e24\u56e0\u7d20\u65b9\u5dee\u5206\u6790\n# \u82e5\u591a\u56e0\u7d20\u4e4b\u95f4\u6709\u76f8\u4e92\u5f71\u54cd\uff0c\u5219\u518d\u52a0\u4e0a\u4ea4\u4e92\u9879\u5982C(factor1):C(factor2)\nmodel = ols('value~C(ad) + C(price)', df1).fit()\nanova_table = anova_lm(model)\nprint(anova_table)\n\n#\u5404\u7ec4\u6837\u672c\u6570\u91cf\u76f8\u540c\uff0c\u53ef\u7528tukey test\u505a\u4e24\u4e24\u6bd4\u8f83\u5206\u6790\nfrom statsmodels.stats.multicomp import MultiComparison\nmc = MultiComparison(df1['value'],df1['price'])\ntukey_result = mc.tukeyhsd(alpha = 0.5)\nprint(tukey_result)\n\nmc2 = MultiComparison(df1['value'],df1['ad'])\ntukey_result2 = mc2.tukeyhsd(alpha = 0.5)\nprint(tukey_result2)\n</code></pre> \u6a21\u62df\u7ed3\u679c\u5982\u4e0b\u3002\u53ef\u77e5\u4ef7\u683c\u548c\u5e7f\u544a\u56e0\u7d20\u7684P\u503c\u90fd\u5f88\u5c0f\uff0cF\u7edf\u8ba1\u91cf\u503c\u5f88\u5927\uff0c\u90fd\u53ef\u4ee5\u663e\u8457\u62d2\u7edd\u539f\u5047\u8bbe\uff0c\u8bf4\u660e\u5bf9\u5546\u54c1\u9500\u91cf\u5f71\u54cd\u90fd\u663e\u8457\u3002\u901a\u8fc7\u4e8b\u540e\u4e24\u4e24\u6bd4\u8f83\u5206\u6790\u53ef\u77e5\uff0c\u4ef7\u683c\u4e4b\u95f4\u65e0\u663e\u8457\u5dee\u5f02\uff0c\u5e7f\u544a\u4e4b\u95f4\u5dee\u5f02\u663e\u8457\u3002</p> \u4e24\u56e0\u7d20ANOVA\u7ed3\u679c","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#23","title":"2.3 \u4f7f\u7528\u6761\u4ef6","text":"<p>\u65b9\u5dee\u5206\u6790\u7684\u4f7f\u7528\u6761\u4ef6\u4e3a\uff1a - \u65b9\u5dee\u9f50\u6027\uff1a\u53ef\u7528Barlett\u68c0\u9a8c\u5148\u68c0\u9a8c\u65b9\u5dee\u9f50\u6027\uff0c\u5728\u65e0\u6cd5\u62d2\u7edd\u65b9\u5dee\u9f50\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u518d\u505a\u65b9\u5dee\u5206\u6790\u3002\u82e5\u68c0\u9a8c\u53d1\u73b0\u65b9\u5dee\u975e\u9f50\u6027\uff0c\u53ef\u7528Welch\u7b49\u65b9\u6cd5\u6821\u6b63\u540e\u518d\u505a\u65b9\u5dee\u5206\u6790\u3002 - \u89c2\u6d4b\u503c\u72ec\u7acb\u540c\u5206\u5e03 - \u89c2\u6d4b\u503c\u670d\u4ece\u6b63\u6001\u5206\u5e03\uff1a\u82e5\u4e0d\u6b63\u6001\uff0c\u53ef\u4ee5\u7528\u975e\u53c2\u6570\u68c0\u9a8c\u3002</p>","tags":["analytics","python"]},{"location":"Main_Course/Data_Analytics/2022-01-03-ANOVA/#3","title":"3 \u603b\u7ed3","text":"<p>\u5bf9\u65b9\u5dee\u5206\u6790\u6765\u8bf4\uff0c\u53ea\u8981\u660e\u786e\u4e86\u7814\u7a76\u5bf9\u8c61\u548c\u8bd5\u9a8c\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u5c31\u987a\u7406\u6210\u7ae0\u975e\u5e38\u987a\u6ed1\u3002\u6838\u5fc3\u8fd8\u662f\u7528F\u68c0\u9a8c\u505a\u7ec4\u95f4\u65b9\u5dee\u548c\u7ec4\u5185\u65b9\u5dee\u7684\u6bd4\u8f83\u3002\u4f60\u5b66\u4f1a\u4e86\u5417\uff1f</p>","tags":["analytics","python"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/","title":"Keras\u5404\u79cdCallbacks\u4ecb\u7ecd","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-02\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#1","title":"1 \u524d\u8a00","text":"<p>\u5728tensorflow.keras\u4e2d\uff0ccallbacks\u80fd\u5728<code>fit</code>\u3001<code>evaluate</code>\u548c<code>predict</code>\u8fc7\u7a0b\u4e2d\u52a0\u5165\u4f34\u968f\u7740\u6a21\u578b\u7684\u751f\u547d\u5468\u671f\u8fd0\u884c\uff0c\u76ee\u524dtensorflow.keras\u5df2\u7ecf\u6784\u5efa\u4e86\u8bb8\u591a\u79cdcallbacks\u4f9b\u7528\u6237\u4f7f\u7528\uff0c\u7528\u4e8e\u9632\u6b62\u8fc7\u62df\u5408\u3001\u53ef\u89c6\u5316\u8bad\u7ec3\u8fc7\u7a0b\u3001\u7ea0\u9519\u3001\u4fdd\u5b58\u6a21\u578bcheckpoints\u548c\u751f\u6210TensorBoard\u7b49\u3002\u901a\u8fc7\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528tensorflow.keras\u91cc\u7684\u5404\u79cdcallbacks\uff0c\u4ee5\u53ca\u5982\u4f55\u81ea\u5b9a\u4e49callbacks\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#2-callbacks","title":"2 \u4f7f\u7528callbacks","text":"<p>\u4f7f\u7528callbacks\u7684\u6b65\u9aa4\u5f88\u7b80\u5355\uff0c\u5148\u5b9a\u4e49callbacks\uff0c\u7136\u540e\u5728<code>model.fit</code>\u3001<code>model.evaluate</code>\u548c<code>model.predict</code>\u4e2d\u628a\u5b9a\u4e49\u597d\u7684callbacks\u4f20\u5230<code>callbacks</code>\u53c2\u6570\u91cc\u5373\u53ef\u3002</p> <p>\u4ee5\u6700\u5e38\u89c1\u7684<code>ModelCheckpoint</code>\u4e3a\u4f8b\uff0c\u4f7f\u7528\u8fc7\u7a0b\u5982\u4e0b\u793a\u4f8b\uff1a</p> <pre><code>...\nmodel_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n    filepath=filePath,\n    save_weights_only=True,\n    monitor='val_accuracy',\n    mode='max')\n\nmodel.fit(x, y, callbacks=model_checkpoint_callback)\n</code></pre> <p>\u8fd9\u6837\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\uff0c\u5c31\u4f1a\u5c06\u6a21\u578bcheckpoints\u5b58\u50a8\u5728\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4f9b\u540e\u7eed\u4f7f\u7528\u3002\u9664\u4e86ModelCheckpoint\uff0c\u5728TensorFlow 2.0\u4e2d\uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684callbacks\u4f9b\u4f7f\u7528\uff0c\u8ba9\u6211\u4eec\u4e00\u63a2\u7a76\u7adf\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#21-earlystopping","title":"2.1 EarlyStopping","text":"<p>\u8fd9\u4e2acallback\u80fd\u76d1\u63a7\u8bbe\u5b9a\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8bc4\u4ef7\u6307\u6807\u4e0d\u518d\u4e0a\u5347\u65f6\uff0c\u8bad\u7ec3\u5c06\u4f1a\u63d0\u524d\u7ed3\u675f\uff0c\u9632\u6b62\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u5176\u9ed8\u8ba4\u53c2\u6570\u5982\u4e0b\uff1a</p> <pre><code>tf.keras.callbacks.EarlyStopping(monitor='val_loss',\n        min_delta=0,\n        patience=0,\n        verbose=0,\n        mode='auto',\n        baseline=None,\n        restore_best_weights=False)\n</code></pre> <p>\u5176\u4e2d\u5404\u4e2a\u53c2\u6570\uff1a</p> <ul> <li>monitor\uff1acallbacks\u76d1\u63a7\u7684\u8bc4\u4ef7\u6307\u6807\u3002</li> <li>min_delta\uff1a\u8ba1\u4f5c\u6307\u6807\u63d0\u5347\u7684\u6700\u5c0f\u5ea6\u91cf\u3002</li> <li>patience\uff1a\u5f53\u8bc4\u4ef7\u6307\u6807\u6ca1\u6709\u63d0\u5347\u65f6\uff0c\u7b49\u5f85\u7684epochs\u6570\u91cf\uff0c\u8d85\u8fc7\u6b64\u6570\u6ca1\u6709\u63d0\u5347\u540e\u8bad\u7ec3\u5c06\u505c\u6b62\u3002</li> <li>verbose\uff1a\u662f\u5426\u6253\u5370\u65e5\u5fd7\u3002</li> <li>mode\uff1a\u8bbe\u5b9a\u76d1\u63a7\u6307\u6807\u7684\u6a21\u5f0f\uff0c\u5982\u76d1\u63a7\u6307\u6807\u662f\u5426\u4e0b\u964d\u3001\u4e0a\u5347\u6216\u8005\u6839\u636e\u6307\u6807\u540d\u5b57\u81ea\u52a8\u63a8\u65ad\u3002</li> <li>baseline\uff1a\u76d1\u63a7\u6307\u6807\u7684\u57fa\u51c6\uff0c\u5f53\u6a21\u578b\u8bad\u7ec3\u7ed3\u679c\u4e0d\u53ca\u6807\u51c6\u7ebf\uff0c\u8bad\u7ec3\u5c06\u505c\u6b62\u3002</li> <li>restore_best_weights\uff1a\u662f\u5426\u4ece\u8bad\u7ec3\u6548\u679c\u6700\u597d\u7684epoch\u6062\u590d\u6a21\u578b\uff0c\u5982\u679c\u8bbe\u7f6e\u6210False\uff0c\u5c06\u4ece\u6700\u540e\u4e00\u4e2astep\u7684\u6a21\u578b\u6743\u91cd\u6062\u590d\u6a21\u578b\u3002</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#22-learningratescheduler","title":"2.2 LearningRateScheduler","text":"<p>\u8fd9\u4e2acallback\u80fd\u5728\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u901a\u5e38\u800c\u8a00\uff0c\u968f\u7740\u8bad\u7ec3\u6b21\u6570\u7684\u53d8\u591a\uff0c\u9002\u5f53\u5730\u964d\u4f4e\u5b66\u4e60\u7387\u6709\u5229\u4e8e\u6a21\u578b\u6536\u655b\u5728\u5168\u5c40\u6700\u4f18\u70b9\uff0c\u56e0\u6b64\u8fd9\u4e2acallback\u9700\u8981\u642d\u914d\u4e00\u4e2a\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u4f7f\u7528\uff0c\u5728\u6bcf\u4e2aepoch\u5f00\u59cb\u65f6\uff0cschedule\u51fd\u6570\u4f1a\u83b7\u53d6\u6700\u65b0\u7684\u5b66\u4e60\u7387\u5e76\u7528\u5728\u5f53\u524d\u7684epoch\u4e2d\uff1a</p> <pre><code>tf.keras.callbacks.LearningRateScheduler(\n    schedule, verbose=0\n)\n\n# \u8c03\u5ea6\u51fd\u6570\u572810\u4e2aepoch\u524d\u8c03\u7528\u521d\u59cb\u5b66\u4e60\u7387\uff0c\u968f\u540e\u5b66\u4e60\u7387\u5448\u6307\u6570\u4e0b\u964d\ndef scheduler(epoch, lr):\n  if epoch &lt; 10:\n    return lr\n  else:\n    return lr * tf.math.exp(-0.1)\n\nmodel = tf.keras.models.Sequential([tf.keras.layers.Dense(10)])\nmodel.compile(tf.keras.optimizers.SGD(), loss='mse')\ncallback = tf.keras.callbacks.LearningRateScheduler(scheduler)\nhistory = model.fit(np.arange(100).reshape(5, 20), np.zeros(5),\n                    epochs=15, callbacks=[callback], verbose=0)\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#23-reducelronplateau","title":"2.3 ReduceLROnPlateau","text":"<p>\u76f8\u6bd4\u4e8eLearningRateScheduler\uff0cReduceLROnPlateau\u4e0d\u662f\u6309\u7167\u9884\u5148\u8bbe\u5b9a\u597d\u7684\u8c03\u5ea6\u8c03\u6574\u5b66\u4e60\u7387\uff0c\u5b83\u4f1a\u5728\u8bc4\u4ef7\u6307\u6807\u505c\u6b62\u63d0\u5347\u65f6\u964d\u4f4e\u5b66\u4e60\u7387\u3002</p> <pre><code>tf.keras.callbacks.ReduceLROnPlateau(\n    monitor='val_loss', factor=0.1, patience=10, verbose=0,\n    mode='auto', min_delta=0.0001, cooldown=0, min_lr=0, **kwargs\n)\n</code></pre> <p>\u5176\u4e2d\u91cd\u8981\u53c2\u6570\uff1a</p> <ul> <li>factor\uff1a\u5b66\u4e60\u7387\u964d\u4f4e\u7684\u7a0b\u5ea6\uff0cnew_lr = lr * factor\u3002</li> <li>cooldown\uff1a\u91cd\u65b0\u76d1\u63a7\u8bc4\u4ef7\u6307\u6807\u524d\u7b49\u5f85\u7684epochs\u3002</li> <li>min_lr\uff1a\u5141\u8bb8\u7684\u5b66\u4e60\u7387\u6700\u5c0f\u503c\u3002</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#24-tensorboard","title":"2.4 TensorBoard","text":"<p>TensorBoard\u80fd\u5f88\u65b9\u4fbf\u5730\u5c55\u793a\u6a21\u578b\u67b6\u6784\u3001\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u8fd9\u4e2acallback\u80fd\u751f\u6210TensorBoard\u7684\u65e5\u5fd7\uff0c\u5f53\u8bad\u7ec3\u7ed3\u675f\u540e\u53ef\u4ee5\u5728TensorBoard\u91cc\u67e5\u770b\u53ef\u89c6\u5316\u7ed3\u679c\u3002</p> <pre><code>tf.keras.callbacks.TensorBoard(\n    log_dir='logs', histogram_freq=0, write_graph=True,\n    write_images=False, write_steps_per_second=False, update_freq='epoch',\n    profile_batch=2, embeddings_freq=0, embeddings_metadata=None, **kwargs\n)\n</code></pre> <p>\u5176\u4e2d\u91cd\u8981\u53c2\u6570\uff1a</p> <ul> <li>log_dir\uff1a\u65e5\u5fd7\u8f93\u51fa\u7684\u8def\u5f84\u3002</li> <li>histogram_freq\uff1a\u8ba1\u7b97\u6fc0\u6d3b\u51fd\u6570\u548c\u6743\u91cd\u76f4\u65b9\u56fe\u7684\u9891\u7387\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u4e0d\u8ba1\u7b97\u76f4\u65b9\u56fe\u3002</li> <li>write_graph\uff1a\u662f\u5426\u5728TensorBoard\u4e2d\u53ef\u89c6\u5316\u56fe\u50cf\u3002</li> <li>update_freq\uff1a\u53d6\u503c\u4e3a<code>batch</code>\u6216<code>epoch</code>\u6216\u6574\u6570\uff0c\u5c06\u5728\u6307\u5b9a\u7684\u8fc7\u7a0b\u7ed3\u675f\u540e\u5c06\u635f\u5931\u548c\u8bc4\u4ef7\u6307\u6807\u5199\u5165TensorBoard\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a\u6574\u6570\uff0c\u5219\u610f\u5473\u7740\u5728\u8bbe\u5b9a\u6570\u91cf\u7684\u6837\u672c\u8bad\u7ec3\u5b8c\u540e\u5c06\u635f\u5931\u548c\u8bc4\u4ef7\u6307\u6807\u5199\u5165TensorBoard\u3002</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#25-csvlogger","title":"2.5 CSVLogger","text":"<p>\u987e\u540d\u601d\u4e49\uff0c\u8fd9\u4e2acallback\u80fd\u5c06\u8bad\u7ec3\u8fc7\u7a0b\u5199\u5165CSV\u6587\u4ef6\u3002</p> <pre><code>tf.keras.callbacks.CSVLogger(\n    filename, separator=',', append=False\n)\n</code></pre> <p>\u5176\u4e2d\u91cd\u8981\u53c2\u6570\uff1a</p> <ul> <li>append\uff1a\u662f\u5426\u63a5\u7740\u73b0\u6709\u6587\u4ef6\u7ee7\u7eed\u5199\u5165\u65e5\u5fd7\u3002</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#26-terminateonnan","title":"2.6 TerminateOnNaN","text":"<p>\u5728\u635f\u5931\u53d8\u4e3aNaN\u65f6\u505c\u6b62\u8bad\u7ec3\u3002</p> <pre><code>tf.keras.callbacks.TerminateOnNaN()\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#27-callback","title":"2.7 \u81ea\u5b9a\u4e49callback","text":"<p>\u9664\u4e86\u4e0a\u8ff0callback\u5916\uff0c\u8fd8\u6709\u4e00\u4e9bcallback\u53ef\u4ee5\u67e5\u8be2TensorFlow\u5b98\u7f51\uff0c\u5728\u4f7f\u7528\u591a\u4e2acallbacks\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5c06\u591a\u4e2acallbacks\u4f20\u5165\u3001\u6216\u8005\u4f7f\u7528tf.keras.callbacks.CallbackList\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49callback\uff0c\u9700\u8981\u7ee7\u627f<code>keras.callbacks.Callback</code>\uff0c\u7136\u540e\u91cd\u5199\u5728\u4e0d\u540c\u8bad\u7ec3\u9636\u6bb5\u7684\u65b9\u6cd5\u3002</p> <pre><code>training_finished = False\n\nclass MyCallback(tf.keras.callbacks.Callback):\n  def on_train_end(self, logs=None):\n    global training_finished\n    training_finished = True\n\nmodel = tf.keras.Sequential([tf.keras.layers.Dense(1, input_shape=(1,))])\nmodel.compile(loss='mean_squared_error')\nmodel.fit(tf.constant([[1.0]]), tf.constant([[1.0]]),\n          callbacks=[MyCallback()])\n\nassert training_finished == True\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#3","title":"3 \u603b\u7ed3","text":"<p>\u672c\u6587\u603b\u7ed3\u4e86\u82e5\u5e72\u5e38\u7528\u7684tf.keras.callbacks\uff0c\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u8bf7\u6309\u9700\u4f7f\u7528\uff0c\u5e76\u4e14\u67e5\u770btf.keras.callbacks\u7684\u5b98\u65b9\u6587\u6863\u786e\u8ba4\u53c2\u6570\u53d6\u503c\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/","title":"\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-04\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#1","title":"1 \u524d\u8a00","text":"<p>tf.keras\u63d0\u4f9b\u4e86\u8bb8\u591a\u65b9\u4fbf\u8c03\u7528\u7684API\u6784\u5efa\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4f46\u6709\u4e9b\u60c5\u51b5\u9700\u8981\u81ea\u5b9a\u4e49\u5c42\u548c\u6a21\u578b\uff0c\u56e0\u6b64\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4eec\u5c06\u7740\u773c\u81ea\u5b9a\u4e49\u6a21\u578b\uff0c\u4f7f\u7528TensorFlow 2.X\u91cc\u7684\u81ea\u5b9a\u4e49\u65b9\u6cd5\u4e3a\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u66f4\u591a\u7075\u6d3b\u6027\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#2","title":"2 \u81ea\u5b9a\u4e49\u5c42","text":"","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#21","title":"2.1 \u521b\u5efa\u6ca1\u6709\u6743\u91cd\u7684\u5c42","text":"<p>\u5f53\u81ea\u5b9a\u4e49\u5c42\u65e0\u9700\u6743\u91cd\u65f6\uff0c\u4f7f\u7528<code>tf.keras.layers.Lambda</code>\u4f1a\u975e\u5e38\u65b9\u4fbf\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>exponential_layer = keras.layers.Lambda(lambda x: tf.exp(x))\n</code></pre> <p>\u7136\u540e\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u5c42\u53ef\u4ee5\u50cf\u5176\u4ed6\u5c42\u4e00\u6837\u5728Sequential API\u548cFunctional API\u4e2d\u4f7f\u7528\u4ee5\u6784\u5efa\u6a21\u578b\u3002\u751a\u81f3\u53ef\u4ee5\u50cf\u8c03\u7528Python\u51fd\u6570\u4e00\u6837\u8c03\u7528\u5b83\uff1a</p> <pre><code>print(exponential_layer(2.0).numpy())\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>7.389056\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#22","title":"2.2 \u521b\u5efa\u5177\u6709\u6743\u91cd\u7684\u5c42","text":"<p>\u5982\u9700\u521b\u5efa\u5177\u6709\u6743\u91cd\u7684\u5c42\uff0c\u901a\u5e38\u662f\u7ee7\u627f<code>tf.keras.layers.Layer</code>\u7c7b\uff0c\u5e76\u91cd\u5199<code>__init__</code>\u3001<code>build</code>\u548c<code>call</code>\u4e09\u4e2a\u65b9\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>class Linear(keras.layers.Layer):\n    def __init__(self, units=32):\n        super(Linear, self).__init__()\n        self.units = units\n\n    def build(self, input_shape):\n        self.w = self.add_weight(\n            shape=(input_shape[-1], self.units),\n            initializer=\"random_normal\",\n            trainable=True,\n        )\n        self.b = self.add_weight(\n            shape=(self.units,), initializer=\"random_normal\", trainable=True\n        )\n\n    def call(self, inputs):\n        return tf.matmul(inputs, self.w) + self.b\n</code></pre> <p>\u81ea\u5b9a\u4e49\u7684\u5c42\u53ef\u4ee5\u50cftf.keras\u5185\u7f6e\u7684\u5c42\u4e00\u6837\u88ab\u8c03\u7528\uff1a</p> <pre><code>input_ = Input((1,))\noutput = Linear(units=1)(input_)\nmodel = Model(input_, output)\nmodel.compile(optimizer='Adam', loss=\"mse\")\nmodel.summary()\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>Model: \"model_1\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_2 (InputLayer)         [(None, 1)]               0         \n_________________________________________________________________\nlinear_1 (Linear)            (None, 1)                 2         \n=================================================================\nTotal params: 2\nTrainable params: 2\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u8981\u5c06\u81ea\u5b9a\u4e49\u5c42\u4f5c\u4e3aFunctional API\u6a21\u578b\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u9700\u5b9e\u73b0get_config()\u65b9\u6cd5\uff0c\u57fa\u7840Layer\u7c7b\u7684__init__()\u65b9\u6cd5\u4f1a\u63a5\u53d7\u4e00\u4e9b\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5c24\u5176\u662fname\u548cdtype\u3002\u6700\u597d\u5c06\u8fd9\u4e9b\u53c2\u6570\u4f20\u9012\u7ed9__init__()\u4e2d\u7684\u7236\u7c7b\uff0c\u5e76\u5c06\u5176\u5305\u542b\u5728\u5c42\u914d\u7f6e\u4e2d\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>class Linear(keras.layers.Layer):\n    def __init__(self, units=32, **kwargs):\n        super(Linear, self).__init__(**kwargs)\n        self.units = units\n\n    def build(self, input_shape):\n        self.w = self.add_weight(\n            shape=(input_shape[-1], self.units),\n            initializer=\"random_normal\",\n            trainable=True,\n        )\n        self.b = self.add_weight(\n            shape=(self.units,), initializer=\"random_normal\", trainable=True\n        )\n\n    def call(self, inputs):\n        return tf.matmul(inputs, self.w) + self.b\n\n    def get_config(self):\n        config = super(Linear, self).get_config()\n        config.update({\"units\": self.units})\n        return config\n</code></pre> <p>\u5982\u679c\u5728\u8bad\u7ec3\u548c\u63a8\u7406\u9636\u6bb5\uff0c\u81ea\u5b9a\u4e49\u5c42\u7684\u884c\u4e3a\u4e0d\u540c\uff0c\u6bd4\u5982Dropout\u6216\u8005BatchNormalization\u5c42\uff0c\u5219\u9700\u8981\u5728call\u51fd\u6570\u91cc\u52a0\u5165<code>training</code>\u53c2\u6570\u6765\u533a\u5206\u6a21\u578b\u4e0d\u540c\u8fd0\u884c\u72b6\u6001\u4e0b\u7684\u884c\u4e3a\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>class CustomDropout(keras.layers.Layer):\n    def __init__(self, rate, **kwargs):\n        super(CustomDropout, self).__init__(**kwargs)\n        self.rate = rate\n\n    def call(self, inputs, training=None):\n        if training:\n            return tf.nn.dropout(inputs, rate=self.rate)\n        return inputs\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#23-lossmetrics","title":"2.3 \u81ea\u5b9a\u4e49loss\u548cmetrics","text":"<p>\u81ea\u5b9a\u4e49loss\u65f6\uff0c\u4f7f\u7528\u6807\u7b7e\u548c\u9884\u6d4b\u503c\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u7528TensorFlow\u7684\u7b97\u5b50\u8ba1\u7b97\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u635f\u5931\u3002</p> <pre><code>def huber_fn(y_true,y_pred):\n  error=y_true-y_pred\n  is_small_error=tf.abs(error)&lt;1\n  squared_loss=tf.square(error)/2\n  linear_loss=tf.abs(error)-0.5\n\nreturn tf.where(is_small_error,squared_loss,linear_loss)\n</code></pre> <p>\u81ea\u5b9a\u4e49\u8bc4\u4f30\u6307\u6807\u65f6\uff0c\u53ef\u4ee5\u7ee7\u627f<code>tf.keras.metrics.Metric</code>\u7c7b\uff0c\u5e76\u91cd\u5199<code>__init__</code>\u3001<code>update_state</code>\u548c<code>result</code>\u4e09\u4e2a\u65b9\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>class SparseCategoricalAccuracy(tf.keras.metrics.Metric):\n    def __init__(self):\n        super().__init__()\n        self.total = self.add_weight(name='total', dtype=tf.int32, initializer=tf.zeros_initializer())\n        self.count = self.add_weight(name='count', dtype=tf.int32, initializer=tf.zeros_initializer())\n\n    def update_state(self, y_true, y_pred, sample_weight=None):\n        values = tf.cast(tf.equal(y_true, tf.argmax(y_pred, axis=-1, output_type=tf.int32)), tf.int32)\n        self.total.assign_add(tf.shape(y_true)[0])\n        self.count.assign_add(tf.reduce_sum(values))\n\n    def result(self):\n        return self.count / self.total\n</code></pre> <p>update_state()\u65b9\u6cd5\u5728\u8c03\u7528\u81ea\u5b9a\u4e49\u8bc4\u4ef7\u6307\u6807\u7c7b\u7684\u5b9e\u4f8b\u65f6\u8d77\u4f5c\u7528\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u6279\u6b21\u5b9e\u4f8b\u4e2d\u6807\u7b7e\u3001\u9884\u6d4b\u503c\u548c\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u53c2\u6570\u6765\u66f4\u65b0\u5b9a\u4e49\u7684\u53d8\u91cf\u3002result()\u65b9\u6cd5\u5219\u8ba1\u7b97\u5e76\u8fd4\u56de\u6700\u7ec8\u7684\u7ed3\u679c\uff0c\u5b83\u4f1a\u5728update_state()\u65b9\u6cd5\u4e4b\u540e\u6267\u884c\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#3","title":"3 \u603b\u7ed3","text":"<p>\u4e0a\u8ff0\u4f8b\u5b50\u4ecb\u7ecd\u4e86\u5982\u4f55\u81ea\u5b9a\u4e49keras\u6a21\u578b\uff0c\u80fd\u591f\u4e3a\u65e5\u5e38\u7684\u5de5\u4f5c\u6d41\u66f4\u6dfb\u7075\u6d3b\u6027\uff0c\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u8fd8\u9700\u53cd\u590d\u63a8\u6572\uff0c\u786e\u4fdd\u6b63\u786e\u65e0\u8bef\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/","title":"\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-10-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea61\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#1","title":"1 \u524d\u8a00","text":"<p>M1 Mac mini \u4f7f\u7528\u534a\u5e74\u4f53\u9a8c - Mac\u7684\u65b0\u672a\u6765\u8fd9\u7bc7\u6587\u7ae0\u63d0\u5230\u4e86Apple Silicon Mac\u7684\u51fa\u8272\u8868\u73b0\uff0c\u4f46\u517c\u5bb9\u6027\u95ee\u9898\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u800c\u8a00\u4ecd\u7136\u4e0d\u5bb9\u5ffd\u89c6\uff0c\u5176\u4e2d\uff0c\u5b89\u88c5TensorFlow\u5c31\u4e0d\u50cf\u5728Intel Macs\u4e0a\u7528\u4e00\u53e5<code>pip install tensorflow</code>\u8fd9\u4e48\u7b80\u5355\u3002\u4f46\u4f17\u591a\u5f00\u53d1\u8005\u548cApple\u81ea\u5df1\u90fd\u5728\u4e3aApple Silicon Macs\u7684\u4f18\u5316\u5de5\u4f5c\u4e0d\u65ad\u52aa\u529b\uff0c\u73b0\u5728\u5b89\u88c5TensorFlow\u5df2\u7ecf\u5bb9\u6613\u5f88\u591a\u4e86\u3002\u8fd9\u7bc7\u6587\u7ae0\u4f1a\u5206\u4eab\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow\u7684\u63a8\u8350\u65b9\u6cd5\uff0c\u5efa\u8bae\u6536\u85cf\uff0c\u4ee5\u540e\u6362\u673a\u4f7f\u7528\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#2","title":"2 \u786e\u8ba4\u673a\u5668\u7c7b\u578b","text":"<p>\u672c\u6559\u7a0b\u9002\u7528\u4e8eApple Silicon Macs\uff0c\u786e\u8ba4\u673a\u5668\u7c7b\u578b\uff0c\u53ef\u5728\u9876\u90e8\u5bfc\u822a\u680f\u5de6\u4e0a\u89d2\u7684\u82f9\u679clogo\u91cc\u627e\u5230\u5173\u4e8e\u672c\u673a\uff08About This  Mac\uff09\uff0c\u52a1\u5fc5\u8ba4\u51c6Apple Silicon\u3002</p> \u8bf7\u8ba4\u51c6Apple Silicon Macs","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#3-tensorflow","title":"3 \u5b89\u88c5TensorFlow","text":"","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#31-conda","title":"3.1 \u5b89\u88c5Conda","text":"<p>\u9996\u5148\u4e0b\u8f7dConda\uff1ahttps://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh</p> <p>\u4e0b\u8f7d\u597d\u7684\u6587\u4ef6\u9ed8\u8ba4\u4f1a\u51fa\u73b0\u5728\u4e0b\u8f7d\u6587\u4ef6\u5939\uff08~/Downloads/\uff09\uff0c\u6253\u5f00\u7ec8\u7aef\uff08Terminal\uff09\u8fd0\u884c\u4e0b\u5217\u547d\u4ee4\uff1a</p> Mac\u7684\u7ec8\u7aef\uff08Terminal\uff09 <pre><code>chmod +x ~/Downloads/Miniforge3-MacOSX-arm64.sh\nsh ~/Downloads/Miniforge3-MacOSX-arm64.sh\n</code></pre> <p>\u6309\u7167\u63d0\u793a\u8fdb\u884c\u5b89\u88c5\uff0c\u7136\u540e\u6fc0\u6d3bConda\u73af\u5883\uff1a</p> <pre><code>source ~/miniforge3/bin/activate\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#32-tensorflow","title":"3.2 \u5b89\u88c5TensorFlow\u4f9d\u8d56","text":"<p>\u6fc0\u6d3bConda\u73af\u5883\u540e\u53ef\u4ee5\u5b89\u88c5TensorFlow\u6240\u9700\u7684\u4f9d\u8d56\uff0c\u547d\u4ee4\u5982\u4e0b</p> <pre><code>conda install -c apple tensorflow-deps\n</code></pre> <p>\u5f53\u5b89\u88c5\u65b0\u7248\u672c\u7684TensorFlow\u65f6\uff0cApple\u5efa\u8bae\u5148\u505a\u5982\u4e0b\u5de5\u4f5c\uff1a</p> <pre><code># \u5378\u8f7d\u73b0\u6709\u7684 tensorflow-macos \u548c tensorflow-metal\npython -m pip uninstall tensorflow-macos\npython -m pip uninstall tensorflow-metal\n# \u5347\u7ea7 tensorflow-deps\nconda install -c apple tensorflow-deps --force-reinstall\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#33-tensorflow","title":"3.3 \u5b89\u88c5TensorFlow","text":"<p>\u7ee7\u7eed\u5728\u7ec8\u7aef\uff08Terminal\uff09\u8fd0\u884c\u4e0b\u5217\u547d\u4ee4\uff1a</p> <pre><code>python -m pip install tensorflow-macos\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#4-tensorflow","title":"4 \u4f7f\u7528TensorFlow","text":"<p>\u53ef\u4ee5\u9996\u5148\u5b89\u88c5Jupyter Notebook\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>conda install notebook -y\n</code></pre> <p>\u7136\u540e\u542f\u52a8Jupyter Notebook\u6d4b\u8bd5TensorFlow\u662f\u5426\u5df2\u7ecf\u6210\u529f\u5b89\u88c5\uff0c\u8fd0\u884c\u547d\u4ee4\uff1a</p> <pre><code>jupyter notebook\n</code></pre> <p>\u65b0\u5efa\u4e00\u4e2a\u7b14\u8bb0\u672c\u7136\u540e\u5bfc\u5165TensorFlow\u8fdb\u884c\u68c0\u67e5\uff1a</p> TensorFlow on Apple Silicon Macs","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#5","title":"5 \u603b\u7ed3","text":"<p>\u4ee5\u4e0a\u6559\u7a0b\u4eb2\u6d4b\u6709\u6548\uff0c\u5b89\u88c5\u8fc7\u7a0b\u5341\u5206\u65b9\u4fbf\uff0c\u6362\u7535\u8111\u662f\u4e0d\u662f\u53c8\u591a\u4e86\u4e00\u4e2a\u7406\u7531\uff01\u636e\u8bf4\u65b0\u7684Apple Silicon Mac\u5c06\u57282021\u5e7411\u6708\u524d\u4e0e\u5927\u5bb6\u89c1\u9762\uff0c\u8ba9\u6211\u4eec\u4e00\u8d77\u51b2\u5427\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/","title":"\u7b97\u6cd5\u4e2d\u7684multi\u5bb6\u65cf","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-10-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u6709\u4e00\u4e9bmulti-X\u7684\u4efb\u52a1\uff0c\u5982multi-class(\u591a\u5206\u7c7b)\uff0cmulti-label(\u591a\u6807\u7b7e)\uff0cmulti-task(\u591a\u4efb\u52a1)\u7b49\u4efb\u52a1\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5c31\u6765\u4e00\u8d77\u7814\u7a76\u4e0bmulti\u5bb6\u65cf\u3002</p>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/#2-multi-class","title":"2 multi-class\u4efb\u52a1","text":"<p>\u591a\u5206\u7c7b\u4efb\u52a1\u662f\u6307\u6bcf\u6761\u6570\u636e\u6709\u4e00\u4e2a\u6807\u7b7e\uff0c\u4f46\u6807\u7b7e\u6709\u591a\u4e2a\u7c7b\u522b(\u5927\u4e8e2)\u3002\u591a\u5206\u7c7b\u4efb\u52a1\u4e0e\u5e38\u89c1\u7684\u4e8c\u5206\u7c7b\u4efb\u52a1\u76f8\u6bd4\uff0c\u533a\u522b\u4e0d\u5927\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u65f6\uff0c\u635f\u5931\u51fd\u6570\u7531\u4e8c\u5206\u7c7b\u95ee\u9898\u4e2d\u7ecf\u8fc7sigmoid\u51fd\u6570\u540e\uff0c\u8ba1\u7b97\u7684\u4e8c\u5143\u4ea4\u53c9\u71b5\u8f6c\u53d8\u4e3a\u7ecf\u8fc7softmax\u51fd\u6570\u540e\uff0c\u8ba1\u7b97\u7684\u591a\u5143\u4ea4\u53c9\u71b5\u3002</p> \\[ J=-\\sum_{i=1}^{K} y_{i} \\log \\left(p_{i}\\right) \\] <p>\u591a\u5206\u7c7b\u4efb\u52a1\u7684\u8bc4\u4ef7\u6307\u6807\u4e5f\u6709\u6240\u4e0d\u540c\u3002\u5e38\u89c1\u4e8c\u5206\u7c7b\u95ee\u9898\u7684\u8bc4\u4ef7\u6307\u6807\u6709\uff1a\u51c6\u786e\u7387(Precision)\u3001\u53ec\u56de\u7387(Recall)\u548cF1\u503c(F1-score)\u3002\u8fd9\u4e9b\u90fd\u662f\u5efa\u7acb\u5728\u4e8c\u5206\u7c7b\u7684\u6df7\u6dc6\u77e9\u9635(2\u7ef4)\u7684\u57fa\u7840\u4e0a\u3002 \u5bf9\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\uff0c\u8fd9\u4e09\u4e2a\u8bc4\u4ef7\u6307\u6807\u53c8\u5206\u522b\u5b58\u5728micro\u548cmacro\u4e24\u7c7b\u3002\u5982\u5728sklearn.metrics.f1_score\u4e2daverage\u6709\u4ee5\u4e0b\u51e0\u79cd\u53c2\u6570\uff1a{'micro', 'macro', 'samples','weighted', 'binary'} or None\u3002 \u5bf9\u4e8emacro\uff0c\u6211\u4eec\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u7c7b\u522b\u7684\u51c6\u786e\u7387\u3001\u53ec\u56de\u7387\u548cF1\u503c\uff0c\u7136\u540e\u53d6\u5e73\u5747\u5f97\u5230\u6700\u7ec8\u7684\u8bc4\u4ef7\u6307\u6807\u3002\u8003\u8651\u5230\u7c7b\u522b\u4e0d\u5e73\u8861\uff0c\u6211\u4eec\u53ef\u4ee5\u7b97\u5e73\u5747\u65f6\u52a0\u4e0a\u6743\u91cd(weighted)\u3002 \u5bf9\u4e8emicro\uff0c\u6211\u4eec\u8ba1\u7b97\u603b\u4f53\u7684\u6df7\u6dc6\u77e9\u9635\u7136\u540e\u8ba1\u7b97\u6700\u7ec8\u7684\u8bc4\u4ef7\u6307\u6807\u3002</p>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/#3-multi-label","title":"3 multi-label\u4efb\u52a1","text":"<p>\u591a\u6807\u7b7e\u4efb\u52a1\u662f\u6307\u6bcf\u6761\u6570\u636e\u6709\u591a\u4e2a\u6807\u7b7e\u3002\u4f8b\u5982\uff0c\u9884\u6d4b\u4e00\u4f4d\u75c5\u4eba\u662f\u5426\u60a3\u6709\u591a\u79cd\u75be\u75c5\u3002 \u6700\u7b80\u5355\u7684\u5904\u7406\u65b9\u5f0f\u662f\u628a\u5b83\u5f53\u505a\u591a\u4e2a\u4e8c\u5206\u7c7b\u4efb\u52a1\u6765\u5904\u7406\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u65e2\u8d39\u65f6\u8d39\u529b\uff0c\u540c\u65f6\u591a\u4e2a\u6807\u7b7e\u4e4b\u95f4\u5f80\u5f80\u4f1a\u5b58\u5728\u76f8\u5173\u5173\u7cfb\u3002 \u5e38\u89c1\u7684\u505a\u6cd5\u662f\u4ecd\u7136\u5728\u540c\u4e00\u4e2a\u6a21\u578b\u4e2d\u8fdb\u884c\u8bad\u7ec3(\u4e00\u4e2aloss)\u3002\u5904\u7406\u65b9\u5f0f\u662f\u5bf9\u6700\u540e\u5206\u7c7b\u5c42(n\u4e2a\u7ed3\u70b9\u8868\u793an\u4e2a\u6807\u7b7e)\u7684\u8f93\u51fa\u4f5c\u7528sigmoid\u51fd\u6570\uff0c\u7136\u540e\u5206\u522b\u8ba1\u7b97\u4e8c\u5143\u4ea4\u53c9\u71b5\u5e76\u53d6\u5e73\u5747\u3002\u66f4\u9ad8\u7ea7\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u5e8f\u5217\u6a21\u578b\u6216\u56fe\u6a21\u578b\uff0c\u5b83\u4eec\u7684\u597d\u5904\u662f\u53ef\u4ee5\u8003\u8651\u5230\u4e0d\u540c\u6807\u7b7e\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</p>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/#4-multi-task","title":"4 multi-task\u4efb\u52a1","text":"<p>\u591a\u4efb\u52a1\u5b66\u4e60\u662f\u6307\u540c\u65f6\u5b66\u4e60\u591a\u4e2a\u4efb\u52a1(\u6709\u591a\u4e2aloss)\uff0c\u5982\u9884\u6d4b\u7528\u6237\u662f\u5426\u70b9\u51fb\u548c\u662f\u5426\u8f6c\u53d1\u3002\u4e00\u822c\u6765\u8bf4\u591a\u4e2a\u4efb\u52a1\u662f\u540c\u6b65\u5b66\u4e60\u7684\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u91c7\u7528\u5f02\u6b65\u7684\u6a21\u5f0f(\u66f4\u50cf\u662f\u9884\u8bad\u7ec3\uff0c\u5728\u4efb\u52a1A\u7684\u57fa\u7840\u4e0a\u7528\u4efb\u52a1B\u505a\u5fae\u8c03)\u3002  </p> <p>\u5e38\u89c1\u7684\u591a\u4efb\u52a1\u5b66\u4e60\u7684\u6a21\u578b\u7ed3\u6784\u5982\u56fe(a)\u6240\u793a\uff0c\u5e95\u5c42\u53c2\u6570\u5b8c\u5168\u5171\u4eab\uff0c\u9876\u5c42\u53c2\u6570\u968f\u4e0d\u540c\u4efb\u52a1\u800c\u4e0d\u540c\u3002\u8fd9\u79cd\u65b9\u5f0f\u8981\u6c42\u4e0d\u540c\u4efb\u52a1\u7684\u8f93\u5165\u53d8\u91cf\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u4e00\u70b9\u5f80\u5f80\u662f\u5f88\u96be\u505a\u5230\u7684(\u4e0d\u540c\u4efb\u52a1\u6709\u5404\u81ea\u72ec\u6709\u7684\u7279\u5f81)\u3002\u56e0\u6b64\u5982\u00a9\u6240\u793a\u7684MMOE(Multi-gate Mixture-of-Experts)\u7684\u7ed3\u6784\u51fa\u73b0\u4e86\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u6709\u5171\u4eab\u4e5f\u6709\u72ec\u6709\u7684\u90e8\u5206\uff0c\u5b83\u4eec\u7684\u6743\u91cd\u7531gate\u901a\u8fc7\u5b66\u4e60\u6765\u51b3\u5b9a\u3002 \u591a\u4efb\u52a1\u5b66\u4e60\u7684\u597d\u5904\u53ef\u80fd\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a  </p> <ul> <li>\u7f13\u89e3\u51b7\u542f\u52a8\u95ee\u9898\uff0c\u5982\u65b0\u4efb\u52a1\u6570\u636e\u91cf\u8f83\u5c0f\u3002</li> <li>\u63d0\u9ad8\u6a21\u578b\u7684\u9c81\u68d2\u6027\u3002\u4e0d\u540c\u7684\u4efb\u52a1\u5f80\u5f80\u6709\u4e0d\u540c\u7684\u566a\u58f0\u3002</li> </ul>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-10-10-multi-algo/#5","title":"5 \u603b\u7ed3","text":"<p>\u672c\u6587\u603b\u7ed3\u4e86\u5728\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u5e38\u51fa\u73b0\u7684multi\u5bb6\u65cf\u3002\u7406\u6e05\u5b83\u4eec\u7684\u6982\u5ff5\u6709\u5229\u4e8e\u8eab\u5fc3\u5065\u5eb7\uff0c\u66f4\u80fd\u8ba9\u4f60\u7075\u6d3b\u5730\u4f7f\u7528\u4e0d\u540c\u4efb\u52a1\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u3002</p>","tags":["deep learning"]},{"location":"Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/","title":"\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e 2021-11-07\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea6 6 \u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#1","title":"1 \u524d\u8a00","text":"<p>ResNet \u662f\u4e00\u79cd\u7ecf\u5178\u7684\u56fe\u50cf\u8bc6\u522b\u9886\u57df\u6a21\u578b\uff0c\u5728 2015 \u5e74\u56fe\u50cf\u8bc6\u522b\u9886\u57df\u591a\u4e2a\u7ade\u8d5b\u4e2d\u6392\u884c\u7b2c\u4e00\uff0c\u5e76\u4e14\u6027\u80fd\u4e0a\u76f8\u8f83\u7b2c\u4e8c\u6709\u5927\u5e45\u63d0\u5347\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4eec\u5c31\u7ad9\u5728\u5de8\u4eba\u4eec\u7684\u80a9\u8180\u4e0a\uff0c\u642d\u5efa\u4e00\u4e2a\u57fa\u4e8e ResNet \u8bc6\u522b\u82b1\u5349\u56fe\u7247\uff08Oxford 102 Flowers\uff09\u7684\u795e\u7ecf\u7f51\u7edc\u5427\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#2-resnet","title":"2 ResNet \u7b80\u4ecb","text":"<p>\u5728 ResNet \u4ee5\u524d\uff0c\u7531\u4e8e\u5b58\u5728\u68af\u5ea6\u6d88\u5931\u548c\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898\uff0c\u795e\u7ecf\u7f51\u8def\u5c42\u6570\u8d8a\u6df1\uff0c\u7f51\u7edc\u8d8a\u96be\u4ee5\u8bad\u7ec3\uff0c\u5bfc\u81f4\u6df1\u5c42\u7f51\u7edc\u7684\u51c6\u786e\u5ea6\u51fa\u73b0\u4e0b\u964d\u3002</p> <p>ResNet \u901a\u8fc7\u5f15\u5165\u6b8b\u5dee\u5757\uff08Residual block\uff09\uff0c\u5c06 a[l]\u6dfb\u52a0\u5230\u7b2c\u4e8c\u4e2a ReLU \u8fc7\u7a0b\u4e2d\uff0c\u76f4\u63a5\u5efa\u7acb a[l]\u4e0e a[l+2]\u4e4b\u95f4\u7684\u9694\u5c42\u8054\u7cfb\u3002\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a</p> \\[ \\begin{gathered} z^{[l+1]}=W^{[l+1]} a^{[l]}+b^{[l+1]} \\\\ a^{[l+1]}=g\\left(z^{[l+1]}\\right) \\\\ z^{[l+2]}=W^{[l+2]} a^{[l+1]}+b^{[l+2]} \\\\ a^{[l+2]}=g\\left(z^{[l+2]}+a^{[l]}\\right) \\end{gathered} \\] <p>\u8bba\u6587\u4f5c\u8005\u63a8\u6d4b\u6a21\u578b\u5bf9\u6b8b\u5dee\u7684\u62df\u5408\u4f18\u5316\u4f1a\u6bd4\u5bf9\u968f\u673a\u6743\u91cd\u7684\u62df\u5408\u66f4\u52a0\u5bb9\u6613\uff08\u56e0\u4e3abaseline\u5c31\u662f\u6052\u7b49\u6620\u5c04\uff09\uff0c\u6240\u4ee5\u5728\u6781\u7aef\u72b6\u51b5\u4e0b\uff0c\u6b8b\u5dee\u5757\u7684\u4e2d\u95f4\u5c42\u6ca1\u6709\u6fc0\u6d3b\uff0c\u5373W\u22480\uff0cb\u22480\uff0c\u5219\u6709\uff1a</p> \\[ \\begin{aligned} a^{[l+2]} &amp;=g\\left(z^{[l+2]}+a^{[l]}\\right) \\\\ &amp;=g\\left(W^{[l+2]} a^{[l+1]}+b^{[l+2]}+a^{[l]}\\right) \\\\ &amp;=g\\left(a^{[l]}\\right) \\\\ &amp;=\\operatorname{ReLU}\\left(a^{[l]}\\right) \\\\ &amp;=a^{[l]} \\end{aligned} \\] \u6b8b\u5dee\u5757\u793a\u4f8b <p>\u6240\u4ee5\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u4fdd\u8bc1\u4e86\u6df1\u5c42\u7684\u7f51\u7edc\u6bd4\u6d45\u5c42\u5305\u542b\u4e86\u66f4\u591a\uff08\u81f3\u5c11\u6052\u7b49\uff09\u7684\u56fe\u50cf\u4fe1\u606f\u3002\u591a\u4e2a\u6b8b\u5dee\u5757\u63a8\u6324\u5728\u4e00\u8d77\uff0c\u4fbf\u5f62\u6210\u4e86\u4e00\u4e2a\u6b8b\u5dee\u7f51\u7edc\u3002</p> \u6b8b\u5dee\u7f51\u7edc\u548c\u666e\u901a\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u5bf9\u6bd4","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#3-resnet","title":"3 \u7528 ResNet \u6784\u9020\u5206\u7c7b\u6a21\u578b","text":"<p>\u5728\u4e0b\u5217 demo \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 keras \u5df2\u6709\u7684 ResNet50\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5bf9 Oxford 102 Flowers \u6570\u636e\u96c6\u4e2d\u7684 10 \u79cd\u82b1\u5349\u56fe\u7247\u8fdb\u884c\u591a\u5206\u7c7b\u4efb\u52a1\u6a21\u578b\u7684\u6784\u9020\u3002\u5728\u5de5\u7a0b\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539 ResNet50 \u9876\u90e8\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u5bf9\u8f93\u5165\u7684\u56fe\u7247\u6570\u636e\u8fdb\u884c\u88c1\u526a\uff0c\u65cb\u8f6c\uff0c\u653e\u5927\u7b49\u6570\u636e\u589e\u5f3a\uff0c\u8bad\u7ec3\u6240\u6709\u6a21\u578b\u53c2\u6570\u5373\u53ef\u3002\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import os\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.models import Model, load_model\nfrom keras.applications import ResNet50\nfrom keras.optimizers import Adam\nfrom keras.layers import Flatten, Dense, Dropout, Input\nfrom keras.callbacks import EarlyStopping, ModelCheckpoint\nimport numpy as np\nimport math\n\ndef fc_block(X,units,dropout,stage):\n    fc_name = 'fc' + str(stage)\n    X = Dense(units,activation ='elu',name = fc_name)(X)\n    X = Dropout(dropout)(X)\n    return X\n\ndef ResNet50_transfer():\n\n    #call base_model\n    base_model = ResNet50(\n        include_top=False,\n        weights=\"imagenet\",\n        input_tensor= Input(shape=img_size + (3,))\n    )\n\n    # freeze resnet layers' params\n    for layer in base_model.layers:\n        layer.trainable = False\n\n    # top architecture\n    X = base_model.output\n    X = Flatten()(X)\n    X = Dropout(0.4)(X)\n    X = fc_block(X,fc_layer_units[0],dropout = 0.4,stage = 1)\n    X = fc_block(X,fc_layer_units[1],dropout = 0.4,stage = 2)\n\n    # output layer\n    X = Dense(len(classes),activation='softmax',name = 'fc3_output')(X)\n\n    # create model\n    model = Model(inputs = base_model.input,outputs = X, name = 'ResNet50_transfer')\n\n    return model\n\ndef generate_data(train_path,valid_path):\n    # generate &amp; augment training data\n    train_datagen = ImageDataGenerator(rotation_range=30., shear_range=0.2, zoom_range=0.2, horizontal_flip=True)\n    train_datagen.mean = np.array([123.675, 116.28 , 103.53], dtype=np.float32).reshape((3, 1, 1))\n    train_data = train_datagen.flow_from_directory(train_path, target_size=img_size, classes=None)\n    # generate training data\n    valid_datagen = ImageDataGenerator()\n    valid_datagen.mean = np.array([123.675, 116.28 , 103.53], dtype=np.float32).reshape((3, 1, 1))\n    valid_data = train_datagen.flow_from_directory(valid_path, target_size=img_size, classes=None)\n    return train_data, valid_data\n\ndef call_back():\n    early_stopping = EarlyStopping(verbose=1, patience=10, monitor='val_loss')\n    model_checkpoint = ModelCheckpoint(filepath='102flowersmodel.h5', verbose=1, save_best_only=True, monitor='val_loss')\n    callbacks = [early_stopping, model_checkpoint]\n    return callbacks\n\n# path_to_img: 'dataset/flower_data_10/train/1//image_06734.jpg'\ntrain_path = 'dataset/flower_data_10/train'\nvalid_path = 'dataset/flower_data_10/valid'\n\nnb_epoch = 20\nbatch_size = 32\nimg_size = (224,224)\n\n# output classes\nclasses = list(map(str,[1,2,3,4,5,6,7,8,9,10]))\nrgb_mean = [123.68, 116.779, 103.939]\nfc_layer_units = [512,64]\n\nmodel = ResNet50_transfer()\nmodel.compile(loss='categorical_crossentropy', optimizer=Adam(lr=1e-5), metrics=['accuracy'])\ntrain_data, valid_data = generate_data(train_path,valid_path)\ncallbacks = call_back()\nmodel.fit_generator(train_data, steps_per_epoch= math.ceil(train_data.samples / batch_size), epochs=nb_epoch,\n                    validation_data=valid_data, validation_steps=math.ceil(valid_data.samples / batch_size),\n                    callbacks=callbacks)\n</code></pre> <p>\u7ecf\u8fc7 20 \u4e2a epoch \u7684\u8bad\u7ec3\u540e\uff0c\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6\u5df2\u7ecf\u8fbe\u5230\u4e86 0.8837\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u672c\u6587\u7ae0\u7b80\u5355\u5730\u4ecb\u7ecd\u4e86 ResNet \u7684\u7279\u70b9\uff0c\u4ee5\u53ca\u63d0\u4f9b\u4e86\u642d\u5efa\u56fe\u7247\u5206\u7c7b\u6a21\u578b\u7684\u4ee3\u7801\u6a21\u677f\u3002\u663e\u5361\u914d\u7f6e\u8f83\u9ad8\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u642d\u5efa\u4e0d\u540c\u89c4\u6a21\u7684 ResNet \u7f51\u7edc\u89c2\u5bdf\u7f51\u7edc\u6df1\u5ea6\u5bf9\u6a21\u578b\u6027\u80fd\u7684\u5f71\u54cd\uff1b\u5bf9\u4e8e\u56fe\u50cf\u8bc6\u522b\u6a21\u578b\u611f\u5174\u8da3\u7684\u540c\u5b66\u63a8\u8350\u7ec6\u8bfb ResNet \u8bba\u6587: Deep Residual Learning for Image Recognition\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/","title":"\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-12-01\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u5de5\u4f5c\u4e2d\uff0c\u9700\u8981\u4f7f\u7528TensorFlow\u6765\u6784\u5efa\u6a21\u578b(\u7531\u4e8e\u4e0d\u65ad\u5185\u5377\uff0c\u9700\u8981\u6a21\u578b\u53c8Fancy\u6548\u679c\u53c8\u597d)\u3002\u78b0\u5230\u95ee\u9898\uff0c\u641c\u7d22\u4ed6\u4eba\u7684\u56de\u7b54\u6216\u662fTensorFlow\u7684\u5b98\u65b9\u6587\u6863\u662f\u89e3\u51b3\u95ee\u9898\u7684\u9ad8\u6548\u65b9\u6cd5\u3002\u4f46\u662f\u9762\u5411\u641c\u7d22\u5f15\u64ce\u7f16\u7a0b\uff0c\u4e0d\u514d\u89c9\u5f97\u83b7\u53d6\u7684\u77e5\u8bc6\u6709\u70b9\u7834\u788e\u3002  </p> <p>\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u8f83\u4e3a\u5b8c\u6574\u7684TensorFlow\u7684\u77e5\u8bc6\u4f53\u7cfb\uff0c\u800c\u53c8\u4e0d\u4e00\u4e0a\u6765\u5c31\u9677\u5165\u5b98\u65b9\u6587\u6863\u96be\u4ee5\u81ea\u62d4\uff0c\u4f5c\u8005\u627e\u5230\u4e86\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b\u8fd9\u4e00\u5173\u4e8eTensorFlow\u7684\u5f00\u6e90\u5de5\u5177\u4e66\u3002  </p> <p>\u8fd9\u4e00\u9879\u76ee\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u6587\u6863\uff0c\u8fd8\u63d0\u4f9b\u4e86\u73af\u5883\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u793a\u4f8b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6709\u4e00\u5b9a\u57fa\u7840\u7684\u8bfb\u8005\u4e5f\u5e76\u4e0d\u9700\u898130\u5929\u5c31\u80fd\u5b8c\u6210\u9605\u8bfb\u3002\u6709\u4e00\u5b9a\u57fa\u7840\uff0c\u60f3\u5feb\u901f\u6784\u5efaTensorFlow\u77e5\u8bc6\u4f53\u7cfb\u7684\u8bfb\u8005\u4e0d\u59a8\u5403\u4e0b\u8fd9\u9897\u5b89\u5229\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#2","title":"2 \u5efa\u6a21\u6d41\u7a0b","text":"<p>\u672c\u4e66\u9996\u5148\u7ed9\u51fa\u4e86\u5e38\u89c1\u4efb\u52a1\u5e94\u7528TensorFlow\u7684\u5efa\u6a21\u6d41\u7a0b\uff0c\u5305\u62ec\u7ed3\u6784\u5316\u6570\u636e\u3001\u56fe\u7247\u3001\u6587\u672c\u3001\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002\u5177\u4f53\u7684\u6280\u672f\u7ec6\u8282\u53ef\u4ee5\u5148\u4e0d\u505a\u7406\u4f1a\uff0c\u5982LSTM\u3001CNN\u7b49\uff0c\u8fd9\u4e00\u90e8\u5206\u53ea\u662f\u4e3a\u4e86\u5c55\u793aTensorFlow\u4f7f\u7528\u573a\u666f\u5e7f\u3001\u53ef\u4ee5\u5e94\u7528\u4e8e\u4e3b\u6d41\u7684\u4e0d\u540c\u4efb\u52a1\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#3","title":"3 \u6838\u5fc3\u6982\u5ff5","text":"<p>\u8fd9\u4e00\u90e8\u5206\u4ecb\u7ecd\u4e86TensorFlow\u7684\u6838\u5fc3\u7ec4\u6210\uff1a\u5f20\u91cf\uff0c\u8ba1\u7b97\u56fe\u4ee5\u53ca\u81ea\u52a8\u5fae\u5206\u3002  </p> <p>\u5f20\u91cf\u53ef\u4ee5\u7406\u89e3\u4e3a\u591a\u7ef4\u6570\u7ec4\uff0c\u662fTensorFlow\u4e2d\u7684\u57fa\u672c\u6570\u636e\u7ed3\u6784\u3002  </p> <p>\u8ba1\u7b97\u56fe\u5c31\u662f\u6574\u4e2a\u8ba1\u7b97\u5173\u7cfb\u3002TensorFlow1.0\u91c7\u7528\u7684\u662f\u9759\u6001\u8ba1\u7b97\u56fe\uff0c\u5728\u521b\u5efa\u5b8c\u8ba1\u7b97\u56fe\u540e\uff0c\u9700\u8981\u5f00\u542f\u4e00\u4e2asession\u624d\u4f1a\u663e\u5f0f\u6267\u884c\u3002\u8fdb\u5165TensorFlow2.0\u540e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\uff0cTensorFlow\u91c7\u7528\u4e86\u52a8\u6001\u8ba1\u7b97\u56fe\u3002\u7531\u4e8e\u52a8\u6001\u8ba1\u7b97\u56fe\u6548\u7387\u4f1a\u4f4e\u4e00\u4e9b\uff0cTensorFlow\u5141\u8bb8\u6211\u4eec\u4f7f\u7528@tf.function\u88c5\u9970\u5668\u6784\u5efa\u9759\u6001\u8ba1\u7b97\u56fe\uff0c\u4e5f\u88ab\u79f0\u4f5cAutograph\u3002  </p> <p>\u795e\u7ecf\u7f51\u7edc\u5728\u66f4\u65b0\u6743\u91cd\u65f6\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u6b65\u662f\u6c42\u89e3\u68af\u5ea6\u3002TensorFlow\u63d0\u4f9b\u4e86tf.GradientTape(\u68af\u5ea6\u78c1\u5e26)\uff0c\u4f7f\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u6c42\u89e3\u68af\u5ea6\uff0c\u66f4\u65b0\u7f51\u7edc\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#4","title":"4 \u5c42\u6b21\u7ed3\u6784","text":"<p>\u7b2c\u4e09\u90e8\u5206\u4ecb\u7ecd\u4e86TensorFlow\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u4e3b\u8981\u662f\u4f4e\u3001\u4e2d\u3001\u9ad8\u4e09\u9636\u7684API\u793a\u4f8b\u3002 \u4f4e\u9636API\u76f4\u63a5\u64cd\u4f5c\u5f20\u91cf\u3001\u8ba1\u7b97\u56fe\u548c\u81ea\u52a8\u5fae\u5206\u3002\u867d\u7136\u663e\u5f97\u6709\u4e9b\u590d\u6742\u548c\u539f\u59cb\uff0c\u4f46\u662f\u662f\u6211\u4eec\u79bb\u5f00\u65b0\u624b\u6751\uff0c\u81ea\u5b9a\u4e49\u6a21\u578b\u65f6\u4e0d\u53ef\u6216\u7f3a\u7684\u5de5\u5177\u3002</p> <p>\u5982\u5b9a\u4e49\u6a21\u578b\uff1a</p> <pre><code>w = tf.Variable(tf.random.normal(w0.shape))\nb = tf.Variable(tf.zeros_like(b0,dtype = tf.float32))\n\n# \u5b9a\u4e49\u6a21\u578b\nclass LinearRegression:     \n    #\u6b63\u5411\u4f20\u64ad\n    def __call__(self,x):\n        return x@w + b\n\n    # \u635f\u5931\u51fd\u6570\n    def loss_func(self,y_true,y_pred):  \n        return tf.reduce_mean((y_true - y_pred)**2/2)\n\nmodel = LinearRegression()\n</code></pre> <p>\u4e2d\u9636API\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7a0b\u5ea6\u7684\u5c01\u88c5\uff0c\u5982\u635f\u5931\u51fd\u6570\u3001\u4f18\u5316\u5668\u7b49\u7ec4\u4ef6\u3002</p> <pre><code>model = layers.Dense(units = 1)\nmodel.build(input_shape = (2,)) #\u7528build\u65b9\u6cd5\u521b\u5efavariables\nmodel.loss_func = losses.mean_squared_error\nmodel.optimizer = optimizers.SGD(learning_rate=0.001)\n</code></pre> <p>\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9\u60f3\u8981\u7684\u4f18\u5316\u5668\uff0c\u8c03\u8282\u5b66\u4e60\u901f\u7387\u5373\u53ef\u3002\u5e76\u4e0d\u9700\u8981\u5173\u5fc3\u4f18\u5316\u5668\u672c\u8eab\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u3002\u8fd9\u4e9b\u5c0f\u7ec4\u4ef6\u7ed9\u6211\u4eec\u7684\u5efa\u6a21\u63d0\u4f9b\u4e86\u5f88\u591a\u4fbf\u5229\u3002</p> <p>\u9ad8\u9636API\u4e3b\u8981\u662f\u6a21\u578b\u7c7b\u7684\u63a5\u53e3\u3002\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ul> <li>\u5e8f\u5217\u5316\u6a21\u578b     <pre><code>model = models.Sequential()\nmodel.add(layers.Dense(1,input_shape =(2,)))\nmodel.summary()\n</code></pre></li> <li>\u51fd\u6570\u5f0fAPI     <pre><code>input_tensor = Input(shape=(64, ))\nz = layers.Dense(32, activation='relu')(input_tensor)\nz = layers.Dense(32, activation='relu')(z)\ny = layers.Dense(10, activation='softmax')(z)\nfrom keras.models import Model\nmodel = Model(input_tensor, y)\n</code></pre></li> <li>\u7ee7\u627fModel\u57fa\u7c7b\uff0c\u81ea\u5b9a\u4e49\u6a21\u578b     <pre><code>class DNNModel(models.Model):\n    def __init__(self):\n        super(DNNModel, self).__init__()\n\n    def build(self,input_shape):\n        self.dense1 = layers.Dense(4,activation = \"relu\",name = \"dense1\")\n        self.dense2 = layers.Dense(8,activation = \"relu\",name = \"dense2\")\n        self.dense3 = layers.Dense(1,activation = \"sigmoid\",name = \"dense3\")\n        super(DNNModel,self).build(input_shape)\n\n    # \u6b63\u5411\u4f20\u64ad\n    @tf.function(input_signature=[tf.TensorSpec(shape = [None,2], dtype = tf.float32)])  \n    def call(self,x):\n        x = self.dense1(x)\n        x = self.dense2(x)\n        y = self.dense3(x)\n        return y\n\nmodel = DNNModel()\nmodel.build(input_shape =(None,2))\n\nmodel.summary()\n</code></pre></li> </ul>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#5-api","title":"5 API","text":"<p>\u6700\u540e\u662f\u4f4e\u3001\u4e2d\u3001\u9ad8\u9636API\u5177\u4f53\u7684\u4ecb\u7ecd\u3002\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u3002\u6709\u793a\u4f8b\u3001\u6709\u4e2d\u6587\uff0c\u8bfb\u8d77\u6765\u611f\u89c9\u8f7b\u677e\u53c8\u6109\u5feb\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#6","title":"6 \u603b\u7ed3","text":"<p>\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b\u8fd9\u672c\u5de5\u5177\u4e66\u53ef\u4ee5\u8ba9\u6211\u4eec\u5f88\u5feb\u5bf9TensorFlow\u5efa\u7acb\u8d77\u77e5\u8bc6\u6846\u67b6\u3002\u5185\u5bb9\u4e0d\u4f1a\u592a\u591a\uff0c\u6df1\u5ea6\u4e5f\u8db3\u591f\u3002\u9002\u5408\u6709\u4e00\u5b9a\u57fa\u7840\uff0c\u53c8\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3TensorFlow\u7684\u8bfb\u8005\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/","title":"TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-12-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#1","title":"1 \u524d\u8a00","text":"<p>\u6211\u4eec\u6d4f\u89c8\u5728\u5404\u4e2a\u5e73\u53f0\u65f6\u4f1a\u53d1\u73b0\"\u4e3a\u4f60\u63a8\u8350\"\u529f\u80fd\u3002\u6bd4\u5982YouTube\u63a8\u8350\u7231\u770b\u7684\u89c6\u9891\uff0c\u97f3\u4e50\u8f6f\u4ef6\u4e3a\u4f60\u63d0\u4f9b\u4f60\u53ef\u80fd\u559c\u6b22\u7684\u97f3\u4e50\u7b49\u3002\u5176\u5b9e\u8fd9\u4e00\u529f\u80fd\u7684\u80cc\u540e\u6d89\u53ca\u7684\u539f\u7406\u5c31\u662f\u4eba\u5de5\u667a\u80fd\u7684\u63a8\u8350\u7cfb\u7edf\u3002\u4eca\u5929\u6211\u4eec\u5c06\u4ecb\u7ecdTensorFlow\u63a8\u8350\u7cfb\u7edf\u6a21\u578b\u7684\u5e93\u2014\u2014TensorFlow Recommenders(TFRS)\u3002</p> <p>\u5bf9TensorFlow\u611f\u5174\u8da3\u7684\u670b\u53cb\u4eec\uff0c\u8fd8\u53ef\u4ee5\u56de\u987e\u6211\u4eec\u4e4b\u524d\u76f8\u5173\u7684\u6587\u7ae0\uff1a</p> <ul> <li>Keras\u5404\u79cdCallbacks\u4ecb\u7ecd</li> <li>\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b</li> <li>\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow</li> <li>\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b</li> </ul>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#2","title":"2 \u63a8\u8350\u539f\u7406","text":"<p>\u8fd9\u91cc\u6211\u4eec\u7528\u7535\u5f71\u63a8\u8350\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u63a8\u8350\u7cfb\u7edf\u7684\u539f\u7406\u3002</p> <p>\u5bf9\u4e8e\u73b0\u6709\u7684\u56db\u4e2a\u7528\u6237\u548c\u4e94\u90e8\u7c7b\u578b\u4e0d\u540c\u7684\u7535\u5f71\uff0c\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u7528\u6237\u753b\u50cf\u548c\u5b9a\u4e49\u7535\u5f71\u7c7b\u522b\uff0c\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u533a\u5206\u6570\u636e\uff0c\u5c06\u73b0\u5b9e\u7279\u5f81\u8f6c\u5316\u4e3a\u53ef\u8ba1\u7b97\u7684\u53d8\u91cf\u3002\u5bf9\u4e8e\u73b0\u6709\u7684\u7528\u6237\u6570\u636e\u548c\u7535\u5f71\u6570\u636e\uff0c\u6211\u4eec\u5982\u4f55\u7ed9\u7528\u6237D\u63a8\u8350\u5979\u53ef\u80fd\u559c\u6b22\u7684\u7535\u5f71\u5462\uff1f</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fd9\u91cc\u6211\u4eec\u4e3a\u7528\u6237\u548c\u7535\u5f71\u4e24\u4e2a\u53d8\u91cf\u5404\u81ea\u521b\u5efa\u4e24\u4e2a\u7ef4\u5ea6\u7684\u77e9\u9635\u3002\u5bf9\u4e8e\u7528\u6237\uff0c\u6211\u4eec\u5c06\u5b9a\u4e49\u662f\u5426\u504f\u7231\u513f\u7ae5\u7535\u5f71\uff08-1\u8868\u793a\u5f88\u559c\u6b22\u513f\u7ae5\u7535\u5f71\uff0c1\u5219\u76f8\u53cd\uff09\u548c\u662f\u5426\u504f\u7231\u706b\u7206\u7535\u5f71\uff081\u8868\u793a\u5f88\u559c\u6b22\u706b\u7206\u7535\u5f71\uff0c-1\u76f8\u53cd\uff09\uff1b\u5bf9\u4e8e\u7535\u5f71\uff0c\u8fd9\u91cc\u5b9a\u4e49\u662f\u5426\u662f\u513f\u7ae5\u7535\u5f71\uff08-1\u8868\u793a\u513f\u7ae5\u7535\u5f71\uff0c1\u5219\u8868\u793a\u975e\u513f\u7ae5\u7535\u5f71\uff09\u548c\u662f\u5426\u662f\u706b\u7206\u7535\u5f71\uff081\u8868\u793a\u706b\u7206\u7535\u5f71\uff0c-1\u5219\u53cd\u7136\uff09\u3002</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u7528\u6237A\u5f88\u559c\u6b22\u770b\u513f\u7ae5\u4e14\u706b\u7206\u7684\u7535\u5f71\uff0c\u8fd9\u5c31\u662f\u57fa\u4e8e\u4e24\u4e2a\u7ef4\u5ea6\u7684<code>User Embedding</code>\uff1b\u800c\u300a\u602a\u7269\u53f2\u83b1\u514b\u300b\u5728\u8fd9\u91cc\u88ab\u5b9a\u4e49\u4e3a\u513f\u7ae5\u4e14\u706b\u7206\u7684\u7535\u5f71\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u5c31\u662f<code>Movie Embedding</code>\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5728\u642d\u5efa\u6a21\u578b\u65f6\uff0c<code>Embedding</code>\u7684\u7ef4\u5ea6\u4e0d\u53ea\u662f\u4e8c\u7ef4\u7684\uff0c\u5f80\u5f80\u662f\u591a\u7ef4\u7684\u77e9\u9635\u6765\u8868\u793a\u53d8\u91cf\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u7528\u77e9\u9635\u5206\u89e3\u8fdb\u884c\u534f\u540c\u8fc7\u6ee4\u8ba1\u7b97\u9884\u6d4b\u7684\u53cd\u9988\u77e9\u9635\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0cU\u4ee3\u8868\u7528\u6237\u77e9\u9635\uff0cV\u4ee3\u8868\u7535\u5f71\u5019\u9009\u6761\u76ee\u7684\u77e9\u9635\uff0c\u8ba1\u7b97\u7684A\u503c\u5c31\u662f\u9884\u6d4b\u7684\u53cd\u9988\u503c\u3002\u6240\u4ee5<code>\u534f\u540c\u8fc7\u6ee4</code>\u5c31\u662f\u4f9d\u636e\u7528\u6237\u548c\u5019\u9009\u6761\u76ee\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u6765\u8fdb\u884c\u63a8\u8350\u3002</p> <p>\u5728\u4f7f\u7528\u77e9\u9635\u5206\u89e3\u8fdb\u884c\u534f\u540c\u8fc7\u6ee4\u65f6\uff0c\u4e3a\u4e86\u51cf\u5c11\u76ee\u6807\u51fd\u6570\u7684\u9884\u6d4b\u8bef\u5dee\uff0c\u5b98\u65b9\u89e3\u91ca\u4f7f\u7528\u968f\u673a\u68af\u5ea6\u4e0b\u964d<code>Stochastic Gradient Descent(SGD)</code>\u6216\u52a0\u6743\u4ea4\u66ff\u6700\u5c0f\u5e73\u65b9\u7b97\u6cd5<code>Weighted Alternating Least Squares(WALS)</code>\u4e24\u79cd\u65b9\u5f0f\u3002</p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cWALS\u662f\u4e13\u95e8\u89e3\u51b3\u63a8\u8350\u7cfb\u7edf\u800c\u521b\u5efa\u7684\u65b0\u7b97\u6cd5\uff0c\u4e0e\u524d\u8005\u4e0d\u540c\uff0cWALS\u6bcf\u6b21\u8fed\u4ee3\u65f6\uff0c\u56fa\u5b9aU\u7684\u503c\u6765\u786e\u5b9aV\uff0c\u518d\u56fa\u5b9aV\u7684\u503c\u6765\u786e\u5b9aU\u3002\u4e24\u79cd\u65b9\u6cd5\u5404\u6709\u5229\u5f0a\uff0c\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\u77e9\u9635\u5206\u89e3\u7684\u5b98\u65b9\u8d44\u6599.</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#3","title":"3 \u6e90\u7801\u89e3\u6790","text":"<p>\u73b0\u5b9e\u63a8\u8350\u7cfb\u7edf\u5206\u4e3a\u4e24\u5927\u90e8\u5206\uff1a</p> <ol> <li> <p>\u4ece\u5927\u91cf\u7684\u6f5c\u5728\u63a8\u8350\u6761\u76ee\u4e2d\u9009\u62e9\u53ef\u80fd\u6027\u6bd4\u8f83\u5927\u7684items\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53eb\u505a\u4fe1\u606f\u68c0\u7d22\uff08retrieval\uff09\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u63d0\u53d6\u6a21\u578b\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6392\u5e8f\u6765\u7f29\u5c0f\u9009\u62e9\u6700\u6709\u53ef\u80fd\u88ab\u7528\u6237\u9009\u62e9\u7684items\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53eb\u505arank\u3002</p> </li> </ol> <p>\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u7b2c\u4e00\u9636\u6bb5\u7684\u4fe1\u606f\u63d0\u53d6\u6a21\u578b\u3002\u4fe1\u606f\u63d0\u53d6\u6a21\u578b\u53c8\u5305\u542b\u4e24\u4e2a\u5b50\u6a21\u578b\uff0c\u67e5\u8be2\u6a21\u578b\u548c\u5019\u9009\u6a21\u578b\uff0c\u5bf9\u5e94\u4e0a\u8ff0\u7684\u4f8b\u5b50\u5c31\u662f\u7528\u6237\u77e9\u9635\u548c\u5019\u9009\u6761\u76ee\u77e9\u9635\uff0c\u901a\u8fc7\u8ba1\u7b97\u4e24\u4e2a\u5b50\u6a21\u578b\u7684\u4e58\u79ef\uff0c\u5f97\u5230\u7684<code>query-candidate affinity score</code>\u5c31\u662f\u53cd\u6620\u67e5\u8be2\u548c\u5019\u9009\u6761\u76ee\u4e4b\u95f4\u7684\u5339\u914d\u7a0b\u5ea6\uff0c\u5373\u7528\u6237\u559c\u6b22\u63a8\u8350\u6761\u76ee\u7684\u53ef\u80fd\u6027\u3002</p> <p><pre><code># Dependency install\n!pip install -q tensorflow-recommenders\n!pip install -q --upgrade tensorflow-datasets\n\nimport os\nimport pprint\nimport tempfile\nfrom typing import Dict, Text\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow_datasets as tfds\n## import tensorflow recommenders API\nimport tensorflow_recommenders as tfrs\n</code></pre> \u4ece\u7f51\u4e0a\u52a0\u8f7d<code>MovieLens</code>\u6570\u636e\uff1a</p> <p><pre><code># Ratings data.\nratings = tfds.load(\"movielens/100k-ratings\", split=\"train\")\n# Features of all the available movies.\nmovies = tfds.load(\"movielens/100k-movies\", split=\"train\")\n## Note: MovieLens \u6ca1\u6709\u4e8b\u5148\u51c6\u5907\u597d\u6570\u636e\u96c6\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u5728train data\u4e2d\u3002\n# \u67e5\u770b\u6570\u636erating\u548cmovies\nfor x in ratings.take(2).as_numpy_iterator():\n  pprint.pprint(x)\n#{'movie_title': b\"One Flew Over the Cuckoo's Nest (1975)\", 'user_id': b'138'}\n#{'movie_title': b'Strictly Ballroom (1992)', 'user_id': b'92'}\n\nfor x in movies.take(2).as_numpy_iterator():\n  pprint.pprint(x)\n#b'You So Crazy (1994)'\n#b'Love Is All There Is (1996)'\n</code></pre> \u5728\u63d0\u53d6\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u5148\u5904\u7406<code>rating</code>\u6570\u636e\u96c6\uff0c\u5e76\u9009\u62e9<code>user_id</code>\u548c<code>movie_title</code>\u6765\u5b9a\u4e49\u7528\u6237\u753b\u50cf\u3002</p> <p><pre><code>ratings = ratings.map(lambda x: {\n    \"movie_title\": x[\"movie_title\"],\n    \"user_id\": x[\"user_id\"],\n})\nmovies = movies.map(lambda x: x[\"movie_title\"])\n</code></pre> \u8bbe\u5b9a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u6570\u636e\u96c6\uff1a</p> <p><pre><code>tf.random.set_seed(42)\nshuffled = ratings.shuffle(100_000, seed=42, reshuffle_each_iteration=False)\n\ntrain = shuffled.take(80_000)\ntest = shuffled.skip(80_000).take(20_000)\n# \u4e3a\u53d8\u91cf\u6570\u503c\u505amapping\nmovie_titles = movies.batch(1_000)\nuser_ids = ratings.batch(1_000_000).map(lambda x: x[\"user_id\"])\n\nunique_movie_titles = np.unique(np.concatenate(list(movie_titles)))\nunique_user_ids = np.unique(np.concatenate(list(user_ids)))\n\nunique_movie_titles[:10]\n\n#array([b\"'Til There Was You (1997)\", b'1-900 (1994)',\n       #b'101 Dalmatians (1996)', b'12 Angry Men (1957)', b'187 (1997)',\n       #b'2 Days in the Valley (1996)',\n       #b'20,000 Leagues Under the Sea (1954)',\n       #b'2001: A Space Odyssey (1968)',\n       #b'3 Ninjas: High Noon At Mega Mountain (1998)',\n       #b'39 Steps, The (1935)'], dtype=object)\n</code></pre> \u5b9a\u4e49\u7528\u6237\u6a21\u578b\u548c\u7535\u5f71\u6a21\u578b\uff1a</p> <p><pre><code>#\u8bbe\u5b9aembedding\u7ef4\u5ea6\nembedding_dimension = 32\n#\u8bbe\u5b9a\u7528\u6237\u6a21\u578b\nuser_model = tf.keras.Sequential([\n  tf.keras.layers.StringLookup(\n      vocabulary=unique_user_ids, mask_token=None),\n  # We add an additional embedding to account for unknown tokens.\n  tf.keras.layers.Embedding(len(unique_user_ids) + 1, embedding_dimension)\n])\n#\u8bbe\u5b9a\u7535\u5f71\u6a21\u578b\nmovie_model = tf.keras.Sequential([\n  tf.keras.layers.StringLookup(\n      vocabulary=unique_movie_titles, mask_token=None),\n  tf.keras.layers.Embedding(len(unique_movie_titles) + 1, embedding_dimension)\n])\n</code></pre> \u5173\u4e8e\u8bc4\u4f30\u6807\u51c6\uff0c<code>TensorFlow</code>\u4f7f\u7528\u7684\u662f<code>FactorizedTopK</code>\u53bb\u8861\u91cf\u9884\u6d4b\u80fd\u529b\uff0c</p> <p><pre><code>metrics = tfrs.metrics.FactorizedTopK(\n  candidates=movies.batch(128).map(movie_model)\n)\n\ntask = tfrs.tasks.Retrieval(\n  metrics=metrics\n)\n</code></pre> \u5c06\u6a21\u578b\u51fd\u6570\u548c\u635f\u5931\u51fd\u6570\u5c01\u88c5\u8d77\u6765\uff1a</p> <p><pre><code>class MovielensModel(tfrs.Model):\n\n  def __init__(self, user_model, movie_model):\n    super().__init__()\n    self.movie_model: tf.keras.Model = movie_model\n    self.user_model: tf.keras.Model = user_model\n    self.task: tf.keras.layers.Layer = task\n\n  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -&gt; tf.Tensor:\n    # We pick out the user features and pass them into the user model.\n    user_embeddings = self.user_model(features[\"user_id\"])\n    # And pick out the movie features and pass them into the movie model,\n    # getting embeddings back.\n    positive_movie_embeddings = self.movie_model(features[\"movie_title\"])\n\n    # The task computes the loss and the metrics.\n    return self.task(user_embeddings, positive_movie_embeddings)\n</code></pre> \u8bad\u7ec3\u5e76\u8bc4\u4f30\u6a21\u578b\u7ed3\u679c\uff1a</p> <p><pre><code>model = MovielensModel(user_model, movie_model)\nmodel.compile(optimizer=tf.keras.optimizers.Adagrad(learning_rate=0.1))\n#shuffle data and get samples\ncached_train = train.shuffle(100_000).batch(8192).cache()\ncached_test = test.batch(4096).cache()\n\nmodel.fit(cached_train, epochs=3)\n#\u4f7f\u7528test data evaluate\nmodel.evaluate(cached_test, return_dict=True)\n{'factorized_top_k/top_1_categorical_accuracy': 0.00044999999227002263,\n 'factorized_top_k/top_5_categorical_accuracy': 0.004100000020116568,\n 'factorized_top_k/top_10_categorical_accuracy': 0.01145000010728836,\n 'factorized_top_k/top_50_categorical_accuracy': 0.09040000289678574,\n 'factorized_top_k/top_100_categorical_accuracy': 0.19300000369548798,\n 'loss': 28535.75390625,\n 'regularization_loss': 0,\n 'total_loss': 28535.75390625}\n</code></pre> \u4f7f\u7528\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4e3a<code>user_id=9</code>\u7684\u7528\u6237\u63a8\u8350\u7535\u5f71\u7684\u9884\u6d4b\uff1a</p> <pre><code># Create a model that takes in raw query features, and\nindex = tfrs.layers.factorized_top_k.BruteForce(model.user_model)\n# recommends movies out of the entire movies dataset.\nindex.index_from_dataset(\n  tf.data.Dataset.zip((movies.batch(100), movies.batch(100).map(model.movie_model)))\n)\n# Get recommendations.\n_, titles = index(tf.constant([\"9\"]))\nprint(f\"Recommendations for user 9: {titles[0, :3]}\")\n</code></pre>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#4","title":"4 \u603b\u7ed3","text":"<p>TensorFlow \u4e3a\u673a\u5668\u5b66\u4e60\u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u4e14\u5f3a\u5927\u7684\u8d44\u6e90\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6a21\u578b\u8fd0\u7528\u5230\u73b0\u6709\u7684\u6570\u636e\u4e2d\uff0c\u53bb\u63a2\u7a76\u4e00\u4e9b\u6709\u8da3\u7684\u60ca\u559c\u5427\uff01</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u5206\u4eab\u53ef\u4ee5\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u4e5f\u6b22\u8fce\u5404\u4f4d\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-18-Tabnet/","title":"TabNet\u5c0f\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1a\u8c01\u662fVoid\uff0c\u53d1\u5e03\u4e8e2021-12-18\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-18-Tabnet/#1","title":"1 \u524d\u8a00","text":"<p>\u5bf9\u4e8e\u8868\u683c\u578b\u6570\u636e\uff0c\u6811\u6a21\u578b(LightGBM\uff0cXGBoost)\u5f80\u5f80\u80fd\u6709\u4e0d\u9519\u7684\u8868\u73b0\u3002\u53ef\u80fd\u7684\u539f\u56e0\u6709:</p> <ul> <li>\u5bb9\u6613\u6784\u9020\u6216\u5df2\u7ecf\u6709\u4e30\u5bcc\u7684\u7279\u5f81\u5e93\u3002</li> <li>\u6811\u6a21\u578b\u7684\u51b3\u7b56\u6d41\u5f62(decision manifolds)\u662f\u8d85\u5e73\u9762\u8fb9\u754c\u7684(\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u5200\u4e00\u5200\u5207\u51fa\u6765\u7684)\uff0c\u5bf9\u6b64\u7c7b\u95ee\u9898\u8868\u73b0\u8f83\u597d\u3002</li> </ul> <p>\u7531\u4e8e\u5bf9\u4e8e\u67d0\u4e9b\u4efb\u52a1\uff0cNN\u6a21\u578b(Neural Network Model)\u7684\u8868\u73b0\u53ea\u80fd\u7b97\u5dee\u5f3a\u4eba\u610f\uff0c\u800c\u6211\u4eec\u53c8\u9700\u8981\u6709NN\u6a21\u578b\u53c2\u4e0e\u6700\u540e\u7684\u6a21\u578bensemble\uff0c\u673a\u667a\u7684\u7814\u7a76\u8005\u4eec\u4e3a\u6b64\u8bbe\u8ba1\u51fa\u4e86\u7c7b\u4f3c\u6811\u6a21\u578b\u7684NN\u6a21\u578b\u3002\u672c\u6587\u5c06\u4ecb\u7ecd\u7684\u5c31\u662f\u6b64\u7c7b\u6a21\u578b\uff1aTabNet\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-18-Tabnet/#2-nn","title":"2 \u7528NN\u6784\u9020\u51b3\u7b56\u6811","text":"<p>\u51b3\u7b56\u6811\u6211\u4eec\u53ef\u80fd\u5df2\u7ecf\u6bd4\u8f83\u719f\u6089\u4e86\uff0c\u5b83\u7684\u51b3\u7b56\u8fb9\u754c\u53ef\u89c1\u5982\u4e0b\u7b80\u5355\u793a\u4f8b\uff1a</p> <p>\u4e24\u4e2a\u7279\u5f81x1\uff0cx2\u5206\u522b\u4ee5\u9608\u503ca\uff0cd\u8fdb\u884c\u5212\u5206\uff0c\u5c06\u6570\u636e\u96c6\u5212\u5206\u62104\u5757\u3002\u90a3\u4e48NN\u5982\u4f55\u80fd\u6a21\u62df\u8fd9\u4e00\u8fc7\u7a0b\u5462\uff1f</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6a21\u578b\u7684\u8f93\u5165\u540c\u6837\u662fx1\uff0cx2\u4e24\u4e2a\u7279\u5f81\uff0c\u9996\u5148\u901a\u8fc7Mask\u5c42\u5c06\u5b83\u4eec\u5206\u522b\u7b5b\u9009\u51fa\u6765\uff0c\u56e0\u4e3a\u6811\u6a21\u578b\u5728\u6784\u9020\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u662f\u72ec\u7acb\u7684\u5728\u6bcf\u4e00\u6b65\u9009\u62e9\u5206\u88c2\u589e\u76ca\u6700\u5927\u7684\u90a3<code>\u4e00\u4e2a\u7279\u5f81</code>\u3002 \u63a5\u7740\uff0c\u4e24\u4e2a\u7279\u5f81\u5206\u522b\u63a5\u4e86\u4e00\u4e2a\u8bbe\u8ba1\u597d\u6743\u91cd\u548cbias\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u5e76\u901a\u8fc7RELU\u6fc0\u6d3b\u51fd\u6570\u8f93\u51fa\u3002 \u7531\u4e8eRELU(x)\u5728x&gt;0\u65f6\uff0c\u5373\u4e3ax\uff0c\u5c0f\u4e8e0\u65f6\uff0c\u4e3a0\u3002\u90a3\u4e48\u5bf9\u4e8ex1\u6765\u8bf4\uff0c\u5f53x1&gt;a\u65f6\uff0c\u6700\u7ec8\u8f93\u51fa\u4e3a[c1x1-c1a,0,0,0]\uff0c\u82e5x1&lt;a\uff0c\u8f93\u51fa\u4e3a[0,-c1x1+c1a,0,0]\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u76f8\u5f53\u4e8e\u4ee5a\u4e3a\u9608\u503c\uff0c\u8fdb\u884c\u5212\u5206\u3002\u8fd9\u91cc\u7684\u4e24\u4e2a-1\u7ef4\u5ea6\u5176\u5b9e\u662f\u7528\u6765\u5bf9\u9f50\u586b\u5145\u7ef4\u5ea6\u7684\u3002  </p> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u628a\u4e0d\u540c\u7279\u5f81\u7684\u8f93\u51fa\u52a0\u8d77\u6765\uff0c\u5e76\u4f5c\u7528softmax\uff0c\u5f97\u5230\u8f93\u51fa\u5411\u91cf\uff0c\u5982[0.1,0.5,0.3,0.3]\u3002\u5176\u4e2d\uff0c\u6bcf\u4e00\u7ef4\u4ee3\u8868\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\u65f6\uff0c\u5bf9\u6700\u7ec8\u51b3\u7b56\u7684\u5f71\u54cd\u6743\u91cd\u3002\u59820.1\u4ee3\u8868x1&gt;a\u5bf9\u6700\u7ec8\u51b3\u7b56\u7684\u5f71\u54cd\u6743\u91cd\u53ea\u670910%\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6a21\u578b\u53c2\u6570\u7684\u66f4\u65b0\u4ecd\u7136\u91c7\u7528\u7684\u662f\u53cd\u5411\u4f20\u64ad\uff0c\u5e76\u6ca1\u6709\u6d89\u53ca\u5230\u589e\u76ca\u7684\u8ba1\u7b97\u3002  </p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-18-Tabnet/#3-tabnet","title":"3 TabNet\u7ed3\u6784","text":"<p>TabNet\u9488\u5bf9\u4e0a\u8ff0\u7b80\u5355\u7ed3\u6784\u505a\u4e86\u6539\u8fdb\u3002</p> <p>\u7279\u5f81\u5148\u901a\u8fc7\u4e00\u4e2aBN(batch normalization)\u5c42\uff0c\u63a5\u7740\u901a\u8fc7Feature transformer\u5c42\u3002\u8fd9\u4e00\u5c42\u7684\u4f5c\u7528\u548c\u4e4b\u524d\u6240\u8ff0\u7684\u5168\u8fde\u63a5\u5c42\u7c7b\u4f3c\uff0c\u90fd\u662f\u5728\u505a\u7279\u5f81\u8ba1\u7b97\uff0c\u5b83\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p>\u5b83\u6709\u4e24\u5927\u90e8\u5206\uff0c\u6240\u6709step\u5171\u4eab\u7684\u90e8\u5206\u4ee5\u53ca\u6bcf\u4e2astep\u72ec\u6709\u7684\u51b3\u7b56\u90e8\u5206\uff0c\u5176\u4e2d\u7684\u5c0f\u7ed3\u6784\u90fd\u662f\u6b8b\u5dee\u8fde\u63a5\u7684\u7531\u5168\u8fde\u63a5\u5c42(FC\uff0cFully Connected Layer)\uff0cBN\u5c42\u4ee5\u53ca\u7528\u6765\u505a\u7279\u5f81\u9009\u62e9\u7684GLU(Gated Linear Unit)\u6784\u6210\u7684\u5c0f\u7ed3\u6784\u3002\u63a5\u7740split\u540e(\u9009\u62e9\u90e8\u5206\u7279\u5f81)\uff0c\u901a\u8fc7attentive transformer\u8fdb\u884c\u7279\u5f81\u9009\u62e9(\u4e3b\u8981\u901a\u8fc7sparsemax\u5c06\u67d0\u4e9b\u7279\u5f81\u7f6e\u4e3a0)\u3002\u76f4\u89c2\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e4b\u524d\u88ab\u591a\u4e2asteps\u9009\u4e2d\u7684\u7279\u5f81\u5c31\u4e0d\u5e94\u8be5\u88ab\u6a21\u578b\u9009\u62e9\u4e86\u3002\u6700\u7ec8\u751f\u6210\u8fd0\u7528\u4e8e\u4e0b\u4e2astep\u7684Mask\u77e9\u9635\u3002    </p> <p>\u53f3\u4e0b\u89d2\u7684Feature attribute\u523b\u753b\u7684\u662f\u5219\u662f\u53d8\u91cf\u7684\u5168\u5c40\u91cd\u8981\u6027\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-18-Tabnet/#4","title":"4 \u603b\u7ed3","text":"<p>\u4ee5\u4e0a\u5c31\u662fTabNet\u7684\u57fa\u672c\u7ed3\u6784\uff0c\u5b83\u901a\u8fc7\u52a0\u6027\u6a21\u578b\u4ee5\u53ca\u6ce8\u610f\u529b\u673a\u5236\u5b9e\u73b0\u4e86instance-wise\u7684\u7279\u5f81\u9009\u62e9\uff0c\u517c\u987e\u4e86\u6811\u6a21\u578b\u4ee5\u53caNN\u7684\u4f18\u70b9\u3002\u5728\u9762\u5bf9\u8868\u683c\u578b\u6570\u636e\u7684\u95ee\u9898\u4e2d\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e00\u4e0b\u770b\u770b\u6548\u679c\u5982\u4f55\u3002 \u5173\u4e8eTabNet\u7684\u7406\u8bba\u7406\u89e3\u6709\u89e3\u91ca\u4e0d\u5230\u4f4d\u7684\u4e5f\u53ef\u4ee5\u770b\u770b\u539f\u6587\u6216\u662f\u77e5\u4e4e\u5927\u795e\u7684\u6587\u7ae0\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/","title":"TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2021-12-27\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#1","title":"1 \u524d\u8a00","text":"<p>\u8bfb\u8fc7TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09\u7684\u670b\u53cb\u4eec\u5e94\u8be5\u8fd8\u6709\u5370\u8c61\uff0c\u4e0a\u56de\u6211\u4eec\u4ecb\u7ecd\u7684\u6a21\u578b\u662f\u4fe1\u606f\u68c0\u7d22\uff08retrieval\uff09\uff0c\u800c\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d\u8fd8\u6709\u53e6\u4e00\u4e2a\u4efb\u52a1\u6a21\u578b\uff0c\u5373\u4e3a\u4fe1\u606f\u6392\u5e8f\uff08ranking\uff09\u3002\u5728\u6392\u5e8f\u9636\u6bb5\uff0c\u5176\u4e3b\u8981\u4efb\u52a1\u662f\u5bf9\u68c0\u7d22\u6a21\u578b\u4ea7\u51fa\u7684\u6761\u76ee\u8fdb\u884c\u8c03\u6574\u4ee5\u9009\u62e9\u6700\u6709\u53ef\u80fd\u88ab\u7528\u6237\u559c\u6b22\u548c\u9009\u62e9\u7684\u7535\u5f71\u6761\u76ee\u3002</p> <p>\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u4e00\u4e0b\u6392\u5e8f\u6a21\u578b\u7684\u539f\u7406\u548c\u8c03\u7528\u5b9e\u4f8b\u3002</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#2","title":"2 \u6e90\u7801\u89e3\u6790","text":"<ul> <li>\u6570\u636e\u51c6\u5907\uff0c\u83b7\u53d6\u6570\u636e\u5e76\u62c6\u5206\u6570\u636e\u96c6\u3002</li> <li>\u642d\u5efa\u6392\u5e8f\u6a21\u578b\u3002</li> <li>\u62df\u5408\u5e76\u8bc4\u4f30\u6a21\u578b\u3002</li> </ul>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#21","title":"2.1 \u6570\u636e\u51c6\u5907","text":"<pre><code>import os\nimport pprint\nimport tempfile\n\nfrom typing import Dict, Text\n\nimport numpy as np\nimport tensorflow as tf\n## TensorFlow Dataset Resource\nimport tensorflow_datasets as tfds\n\n## TensorFlow \u63a8\u8350\u7cfb\u7edf\nimport tensorflow_recommenders as tfrs\n</code></pre> <p>\u4ece<code>TensorFlow Dataset</code>\u4e2d\u5f15\u5165\u548c\u4fe1\u606f\u68c0\u7d22\u6a21\u578b\u76f8\u540c\u7684<code>movielens</code>\u7535\u5f71\u6570\u636e\u96c6\uff0c\u5e76\u53ea\u4fdd\u7559\u4ee5\u4e0b\u4e09\u4e2a\u53d8\u91cf\uff1a <pre><code>ratings = tfds.load(\"movielens/100k-ratings\", split=\"train\")\n\nratings = ratings.map(lambda x: {\n    \"movie_title\": x[\"movie_title\"],\n    \"user_id\": x[\"user_id\"],\n    \"user_rating\": x[\"user_rating\"]\n})\n</code></pre></p> <p>\u968f\u673a\u6253\u4e71\u6570\u636e\uff0c\u5e76\u53d680%\u4e3a\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5176\u4f59\u768420%\u4e3a\u6d4b\u8bd5\u6570\u636e\u96c6\uff1a <pre><code>tf.random.set_seed(42)\nshuffled = ratings.shuffle(100_000, seed=42, reshuffle_each_iteration=False)\n\ntrain = shuffled.take(80_000)\ntest = shuffled.skip(80_000).take(20_000)\n</code></pre></p> <p>\u4e3a\u4e86\u7ed9\u5206\u7c7b\u578b\u53d8\u91cf\u505a\u5d4c\u5165\u5411\u91cf\uff0c\u8fd9\u91cc\u662f\u5148\u7528\u8fde\u7eed\u6574\u6570\u6765\u5339\u914d\u7535\u5f71\u6807\u9898\u548c\u7528\u6237ID\u7684\u6bcf\u4e2a\u6570\u503c\uff1a</p> <pre><code>movie_titles = ratings.batch(1_000_000).map(lambda x: x[\"movie_title\"])\nuser_ids = ratings.batch(1_000_000).map(lambda x: x[\"user_id\"])\n\nunique_movie_titles = np.unique(np.concatenate(list(movie_titles)))\nunique_user_ids = np.unique(np.concatenate(list(user_ids)))\n</code></pre>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#22","title":"2.2 \u642d\u5efa\u6392\u5e8f\u6a21\u578b","text":"<p>\u5728\u6587\u672c\u6a21\u578b\u4e2d\uff0c\u9700\u8981\u5148\u4e3a\u7528\u6237\u548c\u7535\u5f71\u505a\u8bcd\u5d4c\u5165\uff08Embeddings\uff09\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c06\u6587\u672c\u578b\u6570\u636e\u8f6c\u5316\u4e3a\u53ef\u8ba1\u7b97\u6570\u503c\u578b\u5411\u91cf\u7684\u8fc7\u7a0b\uff0c\u8fd9\u91cc\u6bcf\u4e00\u4e2a\u5d4c\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\u4e3a32\u3002\u7b2c\u4e8c\u6b65\u662f\u642d\u5efa\u987a\u5e8f\u6a21\u578b\uff0c\u5176\u6a21\u578b\u8c03\u7528\u7684\u662f<code>Keras Dense</code>\u7684\u5168\u8fde\u63a5\u5c42\uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3a<code>relu</code>\u6574\u6d41\u7ebf\u6027\u5355\u5143\uff0c\u5b83\u7684\u7279\u70b9\u662f\u5728\u7528\u9ed8\u8ba4\u503c\u65f6\uff0c\u8fd4\u56de\u9010\u5143\u7d20\u7684<code>max(x,0)</code>\u3002\u6700\u540e\u7528<code>call()</code>\u51fd\u6570\u8f93\u5165input\uff0c\u4ece\u800c\u8fd4\u56deranking\u7684\u7ed3\u679c\u3002</p> <p><pre><code>class RankingModel(tf.keras.Model):\n\n  def __init__(self):\n    super().__init__()\n    ## \u5d4c\u5165\u7ef4\u5ea6\u4e3a32\n    embedding_dimension = 32\n\n    ## Compute embeddings for users.\n    self.user_embeddings = tf.keras.Sequential([\n      tf.keras.layers.StringLookup(\n        vocabulary=unique_user_ids, mask_token=None),\n      tf.keras.layers.Embedding(len(unique_user_ids) + 1, embedding_dimension)\n    ])\n\n    # Compute embeddings for movies.\n    self.movie_embeddings = tf.keras.Sequential([\n      tf.keras.layers.StringLookup(\n        vocabulary=unique_movie_titles, mask_token=None),\n      tf.keras.layers.Embedding(len(unique_movie_titles) + 1, embedding_dimension)\n    ])\n\n    # Compute predictions.\n    self.ratings = tf.keras.Sequential([\n      # Learn multiple dense layers.\n      tf.keras.layers.Dense(256, activation=\"relu\"),\n      ## \u8f93\u51fa\u7ef4\u5ea6\u4e3a 256\n      tf.keras.layers.Dense(64, activation=\"relu\"),\n      ## \u8f93\u51fa\u5c42\u7ef4\u5ea6\u4e3a 64\n      # Make rating predictions in the final layer.\n      tf.keras.layers.Dense(1)\n  ])\n\n  def call(self, inputs):\n    ##\u7528\u6237ID\u548c\u7535\u5f71\u6807\u9898\u4e3a\u6a21\u578b\u7684\u8f93\u5165\u503c\n    user_id, movie_title = inputs\n\n    user_embedding = self.user_embeddings(user_id)\n    movie_embedding = self.movie_embeddings(movie_title)\n\n    return self.ratings(tf.concat([user_embedding, movie_embedding], axis=1))\n</code></pre> \u7531\u4e0b\u56fe\u6240\u793a\uff0c\u7528\u672a\u7ecf\u8fc7\u8bad\u7ec3\u7684\u6a21\u578b\u4e3a\u7528\u6237\u53f7\u4e3a9\u63a8\u8350\u7535\u5f71\u300aOne Flew Over the Cuckoo's Nest (1975)\u300b\uff0c\u9884\u6d4b\u7684\u53ef\u80fd\u6027\u4e3a0.016\uff1a</p> <p>\u4e3a\u4e86\u53ef\u4ee5\u5728\u8bad\u7ec3\u65f6\u6709\u8bc4\u4f30\u503c\uff0c\u5728\u539f\u6709\u7684\u6a21\u578b\u4efb\u52a1\u4e2d\u52a0\u5165<code>MSE</code>\u5747\u65b9\u8bef\u5dee\u7684\u635f\u5931\u51fd\u6570\u548c<code>RMSE</code>\u5747\u65b9\u6839\u8bef\u5dee\u7684\u8bc4\u4f30\u51fd\u6570\uff1a</p> <pre><code>task = tfrs.tasks.Ranking(\n  loss = tf.keras.losses.MeanSquaredError(),\n  metrics=[tf.keras.metrics.RootMeanSquaredError()]\n)\n</code></pre> <p>\u5c06\u6392\u5e8f\u6a21\u578b\u548c\u4e0a\u8ff0\u7684\u51fd\u6570\u4e00\u8d77\u6253\u5305\u4e3a\u65b0\u7684\u7535\u5f71\u6a21\u578b\uff0c\u5e76\u51c6\u5907<code>call()</code>\u51fd\u6570\u548c<code>comupte_loss()</code>\u51fd\u6570\u6765\u62df\u5408\u548c\u8bc4\u4f30\u6a21\u578b\u7684\u8868\u73b0\uff1a</p> <pre><code>class MovielensModel(tfrs.models.Model):\n\n  def __init__(self):\n    super().__init__()\n    self.ranking_model: tf.keras.Model = RankingModel()\n    self.task: tf.keras.layers.Layer = tfrs.tasks.Ranking(\n      loss = tf.keras.losses.MeanSquaredError(),\n      metrics=[tf.keras.metrics.RootMeanSquaredError()]\n    )\n\n  def call(self, features: Dict[str, tf.Tensor]) -&gt; tf.Tensor:\n    return self.ranking_model(\n        (features[\"user_id\"], features[\"movie_title\"]))\n\n  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -&gt; tf.Tensor:\n    labels = features.pop(\"user_rating\")\n\n    rating_predictions = self(features)\n\n    # The task computes the loss and the metrics.\n    return self.task(labels=labels, predictions=rating_predictions)\n</code></pre>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#23","title":"2.3 \u62df\u5408\u5e76\u8bc4\u4f30\u6a21\u578b","text":"<p>\u8c03\u7528\u6a21\u578b\u7f16\u8bd1<code>complie()</code>\u65b9\u6cd5\u5e76\u4f7f\u7528<code>Adagrad</code>\u7684\u4f18\u5316\u5668\uff0c\u6307\u5b9a\u5b66\u4e60\u7387\u4e3a0.1:</p> <pre><code>model = MovielensModel()\nmodel.compile(optimizer=tf.keras.optimizers.Adagrad(learning_rate=0.1))\n</code></pre> <p>\u6570\u636e\u62df\u5408\u65f6\uff0c\u8fd9\u91cc\u5c06\u8bad\u7ec3\u96c6\u91cd\u6392\uff0c<code>batch</code>\u5904\u7406\u548c\u6570\u636e\u7f13\u5b58\uff0c\u5171<code>epoch</code>\u4e09\u6b21\uff1a</p> <pre><code>cached_train = train.shuffle(100_000).batch(8192).cache()\ncached_test = test.batch(4096).cache()\n\nmodel.fit(cached_train, epochs=3)\n</code></pre> <pre><code>model.evaluate(cached_test, return_dict=True)\n\n## output:\n#{'root_mean_squared_error': 1.1102582216262817,\n# 'loss': 1.2078243494033813,\n# 'regularization_loss': 0,\n# 'total_loss': 1.2078243494033813}\n</code></pre> <p>\u6700\u540e\uff0c\u4e3a\u7528\u62379\u63a8\u8350\u4ee5\u4e0b\u4e09\u90e8\u7535\u5f71\u5e76\u9644\u6709\u6a21\u578b\u9884\u6d4b\u7684ranking\u7ed3\u679c\uff1a</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#3","title":"3 \u603b\u7ed3","text":"<p>TensorFlow\u7535\u5f71\u63a8\u8350\u7cfb\u7edf\u4e2d\uff0c\u7b2c\u4e00\u6b65\u5148\u4ece\u6570\u636e\u96c6\u4e2d\u83b7\u53d6\u7528\u6237\u53ef\u80fd\u4f1a\u559c\u6b22\u7684\u7535\u5f71\u6761\u76ee\uff0c\u7b2c\u4e8c\u6b65\u5219\u662f\u5bf9\u8fd9\u4e9b\u7535\u5f71\u6761\u76ee\u8fdb\u884c\u9884\u6d4b\u6392\u5e8f\uff0c\u76ee\u7684\u5c31\u662f\u63a8\u8350\u6709\u9650\u7684\u7528\u6237\u6700\u6709\u53ef\u80fd\u611f\u5174\u8da3\u5e76\u70b9\u51fb\u7684\u7535\u5f71\u3002\u800c\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u4f60\u5c31\u662f\u7528\u6237\u3002\u6240\u4ee5\uff0c\u6559\u7ed9\u5927\u5bb6\u4e00\u4e2a\u89e3\u51b3\u5267\u8352\u7684\u5c0f\u6280\u5de7\uff0c\u4e0e\u5176\u968f\u673a\u6d4f\u89c8\u5bfb\u627e\uff0c\u4e0d\u5982\u641c\u7d22\u4e00\u4e9b\u4f60\u770b\u8fc7\u7684\u559c\u6b22\u7684\u7535\u5f71\uff0c\u548c\u4f60\u559c\u6b22\u76f8\u4f3c\u7684\u7535\u5f71\u5c31\u5728\u201d\u4e3a\u4f60\u63a8\u8350\u201c\u4e00\u680f\u4e86\uff0c\u4e0d\u59a8\u8bd5\u8bd5\u5427\uff01</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u5206\u4eab\u53ef\u4ee5\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u6b22\u8fce\u5404\u4f4d\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/","title":"\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-04-16\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\uff0c\u6587\u672c\u5206\u7c7b\u662f\u975e\u5e38\u666e\u904d\u7684\u5e94\u7528\uff0c\u672c\u6587\u5c06\u4ecb\u7ecd\u4f7f\u7528TensorFlow\u5f00\u53d1\u57fa\u4e8e\u5d4c\u5165\uff08Embedding\uff09\u7684\u6587\u672c\u5206\u7c7b\u6a21\u578b\uff0c\u7531\u4e8eTensorFlow\u7684API\u53d8\u5316\u8fc5\u901f\u4e14\u517c\u5bb9\u6027\u611f\u4eba\uff0c\u56e0\u6b64\u672c\u6587\u5747\u4f7f\u7528\u7684\u622a\u81f32022\u5e744\u670816\u65e5\u6700\u65b0\u7248\u7684TensorFlow(tf)\u53ca\u76f8\u5173\u5e93\uff0c\u4e3b\u8981\u5305\u62ec\uff1a<code>TensorFlow\uff08v2.8.0\uff09</code>\uff0c<code>TensorFlow Datasets\uff08tfds v4.0.1\uff09</code>\u548c<code>TensorFlow Text\uff08tf_text v2.8.1\uff09</code>\uff0c\u5982\u9047bug\uff0c\u8bf7\u9996\u5148\u68c0\u67e5TensorFlow\u76f8\u5173\u5e93\u7684\u7248\u672c\u3002\u6b64\u5de5\u4f5c\u6d41\u4e3b\u8981\u4f7f\u7528\u7684API\u6709\uff1a</p> <ul> <li>tf.strings</li> <li>tfds</li> <li>tf_text</li> <li>tf.data.Dataset</li> <li>tf.keras (Sequential &amp; Functional API)</li> </ul>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#2","title":"2 \u83b7\u53d6\u6570\u636e","text":"<p>TensorFlow Datasets\uff08tfds\uff09\u91cc\u542b\u6709\u975e\u5e38\u591a\u7684\u793a\u4f8b\u6570\u636e\u7528\u4e8e\u7814\u7a76\u8bd5\u9a8c\uff0c\u672c\u6587\u4f7f\u7528\u7ecf\u5178\u7684\u7535\u5f71\u8bc4\u8bba\u6570\u636e\uff0c\u8fdb\u884c\u60c5\u611f\u4e8c\u5206\u7c7b\u4efb\u52a1\u7684\u7814\u7a76\u3002\u9996\u5148\u4f7f\u7528tfds\u7684API\u76f4\u63a5\u52a0\u8f7d\u6570\u636e\uff0c\u7ed3\u679c\u5c06\u5b58\u5728\u4e00\u4e2atf.data.Dataset\u5bf9\u8c61\u4e2d\u3002</p> <pre><code>import collections\nimport pathlib\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import losses\nfrom tensorflow.keras import utils\nfrom tensorflow.keras.layers import TextVectorization\n\nimport tensorflow_datasets as tfds\nimport tensorflow_text as tf_text\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\n\n# Training set.\ntrain_ds = tfds.load(\n    'imdb_reviews',\n    split='train[:80%]',\n    shuffle_files=True,\n    as_supervised=True)\n\n# Validation set - a tf.data.Dataset object\nval_ds = tfds.load(\n    'imdb_reviews',\n    split='train[80%:]',\n    shuffle_files=True,\n    as_supervised=True)\n\n\n# Check the count of records\nprint(train_ds.cardinality().numpy())\nprint(val_ds.cardinality().numpy())\n</code></pre> <p>\u8fd4\u56de\u503c\u4e3a\uff1a</p> <pre><code>20000\n5000\n</code></pre> <p>\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\u67e5\u770b\u4e00\u6761\u793a\u4f8b\u6570\u636e:</p> <pre><code>for data, label in  train_ds.take(1):\n  print(type(data))\n  print('Text:', data.numpy())\n  print('Label:', label.numpy())\n</code></pre> <p>\u8fd4\u56de\u503c\u4e3a:</p> <pre><code>&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;\nText: b\"This was an absolutely terrible movie. Don't be lured in by Christopher Walken or Michael Ironside. Both are great actors, but this must simply be their worst role in history. Even their great acting could not redeem this movie's ridiculous storyline. This movie is an early nineties US propaganda piece. The most pathetic scenes were those when the Columbian rebels were making their cases for revolutions. Maria Conchita Alonso appeared phony, and her pseudo-love affair with Walken was nothing but a pathetic emotional plug in a movie that was devoid of any real meaning. I am disappointed that there are movies like this, ruining actor's like Christopher Walken's good name. I could barely sit through it.\"\nLabel: 0\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#3","title":"3 \u6587\u672c\u9884\u5904\u7406","text":"<p>\u8be5\u5c0f\u8282\u4f7f\u7528tf_text\u548ctf.stings\u7684\u5904\u7406\u6587\u672c\u7684API\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0ctf.data.Dataset\u80fd\u591f\u5f88\u65b9\u4fbf\u5730\u5c06\u5bf9\u5e94\u7684\u51fd\u6570\u6620\u5c04\u5230\u6570\u636e\u4e2d\uff0c\u63a8\u8350\u5b66\u4e60\u548c\u4f7f\u7528\u3002</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#31","title":"3.1 \u8f6c\u6362\u6587\u5b57\u5927\u5c0f\u5199","text":"<p>\u5206\u7c7b\u4efb\u52a1\u4e2d\u5b57\u7b26\u5927\u5c0f\u5199\u5bf9\u6a21\u578b\u9884\u6d4b\u6ca1\u6709\u8d21\u732e\uff0c\u56e0\u6b64\u5bf9dataset\u4f7f\u7528<code>map</code>\u64cd\u4f5c\u628a\u6240\u6709\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199\uff0c\u52a1\u5fc5\u6ce8\u610ftf.data.Dataset\u91cc\u7684\u6570\u636e\u683c\u5f0f\u3002</p> <pre><code>train_ds = train_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\nval_ds = val_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#32","title":"3.2 \u6587\u672c\u683c\u5f0f\u5316","text":"<p>\u8be5\u6b65\u9aa4\u5bf9\u6587\u672c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u683c\u5f0f\u5316\u5904\u7406\uff0c\u5982\u6807\u70b9\u524d\u540e\u52a0\u4e0a\u7a7a\u683c\uff0c\u5229\u4e8e\u540e\u7eed\u6b65\u9aa4\u4f7f\u7528\u7a7a\u683c\u5206\u8bcd\u3002</p> <pre><code>str_regex_pattern = [(\"[^A-Za-z0-9(),!?\\'\\`]\", \" \"),(\"\\'s\", \" \\'s\",) ,(\"\\'ve\", \" \\'ve\"),(\"n\\'t\", \" n\\'t\"),(\"\\'re\", \" \\'re\"),(\"\\'d\", \" \\'d\")\n,(\"\\'ll\", \" \\'ll\"),(\",\", \" , \"),(\"!\", \" ! \"),(\"\\(\", \" \\( \"),(\"\\)\", \" \\) \"),(\"\\?\", \" \\? \"),(\"\\s{2,}\", \" \")]\n\nfor pattern, rewrite in str_regex_pattern:\n  train_ds = train_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\n  val_ds = val_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#33","title":"3.3 \u6784\u5efa\u8bcd\u8868","text":"<p>\u4f7f\u7528\u8bad\u7ec3\u96c6\u6784\u9020\u8bcd\u8868\uff08\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6216\u8005\u6d4b\u8bd5\u96c6\uff0c\u4f1a\u5bfc\u81f4\u4fe1\u606f\u6cc4\u9732\uff09\uff0c\u8be5\u6b65\u9aa4\u5c06\u5b57\u7b26\u6620\u5c04\u5230\u76f8\u5e94\u7684\u7d22\u5f15\uff0c\u5229\u4e8e\u5c06\u6570\u636e\u8f6c\u5316\u4e3a\u6a21\u578b\u80fd\u591f\u8fdb\u884c\u8bad\u7ec3\u548c\u9884\u6d4b\u7684\u683c\u5f0f\u3002</p> <pre><code># Do not use validation set as that will lead to data leak\ntrain_text = train_ds.map(lambda text, label: text)\n\ntokenizer = tf_text.WhitespaceTokenizer()\n\nunique_tokens = collections.defaultdict(lambda: 0)\nsentence_length =  []\nfor text in train_text.as_numpy_iterator():\n  tokens = tokenizer.tokenize(text).numpy()\n  sentence_length.append(len(tokens))\n  for token in tokens:\n    unique_tokens[token] += 1\n\n# check out the average sentence length -&gt; ~250 tokens\nprint(sum(sentence_length)/len(sentence_length))\n\n# print 10 most used tokens - token, frequency\nd_view = [ (v,k) for k,v in unique_tokens.items()]\nd_view.sort(reverse=True)  \nfor v,k in d_view[:10]:\n    print(\"%s: %d\" % (k,v))\n</code></pre> <p>\u8fd4\u56de\u503c\u663e\u793a\uff0c\u9ad8\u9891\u4f7f\u7528\u7684\u8bcd\u90fd\u662f\u82f1\u8bed\u4e2d\u5e38\u89c1\u7684\u5b57\u7b26\uff1a</p> <pre><code>b'the': 269406\nb',': 221098\nb'and': 131502\nb'a': 130309\nb'of': 116695\nb'to': 108605\nb'is': 88351\nb'br': 81558\nb'it': 77094\nb'in': 75177\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u56fe\u8868\u76f4\u89c2\u5730\u5c55\u793a\u6bcf\u4e2a\u8bcd\u7684\u4f7f\u7528\u9891\u7387\uff0c\u8fd9\u4e00\u6b65\u6709\u5229\u4e8e\u5e2e\u52a9\u9009\u62e9\u8bcd\u8868\u7684\u5927\u5c0f\u3002</p> <pre><code>fig = px.scatter(x=range(len(d_view)), y=[cnt for cnt, word in d_view])\nfig.show()\n</code></pre> \u8bcd\u7684\u4f7f\u7528\u9891\u7387\u5206\u5e03 <p>\u7531\u56fe\u53ef\u89c1\uff0c\u5728\u4e03\u4e07\u591a\u4e2a\u5b57\u7b26\u4e2d\uff0c\u8bb8\u591a\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387\u6781\u4f4e\uff0c\u56e0\u6b64\u9009\u62e9\u8bcd\u8868\u5927\u5c0f\u4e3a\u4e24\u4e07\u3002</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#34","title":"3.4 \u6784\u5efa\u8bcd\u8868\u6620\u5c04","text":"<p>\u4f7f\u7528TensorFlow\u7684<code>tf.lookup.StaticVocabularyTable</code>\u5bf9\u5b57\u7b26\u8fdb\u884c\u6620\u5c04\uff0c\u5176\u80fd\u5c06\u5b57\u7b26\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u7d22\u5f15\u4e0a\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u6837\u672c\u8fdb\u884c\u6d4b\u8bd5\u3002</p> <pre><code>keys = [token for cnt, token in d_view][:vocab_size]\nvalues = range(2, len(keys) + 2)  # Reserve `0` for padding, `1` for OOV tokens.\n\nnum_oov_buckets =1\n\n# Note: must assign the key_dtype and value_dtype when the keys and values are Python arrays\ninit = tf.lookup.KeyValueTensorInitializer(\n    keys= keys,\n    values= values,\n    key_dtype=tf.string, value_dtype=tf.int64)\n\ntable = tf.lookup.StaticVocabularyTable(\n   init,\n   num_oov_buckets=num_oov_buckets)\n\n# Test the look up table with sample input\ninput_tensor = tf.constant([\"emerson\", \"lake\", \"palmer\", \"king\"])\nprint(table[input_tensor].numpy())\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>array([20000,  2065, 14207,   618])\n</code></pre> <p>\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5c06\u6587\u672c\u6620\u5c04\u5230\u7d22\u5f15\u4e0a\u4e86\uff0c\u6784\u9020\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u8f6c\u5316\uff0c\u5e76\u5c06\u5b83\u4f5c\u7528\u5230\u6570\u636e\u96c6\u4e0a\uff1a</p> <pre><code>def text_index_lookup(text, label):\n  tokenized = tokenizer.tokenize(text)\n  vectorized = table.lookup(tokenized)\n  return vectorized, label\n\ntrain_ds = train_ds.map(text_index_lookup)\nval_ds = val_ds.map(text_index_lookup)\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#35","title":"3.5 \u914d\u7f6e\u6570\u636e\u96c6","text":"<p>\u501f\u52a9tf.data.Dataset\u7684<code>cache</code>\u548c<code>prefetch</code>API\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u6027\u80fd\uff0c<code>cache</code>\u65b9\u6cd5\u5c06\u6570\u636e\u52a0\u8f7d\u5728\u5185\u5b58\u4e2d\u7528\u4e8e\u5feb\u901f\u8bfb\u5199\uff0c\u800c<code>prefetch</code>\u5219\u80fd\u591f\u5728\u6a21\u578b\u9884\u6d4b\u65f6\u540c\u6b65\u5904\u7406\u6570\u636e\uff0c\u63d0\u9ad8\u65f6\u95f4\u5229\u7528\u7387\u3002</p> <pre><code>AUTOTUNE = tf.data.AUTOTUNE\n\ndef configure_dataset(dataset):\n  return dataset.cache().prefetch(buffer_size=AUTOTUNE)\n\ntrain_ds = configure_dataset(train_ds)\nval_ds = configure_dataset(val_ds)\n</code></pre> <p>\u6587\u672c\u957f\u77ed\u4e0d\u4e00\uff0c\u4f46\u795e\u7ecf\u7f51\u7edc\u9700\u8981\u8f93\u5165\u6570\u636e\u5177\u6709\u56fa\u5b9a\u7684\u7ef4\u5ea6\uff0c\u56e0\u6b64\u5bf9\u6570\u636e\u8fdb\u884cpadding\u786e\u4fdd\u957f\u5ea6\u4e00\u81f4\uff0c\u5e76\u5206\u6279\u6b21\u3002</p> <pre><code>BATCH_SIZE = 32\ntrain_ds = train_ds.padded_batch(BATCH_SIZE  )\nval_ds = val_ds.padded_batch(BATCH_SIZE  )\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#36","title":"3.6 \u5904\u7406\u6d4b\u8bd5\u96c6","text":"<p>\u7528\u4e8e\u9a8c\u8bc1\u6a21\u578b\u6027\u80fd\u7684\u6d4b\u8bd5\u96c6\u4e5f\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u786e\u4fdd\u6a21\u578b\u53ef\u4ee5\u6b63\u5e38\u9884\u6d4b\uff1a</p> <pre><code># Test set.\ntest_ds = tfds.load(\n    'imdb_reviews',\n    split='test',\n    # batch_size=BATCH_SIZE,\n    shuffle_files=True,\n    as_supervised=True)\n\ntest_ds = test_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\n\nfor pattern, rewrite in str_regex_pattern:\n  test_ds = test_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\n\ntest_ds = test_ds.map(text_index_lookup)\ntest_ds = configure_dataset(test_ds)\ntest_ds = test_ds.padded_batch(BATCH_SIZE  )\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#4","title":"4 \u5efa\u7acb\u6a21\u578b","text":"","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#41-sequential-api","title":"4.1 \u4f7f\u7528Sequential API\u6784\u5efa\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<pre><code>vocab_size += 2 # 0 for padding and 1 for oov token\n\ndef create_model(vocab_size, num_labels, dropout_rate):\n  model = tf.keras.Sequential([\n      tf.keras.layers.Embedding(vocab_size, 128, mask_zero=True),\n\n      tf.keras.layers.Conv1D(32, 3, padding=\"valid\", activation=\"relu\", strides=1),\n      tf.keras.layers.MaxPooling1D(pool_size=2),\n\n      tf.keras.layers.Conv1D(64, 4, padding=\"valid\", activation=\"relu\", strides=1),\n      tf.keras.layers.MaxPooling1D(pool_size=2),\n\n      tf.keras.layers.Conv1D(128, 5, padding=\"valid\", activation=\"relu\", strides=1),\n      tf.keras.layers.GlobalMaxPooling1D( ),\n\n      tf.keras.layers.Dropout(dropout_rate),\n\n      tf.keras.layers.Dense(num_labels)\n  ])\n  return model\n\ntf.keras.backend.clear_session()\nmodel = create_model(vocab_size=vocab_size, num_labels=2, dropout_rate=0.5)\n\n# \u5728SGD\u4e2d\u4f7f\u7528momentum\u5c06\u663e\u8457\u63d0\u9ad8\u6536\u655b\u901f\u5ea6\nloss = losses.SparseCategoricalCrossentropy(from_logits=True)\noptimizer = tf.keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n\nmodel.compile(loss=loss, optimizer=optimizer, metrics='accuracy')\n\nprint(model.summary())\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>Model: \"sequential\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n embedding (Embedding)       (None, None, 128)         2560256   \n\n conv1d (Conv1D)             (None, None, 32)          12320     \n\n max_pooling1d (MaxPooling1D  (None, None, 32)         0         \n )                                                               \n\n conv1d_1 (Conv1D)           (None, None, 64)          8256      \n\n max_pooling1d_1 (MaxPooling  (None, None, 64)         0         \n 1D)                                                             \n\n conv1d_2 (Conv1D)           (None, None, 128)         41088     \n\n global_max_pooling1d (Globa  (None, 128)              0         \n lMaxPooling1D)                                                  \n\n dropout (Dropout)           (None, 128)               0         \n\n dense (Dense)               (None, 2)                 258       \n\n=================================================================\nTotal params: 2,622,178\nTrainable params: 2,622,178\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>\u63a5\u4e0b\u6765\u5373\u53ef\u8bad\u7ec3\u3001\u8bc4\u4f30\u6a21\u578b\uff1a</p> <pre><code># early stopping reduces the risk of overfitting\nearly_stopping = tf.keras.callbacks.EarlyStopping(patience=10)\nepochs = 100\nhistory = model.fit(x=train_ds, validation_data=val_ds,epochs=epochs, callbacks=[early_stopping])\n\nloss, accuracy = model.evaluate(test_ds)\n\nprint(\"Loss: \", loss)\nprint(\"Accuracy: {:2.2%}\".format(accuracy))\n</code></pre> <p>\u8003\u8651\u5230\u6a21\u578b\u7ed3\u6784\u7b80\u5355\uff0c\u6548\u679c\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff1a</p> <pre><code>782/782 [==============================] - 57s 72ms/step - loss: 0.4583 - accuracy: 0.8678\nLoss:  0.45827823877334595\nAccuracy: 86.78%\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#42-functional-apilstm","title":"4.2 \u4f7f\u7528Functional API\u6784\u5efa\u53cc\u5411LSTM","text":"<p>\u6b65\u9aa4\u4e0e\u4f7f\u7528Sequential API\u7c7b\u4f3c\uff0c\u4f46Functional API\u66f4\u4e3a\u7075\u6d3b\u3002</p> <pre><code>input = tf.keras.layers.Input([None] )\nx = tf.keras.layers.Embedding(\n        input_dim=vocab_size,\n        output_dim=128,\n        # Use masking to handle the variable sequence lengths\n        mask_zero=True)(input)\n\nx = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(64))(x)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\nx = tf.keras.layers.Dropout(dropout_rate)(x)\noutput = tf.keras.layers.Dense(num_labels)(x)\n\nlstm_model = tf.keras.Model(inputs=input, outputs=output, name=\"text_lstm_model\")\n\nloss = losses.SparseCategoricalCrossentropy(from_logits=True)\noptimizer = tf.keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n\nlstm_model.compile(loss=loss, optimizer=optimizer, metrics='accuracy')\n\nlstm_model.summary()\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>Model: \"text_lstm_model\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n input_5 (InputLayer)        [(None, None)]            0         \n\n embedding_5 (Embedding)     (None, None, 128)         2560256   \n\n bidirectional_4 (Bidirectio  (None, 128)              98816     \n nal)                                                            \n\n dense_4 (Dense)             (None, 64)                8256      \n\n dropout_2 (Dropout)         (None, 64)                0         \n\n dense_5 (Dense)             (None, 2)                 130       \n\n=================================================================\nTotal params: 2,667,458\nTrainable params: 2,667,458\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>\u540c\u6837\u5730\uff0c\u5bf9\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u4e0e\u9884\u6d4b\uff1a</p> <pre><code>history_2 = lstm_model.fit(x=train_ds, validation_data=val_ds, epochs=epochs, callbacks=[early_stopping])\n\nloss, accuracy = lstm_model.evaluate(test_ds)\n\nprint(\"Loss: \", loss)\nprint(\"Accuracy: {:2.2%}\".format(accuracy))\n</code></pre> <p>\u8003\u8651\u5230\u6a21\u578b\u7ed3\u6784\u7b80\u5355\uff0c\u6548\u679c\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff1a</p> <pre><code>782/782 [==============================] - 84s 106ms/step - loss: 0.4105 - accuracy: 0.8160\nLoss:  0.4105057716369629\nAccuracy: 81.60%\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#5","title":"5 \u603b\u7ed3","text":"<p>\u5173\u4e8e\u6587\u672c\u5206\u7c7b\uff0c\u8fd8\u6709\u8bb8\u591a\u65b0\u7684\u6280\u672f\u53ef\u4ee5\u5c1d\u8bd5\uff0c\u4e0a\u8ff0\u5de5\u4f5c\u6d41\u4e2d\u4e5f\u8fd8\u6709\u8bb8\u591a\u51b3\u7b56\u53ef\u4ee5\u505a\u8bd5\u9a8c\uff08\u70bc\u4e39\uff09\uff0c\u672c\u6587\u65e8\u5728\u4f7f\u7528\u6700\u65b0\u7684TensorFlow API\u8fc7\u4e00\u904d\u6587\u672c\u5206\u7c7b\u4efb\u52a1\u4e2d\u7684\u91cd\u8981\u77e5\u8bc6\u70b9\u548c\u5e38\u7528API\uff0c\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4ecd\u6709\u8bb8\u591a\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\u3002\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/","title":"\u4f7f\u7528TensorFlow Decision Forests\u6784\u5efa\u6811\u6a21\u578b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-04-24\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#1","title":"1 \u524d\u8a00","text":"<p>\u4e00\u76f4\u4ee5\u6765\u6df1\u5ea6\u5b66\u4e60\u548c\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u90fd\u6709\u5728\u5404\u81ea\u9886\u57df\u51fa\u8272\u7684\u6846\u67b6\uff0c\u5982\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\uff0c\u57fa\u672c\u4e0a\u4f1a\u9009\u62e9\u4f7f\u7528TensorFlow\u548cPyTorch\u3002\u5728\u73b0\u5b9e\u5de5\u4f5c\u4e2d\u5e94\u5bf9\u8868\u683c\u578b\u6570\u636e\u65f6\uff0c\u4f20\u7edf\u7684\u6811\u6a21\u578b\u8868\u73b0\u4ecd\u7136\u5341\u5206\u5f3a\u52b2\u3002\u53ef\u662f\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\uff0c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5e76\u6ca1\u6709API\u6784\u5efa\u6811\u6a21\u578b\uff0c\u76f4\u5230<code>TensorFlow Decision Forests</code>\u7684\u51fa\u73b0\u3002</p> <p><code>TensorFlow Decision Forests</code>\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217API\u6784\u5efa\u57fa\u4e8e\u51b3\u7b56\u6811\u7684\u6a21\u578b\uff0c\u5982\u5206\u7c7b\u56de\u5f52\u6811\uff08CART\uff09\uff0c\u968f\u673a\u68ee\u6797\uff0c\u68af\u5ea6\u63d0\u5347\u6811\u7b49\uff0c\u4f7f\u7528<code>TensorFlow Decision Forests</code>\uff0c\u53ef\u4ee5\u4f7f\u7528\u50cf\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\u7684\u8303\u5f0f\uff0c\u6784\u5efa\u6811\u6a21\u578b\u3002\u672c\u6587\u5c06\u4e00\u63a2\u7a76\u7adf\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#2","title":"2 \u83b7\u53d6\u6570\u636e","text":"<p>\u5982\u5f80\u5e38\u4e00\u6837\uff0c\u5148\u5bfc\u5165\u4f9d\u8d56\uff0c\u5e76\u4e0b\u8f7d\u6570\u636e\u3002\u5728\u6b64\u4f7f\u7528\u4e00\u4e2a\u8868\u683c\u578b\u6570\u636e\u96c6\u9884\u6d4b\u4f01\u9e45\u7684\u79cd\u7c7b\u3002</p> <pre><code>import tensorflow_decision_forests as tfdf\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport math\n\n# Download the dataset\n!wget -q https://storage.googleapis.com/download.tensorflow.org/data/palmer_penguins/penguins.csv -O /tmp/penguins.csv\n\n# Load a dataset into a Pandas Dataframe.\ndataset_df = pd.read_csv(\"/tmp/penguins.csv\")\n\n# Display the first 3 examples.\ndataset_df.head(3)\n</code></pre> species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex year Adelie Torgersen 39.1 18.7 181.0 3750.0 male 2007 Adelie Torgersen 39.5 17.4 186.0 3800.0 female 2007 Adelie Torgersen 40.3 18.0 195.0 3250.0 female 2007 <p>\u6307\u5b9a\u6807\u7b7e\u5b57\u6bb5\uff0c\u5e76\u5c06\u6807\u7b7e\u7c7b\u522b\u8f6c\u6362\u4e3a\u6574\u578b\u6570\u636e\u3002</p> <pre><code>label = \"species\"\n\nclasses = dataset_df[label].unique().tolist()\nprint(f\"Label classes: {classes}\")\n\ndataset_df[label] = dataset_df[label].map(classes.index)\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#3","title":"3 \u5206\u5272\u5e76\u5904\u7406\u6570\u636e","text":"<p>\u5c06\u6570\u636e\u5206\u5272\u6210\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff1a</p> <pre><code>def split_dataset(dataset, test_ratio=0.30):\n\"\"\"Splits a panda dataframe in two.\"\"\"\n  test_indices = np.random.rand(len(dataset)) &lt; test_ratio\n  return dataset[~test_indices], dataset[test_indices]\n\n\ntrain_ds_pd, test_ds_pd = split_dataset(dataset_df)\nprint(\"{} examples in training, {} examples for testing.\".format(\n    len(train_ds_pd), len(test_ds_pd)))\n</code></pre> <p>\u5e76\u4e14\u5c06<code>Pandas DataFrame</code>\u8f6c\u5316\u4e3a<code>TensorFlow Dataset</code>\uff0c\u5229\u4e8e\u7b80\u5316\u540e\u7eed\u7684\u7a0b\u5e8f\u5e76\u63d0\u5347\u6548\u7387\u3002</p> <pre><code>train_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_ds_pd, label=label)\ntest_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test_ds_pd, label=label)\n</code></pre> <p>\u5230\u8fd9\u4e00\u6b65\u5373\u53ef\u628a\u6570\u636e\u6ce8\u5165\u6a21\u578b\u8fdb\u884c\u8bad\u7ec3\u4e86\u3002\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff0c<code>TensorFlow Decision Forests</code>\u5bf9\u4e8e\u6811\u6a21\u578b\u7684\u5b9e\u73b0\u6709\u5982\u4e0b\u4f18\u70b9\uff1a</p> <ul> <li>\u81ea\u52a8\u5904\u7406\u4e86\u6570\u503c\u578b\u548c\u7c7b\u522b\u578b\u7684\u53d8\u91cf\uff0c\u65e0\u9700\u5bf9\u7c7b\u522b\u578b\u53d8\u91cf\u505a\u7f16\u7801\uff0c\u4e5f\u65e0\u9700\u5bf9\u6570\u503c\u578b\u53d8\u91cf\u505a\u5f52\u4e00\u5316\u3002\u7b97\u6cd5\u5bf9\u4e8e\u7f3a\u5931\u503c\u4e5f\u80fd\u5f88\u597d\u5730\u5904\u7406\uff01</li> <li>\u8d85\u53c2\u6570\u57fa\u672c\u4e0e\u5176\u4ed6\u6846\u67b6\u7c7b\u4f3c\uff0c\u540c\u65f6\uff0c\u9ed8\u8ba4\u53c2\u6570\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u80fd\u7ed9\u51fa\u4e0d\u9519\u7684\u7ed3\u679c\u3002</li> <li>\u8bad\u7ec3\u524d\uff0c\u65e0\u9700compile\u6a21\u578b\uff0c\u5e76\u4e14\u8bad\u7ec3\u65f6\u4e0d\u9700\u8981\u9a8c\u8bc1\u96c6\uff0c\u9a8c\u8bc1\u96c6\u4ec5\u7528\u4e8e\u5c55\u793a\u6027\u80fd\u6307\u6807</li> </ul> <p>\u6ce8\u610f\uff0c\u8fd9\u5e76\u4e0d\u4ee3\u8868\u4f7f\u7528<code>TensorFlow Decision Forests</code>\u53ef\u4ee5\u7701\u53bb\u6240\u6709\u7684\u7279\u5f81\u5de5\u7a0b\uff0c\u4f46\u5b83\u7684\u786e\u80fd\u8282\u7ea6\u5f88\u591a\u65f6\u95f4\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#4","title":"4 \u5efa\u6a21","text":"<p>\u4f7f\u7528<code>TensorFlow Decision Forests</code>\u6784\u5efa\u6811\u6a21\u578b\u548c\u4f7f\u7528TensorFlow\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u975e\u5e38\u7c7b\u4f3c\uff1a</p> <pre><code># \u6784\u5efa\u968f\u673a\u68ee\u6797\nmodel = tfdf.keras.RandomForestModel()\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel.fit(x=train_ds)\n\n# \u8bc4\u4f30\u6a21\u578b\nmodel.compile(metrics=[\"accuracy\"])\nevaluation = model.evaluate(test_ds, return_dict=True)\nprint()\n\nfor name, value in evaluation.items():\n  print(f\"{name}: {value:.4f}\")\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>1/1 [==============================] - 1s 706ms/step - loss: 0.0000e+00 - accuracy: 0.9608\n\nloss: 0.0000\naccuracy: 0.9608\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#5","title":"5 \u53ef\u89c6\u5316\u6811\u6a21\u578b","text":"<p><code>TensorFlow Decision Forests</code>\u63d0\u4f9b\u4e86\u539f\u751fAPI\u5bf9\u6811\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u5728\u6b64\u9009\u62e9\u68ee\u6797\u91cc\u7684\u4e00\u9897\u6811\u8fdb\u884c\u5c55\u793a\u3002</p> <pre><code>with open(\"plot.html\", \"w\") as f:\n  f.write(tfdf.model_plotter.plot_model(model, tree_idx=0, max_depth=3))\n\nfrom IPython.display import IFrame\nIFrame(src='./plot.html', width=700, height=600)\n</code></pre> \u53ef\u89c6\u5316\u6811 <p>\u540c\u65f6\u5728<code>model.summary()</code>\u65b9\u6cd5\u91cc\u4e5f\u6709\u8bb8\u591a\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u5982\u8f93\u5165\u7279\u5f81\u3001\u7279\u5f81\u91cd\u8981\u6027\u3001\u8282\u70b9\u4fe1\u606f\u7b49\uff08\u7bc7\u5e45\u6709\u9650\uff0c\u5728\u6b64\u4e0d\u4e00\u4e00\u5c55\u5f00\uff09\u3002\u540c\u65f6\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u7cbe\u5ea6\u548c\u635f\u5931\u4e5f\u53ef\u4ee5\u53ef\u89c6\u5316\uff1a</p> <pre><code>import matplotlib.pyplot as plt\n\nlogs = model.make_inspector().training_logs()\n\nplt.figure(figsize=(12, 4))\n\nplt.subplot(1, 2, 1)\nplt.plot([log.num_trees for log in logs], [log.evaluation.accuracy for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Accuracy (out-of-bag)\")\n\nplt.subplot(1, 2, 2)\nplt.plot([log.num_trees for log in logs], [log.evaluation.loss for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Logloss (out-of-bag)\")\n\nplt.show()\n</code></pre> \u8bad\u7ec3\u8fc7\u7a0b","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#6","title":"6 \u603b\u7ed3","text":"<p><code>TensorFlow Decision Forests</code>\u5bf9\u4e8eTensorFlow\u7684\u751f\u6001\u8fdb\u884c\u4e86\u8865\u5f3a\uff0c\u5bf9\u4e8e\u8868\u683c\u578b\u6570\u636e\u7684\u5efa\u6a21\uff0c\u7ed9\u6570\u636e\u79d1\u5b66\u5bb6\u4eec\u53c8\u63d0\u4f9b\u4e86\u65b0\u7684\u601d\u8def\u3002\u5176\u73b0\u5728\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff08v0.2.3\uff09\uff0c\u4f46\u5df2\u7ecf\u6709\u8bb8\u591a\u53ef\u7528\u7684\u9ad8\u8d28\u91cfAPI\uff0c\u66f4\u591a\u7684\u529f\u80fd\u53ef\u67e5\u770b\u6587\u6863\u3002\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-05-07-TF-Playground/","title":"TensorFlow Playground\u7b80\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-05-07\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-05-07-TF-Playground/#1","title":"1 \u524d\u8a00","text":"<p>\u672c\u4eba\u5728\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\u65f6\uff0c\u5bf9\u53ef\u89c6\u5316\u7684\u597d\u5904\u6df1\u6709\u4f53\u4f1a\uff1a\u5982\u679c\u5bf9\u6570\u636e\u3001\u6a21\u578b\u7ed3\u6784\u3001\u6a21\u578b\u8f93\u51fa\u7b49\u4fe1\u606f\u6709\u76f4\u89c2\u7684\u7406\u89e3\uff0c\u5c06\u66f4\u5bb9\u6613\u53d1\u73b0\u5176\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\uff0c\u8fd9\u6709\u5229\u4e8e\u4f18\u5316\u6a21\u578b\uff0c\u5e76\u4e14\u81ea\u5df1\u5bf9\u4e8e\u76f8\u5173\u77e5\u8bc6\u70b9\u7684\u8ba4\u8bc6\u4e5f\u66f4\u52a0\u6df1\u523b\u3002\u5bf9\u4e8eTensorFlow\u6846\u67b6\u800c\u8a00\uff0cGoogle\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u5e94\u7528\u6765\u5c55\u793a\u795e\u7ecf\u7f51\u7edc\u7684\u5de5\u4f5c\u539f\u7406 - TensorFlow Playground\u3002</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-05-07-TF-Playground/#2","title":"2 \u4ea7\u54c1\u7279\u5f81","text":"<p>\u8fd9\u662fTensorFlow Playground\u7684\u4e3b\u9875\uff0c\u5b83\u63d0\u4f9b\u4e86\u5728\u7ebf\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff08\u4ec5\u9650\u4e8e\u591a\u5c42\u611f\u77e5\u673a\uff09\u7684\u57fa\u672c\u529f\u80fd\u3002</p> TensorFlow Playground\u7684\u4e3b\u9875 <p>\u8be5\u4ea7\u54c1\u5f00\u653e\u4e86\u591a\u79cd\u53c2\u6570\u53ef\u4f9b\u8c03\u8bd5\uff0c\u8bbe\u7f6e\u597d\u53c2\u6570\u540e\uff0c\u70b9\u51fb\u5f00\u59cb\u5c31\u80fd\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff01\u8fd9\u7ed9\u6df1\u5ea6\u5b66\u4e60\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u8bb8\u591a\u4f18\u5316\u89e3\u51b3\u65b9\u6848\u7684\u601d\u8def\uff0c\u6bd4\u5982\uff1a</p> <ul> <li><code>\u4efb\u52a1\u7c7b\u578b</code>\uff1a\u5206\u7c7b\u6216\u662f\u56de\u5f52\u3002</li> <li><code>\u8f93\u5165\u6570\u636e</code>\uff1a\u5982\u6570\u636e\u7684\u5206\u5e03\u3001\u6570\u636e\u96c6\u5206\u5272\u7684\u6bd4\u4f8b\u3001\u6570\u636e\u91cc\u5b58\u5728\u7684\u566a\u97f3\u548c\u6279\u91cf\u5927\u5c0f\u3002</li> <li><code>\u7279\u5f81</code>\uff1a\u7279\u5f81\u7684\u53d8\u6362\u3002</li> <li><code>\u6a21\u578b\u67b6\u6784</code>\uff1a\u9690\u85cf\u5c42\u7684\u6570\u91cf\u3001\u9690\u85cf\u5c42\u91cc\u795e\u7ecf\u5143\u7684\u6570\u91cf\u3001\u795e\u7ecf\u5143\u6fc0\u6d3b\u51fd\u6570\u7684\u7c7b\u578b\u3001\u6b63\u5219\u5316\u7684\u53c2\u6570\u3001\u8f93\u51fa\u7684\u7ef4\u5ea6\u7b49\u3002</li> <li><code>\u6a21\u578b\u9884\u6d4b\u7ed3\u679c</code>\uff1a\u6a21\u578b\u51b3\u7b56\u8fb9\u754c\u3002</li> </ul> <p>\u8fd9\u4e9b\u5f71\u54cd\u56e0\u7d20\u5e76\u672a\u6db5\u76d6\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u65b9\u65b9\u9762\u9762\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0d\u9519\u7684\u5207\u5165\u70b9\uff0c\u548c\u4e00\u4e2a\u53ef\u4f9b\u5b9e\u9a8c\u7684\u5e73\u53f0\u3002\u8fd9\u5bf9\u4e8e\u4e86\u89e3\u539f\u7406\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u5f88\u65b9\u4fbf\u5730\u9a8c\u8bc1\u4f60\u7684\u8bbe\u60f3\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-05-07-TF-Playground/#3","title":"3 \u603b\u7ed3","text":"<p>TensorFlow Playground\u5bf9\u4e8e\u521d\u5b66\u8005\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u8bd5\u9a8c\u4ea7\u54c1\uff0c\u4e0d\u59a8\u52a8\u624b\u53bb\u8c03\u6574\u90a3\u4e9b\u53c2\u6570\uff0c\u68c0\u67e5\u6a21\u578b\u6548\u679c\u662f\u5426\u4e0e\u4f60\u7684\u9884\u671f\u76f8\u540c\uff0c\u5982\u679c\u7ed3\u679c\u4e0d\u7406\u60f3\uff0c\u60f3\u529e\u6cd5\u901a\u8fc7\u8c03\u6574\u90a3\u4e9b\u53c2\u6570\u8ba9\u6a21\u578b\u7684\u6027\u80fd\u53d8\u5f97\u66f4\u597d\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u5b9e\u9645\u5de5\u4f5c\u4e2d\u4f60\u9700\u8981\u9762\u5bf9\u7684\u5de5\u4f5c\u6d41\uff0c\u800cTensorFlow Playground\u6210\u4e3a\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684\u5f00\u59cb\uff01\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/","title":"\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-05-14\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#1","title":"1 \u524d\u8a00","text":"<p>\u672c\u6587\u5c06\u4f7f\u7528TensorFlow\u89e3\u51b3\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u7684\u95ee\u9898\uff0cTensorFlow\u5b98\u7f51\u6709\u4e00\u4e2a\u975e\u5e38\u8be6\u5c3d\u4f46\u5197\u957f\u7684\u6559\u7a0b\uff0c\u6240\u4ee5\u672c\u6587\u5c06\u5265\u8327\u62bd\u4e1d\uff0c\u7528\u901a\u4fd7\u6613\u61c2\u7684\u529e\u6cd5\u8fc7\u4e00\u904d\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6700\u6838\u5fc3\u7684\u5185\u5bb9\u3002</p>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#2","title":"2 \u6bd4\u7279\u5e01\u4ef7\u683c\u6570\u636e\u96c6","text":"","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#21","title":"2.1 \u83b7\u53d6\u6570\u636e","text":"<p>\u672c\u6587\u4f7f\u7528\u6bd4\u7279\u5e01\u5386\u53f2\u4ef7\u683c\u6570\u636e(2013\u5e7410\u6708\u81f32021\u5e745\u6708)\u8fdb\u884c\u9884\u6d4b\uff0c\u8bf7\u6ce8\u610f\u672c\u6587\u4e0d\u6784\u6210\u6295\u8d44\u5efa\u8bae\uff01</p> <pre><code>!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/BTC_USD_2013-10-01_2021-05-18-CoinDesk.csv\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport tensorflow as tf\nfrom tensorflow.keras as layers\n\ndf = pd.read_csv(\"/content/BTC_USD_2013-10-01_2021-05-18-CoinDesk.csv\",\n                 parse_dates=[\"Date\"],\n                 index_col=[\"Date\"]) # Parse the date column\n\ndf.tail()\n</code></pre> <p>\u8fd4\u56de\u4e3a\uff1a</p> Date Currency Closing Price (USD) 24h Open (USD) 24h High (USD) 24h Low (USD) 2021-05-14 BTC 49764.132082 49596.778891 51448.798576 46294.720180 2021-05-15 BTC 50032.693137 49717.354353 51578.312545 48944.346536 2021-05-16 BTC 47885.625255 49926.035067 50690.802950 47005.102292 2021-05-17 BTC 45604.615754 46805.537852 49670.414174 43868.638969 2021-05-18 BTC 43144.471291 46439.336570 46622.853437 42102.346430 <p>\u5728\u6b64\u53d6\u6536\u76d8\u4ef7\u8fdb\u884c\u9884\u6d4b\uff1a</p> <pre><code>bitcoin_prices = pd.DataFrame(df[\"Closing Price (USD)\"]).rename({\"Closing Price (USD)\":\"Price\"},axis=1)\nbitcoin_prices.head()\n</code></pre> Date Price 2013-10-01 123.65499 2013-10-02 125.45500 2013-10-03 108.58483 2013-10-04 118.67466 2013-10-05 121.33866 <p>\u901a\u8fc7\u56fe\u8868\u67e5\u770b\u6bd4\u7279\u5e01\u4ef7\u683c\u8d70\u52bf\uff1a</p> <pre><code>plt.plot(bitcoin_prices[\"Price\"])\nplt.ylabel(\"Bitcoin price\")\nplt.xlabel(\"Date\")\n</code></pre> \u6bd4\u7279\u5e01\u4ef7\u683c\u8d70\u52bf","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#22","title":"2.2 \u5236\u4f5c\u65f6\u95f4\u7a97\u53e3","text":"<p>\u9884\u671f\u7684\u6570\u636e\u683c\u5f0f\u4e3a<code>[0,1,2,3,4,5,6] -&gt; [7]</code>\uff0c\u5373\u4f7f\u7528\u8fc7\u53bb\u4e03\u5929\u7684\u4ef7\u683c\u9884\u6d4b\u63a5\u4e0b\u6765\u4e00\u5929\u7684\u4ef7\u683c\u3002\u5728\u6b64\uff0c\u4f7f\u7528TensorFlow\u63d0\u4f9b\u7684timeseries_dataset_from_array API\u8fdb\u884c\u7a97\u53e3\u5212\u5206\u3002</p> <pre><code>timesteps = bitcoin_prices.index.to_numpy()\nprices = bitcoin_prices[\"Price\"].to_numpy()\n\nHORIZON  = 1 # \u9884\u6d4b\u4e0b\u4e00\u5929\u7684\u4ef7\u683c\nWINDOW_SIZE = 7 # \u57fa\u4e8e\u8fc7\u53bb7\u5929\u7684\u4ef7\u683c\n\ninput_data = prices[:-HORIZON]\ntargets = prices[WINDOW_SIZE:]\ndataset = tf.keras.preprocessing.timeseries_dataset_from_array(\n    input_data, targets, sequence_length=WINDOW_SIZE)\nfor batch in dataset:\n  inputs, targets = batch\n  assert np.array_equal(inputs[0], prices[:WINDOW_SIZE])   \n  assert np.array_equal(targets[0], prices[WINDOW_SIZE])  \n\n  print(f\"First Input:{inputs[0]}, Target:{targets[0]}\")\n  print(f\"Second Input:{inputs[1]}, Target:{targets[1]}\")\n\n  break\n</code></pre> <p>\u8fd4\u56de\u5982\u4e0b\uff0c\u6570\u636e\u6b63\u786e\u5730\u8f6c\u5316\u6210\u4e86\u9884\u671f\u7684\u683c\u5f0f\u3002</p> <pre><code>First Input:[123.65499 125.455   108.58483 118.67466 121.33866 120.65533 121.795  ], Target:123.033\nSecond Input:[125.455   108.58483 118.67466 121.33866 120.65533 121.795   123.033  ], Target:124.049\n</code></pre>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#23","title":"2.3 \u5206\u5272\u6570\u636e","text":"<p>\u4f7f\u7528\u65f6\u95f4\u6765\u5212\u5206\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\uff0c\u4ec5\u505a\u793a\u4f8b\u6545\u4e0d\u7559\u6d4b\u8bd5\u96c6\uff0c\u5b9e\u9645\u4e2d\u53ef\u6309\u9700\u64cd\u4f5c\u3002</p> <pre><code># tf.keras.preprocessing.timeseries_dataset_from_array\u8fd4\u56de\u7684\u662fbatched dataset\uff0c\u6240\u4ee5\u5148unbatch\uff0c\u65b9\u4fbf\u5206\u5272\u6570\u636e\ndataset = dataset.unbatch()\n\ntest_split = 0.2\nsplit_index = int(len(list(dataset)) * (1-test_split))\n\n# \u5206\u5272\u5b8c\u4e4b\u540e\u518d\u5206Batch\uff0c\u589e\u52a0\u4e00\u7ef4\uff0c\u4e0d\u7136\u65e0\u6cd5\u6ee1\u8db3\u6a21\u578b\u6570\u636e\u7ef4\u5ea6\u8981\u6c42\ntrain_dataset = dataset.take(split_index).batch(batch_size=32)\ntest_dataset = dataset.skip(split_index).batch(batch_size=32)\n</code></pre>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#3","title":"3 \u5efa\u6a21","text":"<p>\u672c\u6587\u4e0d\u8ffd\u6c42\u6781\u81f4\u7684\u9884\u6d4b\u51c6\u786e\u7387\uff0c\u56e0\u6b64\u4ec5\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\u6784\u5efa\u6a21\u578b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>tf.random.set_seed(42)\ntf.keras.backend.clear_session()\n\n# 1. \u6784\u5efa\u6a21\u578b\nmodel = tf.keras.models.Sequential(\n[\n layers.Input(WINDOW_SIZE),\n layers.Dense(128, activation=\"relu\"),\n layers.Dense(HORIZON, activation=\"linear\")\n]\n, name=\"model_dense_base\")\n\n# 2. \u7f16\u8bd1\u6a21\u578b\nmodel.compile(loss='mae',\n                optimizer=tf.keras.optimizers.Adam(),\n                metrics=['mae'])\n\n\n# \u521b\u5efacallback\u628a\u8868\u73b0\u6700\u597d\u7684\u6a21\u578bcheckpoint\u5b58\u4e0b\u6765\ndef create_model_checkpoint(model_name, save_path=\"model_checkpoint\"):\n  return tf.keras.callbacks.ModelCheckpoint(filepath=os.path.join(save_path, model_name),\n                                            verbose=0,\n                                            save_best_only=True)\n\n# 3. \u8bad\u7ec3\u6a21\u578b\nmodel.fit( train_dataset,\n            epochs=100,\n            verbose=0,\n            validation_data=test_dataset,\n            callbacks=[create_model_checkpoint(model_name=model.name)]\n            )\n</code></pre> <p>\u5c06\u8868\u73b0\u6700\u597d\u7684\u6a21\u578b\u52a0\u8f7d\u56de\u6765\u505a\u8bc4\u4f30\uff1a</p> <pre><code>model = tf.keras.models.load_model(\"model_checkpoint/model_dense_base\")\nmodel.evaluate(test_dataset)\n</code></pre> <p>\u8fd4\u56de\u5982\u4e0b\uff0c\u7531\u5e73\u5747\u7edd\u5bf9\u8bef\u5dee\uff08MAE\uff09\u53ef\u89c1\u9884\u6d4b\u7684\u4ef7\u683c\u5e73\u5747\u548c\u771f\u5b9e\u4ef7\u683c\u76f8\u5dee700\u591a\u7f8e\u5143\u3002</p> <pre><code>18/18 [==============================] - 1s 6ms/step - loss: 759.4327 - mae: 759.4327\n[759.4326782226562, 759.4326782226562]\n</code></pre> <p>\u8003\u8651\u5230\u6a21\u578b\u7ed3\u6784\u5341\u5206\u7b80\u5355\uff0c\u7ed3\u679c\u6709\u63d0\u5347\u7a7a\u95f4\u4e5f\u5728\u9884\u671f\u4e4b\u5185\uff0c\u6839\u636e\u672c\u6d41\u7a0b\u8fdb\u884c\u4f18\u5316\uff0c\u5b8c\u5168\u53ef\u4ee5\u9884\u6d4b\u5f97\u66f4\u51c6\u786e\u3002</p>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#4","title":"4 \u603b\u7ed3","text":"<p>\u672c\u6587\u5bf9\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u4efb\u52a1\u505a\u4e86\u4e00\u4e2a\u57fa\u51c6\uff0c\u5176\u4e2dTensorFlow\u7684<code>tf.keras.preprocessing.timeseries_dataset_from_array</code>API\u7b80\u5316\u4e86\u8bb8\u591a\u5904\u7406\u65f6\u95f4\u7a97\u53e3\u7684\u5de5\u4f5c\uff0c\u4e4b\u540e\u5c06\u7ee7\u7eed\u5bf9TensorFlow\u9884\u6d4b\u65f6\u95f4\u5e8f\u5217\u7684\u4efb\u52a1\u8fdb\u884c\u8ba8\u8bba\u3002</p>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#5","title":"5 \u76f8\u5173\u9605\u8bfb\u8d44\u6599","text":"<ul> <li>Forecasting: Principles and Practice</li> </ul>","tags":["deep learning","tensorflow","time series"]},{"location":"Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-05-20\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#1","title":"1 \u524d\u8a00","text":"<p>\u5728TensorFlow Playground\u7b80\u4ecb\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u7b14\u8005\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u7528\u53ef\u89c6\u5316\u7684\u65b9\u6cd5\u8ba4\u8bc6\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u7684\u4ea7\u54c1\uff0c\u672c\u6b21\u5185\u5bb9\u5c06\u5206\u4eab\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7f51\u7ad9 - <code>CNN Explainer</code>\uff0c\u5b83\u4e13\u6ce8\u4e8e\u7528\u53ef\u89c6\u5316\u7684\u65b9\u5f0f\u8bb2\u89e3<code>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc</code>\uff0c\u8be5\u4ea7\u54c1\u540c\u6837\u4ee5\u975e\u5e38\u76f4\u89c2\u7684\u65b9\u5f0f\u5c55\u793a\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u53ca\u5176\u76f8\u5173\u77e5\u8bc6\u70b9\u3002CNN Explainer\u7f51\u7ad9\u5730\u5740\u4e3a\uff1ahttps://poloclub.github.io/cnn-explainer/\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#2","title":"2 \u4ea7\u54c1\u7279\u6027","text":"<p>CNN Explainer\u7f51\u7ad9\u7684\u5934\u90e8\u5373\u662f\u4e00\u4e2a\u7528\u4e8e\u56fe\u7247\u5206\u7c7b\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff0c\u8f93\u5165\u662f\u56fe\u7247\u7684\u4e09\u4e2a\u901a\u9053\uff08\u7ea2\uff0c\u7eff\u548c\u84dd\uff09\uff0c\u5176\u4e2d\u56fe\u7247\u5728\u7f51\u7edc\u7684\u6bcf\u4e00\u5c42\u8ba1\u7b97\u540e\u5448\u73b0\u7684\u6837\u5f0f\u4e5f\u88ab\u5c55\u793a\u51fa\u6765\uff0c\u60ac\u6d6e\u9f20\u6807\u5373\u53ef\u770b\u5230\u6bcf\u4e2a\u5377\u79ef\u6838\u7684\u8f93\u5165\u3002</p> CNN \u89e3\u91ca\u5668 <p>\u70b9\u51fb\u5377\u79ef\u5c42\uff0c\u52a8\u753b\u5c06\u663e\u793a\u5377\u79ef\u64cd\u4f5c\uff0c\u5377\u79ef\u6838\u4e00\u6b65\u4e00\u6b65\u5730\u626b\u8fc7\u8f93\u5165\u56fe\u7247\uff0c\u5f62\u6210\u8f93\u51fa\uff1a</p> \u5377\u79ef\u64cd\u4f5c <p>\u70b9\u51fb\u611f\u53f9\u53f7\u5373\u53ef\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u6587\u6863\u548c\u793a\u4f8b\uff0c\u6bd4\u5982\u9488\u5bf9\u5377\u79ef\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u8f93\u5165\u548c\u5377\u79ef\u6838\u7684\u53c2\u6570\u6765\u4f53\u4f1a\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u52a8\u753b\u5c06\u6839\u636e\u8f93\u5165\u8fdb\u884c\u53d8\u5316\uff0c\u540c\u65f6\u8fd8\u9644\u6709\u8be6\u7ec6\u7684\u6587\u6863\u8bf4\u660e\u548c\u53c2\u8003\u94fe\u63a5\u3002\u4ea7\u54c1\u7684\u5f00\u53d1\u8005\u771f\u662f\u975e\u5e38\u7528\u5fc3\u4e86\uff01</p> \u4ea4\u4e92\u5f0f\u5730\u7406\u89e3\u5377\u79ef\u64cd\u4f5c <p>\u5377\u79ef\u5c42\u5e38\u7528\u7684ReLU\u6fc0\u6d3b\u51fd\u6570\u7684\u64cd\u4f5c\u793a\u610f\u56fe\u548c\u516c\u5f0f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u76f8\u5bf9\u5e94\u7684\u5c42\u5c55\u793a\uff1a</p> ReLU\u6fc0\u6d3b\u51fd\u6570\u793a\u610f\u56fe <p>\u540c\u6837\u5730\uff0cMaxPooling\u5c42\u7684\u793a\u610f\u56fe\u548c\u516c\u5f0f\u4e5f\u5f62\u8c61\u5730\u5c55\u793a\u4e86\u51fa\u6765\uff0c\u8f93\u5165\u91cc\u7684\u6700\u5927\u503c\u88ab\u53d6\u4e86\u51fa\u6765\u4f5c\u4e3a\u8f93\u51fa\uff1a</p> Max Pooling\u793a\u610f\u56fe <p>\u6700\u540e\u8f93\u51fa\u5c42\u7528\u4e0d\u540c\u7a0b\u5ea6\u9ad8\u4eae\u7684\u65b9\u5f0f\u5c55\u793a\u4e86\u6a21\u578b\u9884\u6d4b\u7684\u7c7b\u522b\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#3","title":"3 \u603b\u7ed3","text":"<p>CNN Explainer\u4ee5\u975e\u5e38\u751f\u52a8\u7684\u65b9\u5f0f\u5c55\u793a\u4e86\u5377\u79ef\u64cd\u4f5c\u3001ReLU\u51fd\u6570\u3001Softmax\u51fd\u6570\u3001\u6c60\u5316\u3001\u5c55\u5e73\u5c42\u7b49\u91cd\u8981\u6280\u672f\u539f\u7406\uff0c\u5e76\u4e14\u4f60\u8fd8\u53ef\u4ee5\u4e0a\u4f20\u81ea\u5df1\u7684\u56fe\u7247\u8ba9\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\uff0c\u8bf7\u81ea\u5df1\u5c1d\u8bd5\u5427\uff01\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/","title":"\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-05-23\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#1","title":"1 \u524d\u8a00","text":"<p>\u672c\u6587\u5c06\u4f7f\u7528TensorFlow\u5bf9\u591a\u7c7b\u522b\u56fe\u7247\u5206\u7c7b\u7684\u4efb\u52a1\u8fdb\u884c\u8ba8\u8bba\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u542b\u56fe\u7247\u6570\u636e\u7684\u52a0\u8f7d\u3001\u6570\u636e\u589e\u5f3a\u3001\u6a21\u578b\u8bad\u7ec3\u548c\u8fc1\u79fb\u5b66\u4e60\u548cTensorBoard\u7684\u4f7f\u7528\uff0c\u6240\u6709\u7684API\u5747\u57fa\u4e8eTensorFlow v2.8.0\u3002\u4ee5\u4e0b\u4ee3\u7801\u5728Google Colab\u91cc\u8fd0\u884c\uff0c\u56e0\u4e3aGoogle\u63d0\u4f9b\u4e86\u514d\u8d39\u7684GPU\u663e\u8457\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\u3002</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#2","title":"2 \u5904\u7406\u56fe\u7247","text":"<p>\u52a0\u8f7d\u5305\u542b\u76ee\u6807\u670910\u7c7b\u7684\u539f\u59cb\u56fe\u7247\u6570\u636e\u3002</p> <pre><code>import zipfile\nimport os\nimport matplotlib.pyplot as plt\nimport datetime\n\n\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.python.ops.gen_array_ops import shape\nfrom tensorflow.keras import layers\n\n\n!wget https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_all_data.zip\n\n# Unzip the downloaded file\nzip_ref = zipfile.ZipFile(\"10_food_classes_all_data.zip\", \"r\")\nzip_ref.extractall()\nzip_ref.close()\n\n# \u5904\u7406\u56fe\u7247\u7684\u51fd\u6570\ndef load_and_process_image(file_name, img_shape=224):\n\"\"\"\n  Read an image and process it, reshape it to (img_shape, img_shape, color_channels)\n  \"\"\"\n  # read the image\n  img = tf.io.read_file(file_name)\n\n  # decode the read file into a tensor\n  img = tf.image.decode_image(img)\n\n  # resize the image\n  img = tf.image.resize(img, size=[img_shape, img_shape])\n\n  # scale the image\n  img = img/255.\n\n  return img\n\n# \u663e\u793a\u6587\u4ef6\ndef list_files(startpath):\n    for root, dirs, files in os.walk(startpath):\n        level = root.replace(startpath, '').count(os.sep)\n        indent = ' ' * 4 * (level)\n        print('{}{}/'.format(indent, os.path.basename(root)))\n        subindent = ' ' * 4 * (level + 1)\n        for f in files:\n            print('{}{}'.format(subindent, f))\n\n# Walk through 10_food_classes directory and list number of files\nfor dirpath, dirnames, filenames in os.walk(\"10_food_classes_all_data\"):\n  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")\n</code></pre> <p>\u7531\u8f93\u51fa\u53ef\u89c1\uff0c\u6570\u636e\u91cc\u6709\u51b0\u6dc7\u6dcb\uff0c\u725b\u6392\u3001\u62ab\u8428\u4e4b\u7c7b\u7684\u56fe\u7247\u3002</p> <pre><code>There are 2 directories and 0 images in '10_food_classes_all_data'.\nThere are 10 directories and 0 images in '10_food_classes_all_data/test'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/chicken_wings'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/pizza'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/grilled_salmon'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/sushi'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/fried_rice'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/ice_cream'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/chicken_curry'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/hamburger'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/ramen'.\nThere are 0 directories and 250 images in '10_food_classes_all_data/test/steak'.\nThere are 10 directories and 0 images in '10_food_classes_all_data/train'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/chicken_wings'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/pizza'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/grilled_salmon'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/sushi'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/fried_rice'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/ice_cream'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/chicken_curry'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/hamburger'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/ramen'.\nThere are 0 directories and 750 images in '10_food_classes_all_data/train/steak'.\n</code></pre> <p>\u53d6\u51fa\u6240\u6709\u7684\u6807\u7b7e\uff1a</p> <pre><code>class_names = os.listdir(\"10_food_classes_all_data/train/\")\ntrain_dir = \"10_food_classes_all_data/train/\"\ntest_dir = \"10_food_classes_all_data/test/\"\n</code></pre> <p>\u540c\u65f6\uff0c\u4f7f\u7528TensorFlow\u7684tensorflow.keras.preprocessing.image.ImageDataGenerator API\u5bf9\u56fe\u7247\u8fdb\u884c\u5904\u7406\u548c\u589e\u5f3a\uff0c\u7b80\u800c\u8a00\u4e4b\uff0c\u8be5API\u80fd\u6709\u6548\u5730\u6839\u636e\u6587\u4ef6\u76ee\u5f55\u81ea\u52a8\u4e3a\u56fe\u7247\u751f\u6210\u6807\u7b7e\uff0c\u5e76\u4e14\u6309\u7167\u8bbe\u5b9a\u7684\u64cd\u4f5c\u5bf9\u56fe\u7247\u8fdb\u884c\u589e\u5f3a\u3002\u6ce8\u610f\uff0c<code>\u6570\u636e\u589e\u5f3a\u53ea\u80fd\u7528\u4e8e\u8bad\u7ec3\u96c6</code>\u3002</p> <pre><code>train_datagen_augmented = ImageDataGenerator(rescale=1/255.,\n                                             rotation_range=20, #\u65cb\u8f6c\u56fe\u7247\n                                             shear_range=0.2, #\u526a\u5207\u56fe\u7247\n                                             zoom_range=0.2, #\u7f29\u653e\u56fe\u7247\n                                             width_shift_range=0.2, #\u5de6\u53f3\u5e73\u79fb\n                                             height_shift_range=0.2, #\u4e0a\u4e0b\u5e73\u79fb\n                                             horizontal_flip=True) #\u5de6\u53f3\u7ffb\u8f6c\n\ntrain_datagen = ImageDataGenerator(rescale=1/255.)\n\ntest_datagen = ImageDataGenerator(rescale=1/255.)\n\n\n# \u751f\u6210\u6570\u636e\u96c6\ntrain_data = train_datagen_augmented.flow_from_directory(train_dir,\n                                                        target_size=(224,224),\n                                                        batch_size=32,\n                                                        shuffle=True)\n\ntest_data = test_datagen.flow_from_directory(test_dir,\n                                              target_size=(224,224),\n                                                batch_size=32\n                                                 )\n</code></pre>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#3","title":"3 \u5efa\u6a21","text":"","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#31","title":"3.1 \u57fa\u7ebf\u6a21\u578b","text":"<p>\u5148\u505a\u4e00\u4e2a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4f5c\u4e3a\u57fa\u7ebf\u6a21\u578b\uff1a</p> <pre><code># \u7ed8\u5236\u8bad\u7ec3\u66f2\u7ebf\ndef plot_loss_curves(history):\n\"\"\"\n  Returns separate loss curves for training and validation metrics.\n  \"\"\"\n  loss = history.history['loss']\n  val_loss = history.history['val_loss']\n\n  accuracy = history.history['accuracy']\n  val_accuracy = history.history['val_accuracy']\n\n  epochs = range(len(history.history['loss']))\n\n  # Plot loss\n  plt.plot(epochs, loss, label='training_loss')\n  plt.plot(epochs, val_loss, label='val_loss')\n  plt.title('Loss')\n  plt.xlabel('Epochs')\n  plt.legend()\n\n  # Plot accuracy\n  plt.figure()\n  plt.plot(epochs, accuracy, label='training_accuracy')\n  plt.plot(epochs, val_accuracy, label='val_accuracy')\n  plt.title('Accuracy')\n  plt.xlabel('Epochs')\n  plt.legend()\n\n\n# \u5efa\u6a21\ntf.random.set_seed(42)\ntf.keras.backend.clear_session()\n\ncnn_model = tf.keras.models.Sequential([\n    layers.Conv2D(filters=10, kernel_size=(3,3), activation=\"relu\",\n                  input_shape=(224, 224, 3)),\n    layers.MaxPooling2D(pool_size=2),\n\n      layers.Conv2D(filters=10, kernel_size=(3,3), activation=\"relu\"),\n    layers.MaxPooling2D(pool_size=2),\n\n    layers.Flatten(),\n    layers.Dropout(0.5),\n    layers.Dense(10, activation=\"softmax\")\n])\n\ncnn_model.compile(loss=tf.keras.losses.CategoricalCrossentropy(),\n                optimizer=tf.keras.optimizers.Adam(),\n                  steps_per_execution = 50,\n                    metrics=\"accuracy\")\n\n\ndef create_tensorboard_callback(dir_name, experiment_name):\n  log_dir = dir_name + \"/\" + experiment_name + \"/\" + datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n  tensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir)\n  print(f\"Saving tensorboard callback log file to {log_dir}\")\n  return tensorboard_callback\n\n\ntf_board_callback =  create_tensorboard_callback(dir_name=\"vision_model\",\n                                                 experiment_name=\"VGG_base\")\n\nhistory_cnn = cnn_model.fit(train_data,\n            steps_per_epoch=len(train_data),\n            epochs=5,\n              validation_data=test_data,\n              validation_steps=len(test_data),\n              callbacks=[tf_board_callback])\n\ncnn_model.evaluate(test_data)\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff0c\u51c6\u786e\u7387\u5dee\u5f3a\u4eba\u610f\uff1a</p> <pre><code>79/79 [==============================] - 12s 148ms/step - loss: 1.8068 - accuracy: 0.3852\n[1.8068159818649292, 0.38519999384880066]\n</code></pre> <p>\u67e5\u770b\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u66f2\u7ebf\u8d8b\u52bf\u662f\u6b63\u5e38\u7684\uff0c\u5982\u679c\u52a0\u6df1\u6a21\u578b\u3001\u6216\u8005\u8bad\u7ec3\u66f4\u957f\u7684\u65f6\u95f4\u5e94\u8be5\u80fd\u8fbe\u5230\u66f4\u597d\u7684\u7cbe\u5ea6\u3002</p> <pre><code>plot_loss_curves(history_cnn)\n</code></pre> \u635f\u5931\u7684\u53d8\u5316 \u51c6\u786e\u7387\u7684\u53d8\u5316","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#32","title":"3.2 \u8fc1\u79fb\u5b66\u4e60","text":"<p>\u53e6\u5916\u4e00\u4e2a\u63d0\u5347\u6a21\u578b\u6027\u80fd\u7684\u89d2\u5ea6\u662f\u4f7f\u7528\u8fc1\u79fb\u5b66\u4e60\u3002\u8fc1\u79fb\u5b66\u4e60\u5c06\u4f7f\u7528\u5728\u5176\u4ed6\u4efb\u52a1\u4e0a\u5df2\u7ecf\u8868\u73b0\u5f97\u975e\u5e38\u597d\u7684\u6a21\u578b\uff0c\u5c06\u5176\u5e94\u7528\u5728\u81ea\u5df1\u7684\u4efb\u52a1\u4e0a\uff0c\u901a\u5e38\u6765\u8bf4\u76f8\u6bd4\u4e8e\u4ece\u96f6\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\u8868\u73b0\u8981\u66f4\u597d\uff0c\u56e0\u4e3a\u5176\u6a21\u578b\u67b6\u6784\u548c\u8bad\u7ec3\u8fc7\u7a0b\u90fd\u505a\u4e86\u5f88\u591a\u7684\u4f18\u5316\u3002\u6b64\u5904\u4f7f\u7528\u5c42\u6570\u975e\u5e38\u6df1\u540c\u65f6\u6027\u80fd\u975e\u5e38\u597d\u7684Xception\u6a21\u578b\u3002</p> <pre><code># \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684Xception\u6a21\u578b\nbase_model = tf.keras.applications.xception.Xception(weights='imagenet', include_top=False)\navg = tf.keras.layers.GlobalAveragePooling2D()(base_model.output)\noutput = tf.keras.layers.Dense(len(class_names), activation='softmax')(avg)\nmodel = tf.keras.Model(inputs=base_model.input, outputs=output)\n\n# \u901a\u5e38\u4f1a\u51bb\u7ed3\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u6743\u91cd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7ecf\u8fc7\u4e86\u826f\u597d\u7684\u8bad\u7ec3\uff0c\u5df2\u7ecf\u5728\u4f18\u5316\u72b6\u6001\u4e86\nfor layer in base_model.layers:\n    layer.trainable = False\n\noptimizer = tf.keras.optimizers.SGD(lr=0.2, momentum=0.9, decay=0.01)\nmodel.compile(loss='categorical_crossentropy', optimizer=optimizer, metrics=['accuracy'])\n\nepochs = 5\ntf_board_callback_2 =  create_tensorboard_callback(dir_name=\"vision_model\",\n                                                 experiment_name=\"Xception\")\n\nhistory = model.fit(train_data, epochs=epochs, validation_data=test_data,\n                    callbacks=[tf_board_callback_2])\n\nmodel.evaluate(test_data)\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff0c\u6027\u80fd\u7529\u4e86\u57fa\u7ebf\u51e0\u6761\u8857\uff1a</p> <pre><code>79/79 [==============================] - 31s 390ms/step - loss: 0.5771 - accuracy: 0.8388\n[0.5770677924156189, 0.8388000130653381]\n</code></pre> <p>\u5728TensorBoard\u91cc\u67e5\u770b\u8bad\u7ec3\u8fc7\u7a0b\uff1a</p> <pre><code># \u4ee5\u4e0b\u547d\u4ee4\u4ec5\u9002\u7528\u4e8eGoogle Colab\n%load_ext tensorboard\n%tensorboard --logdir=\"vision_model/Xception/20220522-120512/\"\n</code></pre> TensorBoard\u5c55\u793a\u8bad\u7ec3\u8fc7\u7a0b <p>\u540c\u65f6\u53ef\u4ee5\u5728TensorBoard\u91cc\u4e0b\u8f7d\u6a21\u578b\u7684\u8ba1\u7b97\u56fe\uff0c\u53ef\u89c1Xception\u8fdc\u6bd4\u57fa\u7ebf\u6a21\u578b\u590d\u6742\uff0c\u56e0\u6b64\u5b83\u7684\u6027\u80fd\u8fdc\u8d85\u57fa\u7ebf\u4e5f\u4e0d\u8db3\u4e3a\u5947\u3002</p> \u6a21\u578b\u67b6\u6784","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#4","title":"4 \u603b\u7ed3","text":"<p>\u672c\u6587\u6db5\u76d6\u4e86\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u56fe\u7247\u5206\u7c7b\u4efb\u52a1\u91cc\u7684\u91cd\u8981\u6982\u5ff5\u548cTensorFlow\u76f8\u5173\u7684\u91cd\u8981API\uff0c\u5982<code>tensorflow.keras.preprocessing.image.ImageDataGenerator</code>, <code>TensorBoard Callback</code>\u548c\u5982\u4f55\u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/","title":"\u521d\u8bc6\u56fe\u6570\u636e\u5e93","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aDragond41\uff0c\u53d1\u5e03\u4e8e2021-12-13\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#1","title":"1 \u524d\u8a00","text":"<p>\u5c0f\u4f19\u4f34\u4eec\u6709\u542c\u8bf4\u8fc7\"\u56fe\u6570\u636e\u5e93 - Graph Database\" \u5417\uff1f\u662f\u7528\u6765\u5b58\u50a8\u56fe\u7247\u7684\u6570\u636e\u5e93\uff1f\u8fd8\u662f\u7528\u56fe\u7247\u5b58\u50a8\u6570\u636e\uff1f\uff1f\uff08\u8bef\uff09\u5982\u679c\u6709\u88ab\u8fd9\u4e24\u53e5\u8bdd\u5ffd\u60a0\u5230\u7684\u8bdd\uff0c\u90a3\u8d76\u7d27\u8fdb\u5165\u4eca\u5929\u7684\u6587\u7ae0\u5427~</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#2","title":"2 \u8282\u70b9\u548c\u5173\u7cfb","text":"<p>\u4e0e\u4f20\u7edf\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e0d\u540c\uff0c\u56fe\u6570\u636e\u5e93\u7531\u8282\u70b9\u548c\u5173\u7cfb\uff08\u8282\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff09\u7ec4\u6210\u3002\u5982\u4e0b\u56fe\uff1a</p> \u8282\u70b9\u4e0e\u5173\u7cfb","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#21","title":"2.1 \u8282\u70b9","text":"<p>\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u5b9e\u4f53\u3002\u4e00\u4e2a\u8282\u70b9\u4e0e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55\u7c7b\u4f3c\u3002\u4e0a\u56fe\u4e2d\u7684\u5706\u5f62\u56fe\u6848\u90fd\u662f\u8282\u70b9\u3002\u5176\u4e2d\u6a59\u8272\u7684\u8282\u70b9\u4ee3\u8868\u7684\u662f\u7535\u5f71\u5b9e\u4f53\uff0c\u84dd\u8272\u7684\u8282\u70b9\u4ee3\u8868\u7684\u662f\u5177\u4f53\u7684\u4eba\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#22","title":"2.2 \u5173\u7cfb","text":"<p>\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8054\u7cfb\u5c31\u662f\u5173\u7cfb\u3002\u5982\u4e0a\u8ff0\u56fe\u4e2d\u5c31\u51fa\u73b0\u4e86\u4e09\u79cd<code>\u4eba-\u7535\u5f71</code>\u7684\u5173\u7cfb\uff1a</p> <ul> <li><code>ACTED_IN</code> - \u57fa\u52aa\u00b7\u91cc\u7ef4\u65af\u3001\u52b3\u4f26\u65af\u00b7\u83f2\u4ec0\u4f2f\u6069\u3001\u51ef\u8389\u00b7\u5b89\u6469\u4e1d\u548c\u96e8\u679c\u00b7\u7ef4\u6587\u7b49\u53c2\u6f14</li> <li><code>DIRECTED</code> - \u6c83\u5353\u65af\u57fa\u59d0\u59b9\u6307\u5bfc</li> <li><code>PRODUCED</code> - \u4e54\u00b7\u897f\u4f5b\u76d1\u5236</li> </ul>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#23","title":"2.3 \u5173\u7cfb\u7684\u65b9\u5411","text":"<p>\u5728Neo4J\u4e2d\uff0c\u5173\u7cfb\u662f\u5fc5\u987b\u6709\u65b9\u5411\u7684\u3002\u5bf9\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff0c\u5173\u7cfb\u53ef\u4ee5\u6709\u4e24\u79cd\u65b9\u5411\u3002\u6307\u5411\u5b83\u7684\u5173\u7cfb\uff0c\u548c\u7531\u5b83\u6307\u5411\u5176\u4ed6\u8282\u70b9\u7684\u5173\u7cfb\u3002\u4e0a\u56fe\u4e2d\uff0c\u6240\u6709\u7684\u5173\u7cfb\u90fd\u662f\u7531\u4eba\u6307\u5411\u7535\u5f71\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#24","title":"2.4 \u6807\u7b7e","text":"<p>\u6807\u7b7e\u662f\u8282\u70b9\u6216\u8005\u5173\u7cfb\u7684\u79cd\u7c7b\uff08Type)\u3002\u5982\u4e0a\u8ff0\u56fe\u4e2d\uff0c\u5b9a\u4e49\u84dd\u8272\u8282\u70b9\u65f6\uff0c\u4ed6\u4eec\u7684Label\u662fPerson\uff1b\u5b9a\u4e49\u6a59\u8272\u8282\u70b9\u65f6\uff0c\u4ed6\u4eec\u7684Label\u662fMovie\u3002\u6807\u7b7e\u7684\u4f5c\u7528\u662f\uff0c\u5f53\u4f60\u8fdb\u884c\u67e5\u8be2\u65f6\u53ea\u8fd4\u56de\u7279\u5b9a\u67d0\u4e9b\u7c7b\u578b\u7684\u8282\u70b9\u3002\u6bd4\u5982\u53ea\u67e5\u8be2Person\u8282\u70b9\u3002</p> \u6807\u7b7e","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#25","title":"2.5 \u5c5e\u6027","text":"<p>\u8282\u70b9\u4e0e\u5173\u7cfb\u90fd\u80fd\u6dfb\u52a0\u5c5e\u6027\u3002\u5c5e\u6027\u662f\u4ee5name-value\u5bf9\u7684\u5f62\u5f0f\u6dfb\u52a0\u7684\u3002\u6bd4\u5982\uff0c\u8fd4\u56de\u4e0a\u8ff0\u56fe\u4e2d\u6240\u6709Person\u7684name\u548cborn\u5c5e\u6027\u3002\u5c5e\u6027\u4f7f\u56fe\u6570\u636e\u5e93\u4e2d\u7684\u4fe1\u606f\u53d8\u7684\u66f4\u52a0\u4e30\u5bcc\uff0c\u67e5\u8be2\u65f6\u4e5f\u53ef\u4ee5\u5229\u7528\u5230\u8fd9\u4e9b\u5c5e\u6027\uff0c\u5982\u67e5\u8be2\u57281970\u5e74\u540e\u51fa\u751f\u7684\u4eba\u3002</p> \u5c5e\u6027","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#3-why","title":"3 Why\u56fe\u6570\u636e\u5e93","text":"<p>\u5927\u5bb6\u770b\u4e86\u5bf9\u56fe\u6570\u636e\u5e93\u7684\u5927\u4f53\u4ecb\u7ecd\uff0c\u53ef\u80fd\u89c9\u5f97\u8fd9\u4e2a\u6280\u672f\u5f88\u9177\u70ab\uff0c\u90a3\u5728\u5177\u4f53\u7684\u4e1a\u52a1\u4e2d\uff0c\u56fe\u6570\u636e\u5e93\u80fd\u5e26\u6765\u54ea\u4e9b\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e0d\u80fd\u5e26\u6765\u7684\u4ef7\u503c\u5462\uff1f\u4ee5\u4e0b\u4e24\u65b9\u9762\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u8003\u3002</p> <ul> <li>\u9ad8\u6548\u5730\u67e5\u8be2\u6570\u636e\u95f4\u7684\u5173\u7cfb\uff0c\u5c24\u5176\u662f\u5f53\u5173\u7cfb\u5f88\u590d\u6742\u65f6</li> <li>\u540c\u65f6\u4e5f\u80fd\u8f83\u4fbf\u6377\u5730\u53ef\u89c6\u5316\u6570\u636e\u95f4\u7684\u5173\u7cfb</li> </ul> <p>\u5f53\u4f60\u770b\u5230\u4ee5\u4e0b\u8fd9\u6837\u7684\u67e5\u8be2\u7ed3\u679c\u65f6\uff0c\u662f\u4e0d\u662f\u5f88\u8d4f\u5fc3\u60a6\u76ee\u5462\uff1f\u7535\u5f71\u4e0e\u4eba\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u4ee5\u4e00\u76ee\u4e86\u7136\u3002\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u4e00\u5c0f\u90e8\u5206\u6570\u636e\u67e5\u8be2\u7684\u7ed3\u679c\u3002</p> \u7ed3\u679c\u53ef\u89c6\u5316 - 1 <p>\u5f53\u6570\u636e\u53d8\u591a\u65f6\uff0c\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u7684\u3002\u3002\u3002</p> \u7ed3\u679c\u53ef\u89c6\u5316 - 2 <p>\u5f53\u7136\u6ca1\u6709\u4eba\u4f1a\u4ece\u8fd9\u6837\u7684\u53ef\u89c6\u5316\u7ed3\u679c\u4e2d\u83b7\u53d6\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u90a3\u56fe\u6570\u636e\u5e93\u5177\u4f53\u5e94\u8be5\u5982\u4f55\u5e94\u7528\u5728\u4e1a\u52a1\u4e2d\u5462\uff1f\u8bf7\u671f\u5f85\u4e4b\u540e\u7684\u56fe\u6570\u636e\u5e93\u5b9e\u6218\u7cfb\u5217\uff0c\u7edd\u5bf9\u80fd\u8ba9\u4f60\u5bf9\u8fd9\u4e2a\u53c8\u65b0\u53c8\u6f6e\u7684\u6280\u672f\u6709\u66f4\u5177\u4f53\u7684\u8ba4\u8bc6\uff01\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/","title":"Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e00\uff09 - \u642d\u5efa\u5206\u6790\u73af\u5883","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-01-29\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u521d\u8bc6\u56fe\u6570\u636e\u5e93\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u56fe\u7684\u57fa\u672c\u6784\u6210\u8981\u7d20\uff0c\u5982\u8282\u70b9\u3001\u5c5e\u6027\uff0c\u5173\u7cfb\u7b49\uff0c\u540c\u65f6\u4e5f\u7b80\u5355\u53d9\u8ff0\u4e86\u56fe\u6570\u636e\u5e93\u76f8\u8f83\u4e8e\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u4f18\u52bf\uff0c\u4ece\u8fd9\u7bc7\u6587\u7ae0\u5f00\u59cb\uff0c\u5c06\u4ee5\u53cd\u6b3a\u8bc8\u5206\u6790\u4e3a\u4f8b\uff0c\u4f5c\u4e3a\u56fe\u6570\u636e\u5e93\u7684\u5b9e\u6218\u7ec3\u4e60\uff0c\u771f\u6b63\u4e0a\u624b\u56fe\u6570\u636e\u5e93\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\u7684\u5e94\u7528!</p> <p>\u6b3a\u8bc8\u573a\u666f\u4e2d\uff0c\u574f\u4eba\u901a\u5e38\u4f1a\u901a\u8fc7\u5982\u9493\u9c7c\u3001\u75c5\u6bd2\u8f6f\u4ef6\u3001\u6697\u7f51\u7b49\u6e20\u9053\u83b7\u53d6\u771f\u5b9e\u5ba2\u6237\u7684\u8eab\u4efd\u4fe1\u606f\uff0c\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u540e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u7be1\u6539\u9a8c\u8bc1\u4fe1\u606f\u63a5\u7ba1\u8d26\u6237\uff0c\u6216\u8005\u76f4\u63a5\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u6b3a\u8bc8\u4ea4\u6613\u3002\u5e76\u4e14\uff0c\u574f\u4eba\u4eec\u901a\u5e38\u6709\u4e00\u5b9a\u6570\u91cf\u7684\u8bbe\u5907\u3001\u8eab\u4efd\u8bc1\u3001\u90ae\u7bb1\u3001\u7535\u8bdd\u7b49\u4fe1\u606f\u7528\u4e8e\u5e94\u5bf9\u670d\u52a1\u63d0\u4f9b\u5546\u7684\u9a8c\u8bc1\uff0c\u56e0\u6b64\u88ab\u63a5\u7ba1\u7684\u8d26\u53f7\u4e0e\u8fd9\u4e9b\u574f\u4eba\u7684\u4fe1\u606f\u5373\u5b58\u5728\u4e00\u5b9a\u7684\u8054\u7cfb\uff0c\u8fd9\u4e2a\u5b9e\u6218\u7cfb\u5217\u5373\u7740\u773c\u4e8e\u4f7f\u7528\u56fe\u6570\u636e\u5e93\u6316\u6398\u5176\u80cc\u540e\u6f5c\u5728\u7684\u5173\u8054\uff0c\u800c\u672c\u6587\u5c06\u4ecb\u7ecd\u5206\u6790\u73af\u5883\u548c\u56fe\u6570\u636e\u5e93\u67e5\u8be2\u7684\u57fa\u672c\u77e5\u8bc6\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#2-neo4j","title":"2 Neo4J\u56fe\u6570\u636e\u5e93","text":"<p>Neo4J\u662f\u4e00\u5bb6\u56fe\u6570\u636e\u5e93\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u5546\uff0c\u5176\u5b98\u7f51\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6559\u7a0b\u548c\u7814\u7a76\u73af\u5883\u4f9b\u8bfb\u8005\u5b66\u4e60\u3002\u672c\u6b21\u5b9e\u6218\u4f7f\u7528\u5176Sandbox\u7684\u793a\u4f8b\u6570\u636e\u548c\u8ba1\u7b97\u8d44\u6e90\uff0c\u5176\u4e3a\u7814\u7a76\u8005\u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u5b9e\u4f8b\u4f9b\u5b9e\u9a8c\u7528\u3002</p> Neo4J Sandbox <p>\u70b9\u51fb\u514d\u8d39\u4f7f\u7528\uff0c\u521b\u5efa\u6570\u636e\u5e93\uff0c\u627e\u5230<code>Fraud Detection</code>\u5373\u53ef\u5f00\u59cb\u63a2\u7d22(\u8bf7\u8bb0\u4f4f\u5bc6\u7801)\uff01</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#3-cypher","title":"3 Cypher\u67e5\u8be2\u8bed\u8a00","text":"<p>\u5982\u540cSQL\uff08Structured Query Language\uff09\u7528\u4e8e\u67e5\u8be2\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e00\u6837\uff0cNeo4J\u56fe\u6570\u636e\u5e93\u4e5f\u6709\u81ea\u5df1\u7684\u67e5\u8be2\u8bed\u8a00 - Cypher\u3002\u5728Cypher\u4e2d\uff0c\u62ec\u53f7()\u7528\u4e8e\u67e5\u8be2\u8282\u70b9\uff0c\u5982<code>(p:Person)</code>\uff0c\u5176\u4e2d<code>p</code>\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c<code>Person</code>\u662f\u8fd9\u4e2a\u8282\u70b9\u7684\u7c7b\u578b\u3002</p> <p>\u67e5\u8be2\u5173\u7cfb\u5e94\u4f7f\u7528\u65b9\u62ec\u53f7\uff0c\u5982<code>[w:WORKS_FOR]</code>\uff0c\u5176\u4e2d<code>w</code>\u662f\u53d8\u91cf\uff0c\u800c<code>WORKS_FOR</code>\u662f\u5173\u7cfb\u7684\u7c7b\u578b.\u5c06\u4e8c\u8005\u7ed3\u5408\u5728\u4e00\u8d77\u5373\u53ef\u67e5\u8be2\u6ee1\u8db3\u6761\u4ef6\u7684\u56fe\uff0c\u5982\u67e5\u8be2\u4e00\u90e8\u7535\u5f71\u91cc\u51fa\u6f14\u7684\u6f14\u5458\uff1a</p> <pre><code>MATCH (p:Person)-[relatedTo]-(m:Movie {title: \"Cloud Atlas\"})\nRETURN p, m, relatedTo\n</code></pre> <p>\u5176\u4e2d<code>MATCH</code>\u5b9a\u4e49\u5339\u914d\u89c4\u5219\uff0c<code>RETURN</code>\u5b9a\u4e49\u4e86\u8fd4\u56de\u7684\u5185\u5bb9\u3002\u5c5e\u6027\u5219\u4f7f\u7528\u82b1\u62ec\u53f7{}\u5b9a\u4e49\uff0c\u5982\u9700\u8981\u67e5\u8be2\u4e0eTom Hanks\u5171\u540c\u51fa\u6f14\u7535\u5f71\u7684\u4eba\uff0c\u53ef\u4ee5\u7528\u5982\u4e0b\u67e5\u8be2\u8bed\u53e5\uff1a</p> <pre><code>MATCH (tom:Person {name: 'Tom Hanks'})-[a:ACTED_IN]-&gt;(m:Movie)&lt;-[rel:ACTED_IN]-(p:Person)\nreturn p, a, rel, m, tom\n</code></pre> <p>Cypher\u4e0d\u9700\u8981\u8868\u8fde\u63a5\uff0c\u56e0\u6b64\u5176\u67e5\u8be2\u8bed\u53e5\u50cf\u662f\u81ea\u7136\u8bed\u8a00\u4e00\u6837\u987a\u7545\u3002Neo4J\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684Cypher\u64cd\u4f5c\u624b\u518c\uff0c\u4e5f\u662f\u5f88\u597d\u7684\u53c2\u8003\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#4","title":"4 \u4f7f\u7528\u56fe\u6570\u636e\u5e93","text":"Neo4J\u64cd\u4f5c\u754c\u9762 <p>\u4e86\u89e3\u4e0a\u8ff0\u57fa\u672c\u5185\u5bb9\u540e\uff0c\u5373\u53ef\u6b63\u5f0f\u8fdb\u5165\u56fe\u6570\u636e\u5e93\u4e86\u3002\u70b9\u51fb<code>Fraud Detection</code>\u56fe\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5373\u53ef\u770b\u5230\u64cd\u4f5c\u754c\u9762\u3002\u4fa7\u8fb9\u680f\u91cc\u6709\u6570\u636e\u5e93\u7684\u4fe1\u606f\uff0c\u53f3\u4fa7\u4e3b\u754c\u9762\u5219\u662f\u5efa\u7acb\u67e5\u8be2\u7684\u533a\u57df\u3002\u53cd\u6b3a\u8bc8\u5b9e\u6218\u5c31\u53ef\u4ee5\u7531\u6b64\u6b63\u5f0f\u5f00\u59cb\u4e86\uff01</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/","title":"Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e8c\uff09 - \u51c6\u5907\u6570\u636e","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-02-26\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#1","title":"1 \u524d\u8a00","text":"<p>\u5728Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e00\uff09 - \u642d\u5efa\u5206\u6790\u73af\u5883\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u4ecb\u7ecd\u4e86Neo4J\u5206\u6790\u5e73\u53f0\u548c\u4e00\u4e9b\u57fa\u7840\u7684\u56fe\u6570\u636e\u5e93\u7684\u64cd\u4f5c\uff0c\u672c\u6587\u6b63\u5f0f\u5f00\u59cb\u5bf9\u53cd\u6b3a\u8bc8\u8fd9\u4e00\u4e3b\u9898\u8fdb\u884c\u63a2\u7d22\u3002\u9996\u8981\u4efb\u52a1\u662f\u660e\u786e\u76ee\u6807\u3001\u83b7\u53d6\u6570\u636e\u548c\u6574\u7406\u6570\u636e\u3002Neo4J\u63d0\u4f9b\u7684\u793a\u4f8b\u4e2d\u5173\u6ce8\u6b3a\u8bc8\u7f6a\u72af\u4f7f\u7528\u76f8\u540c\u7684\u5b9e\u4f53\u4fe1\u606f\u63a7\u5236\u5927\u91cf\u8d26\u53f7\u8fdb\u884c\u6b3a\u8bc8\u4ea4\u6613\uff0c\u6240\u4ee5\u76ee\u6807\u5373\u662f\u627e\u51fa\u8fd9\u4e9b\u8d26\u53f7\u4e4b\u95f4\u7684\u8054\u7cfb\u3001\u63ea\u51fa\u72af\u7f6a\u56e2\u4f19\u3002\u4f46\u662f\uff0c\u8be5\u793a\u4f8b\u5e76\u6ca1\u6709\u4ecb\u7ecd\u6570\u636e\u7684\u6765\u6e90\u548c\u6570\u636e\u7684\u6574\u7406\u5de5\u4f5c\uff0c\u800c\u8fd9\u4e00\u90e8\u5206\u5176\u5b9e\u5728\u771f\u6b63\u5de5\u4f5c\u4e2d\u975e\u5e38\u5173\u952e\uff0c\u56e0\u6b64\u672c\u6587\u5c06\u7740\u91cd\u8bb2\u89e3\u6570\u636e\u51c6\u5907\u7684\u90e8\u5206\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#2","title":"2 \u83b7\u53d6\u6570\u636e","text":"<p>Neo4J\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u8fde\u63a5\u6570\u636e\u4ed3\u5e93\uff1a</p> <ul> <li>\u624b\u52a8\u5b9a\u4e49\u6570\u636e</li> <li>\u5bfc\u5165CSV\u6587\u4ef6</li> <li>\u4f7f\u7528API\u5bfc\u5165\u6570\u636e</li> <li>\u4ece\u5173\u7cfb\u578b\u6570\u636e\u5e93\u91cc\u5bfc\u5165\u6570\u636e</li> <li>\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u9a71\u52a8\u8fde\u63a5\u5bfc\u5165\u6570\u636e\uff08\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u5982.Net\u3001Java\u3001JavaScript\u3001Go\u548cPython\u7b49\uff09</li> </ul> <p>\u5176\u4e2d\u672c\u4eba\u6700\u4e3a\u4e2d\u610f\u4f7f\u7528Python\u9a71\u52a8\u5bfc\u5165\u6570\u636e\uff0c\u56e0\u4e3a\u901a\u5e38\u6765\u8bf4\uff0c\u53ef\u4ee5\u5148\u901a\u8fc7\u4f7f\u7528Python\u83b7\u53d6\u5173\u7cfb\u578b\u6570\u636e\u5e93\u91cc\u7684\u539f\u59cb\u6570\u636e\u3001\u505a\u597d\u5904\u7406\u540e\u4f7f\u7528Neo4J\u7684\u63a5\u53e3\u5373\u53ef\u8fde\u63a5\u591a\u4e2a\u5e73\u53f0\u5b8c\u6210\u6570\u636e\u7684\u4f20\u8f93\u5de5\u4f5c\u3002\u9762\u5bf9\u8d85\u5927\u578b\u6570\u636e\u96c6\uff0c\u4f7f\u7528PySpark\u8fd8\u53ef\u4ee5\u5c06\u8ba1\u7b97\u6027\u80fd\u8fdb\u4e00\u6b65\u63d0\u9ad8\uff0cNeo4J\u4e5f\u63d0\u4f9b\u4e86PySpark\u7684\u63a5\u53e3\uff0c\u8bfb\u5199\u901f\u5ea6\u90fd\u975e\u5e38\u5feb\uff0c\u4ee5\u4e0b\u662fPySpark\u793a\u4f8b\u4ee3\u7801\uff0c\u8bf7\u6ce8\u610f\u4f7f\u7528\u524d\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94PySpark\u7248\u672c\u7684Neo4J\u8fde\u63a5\u5668Jar\u6587\u4ef6\u3002</p> Neo4J\u8fde\u63a5\u4fe1\u606f <pre><code># \u8bfbNeo4J\u7684\u6570\u636e\n# \u5c06\u8d26\u53f7\u5bc6\u7801\u66ff\u6362\u6210\u81ea\u5df1\u8bbe\u7f6e\u7684\u5373\u53ef\ndf = spark.read.format(\"org.neo4j.spark.DataSource\")\\\n     .option(\"url\", \"bolt+s://63d2d43273493b399454b26961152ed9.neo4jsandbox.com:7687\")\\\n     .option(\"authentication.type\", \"basic\")\\\n     .option(\"authentication.basic.username\", \"neo4j\")\\\n     .option(\"authentication.basic.password\", \"password\")\\\n     .option(\"labels\", \"Person\")\\\n     .load()\n\ndisplay(df)\n\n# \u5199\u6570\u636e\u5230Neo4J\ndf2 = spark.createDataFrame( [(1, \"John\"),(2, \"Thomas\")],\n [\"id\", \"name\"]\n)\n\ndf2.write.format(\"org.neo4j.spark.DataSource\")\\\n     .option(\"url\", \"bolt+s://63d2d43273493b399454b26961152ed9.neo4jsandbox.com:7687\")\\\n     .option(\"authentication.type\", \"basic\")\\\n     .option(\"authentication.basic.username\", \"neo4j\")\\\n     .option(\"authentication.basic.password\", \"password\")\\\n     .option(\"labels\", \":Person\")\\\n     .option(\"node.keys\", \"id\")\\\n     .mode(\"Overwrite\")\\\n     .save()\n</code></pre> <p>\u5207\u8bb0\uff0c\u5728\u52a0\u8f7d\u6570\u636e\u524d\u5b9a\u4e49Index\uff0c\u8fd9\u4e00\u64cd\u4f5c\u4f1a\u663e\u8457\u63d0\u5347\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#3","title":"3 \u5b9a\u4e49\u8282\u70b9\u548c\u5173\u7cfb","text":"\u8282\u70b9\u4e0e\u5173\u7cfb <p>\u5982\u56fe\u6240\u793a\uff0c\u5f69\u8272\u7684\u5706\u5708\u4ee3\u8868\u7740\u8282\u70b9\uff0c\u8282\u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\u662f\u5176\u5173\u7cfb\u3002\u76f4\u89c2\u6765\u8bf4\uff0c\u539f\u59cb\u6570\u636e\u662f\u4e00\u5f20\u8868\uff0c\u5b83\u542b\u6709\u4e00\u4e9b\u4e0e\u76ee\u6807\u6709\u5173\u7684\u5b57\u6bb5\uff0c\u800c\u6bcf\u4e2a\u5b57\u6bb5\u5373\u5bf9\u5e94\u8fd9\u4e00\u4e2a\u5b9e\u4f53\uff08\u8282\u70b9\uff09\u3002</p> Mule Phone Email John 888888888 demo@gmail.com Tim 777777777 demo2@gmail.com <p>\u8282\u70b9\u53ef\u4ee5\u7528\u4e0a\u8ff0\u4ee3\u7801\u5199\u5165Neo4J\uff0c\u5b9e\u4f53\u4e0e\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u53ef\u7528Cypher\u5b9a\u4e49\uff0c\u5982John\u62e5\u6709\u81ea\u5df1\u7684\u90ae\u7bb1\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\uff1a</p> <pre><code>MATCH\n(a:Mule),\n(b:Email)\nWHERE a.Email = b.Email\nCREATE (a)-[r:HAS_EMAIL]-&gt;(b)\nRETURN type(r)\n</code></pre> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5bf9\u76ee\u6807\u6709\u7528\u7684\u5173\u7cfb\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u5f0f\u8fdb\u884c\u5b9a\u4e49\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#4","title":"4 \u6570\u636e\u603b\u89c8","text":"<p>\u53cd\u6b3a\u8bc8\u793a\u4f8b\u7684\u7b2c\u4e00\u90e8\u5206\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u63cf\u8ff0\u6027\u5206\u6790\uff0c\u5982\u8282\u70b9\u6570\u91cf\u3001\u5173\u7cfb\u6570\u91cf\u7b49\u4fe1\u606f\uff0c\u8fd9\u6709\u5229\u4e8e\u5e2e\u52a9\u7406\u89e3\u6570\u636e\u3001\u68c0\u67e5\u6570\u636e\u5b8c\u6574\u6027\uff0c\u786e\u4fdd\u4f60\u6240\u9700\u8981\u7684\u6570\u636e\u90fd\u6309\u7167\u8bbe\u5b9a\u7684\u76ee\u6807\u5b58\u5165\u4e86Neo4J\uff0c\u8be5\u6a21\u5757\u5185\u5bb9\u6bd4\u8f83\u76f4\u89c2\uff0c\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0\u3002</p> \u63cf\u8ff0\u6027\u5206\u6790","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#5","title":"5 \u603b\u7ed3","text":"<p>\u672c\u6587\u89e3\u51b3\u4e86\u5f88\u591a\u56fe\u6570\u636e\u5e93\u521d\u5b66\u8005\u6700\u521d\u7684\u7591\u60d1\uff0c\u5982\u4f55\u5c06\u6570\u636e\uff08\u901a\u5e38\u662f\u8868\u683c\uff09\u5bfc\u5165Neo4J\uff0c\u5e76\u4e14\u5b9a\u4e49\u670d\u52a1\u4e8e\u76ee\u6807\u7684\u8282\u70b9\u4e0e\u5173\u7cfb\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u662f\u540e\u7eed\u5206\u6790\u5de5\u4f5c\u7684\u57fa\u7840\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5f0f\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u53cd\u6b3a\u8bc8\u7684\u5206\u6790\u4e86\u3002\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/","title":"Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e09\uff09 - \u8bc6\u522b\u72af\u7f6a\u56e2\u4f19","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-03-06\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#1","title":"1 \u524d\u8a00","text":"<p>\u4e0a\u56de\u5728Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e8c\uff09 - \u51c6\u5907\u6570\u636e\u4e2d\uff0c\u7b14\u8005\u4ecb\u7ecd\u4e86\u5982\u4f55\u5c06\u6570\u636e\u5bfc\u5165Neo4J\u5206\u6790\u5e73\u53f0\uff0c\u5e76\u5bf9\u5ba2\u6237\u548c\u4ea4\u6613\u4fe1\u606f\u505a\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u63cf\u8ff0\u6027\u5206\u6790\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u6709\u9488\u5bf9\u6027\u5730\u53bb\u5bfb\u627e\u6b3a\u8bc8\u7f6a\u72af\uff0c\u4ed6\u4eec\u7684\u8eab\u4efd\u4fe1\u606f\uff08\u5982\u7535\u8bdd\u3001\u8eab\u4efd\u8bc1\u53f7\u7b49\uff09\u548c\u5176\u4f59\u8bb8\u591a\u8d26\u53f7\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u56e0\u800c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u5171\u4eab\u7684\u4fe1\u606f\u627e\u5230\u7ebf\u7d22\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#2","title":"2 \u5171\u4eab\u7684\u8eab\u4efd\u4fe1\u606f","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5ba2\u6237\u548c\u5b9e\u4f53\u7684\u5173\u7cfb\uff0c\u5982\u5ba2\u6237\u62e5\u6709\u7535\u5b50\u90ae\u4ef6\u3001\u7535\u8bdd\u3001SSN\u7b49\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5ba2\u6237\u4f7f\u7528\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u8054\u7cfb\u5373\u53ef\u4ee5\u786e\u4fdd\u4ed6\u4eec\u88ab\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u6211\u4eec\u89e3\u6784\u4e86\u590d\u6742\u7684\u5173\u7cfb\u3002\u4f46\u662f\u5982\u679c\u8981\u8fd0\u884c\u7279\u5b9a\u7684\u56fe\u7b97\u6cd5\uff0c\u8fd8\u9700\u8981\u5bf9\u8fd9\u4e9b\u5173\u7cfb\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\uff0c\u56e0\u4e3a\u56fe\u7b97\u6cd5\u9002\u7528\u7684\u56fe\u7ed3\u6784\u5404\u6709\u4e0d\u540c\uff0c\u6709\u7684\u7b97\u6cd5\u9002\u7528\u4e8e<code>\u540c\u6784</code>\u7684\u56fe\uff0c\u5373\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u7c7b\u578b\u76f8\u540c\uff0c\u53ea\u6709\u540c\u4e00\u79cd\u5173\u7cfb\u3002\u6709\u7684\u7b97\u6cd5\u9002\u7528\u4e8e<code>\u5f02\u6784</code>\u7684\u56fe\uff0c\u5176\u4e2d\u542b\u6709\u591a\u79cd\u7c7b\u578b\u7684\u8282\u70b9\u548c\u5173\u7cfb\u3002</p> <p>Neo4J\u63d0\u4f9b\u7684\u793a\u4f8b\u4f7f\u7528\u4e86\u5f31\u8fde\u63a5\u5206\u91cf\uff08Weakly Connected Components\uff09\u7b97\u6cd5\u5bfb\u627e\u65e0\u5411\u56fe\u4e2d\u8fde\u63a5\u7684\u8282\u70b9\uff0c\u8be5\u7b97\u6cd5\u9002\u7528\u4e8e\u540c\u6784\u56fe\uff0c\u56e0\u6b64\u9700\u8981\u521b\u5efa\u4e00\u79cd\u65b0\u7684\u5173\u7cfb - <code>SHARED_IDENTIFIERS</code> \u8ba1\u7b97\u6bcf\u4e2a\u5ba2\u6237\u4e4b\u95f4\u5171\u4eab\u7684\u5b9e\u4f53\u4fe1\u606f\u7684\u6570\u91cf\uff0c\u5982\u5ba2\u6237A\u548cB\u7684\u7535\u5b50\u90ae\u4ef6\u3001\u7535\u8bdd\u548cSSN\u76f8\u540c\uff0c\u5219SHARED_IDENTIFIERS\u7684\u5c5e\u6027count\u4e3a3\u3002</p> <pre><code>// \u521b\u5efaSHARED_IDENTIFIERS\u5173\u7cfb\nMATCH (c1:Client)-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-&gt;(info)\n&lt;-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-(c2:Client)\nWHERE c1.id&lt;&gt;c2.id\nWITH c1, c2, count(*) as cnt\nMERGE (c1) - [:SHARED_IDENTIFIERS {count: cnt}] - (c2);\n</code></pre> <p>\u547d\u4ee4\u4e2d<code>WITH</code>\u5173\u952e\u5b57\u80fd\u591f\u5c06\u67e5\u8be2\u8bed\u53e5\u4e32\u8054\u5728\u4e00\u8d77\uff0c\u65b9\u4fbf\u4e0a\u4e00\u6b65\u7684\u53d8\u91cf\u5728\u4e0b\u4e00\u6b65\u7ee7\u7eed\u4f7f\u7528\u3002\u800c<code>MERGE</code>\u5173\u952e\u5b57\u7684\u7528\u9014\u975e\u5e38\u5e7f\u6cdb\uff0c\u6982\u62ec\u6765\u8bf4\uff0c\u5b83\u53ef\u4ee5\u4f7f\u4e00\u79cd\u6a21\u5f0f\u5b58\u5728\u5728\u56fe\u4e2d\uff0c\u5982\u679c\u8be5\u6a21\u5f0f\u4e0d\u5b58\u5728\uff0c\u5373\u65b0\u521b\u5efa\u8be5\u6a21\u5f0f\uff0c\u6b64\u5904\u7528\u4e8e\u521b\u5efa\u4e00\u79cd\u5173\u7cfb\u3002\u8bf7\u6ce8\u610f\uff0c\u793a\u4f8b\u4e2d\u6570\u636e\u91cf\u8f83\u5c0f\uff0c\u4ec5\u670930\u4e07\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u8282\u70b9\u6570\u91cf\u5e9e\u5927\uff0c\u5efa\u8bae\u4f7f\u7528Neo4J\u63d0\u4f9b\u7684APOC\u65b9\u6cd5\u5206\u6279\u6b21\u8fdb\u884c\u8fd0\u7b97\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#3","title":"3 \u521b\u5efa\u56fe","text":"<p>\u8fd0\u884c\u4efb\u4f55\u7b97\u6cd5\u524d\uff0c\u5fc5\u987b\u5148\u521b\u5efa\u56fe\uff0c\u53ef\u4ee5\u5229\u7528\u4e4b\u524d\u521b\u5efa\u7684<code>SHARED_IDENTIFIERS</code>\u5173\u7cfb\u6784\u5efa\u56fe\u3001\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64Neo4J\u5efa\u8bae\u5728\u6784\u5efa\u56fe\u3001\u8fd0\u884c\u7b97\u6cd5\u524d\u8fdb\u884c\u5185\u5b58\u4f30\u7b97\uff0c\u786e\u4fdd\u8ba1\u7b97\u8d44\u6e90\u80fd\u6ee1\u8db3\u9700\u6c42\uff1a</p> <pre><code>CALL gds.graph.create.cypher.estimate(\n'MATCH (c:Client) RETURN id(c) AS id',\n'MATCH (c1:Client)-[r:SHARED_IDENTIFIERS]-(c2:Client)\nWHERE c1.id&lt;&gt;c2.id\nRETURN id(c1) AS source,id(c2) AS target,r.count AS weight')\nYIELD requiredMemory,nodeCount,relationshipCount;\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> requiredMemory nodeCount relationshipCount \"8804 KiB\" 2433 1517 <p>\u786e\u4fdd\u5185\u5b58\u8db3\u591f\u5c31\u53ef\u4ee5\u6b63\u5f0f\u521b\u5efa\u56fe\uff1a</p> <pre><code>CALL gds.graph.create('WCC', 'Client',\n{\nSHARED_IDENTIFIERS:{\ntype: 'SHARED_IDENTIFIERS',\nproperties: {\ncount: {\nproperty: 'count'\n}\n}\n}\n}\n) YIELD graphName,nodeCount,relationshipCount,createMillis;\n</code></pre> <p>\u5982\u8fd0\u884c\u6b63\u5e38\uff0c\u5373\u53ef\u4f7f\u7528<code>CALL gds.graph.list();</code>\u547d\u4ee4\u67e5\u770b\u6240\u521b\u5efa\u7684\u56fe\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#4-wcc","title":"4 \u6267\u884cWCC\u7b97\u6cd5\u805a\u7c7b","text":"<p>\u540c\u6837\u7684\uff0c\u6267\u884c\u7b97\u6cd5\u524d\u4e5f\u5efa\u8bae\u4f30\u7b97\u5185\u5b58\u8d44\u6e90\uff0c\u4f46\u5728\u6b64\u4e0d\u518d\u8d58\u8ff0\uff0c\u8fd0\u884cWCC\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u3002<code>SET</code>\u6307\u4ee4\u80fd\u5c06\u503c\u8d4b\u7ed9\u4e00\u4e2a\u65b0\u7684\u5c5e\u6027\uff0c\u6b64\u5904\u5373\u4e3a\u5ba2\u6237\u6240\u5728\u7684\u7c07\u6253\u4e0a\u4e86\u6807\u7b7e\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u4ee3\u7801\u5df2\u7ecf\u6392\u9664\u4e86\u7c07\u91cc\u53ea\u5b58\u5728\u4e00\u4e2a\u5ba2\u6237\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u90a3\u4e9b\u4eba\u4e0e\u5176\u4ed6\u4eba\u6ca1\u6709\u5173\u8054\u3002</p> <pre><code>CALL gds.wcc.stream('WCC')\nYIELD componentId,nodeId\nWITH componentId AS cluster,gds.util.asNode(nodeId) AS client\nWITH cluster, collect(client.id) AS clients --collect\u5408\u5e76\u4e00\u4e2a\u5e8f\u5217\nWITH *,size(clients) AS clusterSize\nWHERE clusterSize&gt;1\nUNWIND clients AS client --UNWIND\u5c55\u5f00\u4e00\u4e2a\u5e8f\u5217\nMATCH(c:Client)\nWHERE c.id=client\nSET c.firstPartyFraudGroup=cluster;\n</code></pre> <p>WCC\u7b97\u6cd5\u5e2e\u52a9\u8bc6\u522b\u4e86\u9700\u8981\u5173\u6ce8\u7684\u4eba\u7fa4\uff0c\u63a5\u4e0b\u6765\u7684\u7b97\u6cd5\u5c31\u53ef\u4ee5\u57fa\u4e8e\u805a\u7c7b\u7ed3\u679c\u7ee7\u7eed\u8ba1\u7b97\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#5","title":"5 \u603b\u7ed3","text":"<p>\u8be5\u90e8\u5206\u5b8c\u6210\u4e86\u5bf9\u4eba\u7fa4\u5173\u7cfb\u7684\u91cd\u65b0\u6574\u5408\u3001\u5e76\u8bc6\u522b\u4e86\u5177\u6709\u76f8\u4f3c\u7279\u5f81\u7684\u7fa4\u4f53\uff0c\u65b9\u4fbf\u540e\u7eed\u5206\u6790\u3002\u540c\u65f6\u4ecb\u7ecd\u4e86\u5e38\u7528\u7684\u6280\u672f\u8981\u70b9\uff0c\u5982WITH\u3001MERGE\u3001SET\u3001APOC\u3001\u5185\u5b58\u4f30\u7b97\u3001\u521b\u5efa\u56fe\u53ca\u8fd0\u884c\u56fe\u7b97\u6cd5\uff0c\u4e0b\u56de\u8bb2\u89e3\u4e3a\u5371\u9669\u4eba\u7fa4\u8fdb\u884c\u8bc4\u5206\uff0c\u6709\u6548\u8bc6\u522b\u6b3a\u8bc8\u7f6a\u72af\u3002</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/","title":"Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u56db\uff09 - \u98ce\u9669\u8bc4\u5206","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-04-09\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#1","title":"1 \u524d\u8a00","text":"<p>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u7cfb\u5217\u6587\u7ae0\u5230\u6b64\u5c06\u8bc6\u522b\u51fa\u5371\u9669\u7528\u6237\uff0c\u672c\u671f\u5185\u5bb9\u5c06\u8bb2\u89e3\u5bf9\u6bcf\u4e2a\u5ba2\u6237\u8fdb\u884c\u98ce\u9669\u8bc4\u5206\u3002\u5982\u9700\u8981\u590d\u4e60\u524d\u6587\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u94fe\u63a5\uff1a</p> <ul> <li>\u521d\u8bc6\u56fe\u6570\u636e\u5e93</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e00\uff09 - \u642d\u5efa\u5206\u6790\u73af\u5883</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e8c\uff09 - \u51c6\u5907\u6570\u636e</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e09\uff09 - \u8bc6\u522b\u72af\u7f6a\u56e2\u4f19</li> </ul>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#2","title":"2 \u5bfb\u627e\u76f8\u4f3c\u8282\u70b9","text":"<p>\u4e0a\u56de\u901a\u8fc7\u5f31\u8fde\u63a5\u5206\u91cf\uff08Weakly Connected Components\uff09\u7b97\u6cd5\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u805a\u7c7b\u3002\u63a5\u4e0b\u6765\u53ef\u4ee5\u5728\u6bcf\u4e2a\u7c07\u4e2d\u5bfb\u627e\u5f7c\u6b64\u76f8\u4f3c\u7684\u5ba2\u6237\u3002</p> WCC\u805a\u7c7b\u7ed3\u679c <p>\u8be5\u6b65\u9aa4\u4f7f\u7528\u8282\u70b9\u76f8\u4f3c\u5ea6\uff08Jaccard\u503c\uff09\u8fdb\u884c\u5224\u65ad\uff0c\u8282\u70b9\u76f8\u4f3c\u5ea6\u7b97\u6cd5\u9700\u8981\u56fe\u7ed3\u6784\u4e2d\u6709\u4e24\u79cd\u8282\u70b9\uff0c\u56e0\u6b64\u521b\u5efa<code>Similarity</code>\u56fe\uff0c\u91cc\u9762\u5305\u542b\u5ba2\u6237\u548c\u5b9e\u4f53\u4fe1\u606f\u4e24\u79cd\u8282\u70b9\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u5173\u7cfb\u3002</p> <pre><code>CALL gds.graph.project.cypher('Similarity',\n'MATCH(c:Client)\n    WHERE exists(c.firstPartyFraudGroup)\n    RETURN id(c) AS id,labels(c) AS labels\nUNION\nMATCH(n)\n    WHERE n:Email OR n:Phone OR n:SSN\n    RETURN id(n) AS id,labels(n) AS labels',\n'MATCH(c:Client)\n-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-&gt;(ids)\nWHERE exists(c.firstPartyFraudGroup)\nRETURN id(c) AS source,id(ids) AS target')\nYIELD graphName,nodeCount,relationshipCount;\n</code></pre> <p>\u521b\u5efa\u56fe\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u8282\u70b9\u76f8\u4f3c\u5ea6\u7b97\u6cd5(\u6ce8\u610f\uff1a\u8be5\u7b97\u6cd5\u652f\u6301\u52a0\u6743\uff0c\u8be6\u89c1\u6587\u6863)\uff1a</p> <pre><code>CALL gds.nodeSimilarity.stream('Similarity',{topK:15})\nYIELD node1,node2,similarity\nRETURN gds.util.asNode(node1).id AS client1,\ngds.util.asNode(node2).id AS client2,similarity\nORDER BY similarity;\n</code></pre> <p>\u4f7f\u7528<code>Mutate</code>\u6a21\u5f0f\u5c06\u7ed3\u679c\u5199\u5165\u5185\u5b58\u4e2d\u7684\u56fe\u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u7cfb<code>SIMILAR_TO</code>\u3002\u81f3\u6b64\uff0c\u76f8\u4f3c\u7684\u8282\u70b9\u5bf9\u4e4b\u95f4\u5c06\u53ef\u4ee5\u7528jaccardScore\u8861\u91cf\u76f8\u4f3c\u6027\uff1a</p> <pre><code>CALL gds.nodeSimilarity.mutate('Similarity',{topK:15,\nmutateProperty:'jaccardScore', mutateRelationshipType:'SIMILAR_TO'});\n\n-- \u5c06\u7ed3\u679c\u4ece\u5185\u5b58\u4e2d\u7684\u56fe\u5199\u5165\u6570\u636e\u5e93\nCALL gds.graph.writeRelationship('Similarity','SIMILAR_TO','jaccardScore');\n</code></pre>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#3","title":"3 \u521b\u5efa\u98ce\u9669\u8bc4\u5206","text":"<p>\u63a5\u4e0b\u6765\u4f7f\u7528\u8282\u70b9\u4e2d\u5fc3\u5ea6\u7b97\u6cd5\u7ed3\u5408\u4e0a\u8ff0\u751f\u6210\u7684\u76f8\u4f3c\u5ea6\u6307\u6807\u751f\u6210\u4e00\u4e2a<code>firstPartyFraudScore</code>\uff0c<code>firstPartyFraudScore</code>\u5206\u8d8a\u9ad8\uff0c\u4ee3\u8868\u5176\u5728\u4e00\u4e2a\u7c07\u91cc\u548c\u8d8a\u591a\u7684\u5ba2\u6237\u6709\u66f4\u591a\u76f8\u4f3c\u7684\u5b9e\u4f53\u4fe1\u606f\uff0c\u5373\u8d8a\u5371\u9669\u3002</p> <pre><code>CALL gds.degree.write('Similarity',{nodeLabels:['Client'],\nrelationshipTypes:['SIMILAR_TO'],\nrelationshipWeightProperty:'jaccardScore',\nwriteProperty:'firstPartyFraudScore'});\n</code></pre> \u98ce\u9669\u8bc4\u5206 <p>\u6700\u540e\u9009\u752880\u5206\u4f4d\u6570\u4e3a\u9608\u503c\u6807\u8bb0\u5371\u9669\u7684\u5ba2\u6237\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>firstPartyFraudScore</code>\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u878d\u5408\u8fdb\u53cd\u6b3a\u8bc8\u7b56\u7565\u6216\u8005\u6a21\u578b\u3002</p> <pre><code>MATCH(c:Client)\nWHERE exists(c.firstPartyFraudScore)\nWITH percentileCont(c.firstPartyFraudScore, 0.8)\nAS firstPartyFraudThreshold\nMATCH(c:Client)\nWHERE c.firstPartyFraudScore&gt;firstPartyFraudThreshold\nSET c:FirstPartyFraudster;\n</code></pre>","tags":["knowledge graph"]},{"location":"Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#4","title":"4 \u603b\u7ed3","text":"<p>\u81f3\u6b64\uff0c\u8bc6\u522b\u5173\u7cfb\u7f51\u7edc\u4e2d\u7684\u6b3a\u8bc8\u7f6a\u72af\u5b9e\u6218\u7cfb\u5217\u5c31\u544a\u4e00\u6bb5\u843d\u4e86\uff0c\u901a\u8fc7\u8fd9\u4e00\u7cfb\u5217\u7684\u6587\u7ae0\uff0c\u8ba4\u8bc6\u548c\u5de9\u56fa\u4e86\u5982\u4e0b\u77e5\u8bc6\u70b9\uff1a</p> <ul> <li>\u56fe\u7684\u57fa\u672c\u7ed3\u6784</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u67e5\u8be2\u8bed\u53e5Cypher\u5e38\u7528\u547d\u4ee4</li> <li>\u53cd\u6b3a\u8bc8\u5e94\u7528\u4e2d\u5e38\u89c1\u7684\u7b97\u6cd5</li> </ul> <p>\u5e0c\u671b\u8fd9\u6b21\u5b9e\u6218\u7cfb\u5217\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["knowledge graph"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/","title":"\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-07-16\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#1","title":"1 \u5f15\u8a00","text":"<p>\u4e8b\u60c5\u7684\u8d77\u56e0\u662f\u6709\u670b\u53cb\u544a\u8bc9\u6211\u6700\u8fd1\u6709KDD Cup 2021\u7684\u6bd4\u8d5b\u3002\u4e3a\u4e86\u51d1\u4e2a\u70ed\u95f9\uff0c\u4e5f\u4e3a\u4e86\u5237\u70b9\u7ecf\u9a8c\uff0c\u6211\u4eec\u51c6\u5907\u5408\u4f19\u53c2\u52a0(\u5f53\u4e2a\u70ae\u7070)\u3002 \u6709\u4e09\u9053\u8d5b\u9898\uff0c\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u3001\u56fe\u76f8\u5173\u7684\u548c\u667a\u6167\u57ce\u5e02\u3002\u770b\u4e0a\u53bb\u6700\u6b63\u5e38\u7684\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u5f53\u4ec1\u4e0d\u8ba9\u7684\u6210\u4e3a\u4e86\u6211\u4eec\u7684\u9009\u62e9\u3002</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#2","title":"2 \u9898\u76ee\u8981\u6c42","text":"<p>\u7ade\u8d5b\u8981\u6c42\u6211\u4eec\u68c0\u6d4b\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u5f02\u5e38\u70b9\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5f02\u5e38\u70b9\u3002\u9898\u76ee\u7ed9\u51fa\u4e86\u5f02\u5e38\u70b9\u6240\u5728\u7684\u533a\u95f4\uff0c\u8981\u6c42\u6211\u4eec\u7ed9\u51fa\u5f02\u5e38\u70b9\u6240\u5728\u7684\u4f4d\u7f6e\u3002</p> Example <p>\u8bc4\u4f30\u65f6\u4f1a\u8003\u5bdf\u6211\u4eec\u7ed9\u51fa\u7684\u4f4d\u7f6e\u524d\u540e100\u4e2a\u70b9\u7684\u8303\u56f4\u5185\u662f\u5426\u5305\u542b\u771f\u6b63\u7684\u5f02\u5e38\u70b9\u3002\u5e8f\u5217\u957f\u5ea6\u4ece\u51e0\u5343\u5230\u51e0\u5341\u4e07\u4e2a\u89c2\u6d4b\u70b9\u4e0d\u7b49\u3002\u6570\u636e\u7684\u6765\u6e90\u53ef\u80fd\u6709\u5fc3\u7535\u56fe\u3001\u4f20\u611f\u5668\u6570\u636e\u7b49\u5177\u6709\u660e\u663e\u5468\u671f\u6027\u7684\u6570\u636e\u3002\u76ee\u7684\u662f\u60f3\u8ba9\u6211\u4eec\u627e\u5230\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u81ea\u52a8\u5316\u5730\u76d1\u6d4b\u5927\u89c4\u6a21\u7684\u6b64\u7c7b\u6570\u636e\u3002  </p> <p>\u7ade\u8d5b\u5206\u4e3a\u4e24\u671f\uff0c\u7b2c\u4e00\u671f(PhaseI)\u670925\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u7528\u4e8e\u8c03\u8bd5\u7b97\u6cd5\u3002\u7b2c\u4e8c\u671f(PhaseII)\u6709250\u4e2a\u5e8f\u5217\uff0c\u7528\u4e8e\u8bc4\u4f30\u6bd4\u8d5b\u6210\u7ee9\u3002</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#3","title":"3 \u6570\u636e\u5206\u6790","text":"<p>\u6211\u4eec\u9009\u53d6\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u77a7\u4e00\u77a7\u3002</p> timeseries <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u5e8f\u5217\u5177\u6709\u5f88\u5f3a\u7684\u5468\u671f\u6027\u3002\u540c\u65f6\uff0c\u9898\u76ee\u544a\u8bc9\u6211\u4eec\uff0c\u5f02\u5e38\u70b9\u4f4d\u4e8e\u7b2c2500\u4e2a\u70b9\u4e4b\u540e\u3002 \u901a\u8fc7\u4eba\u5de5\u667a\u80fd(\u8089\u773c)\u8bc6\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7b2c5500\u4e2a\u70b9\u9644\u8fd1\u7684\u6570\u636e\u4f3c\u4e4e\u6709\u4e9b\u53e4\u602a\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u600e\u4e48\u901a\u8fc7\u7b97\u6cd5\u5c06\u5b83\u8bc6\u522b\u51fa\u6765\u5462\uff1f</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#4","title":"4 \u521d\u6b65\u5c1d\u8bd5","text":"<p>\u53ef\u80fd\u5927\u90e8\u5206\u4eba\u90fd\u77e5\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u5747\u503c+-\u51e0\u500d\u6807\u51c6\u5dee\u6765\u8bc6\u522b\u6781\u503c\u3002\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u6709\u51e0\u4e2a\u7f3a\u9677\uff1a - \u53ef\u4ee5\u8bc6\u522b\u51fa\u4e00\u5806\u6781\u503c\uff0c\u65e0\u6cd5\u786e\u5b9a\u54ea\u4e2a\u662f\u5f02\u5e38\u503c - \u6781\u503c\u4e0d\u4e00\u5b9a\u662f\u5f02\u5e38\u503c\uff0c\u8bf7\u770b\uff1a</p> outliers <p>\u901a\u8fc7\u8089\u773c\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f02\u5e38\u503c\u5728\u7b2c6000\u4e2a\u89c2\u6d4b\u503c\u9644\u8fd1\u3002\u7136\u800c\u90a3\u4e00\u5757\u5e76\u6ca1\u6709\u51fa\u73b0\u6781\u503c\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u8bf4\u5bf9\u4e8e\u8fd9\u79cd\u5468\u671f\u6027\u8f83\u5f3a\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u6781\u503c\u53ef\u80fd\u4e5f\u662f\u5468\u671f\u7684\u4e00\u90e8\u5206\u3002\u6211\u4eec\u9700\u8981\u8bc6\u522b\u7684\u662f\u67d0\u4e2a\u4e0e\u5176\u4ed6\u5468\u671f\u4e0d\u540c\u7684\u5c0f\u533a\u95f4\u3002</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#5-matrixprofile","title":"5 Matrixprofile\u7b97\u6cd5","text":"<p>\u90a3\u4e48\uff0c\u5982\u4f55\u8bc6\u522b\u51fa\u5468\u671f\u5c42\u9762\u7684\u5f02\u5e38\u533a\u95f4\u5462\uff1f\u6211\u4eec\u53ef\u80fd\u4f1a\u60f3\uff0c\u6211\u4eec\u5148\u786e\u5b9a\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u533a\u95f4\u548c\u5176\u4ed6\u540c\u6837\u957f\u5ea6\u7684\u533a\u95f4\u957f\u5f97\u662f\u5426\u4e0d\u540c\u3002 \u9898\u76ee\u597d\u5fc3\u5730\u63d0\u793a\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u5305\uff1amatrixprofile\u3002</p> <p>matrixprofile\u7b97\u6cd5\u7531\u52a0\u5dde\u5927\u5b66\u6cb3\u6ee8\u5206\u6821\u7684\u7814\u7a76\u8005\u4e8e2016\u5e74\u63d0\u51fa\u3002\u5b83\u7684\u60f3\u6cd5\u6bd4\u8f83\u7b80\u5355\u76f4\u767d\uff0c\u5373\u7ed9\u5b9a\u7a97\u53e3\u957f\u5ea6\uff0c\u8ba1\u7b97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u4e0e\u5176\u4ed6\u540c\u6837\u957f\u5ea6\u7684\u5b50\u5e8f\u5217\u7684\u8ddd\u79bb\uff0c\u5176\u4e2d\uff0c\u4e0e\u6700\u76f8\u4f3c\u5e8f\u5217(\u8ddd\u79bb\u6700\u5c0f\u7684\u5e8f\u5217)\u7684\u8ddd\u79bb\u4e3a\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684mp\u503c\u3002\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6574\u4e2a\u5e8f\u5217\u7684mp\u503c\u3002\u5176\u4e2d\uff0c\u8f83\u5927\u7684mp\u503c\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u6b64\u5904\u7684\u5b50\u5e8f\u5217\u4e0e\u548c\u5b83\u6700\u76f8\u4f3c\u7684\u5e8f\u5217\u8ddd\u79bb\u90fd\u6bd4\u8f83\u5927\uff0c\u56e0\u6b64\u8be5\u5b50\u5e8f\u5217\u6709\u66f4\u5927\u7684\u53ef\u80fd\u662f\u5f02\u5e38\u503c\u3002  </p> Demo <p>matrixprofile\u8fd9\u4e2a\u5305\u66f4\u591a\u7684\u662f\u5728\u8ba1\u7b97\u6548\u7387\u4e0a\u505a\u4e86\u4f18\u5316\uff0c\u5982\u5728\u8ddd\u79bb\u7684\u8ba1\u7b97\u4e0a\uff0c\u5c06\u5b50\u5e8f\u5217\u6807\u51c6\u5316\u540e\u53ea\u9700\u8981\u8ba1\u7b97\u70b9\u79ef\uff0c\u907f\u514d\u4e86\u6b27\u5f0f\u8ddd\u79bb\u7684\u8ba1\u7b97\u7b49\u7b49\u3002  </p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#6","title":"6 \u5c0f\u8bd5\u725b\u5200","text":"<p>matrixprofile\u7684\u4f7f\u7528\u975e\u5e38\u65b9\u4fbf</p> <pre><code>import matrixprofile as mp\nprofile= mp.compute(data,windows=window_size,n_jobs=8) #window_size\u4e3a\u5b50\u5e8f\u5217\u957f\u5ea6\ndiscords=mp.discover.discords(profile,k=1) #k=1\u8868\u793a\u627e\u5230\u6700\u5927\u7684\u90a3\u4e00\u4e2amp\nstart_index=discords['discords'][0] #\u6b64\u65f6\uff0c\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u8d77\u59cb\u70b9\u4e3astart_index\n</code></pre> <p>\u6211\u4eec\u7528\u521a\u5f00\u59cb\u77a7\u4e00\u77a7\u7684\u65f6\u95f4\u5e8f\u5217\u4e3a\u4f8b\u3002\u901a\u8fc7\u4eba\u773c\u8bc6\u522b\uff0c\u6211\u4eec\u53d1\u73b0\u5f02\u5e38\u503c\u5728\u7b2c5500\u4e2a\u89c2\u6d4b\u503c\u9644\u8fd1\uff0c\u6211\u4eec\u770b\u770b\u7528matrixprofile\u5c06\u4f1a\u8868\u73b0\u5982\u4f55\uff1f</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u7a97\u53e3(\u5b50\u5e8f\u5217)\u957f\u5ea6\u3002\u6211\u4eec\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u5f97\u5230\u5468\u671f(\u9891\u57df\u4e2d\uff0c\u632f\u5e45\u6700\u5927\u7684\u70b9)\u3002\u901a\u8fc7\u8ba1\u7b97\uff0cmatrixprofile\u544a\u8bc9\u6211\u4eecmp\u503c\u6700\u5927\u7684\u5b50\u5e8f\u5217\u7684\u8d77\u59cb\u70b9\u4e3a5500\uff0c\u6574\u4e2a\u5e8f\u5217\u7684mp\u503c\u5e8f\u5217\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> mp series <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u5b50\u5e8f\u5217\u76f8\u8f83\u522b\u7684\u5e8f\u5217\uff0c\u5728\u8ddd\u79bb\u4e0a\u6709\u660e\u663e\u7684\u4e0d\u540c\u3002\u6211\u4eec\u6210\u529f\u627e\u5230\u4e86\u548c\u4eba\u773c\u8bc6\u522b\u5b8c\u5168\u76f8\u540c\u7684\u5f02\u5e38\u5e8f\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u8ba4\u4e3a\u5f02\u5e38\u503c\u5728\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u4e2d\u70b9\u3002 \u4e0b\u9762\u9700\u8981\u505a\u7684\u5c31\u662f\u904d\u5386\u6240\u6709\u65f6\u95f4\u5e8f\u5217\uff0c\u627e\u51fa\u5f02\u5e38\u503c\uff0c\u5e76\u63d0\u4ea4\u5373\u53ef\u3002\u901a\u8fc7matrixprofile\u8fd9\u4e00\u7b80\u5355\u76f4\u767d\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u6210\u529f\u7684\u8dfb\u8eab\u6392\u884c\u699c88%\u7684\u5206\u4f4d(\u7b2c\u4e00\u662f100%)\u3002</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#7","title":"7 \u5c0f\u7ed3","text":"<p>\u5bf9\u4e8e\u8fd9\u7c7b\u5468\u671f\u6027\u8f83\u5f3a\u7684\u65f6\u95f4\u5e8f\u5217\uff0c\u5f02\u5e38\u68c0\u6d4b\u7684\u76ee\u6807\u662f\u627e\u51fa\u5dee\u5f02\u8f83\u5927\u7684\u5b50\u5e8f\u5217\u3002\u53ef\u4ee5\u770b\u5230\uff0cmatrixprofile\u5df2\u7ecf\u80fd\u591f\u8fbe\u5230\u4e0d\u9519\u7684\u6548\u679c\u3002\u5f53\u7136\uff0c\u8fd8\u6709\u66f4\u591a\u590d\u6742\u3001fancy\u7684\u7b97\u6cd5\uff0c\u5982\u9891\u8c31\u76f8\u5173\u7684\u7b97\u6cd5\u7b49\uff0c\u6709\u5f85\u8fdb\u4e00\u6b65\u53d1\u6398\u3002</p>","tags":["time series","machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/","title":"\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0a\uff09","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-07-22\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#1","title":"1 \u5f15\u8a00","text":"<p>\u7b2c\u4e00\u6b21\u542c\u5230\u300aRules of Machine Learning\u300b\uff0c\u5c31\u88ab\u5b83\u7684\u9898\u76ee\u5413\u4e86\u4e00\u8df3\u3002\u662f\u4ec0\u4e48\u6837\u7684\u795e\u4ed9\u6562\u8d77\u8fd9\u6837\u7684\u9898\u76ee\uff0c\u5728\u8fd9\u91cc\u6307\u70b9\u6c5f\u5c71\uff1f \u770b\u5230\u4f5c\u8005\u548c\u6765\u6e90\u540e\uff0c\u597d\u5427\uff0c\u539f\u6765\u662f\u8c37\u6b4c\u7684\u5927\u795e\u3002\u90a3\u6211\u4eec\u5c31\u6765\u770b\u770b\u8fd9\u7bc7\u96c4\u5fc3\u52c3\u52c3\u7684\u6587\u7ae0\u80fd\u6559\u4f1a\u6211\u4eec\u4ec0\u4e48\u5427\u3002 \u7531\u4e8e\u6587\u7ae0\u8f83\u957f(\u67093\u4e2a\u9636\u6bb5\uff0c43\u6761rule)\uff0c\u672c\u6587\u662f\u8fd9\u4e00\u7cfb\u5217\u7684\u4e0a\u7bc7(\u5305\u542b\u7b2c\u4e00\u9636\u6bb5)\u3002\u672c\u6587\u4ec5\u57fa\u4e8e\u81ea\u5df1\u6709\u9650\u7684\u7ecf\u9a8c\u4e0e\u77e5\u8bc6\uff0c\u5728\u7ffb\u8bd1\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u6b22\u8fce\u8ba8\u8bba\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#2","title":"2 \u6982\u8ff0","text":"<p>\u6587\u7ae0\u5f00\u7bc7\u5148\u6765\u4e86\u4e2a\u6982\u8ff0\u3002</p> <pre><code>To make great products:\ndo machine learning like the great engineer you are, not like the great machine learning expert you aren\u2019t.\n</code></pre> <p>\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u6700\u4f18\u5148\u7684\u662f\u5de5\u7a0b\u4e0a\u7684\u5b9e\u73b0\uff0c\u662f\u5426\u6e05\u695a\u5730\u5b9a\u4e49\u4e86\u95ee\u9898\uff0c\u662f\u5426\u6709\u4e00\u4e2a\u89e3\u51b3\u95ee\u9898\u7684solid\u7684pipeline\u3002\u5176\u6b21\u624d\u662ffancy\u7684\u7b97\u6cd5\u7528\u6765\u9526\u4e0a\u6dfb\u82b1\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#3","title":"3 \u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u4ee5\u524d","text":"<pre><code>Rule #1: Don\u2019t be afraid to launch a product without machine learning.\n</code></pre> <p>\u7b80\u5355\u7684\u6a21\u578b\uff0c\u76f4\u63a5\u7684rule\u6c38\u8fdc\u662f\u4f60\u7684baseline\u3002\u5b83\u53ef\u80fd\u6ca1\u6709\u90a3\u4e48\u597d\uff0c\u4f46\u662f\u5728\u4f60\u4e00\u65e0\u6240\u6709\u65f6\uff0c\u5b83\u8db3\u591f\u6709\u6548\u3002</p> <pre><code>Rule #2: First, design and implement metrics\n</code></pre> <p>\u8bbe\u8ba1\u597d\u8bc4\u4ef7\u6307\u6807\uff0c\u505a\u597d\u8bb0\u5f55\u3002</p> <pre><code>Rule #3: Choose machine learning over a complex heuristic\n</code></pre> <p>\u5f53\u4f60\u7684\u89c4\u5219\u8fc7\u4e8e\u590d\u6742\u65f6\uff0c\u8bf7\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u3002\u673a\u5668\u5b66\u4e60\u4e4b\u6240\u4ee5\u795e\u5947\uff0c\u5c31\u662f\u56e0\u4e3a\u5b83\u80fd\u5b66\u5230\u5404\u79cd\u590d\u6742\u7684\u5173\u7cfb\u3002\u5e76\u4e14\u6a21\u578b\u66f4\u65b0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#4-pipeline","title":"4 \u4f60\u7684\u7b2c\u4e00\u4e2apipeline","text":"<pre><code>Rule #4: Keep the first model simple and get the infrastructure right.\n</code></pre> <p>\u6709\u4e00\u4e2a\u8db3\u591fsolid\u7684baseline\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u4e00\u5207\u90fd\u5c06\u57fa\u4e8e\u5b83\u3002</p> <pre><code>Rule #5: Test the infrastructure independently from the machine learning\n</code></pre> <p>\u867d\u7136infra\u5927\u6982\u7387\u5df2\u7ecf\u63d0\u4f9b\u597d\u4e86\uff0c\u4f60\u8fd8\u662f\u53ef\u4ee5\u5e26\u6709\u8d28\u7591\u7684\u773c\u5149\u53bb\u68c0\u67e5\u5b83\u3002\u8fd9\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u6df1\u4f60\u5bf9infra\u7684\u7406\u89e3\uff0c\u751a\u81f3\u53ef\u80fd\u5e2e\u52a9\u4f60\u53d1\u73b0\u7956\u4f20bug\u3002</p> <pre><code>Rule #6: Be careful about dropped data when copying pipelines.\n</code></pre> <p>\u4e0d\u540c\u7684\u573a\u666f\u53ef\u80fd\u5bf9\u6570\u636e\u7684\u8981\u6c42\u4e0d\u540c(\u6709\u7684\u9700\u8981\u5386\u53f2\u6570\u636e\uff0c\u6709\u7684\u53ea\u9700\u8981\u6700\u65b0\u6570\u636e)\u3002\u53e6\u5916\uff0c\u591a\u7559\u4e2a\u5fc3\u773c\u68c0\u67e5\u4e0b\u6570\u636e\u3002\u53ef\u80fd\u4f60\u6ca1\u6ce8\u610f\u7684\u5c0f\u7ec6\u8282(\u5982join\u65f6\uff0c\u540c\u4e2akey\u7684\u591a\u6761\u8bb0\u5f55)\uff0c\u4f1a\u4f7f\u6700\u7ec8\u7684\u7ed3\u679c\u548c\u4f60\u9884\u60f3\u7684\u4e0d\u540c\u3002</p> <pre><code>Rule #7: Turn heuristics into features, or handle them externally.\n</code></pre> <p>\u5df2\u6709\u7684\u6709\u6548\u7684rule\u53ef\u4ee5\u6210\u4e3a\u6a21\u578b\u7684\u7279\u5f81\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b83\u4eec(\u5982\u9ed1\u767d\u540d\u5355)\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#5","title":"5 \u76d1\u63a7","text":"<pre><code>Rule #8: Know the freshness requirements of your system.\n</code></pre> <p>\u6839\u636e\u6a21\u578b\u91cd\u8981\u6027\uff0c\u76d1\u63a7\u6a21\u578b\u7684\u8868\u73b0\u3002</p> <pre><code>Rule #9: Detect problems before exporting models.\n</code></pre> <p>\u5c3d\u91cf\u5728\u6a21\u578b\u4e0a\u7ebf\u524d\u53d1\u73b0\u6240\u6709\u95ee\u9898\u3002</p> <pre><code>Rule #10: Watch for silent failures.\n</code></pre> <p>\u9664\u4e86\u6a21\u578b\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u76d1\u63a7\u597d\u6a21\u578b\u7684\u4f9d\u8d56\uff0c\u5982\u80cc\u540e\u7684\u6570\u636e\uff0c\u7279\u5f81\u7b49\u7b49\u662f\u5426\u6709\u7f3a\u5931\u7b49\u5f02\u5e38\u60c5\u51b5\u3002\u8fd9\u4e00\u70b9\u5176\u5b9e\u5f88tricky\uff0c\u603b\u4f1a\u6709\u6570\u636e\u5b58\u5728\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u4e00\u95ee\u9898\u4f1a\u5bf9\u6a21\u578b\u9020\u6210\u591a\u5927\u5f71\u54cd\u5462\uff1f</p> <pre><code>Rule #11: Give feature column owners and documentation.\n</code></pre> <p>\u505a\u597d\u6587\u6863\uff0c\u53ef\u80fd\u5927\u516c\u53f8\u6216\u591a\u6216\u5c11\u90fd\u5b58\u5728\u6587\u6863\u4e0d\u5168\u7684\u95ee\u9898\u3002\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#6","title":"6 \u4f60\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807","text":"<pre><code>Rule #12: Don\u2019t overthink which objective you choose to directly optimize.\n</code></pre> <p>\u4e0d\u8981\u7ea0\u7ed3\u4e8e\u4f18\u5316\u54ea\u4e00\u4e2a\u76ee\u6807\u3002\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u7684\u7406\u89e3\u662f\u4f18\u5316\u76ee\u6807\u6709\u91cd\u8981\u6027\u4e4b\u5206\u3002\u5982\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u6293\u5230\u574f\u4eba\u6bd4\u51a4\u6789\u597d\u4eba\u5e26\u6765\u7684\u597d\u5904\u66f4\u5927\u3002\u90a3\u4e48\u6a21\u578b\u9996\u5148\u8be5\u5173\u6ce8\u7684\u5e94\u8be5\u662fcatch rate\u3002\u5f88\u96be\u505a\u5230\u65b0\u7684\u6a21\u578b\u5728\u5404\u79cd\u7ef4\u5ea6\u4e0b\u90fd\u4f18\u4e8e\u5df2\u6709\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <pre><code>Rule #13: Choose a simple, observable and attributable metric for your first objective.\n</code></pre> <p>\u7ed9\u4f60\u7684\u6a21\u578b\u9009\u62e9\u4e00\u4e2a\u7b80\u5355\uff0c\u53ef\u89c2\u6d4b\uff0c\u53ef\u5f52\u56e0\u7684\u8bc4\u4ef7\u6307\u6807\u3002\u590d\u6742\u7684\u3001\u4e0d\u76f4\u63a5\u7684\u8bf7\u4ea4\u7ed9\u7b56\u7565\u5206\u6790\u5e08\u4eec\u3002</p> <pre><code>Rule #14: Starting with an interpretable model makes debugging easier.\n</code></pre> <p>\u4e00\u5f00\u59cb\u9009\u62e9\u89e3\u91ca\u6027\u5f3a\u7684\u6a21\u578b\uff0c\u4fbf\u4e8edebug\u3002\u4e0d\u8981\u4e00\u4e0a\u6765\u5c31\u6765fancy\u7684\u7b97\u6cd5\uff0c\u8fd9\u53ea\u4f1a\u589e\u52a0\u4f60\u53d1\u73b0\u95ee\u9898\u7684\u96be\u5ea6\u3002</p> <pre><code>Rule #15: Separate Spam Filtering and Quality Ranking in a Policy Layer.\n</code></pre> <p>\u4e0d\u540c\u4efb\u52a1\u7684\u80cc\u666f\u4e0d\u540c\uff0c\u4e0d\u8981\u5e0c\u671b\u5728A\u4efb\u52a1\u8868\u73b0\u597d\u7684\u6a21\u578b\u4e00\u5b9a\u5728B\u4efb\u52a1\u8868\u73b0\u7684\u597d\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#7","title":"7 \u5c0f\u7ed3","text":"<p>\u8fd915\u6761rule\u4e3b\u8981\u805a\u7126\u7684\u662f\u5177\u4f53\u5efa\u6a21\u524d\u7684\u6b65\u9aa4\uff0c\u867d\u7136\u6709\u4e00\u4e22\u4e22\u5bbd\u6cdb\uff0c\u4f46\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u5927\u65b9\u5411\uff0c\u662f\u5efa\u6a21\u5de5\u4f5c\u7684\u57fa\u77f3\u3002\u8fd9\u4e9brule\u76f8\u4fe1\u662f\u524d\u4eba\u8e29\u4e86\u4e0d\u5c11\u5751\uff0c\u603b\u7ed3\u51fa\u6765\u7684\u7ecf\u9a8c\u4e4b\u8c08\u3002\u503c\u5f97\u5e38\u770b\u5e38\u65b0\u3002  </p> <p>\u4e0b\u7bc7\u5c06\u6d89\u53ca\u66f4\u4e3a\u5177\u4f53\u7684\u5efa\u6a21\u5185\u5bb9\uff0c\u8ba8\u8bba\u6709\u5173\u7279\u5f81\u5de5\u7a0b\u4ee5\u53ca\u4f18\u5316\u6a21\u578b\u65b9\u9762\u7684rule\uff0c\u656c\u8bf7\u671f\u5f85\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/","title":"\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0b\uff09","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-07-24\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea68\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#1","title":"1 \u5f15\u8a00","text":"<p>\u8fd9\u7bc7\u662f\u300aRules of Machine Learning\u300b \u8bfb\u540e\u611f\u7684\u4e0b\u7bc7\u3002\u4e3b\u8981\u6d89\u53ca\u4e86\u5177\u4f53\u5efa\u6a21\u7684\u90e8\u5206\uff0c\u5305\u62ec\u7279\u5f81\u5de5\u7a0b\uff0c\u5206\u6790\u53ca\u4f18\u5316\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#2","title":"2 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u5f53\u9636\u6bb5\u4e00\u7684\u7cfb\u7edf\u642d\u5efa\u5b8c\u6bd5\u540e\uff0c\u9636\u6bb5\u4e8c\u8981\u505a\u7684\u662f\u52a0\u5165\u5c3d\u53ef\u80fd\u591a\u7684\u6709\u6548\u7279\u5f81\u3002\u6b64\u65f6\uff0c\u6a21\u578b\u8868\u73b0\u7684\u63d0\u5347\u662f\u76f8\u5bf9\u5bb9\u6613\u7684\u3002</p> <pre><code>Rule #16: Plan to launch and iterate.\n</code></pre> <p>\u505a\u597d\u6301\u7eed\u8fed\u4ee3\u7684\u51c6\u5907\u3002</p> <pre><code>Rule #17: Start with directly observed and reported features as opposed to learned features.\n</code></pre> <p>\u4ece\u7b80\u5355\u3001\u76f4\u89c2\u7684\u7279\u5f81\u51fa\u53d1\u3002\u6240\u8c13learned features\u53ef\u4ee5\u662f\u522b\u7684\u6a21\u578b\u7684\u6253\u5206\u7b49\u3002\u52a0\u5165\u6b64\u7c7b\u7279\u5f81\u4f1a\u589e\u52a0\u4f9d\u8d56\u6027\uff0c\u5982\u67d0\u5929\u67d0\u4e2a\u6a21\u578bretire\u4e86\uff0c\u8fd9\u4e2a\u7279\u5f81\u5c31\u7528\u4e0d\u4e86\u4e86\u3002 \u7136\u800c\uff0c\u8fd9\u91cc\u5e76\u4e0d\u662f\u8bf4\u5b8c\u5168\u4e0d\u80fd\u4f7f\u7528\u6b64\u7c7b\u7279\u5f81\u3002</p> <pre><code>Rule #18: Explore with features of content that generalize across contexts.\n</code></pre> <p>\u4f7f\u7528\u8de8\u573a\u666f\u7684\u7279\u5f81\u3002\u6bd4\u5982\u5ba2\u6237\u5728A\u4ea7\u54c1\u4e0a\u7684\u6570\u636e\u6709\u5229\u4e8e\u5bf9B\u4ea7\u54c1\u5efa\u6a21\u3002\u540c\u65f6\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u5904\u7406\u51b7\u542f\u52a8\u95ee\u9898\u3002</p> <pre><code>Rule #19: Use very specific features when you can.\n</code></pre> <p>\u5982\u679c\u6570\u636e\u91cf\u591f\u5927\uff0c\u4f7f\u7528\u5c3d\u53ef\u80fd\u591a\u7684\u7b80\u5355\u7279\u5f81\u800c\u4e0d\u662f\u5c11\u6570\u590d\u6742\u7279\u5f81\u3002\u4e0d\u8981\u5bb3\u6015\u4f7f\u7528id\u7c7b\u975e\u5e38\u7a00\u758f\u7684\u7279\u5f81\u3002</p> <pre><code>Rule #20: Combine and modify existing features to create new features in human-understandable ways.\n</code></pre> <p>\u7279\u5f81\u5de5\u7a0b\u8981\u6709\u4e00\u5b9a\u7684\u542b\u4e49\u3002\u5bf9\u8fde\u7eed\u7279\u5f81\u79bb\u6563\u5316\u6216\u8005\u7c7b\u522b\u7279\u5f81\u7684\u4ea4\u53c9\u8981\u6709\u4e00\u5b9a\u7684\u4e1a\u52a1\u542b\u4e49\uff0c\u4e0d\u80fd\u4e71\u4ea4\u53c9\u3002 \u7279\u5f81\u7ec4\u5408\u53ef\u4ee5\u8bd5\u8bd5Shap\u3002Shap\u53ef\u4ee5\u7ed9\u51fa\u7279\u5f81\u4ea4\u4e92\u5bf9label\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u6307\u5bfc\u7279\u5f81\u7ec4\u5408\u3002</p> <pre><code>Rule #21: The number of feature weights you can learn in a linear model is roughly proportional to the amount of data you have.\n</code></pre> <p>\u7279\u5f81\u6570\u91cf\u8981\u548c\u6837\u672c\u6570\u91cf\u5339\u914d(\u6709\u7edf\u8ba1\u7406\u8bba\u652f\u6491)\u3002  </p> <ul> <li>\u5343\u7ea7\u6570\u636e\u5bf9\u5e94\u51e0\u5341\u4e2a\u7279\u5f81</li> <li>\u5343\u4e07\u7ea7\u7684\u6570\u636e\u5bf9\u5e94\u5341\u4e07\u7ea7\u7684\u7279\u5f81</li> </ul> <p>\u770b\u4e0a\u53bb\u662f\u5dee\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002</p> <pre><code>Rule #22: Clean up features you are no longer using.\n</code></pre> <p>\u53bb\u9664\u65e0\u7528\u7684\u7279\u5f81\u3002\u5982\u65e0\u5fc5\u8981\uff0c\u52ff\u589e\u5b9e\u4f53\uff0c\u8fd9\u4e5f\u7b26\u5408\u5965\u5361\u59c6\u5243\u5200\u539f\u7406\u3002\u5254\u9664\u6b64\u7c7b\u7279\u5f81\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u6a21\u578b\u66f4clean\uff0c\u751a\u81f3\u53ef\u4ee5\u63d0\u5347\u6a21\u578b\u8868\u73b0\u3002 \u53e6\u5916\uff0c\u8986\u76d6\u7387\u592a\u4f4e\u7684\u7279\u5f81\u4e0d\u4e00\u5b9a\u4e0d\u80fd\u7528\u3002\u5982\u67d0\u7279\u5f81\u8986\u76d6\u7387\u53ea\u67091%\uff0c\u4f46\u662f\u8fd91%\u90fd\u662f\u6b63\u6837\u672c\uff0c\u90a3\u4e48\u8fd9\u4e5f\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u6548\u7684\u7279\u5f81\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#3","title":"3 \u4eba\u4e3a\u5206\u6790\u673a\u5668\u5b66\u4e60\u7cfb\u7edf","text":"<pre><code>Rule #23: You are not a typical end user.\n</code></pre> <p>\u4e0d\u8bc6\u5e90\u5c71\u771f\u9762\u76ee\uff0c\u53ea\u7f18\u751f\u5728\u6b64\u5c71\u4e2d\u3002\u4f5c\u4e3a\u6a21\u578b\u7684\u5f00\u53d1\u8005\uff0c\u4f60\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u5ba2\u89c2\u7684\u7ec8\u7aef\u7528\u6237\u3002\u53ef\u4ee5\u8ba9\u771f\u6b63\u7684\u7ec8\u7aef\u7528\u6237\u6216\u8005\u5176\u4ed6\u540c\u4e8b\u68c0\u67e5\u6a21\u578b\u8868\u73b0\u3002</p> <pre><code>Rule #24: Measure the delta between models.\n</code></pre> <p>\u6bd4\u8f83\u65b0\u8001\u6a21\u578b\u7684\u8868\u73b0\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u8981\u6c42\u65b0\u6a21\u578b\u7684\u8868\u73b0\u4f1a\u4f18\u4e8e\u8001\u6a21\u578b\u3002\u68c0\u67e5\u8868\u73b0\u5dee\u5f02\uff0c\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e9b\u6a21\u578b\u5728\u54ea\u4e9b\u65b9\u9762\u505a\u51fa\u4e86\u6539\u53d8\u7684insights\u3002</p> <pre><code>Rule #25: When choosing models, utilitarian performance trumps predictive power.\n</code></pre> <p>\u9009\u62e9\u6a21\u578b\u65f6\uff0c\u5b9e\u7528\u6027\u6307\u6807\u7684\u597d\u574f\u6bd4\u9884\u6d4b\u80fd\u529b\u66f4\u91cd\u8981\u3002\u6bd4\u5982\u6211\u4eec\u7528\u6a21\u578b\u5206\u6570\u7684cutoff\u53bb\u62d2\u7edd\u574f\u7684\u4ea4\u6613\u65f6\uff0c\u6392\u5e8f\u7684\u51c6\u786e\u6027\u6bd4\u9884\u6d4b\u503c\u672c\u8eab\u66f4\u4e3a\u91cd\u8981\u3002\u5f88\u591a\u65f6\u5019\u8fd9\u4e24\u8005\u662f\u4e00\u81f4\u7684\u3002\u4f46\u662f\u6211\u4eec\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u6211\u4eec\u5b9e\u7528\u7684\u5177\u4f53\u9700\u6c42\uff0c\u8c03\u6574\u6a21\u578b\uff0c\u6bd4\u5982\u7ed9\u5206\u6570\u66f4\u9ad8(\u6392\u5e8f\u66f4\u524d)\u7684\u6837\u672c\u66f4\u5927\u7684\u6743\u91cd\u3002</p> <pre><code>Rule #26: Look for patterns in the measured errors, and create new features.\n</code></pre> <p>\u901a\u8fc7case study\u53bb\u6784\u9020\u65b0\u7684\u7279\u5f81\u3002 \u53ef\u4ee5\u6784\u9020\u591a\u4e2a\u540c\u7c7b\u7684\u7279\u5f81\uff0c\u7136\u540e\u8ba9\u6a21\u578b\u53bb\u9009\u62e9\u6709\u6548\u7684\u7279\u5f81\u3002</p> <pre><code>Rule #27: Try to quantify observed undesirable behavior.\n</code></pre> <p>\u5c06\u89c2\u5bdf\u5230\u7684\u8d1f\u9762\u73b0\u8c61\u91cf\u5316\u3002\u6bd4\u5982\u4f60\u89c9\u5f97\u6a21\u578b\u6392\u5e8f\u51c6\u786e\u7387\u4e0d\u591f\uff0c\u90a3\u4e48\u5982\u4f55\u5b9a\u4e49\u6392\u5e8f\u51c6\u786e\u7387\u5462\uff1f\u53ea\u6709\u7ed9\u51fa\u660e\u786e\u7684\u91cf\u5316\u6307\u6807\uff0c\u624d\u80fd\u5bf9\u6b64\u8fdb\u4e00\u6b65\u4f18\u5316\u3002</p> <pre><code>Rule #28: Be aware that identical short-term behavior does not imply identical long-term behavior.\n</code></pre> <p>\u6a21\u578b\u6d4b\u8bd5\u7684\u6548\u679c\u4e0d\u7b49\u4e8e\u957f\u671f\u7684\u6cdb\u5316\u80fd\u529b\u3002\u6a21\u578b\u662f\u5426\u771f\u6b63\u5b66\u5230\u4e86pattern\uff0c\u8fd8\u662f\u53ea\u662f\u8fc7\u62df\u5408\u4e86\u6837\u672c\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u5934\u5927\u7684\u95ee\u9898\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#4","title":"4 \u8bad\u7ec3\u4e0e\u4e0a\u7ebf\u7684\u5dee\u5f02","text":"<p>\u8bad\u7ec3\u548c\u4e0a\u7ebf\u4e4b\u95f4\u5f80\u5f80\u4f1a\u5b58\u5728\u5dee\u5f02\u3002\u6700\u597d\u6216\u8005\u8bf4\u4e3a\u6570\u4e0d\u591a\u7684\u529e\u6cd5\u662f\u505a\u597d\u76d1\u63a7\u3002</p> <pre><code>Rule #29: The best way to make sure that you train like you serve is to save the set of features used at serving time, and then pipe those features to a log to use them at training time.\n</code></pre> <p>\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u771f\u5b9e\u7ebf\u4e0a\u7684\u6570\u636elog\u4e0b\u6765\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u3002\u8fd9\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\u6027\u3002</p> <pre><code>Rule #30: Importance weight sampled data, don\u2019t arbitrarily drop it!\n</code></pre> <p>\u4e0d\u8981\u968f\u610f\u4e22\u5f03\u91c7\u6837\u6837\u672c\u3002\u540c\u65f6\uff0c\u5bf9\u91c7\u6837\u6982\u7387\u4e3a30%\u7684\u6837\u672c\uff0c\u8bad\u7ec3\u65f6\u8981\u7ed910/3\u7684\u6743\u91cd\u3002\u8fd9\u79cd\u6821\u51c6\u5bf9\u57fa\u4e8e\u9884\u6d4b\u503c\u7684\u6a21\u578b\u5f88\u91cd\u8981\uff0c\u5bf9\u57fa\u4e8e\u6392\u5e8f\u7684\u6a21\u578b\u5f71\u54cd\u4e0d\u5927\u3002</p> <pre><code>Rule #31: Beware that if you join data from a table at training and serving time, the data in the table may change.\n</code></pre> <p>\u4e0a\u7ebf\u65f6\uff0c\u6570\u636e\u53ef\u80fd\u76f8\u8f83\u8bad\u7ec3\u65f6\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u5316\u3002\u7279\u522b\u662f\u4e00\u4e9b\u5b57\u5178\u7c7b\u7684\u7279\u5f81\uff0c\u6bd4\u5982\u6bcf\u4e2aid\u5bf9\u5e94\u7684\u5386\u53f2\u574f\u6837\u672c\u7387\u7b49\u7b49\u3002\u6b64\u7c7b\u6570\u636e\u5e94\u8be5\u4f1a\u6709\u53ca\u65f6\u7684\u66f4\u65b0\u3002</p> <pre><code>Rule #32: Re-use code between your training pipeline and your serving pipeline whenever possible.\n</code></pre> <p>\u5c3d\u91cf\u590d\u7528\u8bad\u7ec3\u548c\u4e0a\u7ebf\u65f6\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u4e3b\u8981\u8bf4\u7684\u662f\u4e0a\u7ebf\u4f1a\u7528\u4e00\u4e9b\u6d41\u5f0f\u6570\u636e\u3002\u5de5\u7a0b\u65b9\u9762\uff0c\u4f1a\u6709\u5bf9\u6d41\u5f0f\u6570\u636e\u6784\u9020\u7279\u5f81\u7684\u652f\u6301\u3002\u6709\u4e86\u7279\u5f81\u53ea\u9700\u8981\u4e22\u5230\u5df2\u7ecf\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u4e2d\u5373\u53ef\u3002</p> <pre><code>Rule #33: If you produce a model based on the data until January 5th, test the model on the data from January 6th and after.\n</code></pre> <p>\u6d4b\u8bd5\u6570\u636e\u8981\u5728\u8bad\u7ec3\u6570\u636e\u4e4b\u540e\u3002</p> <pre><code>Rule #34: In binary classification for filtering (such as spam detection or determining interesting e-mails), make small short-term sacrifices in performance for very clean data.\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u9009\u62e9\u7684\u7ed9\u7528\u6237\u5c55\u793a\u90ae\u4ef6\uff0c\u90a3\u4e48\u4f60\u7684\u8bad\u7ec3\u6570\u636e\u5c06\u662f\u6709\u504f\u7684\u3002\u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\u7528\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u5e72\u6270(\u6a21\u578b\u6216\u89c4\u5219)\u7684control group\u4f5c\u4e3a\u6a21\u578b\u7684\u8bad\u7ec3\u96c6\uff0c\u56e0\u4e3a\u8fd9\u90e8\u5206\u6d41\u91cf\u662f\u65e0\u504f\u7684\u771f\u5b9e\u6d41\u91cf\u3002\u4e0d\u9700\u8981\u592a\u5927\uff0c1%\uff0c2%\u5c31\u597d\u3002</p> <pre><code>Rule #35: Beware of the inherent skew in ranking problems.\n</code></pre> <p>\u7b97\u6cd5\u4f1a\u5bf9\u7ebf\u4e0a\u7684\u6570\u636e\u4ea7\u751f\u6539\u53d8\uff0c\u4ece\u800c\u5f71\u54cd\u672a\u6765\u4f1a\u89c1\u5230\u7684\u6570\u636e\u3002\u611f\u89c9\u8fd9\u4e00\u70b9\u53ea\u80fd\u5728\u6a21\u578b\u8fed\u4ee3\u65f6\uff0c\u91cd\u65b0\u505a\u5206\u6790\u4e86\u3002</p> <pre><code>Rule #36: Avoid feedback loops with positional features\n</code></pre> <p>\u8fd9\u70b9\u662f\u548c\u63a8\u8350\u7b97\u6cd5\u76f8\u5173\u3002\u7528\u6237\u7684\u70b9\u51fb\u4e0e\u6392\u5e8f\u4f4d\u7f6e\u672c\u8eab\u6709\u5173(\u4eba\u4eec\u503e\u5411\u4e8e\u70b9\u51fb\u7b2c\u4e00\u4e2aitem)\u3002\u5982\u679c\u6ca1\u6709\u4f4d\u7f6e\u7279\u5f81\uff0c\u4f1a\u628a\u8fd9\u7c7b\u6548\u5e94\u7b97\u5230\u5176\u4ed6\u7279\u5f81\u4e2d\u53bb\uff0c\u5bfc\u81f4\u6a21\u578b\u4f30\u8ba1\u4e0d\u51c6\u3002</p> <pre><code>Rule #37: Measure Training/Serving Skew.\n</code></pre> <p>\u8bc4\u4f30\u8bad\u7ec3\u548c\u4e0a\u7ebf\u65f6\u6a21\u578b\u8868\u73b0\u7684\u4e0d\u540c\u3002\u53ef\u4ee5\u505a\u4e00\u4e9bgap analysis\u3002\u5e38\u89c1\u7684\u53ef\u80fd\u539f\u56e0\u6709\uff1a\u4f7f\u7528\u4e86\u65f6\u95f4\u654f\u611f\u7684\u7279\u5f81\uff0c\u8fc7\u62df\u5408\u7b49\u7b49\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#5","title":"5 \u589e\u957f\u8d8b\u7f13\uff0c\u4f18\u5316\u6a21\u578b","text":"<p>\u5efa\u6a21\u7684\u521d\u6b65\u9636\u6bb5\uff0c\u65b0\u6a21\u578b\u7684\u63d0\u5347\u662f\u660e\u663e\u7684\uff0c\u5168\u65b9\u4f4d\u7684\u3002\u968f\u7740\u9010\u6b65\u4f18\u5316\uff0c\u6a21\u578b\u7684\u63d0\u5347\u4e0d\u518d\u90a3\u4e48\u663e\u8457\u3002\u540c\u65f6\uff0c\u4e0d\u540c\u6307\u6807\u53ef\u80fd\u51fa\u73b0\u6709\u597d\u6709\u574f\u7684\u60c5\u51b5\u3002\u6709\u8da3\u7684\uff0c\u6709\u6311\u6218\u6027\u7684\u9636\u6bb5\u51fa\u73b0\u4e86\u3002</p> <pre><code>Rule #38: Don\u2019t waste time on new features if unaligned objectives have become the issue.\n</code></pre> <p>\u6700\u7ec8\u76ee\u6807\u8981\u660e\u786e\uff0c\u6e05\u6670\u3002\u6bd4\u5982\u8981\u770b\u7684\u662fcatch rate\u6216\u662f\u70b9\u51fb\u7387\u7b49\u3002</p> <pre><code>Rule #39: Launch decisions are a proxy for long-term product goals.\n</code></pre> <p>\u6a21\u578b\u7684\u76ee\u6807\u5f80\u5f80\u662f\u7b80\u5355\u7684\uff0c\u7b56\u7565\u5f80\u5f80\u662f\u590d\u6742\u7684\u3002\u6bd4\u5982\u62d2\u7edd\u574f\u4ea4\u6613\u4f1a\u51cf\u5c11\u635f\u5931\uff0c\u4f46\u662f\u4f1a\u5e26\u6765\u4ea4\u6613\u91cf\u7684\u4e0b\u964d\u3002\u8fd9\u4e9b\u5c31\u9700\u8981\u505a\u7b56\u7565\u65f6\u53bb\u6743\u8861\u3002</p> <pre><code>Rule #40: Keep ensembles simple.\n</code></pre> <p>ensemble\u8981\u7b80\u5355\uff0c\u5982\u53ef\u4ee5\u505a\u4e00\u4e2a\u7b49\u6743\u7684\u76f8\u52a0\u3002</p> <pre><code>Rule #41: When performance plateaus, look for qualitatively new sources of information to add rather than refining existing signals.\n</code></pre> <p>\u6a21\u578b\u8868\u73b0\u9677\u5165\u74f6\u9888\u65f6\uff0c\u52a0\u5165\u65b0\u7684\u4fe1\u606f\u6e90\u4ee5\u53ca\u65b0\u7684\u7279\u5f81\u5f80\u5f80\u662f\u6700\u6709\u6548\u7684\u3002\u540c\u65f6\uff0c\u5408\u7406\u8c03\u6574\u4f60\u5bf9\u6a21\u578b\u8868\u73b0\u7684\u9884\u671f\u3002</p> <pre><code>Rule #42: Don\u2019t expect diversity, personalization, or relevance to be as correlated with popularity as you think they are.\n</code></pre> <p>\u53c8\u662f\u63a8\u8350\u9886\u57df\u7684\u5185\u5bb9\uff0c\u5e38\u7528\u7684\u4f18\u5316\u76ee\u6807\u662f\u4ee3\u8868\u6d41\u884c\u5ea6\u7684\u70b9\u51fb\u7387\u7b49\u3002\u4f46\u662f\u4eba\u4eec\u5f80\u5f80\u53c8\u4f1a\u53bb\u8ffd\u6c42\u4e2a\u6027\u5316\u63a8\u8350\uff0c\u63a8\u8350\u5185\u5bb9\u591a\u6837\u7b49\u76ee\u6807\u3002\u53ef\u884c\u7684\u64cd\u4f5c\u662f\u91c7\u7528\u540e\u7eed\u7684\u5904\u7406\u4f18\u5316\u4e2a\u6027\u5316\u53ca\u591a\u6837\u6027\u3002\u6216\u8005\u5c06\u4ed6\u4eec\u76f4\u63a5\u52a0\u5165\u4f18\u5316\u76ee\u6807\u3002</p> <pre><code>Rule #43: Your friends tend to be the same across different products. Your interests tend not to be.\n</code></pre> <p>\u597d\u53cb\u5173\u7cfb\u5f80\u5f80\u662f\u7a33\u5b9a\u7684\u3002\u4f46\u662f\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u4e2a\u6027\u5316\u7279\u5f81\u5f80\u5f80\u662f\u4e0d\u540c\u7684\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u6211\u4eec\u4e0d\u80fd\u5728\u573a\u666fB\u4e2d\u4f7f\u7528\u573a\u666fA\u7684\u6570\u636e\u3002\u8de8\u573a\u666f\u7684\u6570\u636e\u5f80\u5f80\u662f\u6709\u7528\u7684\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#6","title":"6 \u5c0f\u7ed3","text":"<p>\u4e0b\u7bc7\u6d89\u53ca\u4e86\u5177\u4f53\u5efa\u6a21\u6b65\u9aa4\u7684\u65b9\u65b9\u9762\u9762\u3002\u8fd9\u4e9b\u7ecf\u9a8c\u603b\u7ed3\u4e0d\u4ec5\u5177\u4f53\uff0c\u4e5f\u5341\u5206\u6709\u6548\u3002\u611f\u8c22\u8c37\u6b4c\u5927\u795e\u65e0\u79c1\u7684\u5206\u4eab\u77e5\u8bc6\uff0c\u76f8\u4fe1\u6709\u4e86\u8fd9\u4e9brules\uff0c\u6211\u4eec\u53ef\u4ee5\u5c11\u8d70\u4e00\u4e9b\u5f2f\u8def\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/","title":"\u5929\u6c60\u96f6\u57fa\u7840\u91d1\u878d\u98ce\u63a7\u6bd4\u8d5b\u5c0f\u7ed3","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-08-08\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea610\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#1","title":"1 \u80cc\u666f","text":"<p>\u53bb\u5e74\u4e5d\u6708\u4efd\u53c2\u52a0\u4e86\u5929\u6c60\u4e3e\u529e\u7684\u96f6\u57fa\u7840\u5165\u95e8\u91d1\u878d\u98ce\u63a7-\u8d37\u6b3e\u8fdd\u7ea6\u9884\u6d4b\u6bd4\u8d5b\uff0c\u8d5b\u9898\u4ee5\u91d1\u878d\u98ce\u63a7\u4e2d\u7684\u4e2a\u4eba\u4fe1\u8d37\u4e3a\u80cc\u666f\uff0c\u8981\u6c42\u9009\u624b\u6839\u636e\u8d37\u6b3e\u7533\u8bf7\u4eba\u7684\u4fe1\u606f\u9884\u6d4b\u5176\u662f\u5426\u6709\u8fdd\u7ea6\u7684\u53ef\u80fd\uff0c\u4ee5\u6b64\u5224\u65ad\u662f\u5426\u901a\u8fc7\u6b64\u9879\u8d37\u6b3e\uff0c\u662f\u4e00\u4e2a\u5178\u578b\u7684\u5206\u7c7b\u95ee\u9898\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#2","title":"2 \u6570\u636e","text":"<p>\u8d5b\u9898\u6570\u636e\u6765\u6e90\u4e8e\u67d0\u4fe1\u8d37\u5e73\u53f0\u7684\u8d37\u6b3e\u8bb0\u5f55\uff0c\u603b\u6570\u636e\u91cf\u4e3a120W\uff0c\u8bad\u7ec3\u96c6\uff0c\u6d4b\u8bd5\u96c6A\uff0c\u6d4b\u8bd5\u96c6B\u6570\u636e\u91cf\u5404\u4f4d80W\uff0c20W\uff0c20W\u3002\u539f\u6570\u636e\u4e2d\u5305\u542b47\u5217\u53d8\u91cf\u4fe1\u606f\uff0c\u4e3b\u8981\u5305\u62ec\uff1a\u8d37\u6b3e\u4fe1\u606f(\u91d1\u989d\uff0c\u5229\u7387\uff0c\u8d37\u6b3e\u7b49\u7ea7\u7b49)\uff0c\u8d37\u6b3e\u4eba\u4fe1\u606f(\u5c31\u4e1a\u4fe1\u606f\uff0c\u6536\u5165\u4fe1\u606f\uff0c\u503a\u52a1\u6bd4\uff0cFICO(\u4e00\u79cd\u4fe1\u7528\u8bc4\u5206)\uff0c\u8d37\u6b3e\u8bb0\u5f55\u7b49)\uff0c\u8d37\u6b3e\u4eba\u884c\u4e3a\u8ba1\u6570\u7279\u5f81\u4fe1\u606f\uff08\u533f\u540d\u7279\u5f81\uff09\u3002\u67e5\u8be2\u5b8c\u6574\u7684\u5b57\u6bb5\u8868\u53ef\u4ee5\u8bbf\u95ee\u8d5b\u9898\u5b98\u7f51\"\u8d5b\u9898\u5b98\u7f51\"\uff0c\u6216\u70b9\u51fb**\u9605\u8bfb\u539f\u6587**\u67e5\u770b\u6211\u4eecBlog\u4e0a\u7684\u6587\u7ae0\u3002</p> Field Description id \u4e3a\u8d37\u6b3e\u6e05\u5355\u5206\u914d\u7684\u552f\u4e00\u4fe1\u7528\u8bc1\u6807\u8bc6 loanAmnt \u8d37\u6b3e\u91d1\u989d term \u8d37\u6b3e\u671f\u9650\uff08year\uff09 interestRate \u8d37\u6b3e\u5229\u7387 installment \u5206\u671f\u4ed8\u6b3e\u91d1\u989d grade \u8d37\u6b3e\u7b49\u7ea7 subGrade \u8d37\u6b3e\u7b49\u7ea7\u4e4b\u5b50\u7ea7 employmentTitle \u5c31\u4e1a\u804c\u79f0 employmentLength \u5c31\u4e1a\u5e74\u9650\uff08\u5e74\uff09 homeOwnership \u501f\u6b3e\u4eba\u5728\u767b\u8bb0\u65f6\u63d0\u4f9b\u7684\u623f\u5c4b\u6240\u6709\u6743\u72b6\u51b5 annualIncome \u5e74\u6536\u5165 verificationStatus \u9a8c\u8bc1\u72b6\u6001 issueDate \u8d37\u6b3e\u53d1\u653e\u7684\u6708\u4efd purpose \u501f\u6b3e\u4eba\u5728\u8d37\u6b3e\u7533\u8bf7\u65f6\u7684\u8d37\u6b3e\u7528\u9014\u7c7b\u522b postCode \u501f\u6b3e\u4eba\u5728\u8d37\u6b3e\u7533\u8bf7\u4e2d\u63d0\u4f9b\u7684\u90ae\u653f\u7f16\u7801\u7684\u524d3\u4f4d\u6570\u5b57 regionCode \u5730\u533a\u7f16\u7801 dti \u503a\u52a1\u6536\u5165\u6bd4 delinquency_2years \u501f\u6b3e\u4eba\u8fc7\u53bb2\u5e74\u4fe1\u7528\u6863\u6848\u4e2d\u903e\u671f30\u5929\u4ee5\u4e0a\u7684\u8fdd\u7ea6\u4e8b\u4ef6\u6570 ficoRangeLow \u501f\u6b3e\u4eba\u5728\u8d37\u6b3e\u53d1\u653e\u65f6\u7684fico\u6240\u5c5e\u7684\u4e0b\u9650\u8303\u56f4 ficoRangeHigh \u501f\u6b3e\u4eba\u5728\u8d37\u6b3e\u53d1\u653e\u65f6\u7684fico\u6240\u5c5e\u7684\u4e0a\u9650\u8303\u56f4 openAcc \u501f\u6b3e\u4eba\u4fe1\u7528\u6863\u6848\u4e2d\u672a\u7ed3\u4fe1\u7528\u989d\u5ea6\u7684\u6570\u91cf pubRec \u8d2c\u635f\u516c\u5171\u8bb0\u5f55\u7684\u6570\u91cf pubRecBankruptcies \u516c\u5f00\u8bb0\u5f55\u6e05\u9664\u7684\u6570\u91cf revolBal \u4fe1\u8d37\u5468\u8f6c\u4f59\u989d\u5408\u8ba1 revolUtil \u5faa\u73af\u989d\u5ea6\u5229\u7528\u7387\uff0c\u6216\u501f\u6b3e\u4eba\u4f7f\u7528\u7684\u76f8\u5bf9\u4e8e\u6240\u6709\u53ef\u7528\u5faa\u73af\u4fe1\u8d37\u7684\u4fe1\u8d37\u91d1\u989d totalAcc \u501f\u6b3e\u4eba\u4fe1\u7528\u6863\u6848\u4e2d\u5f53\u524d\u7684\u4fe1\u7528\u989d\u5ea6\u603b\u6570 initialListStatus \u8d37\u6b3e\u7684\u521d\u59cb\u5217\u8868\u72b6\u6001 applicationType \u8868\u660e\u8d37\u6b3e\u662f\u4e2a\u4eba\u7533\u8bf7\u8fd8\u662f\u4e0e\u4e24\u4e2a\u5171\u540c\u501f\u6b3e\u4eba\u7684\u8054\u5408\u7533\u8bf7 earliesCreditLine \u501f\u6b3e\u4eba\u6700\u65e9\u62a5\u544a\u7684\u4fe1\u7528\u989d\u5ea6\u5f00\u7acb\u7684\u6708\u4efd title \u501f\u6b3e\u4eba\u63d0\u4f9b\u7684\u8d37\u6b3e\u540d\u79f0 policyCode \u516c\u5f00\u53ef\u7528\u7684\u7b56\u7565_\u4ee3\u7801=1\u65b0\u4ea7\u54c1\u4e0d\u516c\u5f00\u53ef\u7528\u7684\u7b56\u7565_\u4ee3\u7801=2 n\u7cfb\u5217\u533f\u540d\u7279\u5f81 \u533f\u540d\u7279\u5f81n0-n14\uff0c\u4e3a\u4e00\u4e9b\u8d37\u6b3e\u4eba\u884c\u4e3a\u8ba1\u6570\u7279\u5f81\u7684\u5904\u7406 <p>\u8d5b\u9898\u9700\u8981\u53c2\u8d5b\u8005\u8f93\u51fa\u6bcf\u4e2a\u6d4b\u8bd5\u6837\u672c\u4e3a1\uff08\u8fdd\u7ea6\uff09\u7684\u6982\u7387\uff0c\u4ee5AUC\u4e3a\u6307\u6807\u8bc4\u4f30\u6a21\u578b\uff0c\u5982\u82e5\u6a21\u578b\u8f93\u51fa\u6709\uff1a</p> <p>| id    | isDefault | | 800001   | 0.7 |</p> <p>\u5219\u4ee3\u8868\u6a21\u578b\u9884\u6d4bid\u4e3a80001\u7684\u8d37\u6b3e\u8fdd\u7ea6\u6982\u7387\u4e3a70%\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#3","title":"3 \u601d\u8def\u548c\u65b9\u6cd5","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#31-eda","title":"3.1 EDA+\u6570\u636e\u6e05\u6d17","text":"<p>\u8be5\u90e8\u5206\u4e3b\u8981\u4e3a\u4e86\u4e86\u89e3\u6570\u636e\u7c7b\u578b\uff0c\u5404\u79cd\u7279\u5f81\u7684\u6570\u636e\u5206\u5e03\u548c\u7f3a\u5931\u503c\u60c5\u51b5\uff0c\u5e76\u4e86\u89e3\u7279\u5f81\u95f4\u7684\u76f8\u5173\u5173\u7cfb\u4ee5\u53ca\u7279\u5f81\u548c\u76ee\u6807\u503c\u4e4b\u95f4\u7684\u76f8\u5173\u5173\u7cfb\u3002\u4e3a\u63a5\u4e0b\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u7b80\u5355\u6e05\u6d17\u505a\u51c6\u5907\u3002</p> \u7279\u5f81\u7bb1\u7ebf\u56fe <p>\u6574\u4f53\u800c\u8a00\u8d5b\u9898\u6570\u636e\u76f8\u5bf9\u5e72\u51c0\uff0c\u901a\u8fc7\u7bb1\u7ebf\u56fe\u53d1\u73b0\u6709\u4e00\u4e9b\u6570\u503c\u7279\u5f81\u4e2d\u5b58\u5728\u660e\u663e\u7684\u5f02\u5e38\u503c,\u51b3\u5b9a\u4f7f\u7528\u7bb1\u578b\u56fe+3-Sigma\u8fdb\u884c\u53bb\u9664\u3002\u5bf9\u4e8e\u7f3a\u5931\u503c\uff0c\u9009\u62e9\u5148\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u6bb5\u8bb0\u5f55\u4e00\u4e2a\u6837\u672c\u4e2d\u7f3a\u5931\u7279\u5f81/\u603b\u7279\u5f81\u6570\u91cf\u7684\u6bd4\u4f8b(missrate)\uff0c\u518d\u7528\u7eb5\u5411\u586b\u5145\u7684\u65b9\u6cd5\u586b\u5145\u7f3a\u5931\u503c\u3002\u6b64\u5916\u901a\u8fc7\u8ba1\u7b97Pearson\u76f8\u5173\u7cfb\u6570\u53ef\u4ee5\u770b\u51fa\u6709\u51e0\u5bf9\u76f8\u5173\u5ea6\u5f88\u9ad8\u7684\u53d8\u91cf\uff0c\u4f8b\u5982\u533f\u540d\u53d8n2-n3-n9\uff0c\u4fdd\u7559\u4e00\u4e2a\u53d8\u91cf\u5373\u53ef\u3002</p> \u7279\u5f81\u76f8\u5173\u6027\u70ed\u56fe","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#32","title":"3.2 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u7ecf\u8fc7EDA\u53ef\u4ee5\u53d1\u73b0\u7279\u5f81\u4e2d\u6709\u8f83\u591a\u79bb\u6563\u578b\u53d8\u91cf\uff0c\u5982\u8d37\u6b3e\u7b49\u7ea7\uff0c\u5de5\u4f5c\u804c\u79f0\uff0c\u8d37\u6b3e\u76ee\u7684\uff0c\u90ae\u7f16\u7b49\u7b49\uff0c\u8fd9\u4e9b\u53d8\u91cf\u9700\u8981\u901a\u8fc7\u4e00\u5b9a\u7684\u7f16\u7801\u65b9\u6cd5\u8fdb\u884c\u53d8\u6362\u3002\u5e38\u89c1\u7684one-hot encoding\u5bf9\u4e8e\u8f83\u4f4e\u7ef4\u5ea6\u7684\u53d8\u91cf\uff08unique values &lt; 100\uff09\u6548\u679c\u4e0d\u9519\uff0c\u4f46\u662f\u5982\u679c\u5e94\u7528\u5728\u9ad8\u7ef4\u53d8\u91cf\u4e0a\uff08\u5982\u90ae\u7f16\uff0c\u804c\u79f0\u7b49\uff09\uff0c\u4f1a\u4ea7\u751f\u8fc7\u4e8e\u7a00\u758f\u7684\u77e9\u9635\uff0c\u5bfc\u81f4\u6bcf\u4e2a\u7c7b\u522b\u91cc\u53ef\u4ee5\u5b66\u4e60\u7684\u6570\u636e\u8fc7\u5c11\u3002\u6240\u4ee5\u5bf9\u4e8e\u9ad8\u7ef4\u53d8\u91cf\uff0c\u4e00\u79cd\u6bd4\u8f83\u6709\u6548\u7684\u7f16\u7801\u65b9\u5f0f\u662ftarget encoding\uff0c\u5373\u7528\u7c7b\u522b\u5bf9\u5e94\u7684\u6807\u7b7e\u7684\u671f\u671b\u6765\u4ee3\u66ff\u539f\u59cb\u7684\u7c7b\u522b\uff0c\u8fd9\u6837\u76f8\u5f53\u4e8e\u5c06\u9ad8\u7ef4\u7684\u79bb\u6563\u53d8\u91cf\u8f6c\u6362\u6210\u4e86\u57280-1\u4e4b\u95f4\u7684\u6570\u5b57\u53d8\u91cf\u3002\u6bd4\u8f83\u5e38\u7528\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e3a\uff1a</p> <p>\u5176\u4e2dp\u4e3a\u5168\u90e8\u6807\u7b7e\u7684\u5747\u503c\uff0calpha\u4e3a\u7cfb\u6570\uff0c\u7528\u4e8e\u63a7\u5236\u8be5\u53d8\u91cf\u5bf9\u4f9d\u8d56\u53d8\u91cf\u7684\u62df\u5408\u7a0b\u5ea6\u3002</p> <p>\u7279\u5f81\u4ea4\u4e92\u65b9\u9762\uff0c\u7b80\u5355\u6784\u9020\u4e86\u4e00\u4e9b\u53ef\u80fd\u6709\u5b9e\u9645\u610f\u4e49\u7684\u4ea4\u4e92\u7279\u5f81\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u4e1a\u52a1\u7ecf\u9a8c\u4e0d\u591a\uff0c\u6709\u7ecf\u9a8c\u7684\u5c0f\u4f19\u4f34\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u5206\u4eab\u4e00\u4e0b\u7279\u5f81\u6784\u9020\u7684\u601d\u8def\u3002</p> <pre><code># \u5229\u7387/\u8d37\u6b3e\u603b\u989d\ndata['interestRateOLoanAmnt'] = data['interestRate']/data['loanAmnt']\n# \u5e74\u6536\u5165/\u8d37\u6b3e\u603b\u989d\ndata['annualIncomeOLoanAmnt'] = data['annualIncome']/data['loanAmnt']\n# \u5e74\u6536\u5165/\u5c31\u4e1a\u5e74\u9650\ndata['annualIncomeOImploymentLength'] = data['annualIncome']/data['employmentLength']\n# \u5e74\u6536\u5165*\u5c31\u4e1a\u5e74\u9650\ndata['annualIncomeMImploymentLength'] = data['interestRate']*data['loanAmnt']\n# \u672a\u7ed3\u4fe1\u7528\u989d\u5ea6\u7684\u6570\u91cf/\u5f53\u524d\u7684\u4fe1\u7528\u989d\u5ea6\u603b\u6570\ndata['openAccOTotalAcc'] = data['openAcc']/data['totalAcc']\n# \u672a\u7ed3\u4fe1\u7528\u989d\u5ea6\u7684\u6570\u91cf/\u6700\u65e9\u4fe1\u7528\u989d\u5ea6\u5f00\u7acb\u8ddd\u4eca\u65f6\u95f4\ndata['openAccOEarliestCreditLine'] = data['openAcc']/data['earliesCreditLine']\n# \u8d2c\u635f\u516c\u5171\u8bb0\u5f55\u7684\u6570\u91cf/\u8d37\u6b3e\u53d1\u653e\u8ddd\u4eca\u65f6\u95f4\ndata['pubRecOissueDate'] = data['pubRec']/data['issueDate']\n</code></pre> <p>\u6700\u540e\u6839\u636eEDA\u4e2d\u7684\u76f8\u5173\u7cfb\u6570\u8ba1\u7b97\uff0c\u53bb\u9664\u4e86\u6709\u9ad8\u76f8\u5173\u6027\u7684\u7279\u5f81n2,n3(\u533f\u540d\u53d8\u91cf\uff0c\u968f\u673a\u53bb\u9664)\u548c\u53ea\u6709\u552f\u4e00\u503c\u7684\u7279\u5f81\uff0c\u52a0\u4e0a\u79bb\u6563\u7279\u5f81\u4e00\u5171\u4fdd\u7559\u4e86\u7ea6150\u4e2a\u7279\u5f81\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#33","title":"3.3 \u6a21\u578b\u8bad\u7ec3","text":"<p>\u6a21\u578b\u8bad\u7ec3\u90e8\u5206\u7684\u601d\u8def\u662f\u5c1d\u8bd5\u6784\u9020\u51e0\u4e2a\u8868\u73b0\u8f83\u5f3a\u7684\u5355\u6a21\u578b\uff0c\u518d\u8fdb\u884c\u6a21\u578b\u878d\u5408\u3002\u4e00\u5171\u5c1d\u8bd5\u4e86 XGBoost, Light-GBM, Catboost\u4ee5\u53caMLP(4 layers) 4\u79cd\u6a21\u578b\uff0c\u8bad\u7ec3\u65f6\u5bf9\u6a21\u578b\u8fdb\u884c\u72ec\u7acb\u7684\u53c2\u6570\u4f18\u5316\u3002CatBoost \u6a21\u578b\u672c\u8eab\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u5904\u7406\u79bb\u6563\u7279\u5f81\uff0c\u5e76\u4e14\u78b0\u5de7\u5b83\u4e5f\u662f\u4f7f\u7528\u57fa\u4e8etarget encoding\u884d\u751f\u7684\u65b9\u6cd5\u5904\u7406\u9ad8\u7ef4\u79bb\u6563\u7279\u5f81\uff0c\u6240\u4ee5\u4f7f\u7528CatBoost\u65f6\u7701\u7565\u4e86\u5bf9\u79bb\u6563\u7279\u5f81\u8fdb\u884c\u9884\u5904\u7406\u7684\u6b65\u9aa4\u3002\u6b64\u5916\u5bf9MLP\u6a21\u578b\u5904\u7406\u4e4b\u524d\uff0c\u989d\u5916\u5c1d\u8bd5\u4e86\u4f7f\u7528\u81ea\u52a8\u7f16\u7801\u5668\u8fdb\u884c\u53d8\u91cf\u4ea4\u4e92\uff0c\u4f46\u662f\u6548\u679c\u660e\u663e\u4e0d\u5982Boosting\u6a21\u578b\u3002</p> <p>\u4e3a\u4e86\u51b2\u523a\u7ade\u8d5b\u6392\u540d\uff0c\u6a21\u578b\u878d\u5408\u4e5f\u6bd4\u8f83\u5173\u952e\u3002\u6211\u9009\u62e9\u4e86\u8868\u73b0\u8f83\u5f3a\u7684\u7684\u4e09\u4e2aBoosting\u6a21\u578b\uff0c\u7528\u7b80\u5355\u52a0\u6743\u5e73\u5747(\u6bcf\u4e2a\u6a21\u578b\u6743\u91cd\u76f8\u540c)\u7684\u65b9\u6cd5\u8fdb\u884censemble\uff0c\u8ba9AUC\u6210\u7ee9\u7531\u5355\u6a21\u578b\u76840.7342\u63d0\u9ad8\u5230\u6700\u7ec8\u76840.7397\u3002</p> <p>4\u4e2a\u5355\u6a21\u578b\u7684\u8bad\u7ec3\u8868\u73b0\u5982\u4e0b:</p> \u6a21\u578b Training AUC Validation AUC Test AUC * XGBoost(baseline) 0.7845 0.7367 - Light-GBM 0.7407 0.7351 - CatBoost 0.7446 0.7434 0.7342 MLP 0.7263 0.7247 - <ul> <li>\u83b7\u53d6test AUC\u6570\u636e\u9700\u8981\u4e0a\u4f20\u9884\u6d4b\u503c\u5230\u5929\u6c60\u5e73\u53f0\uff0c\u6bcf\u5929\u53ea\u6709\u4e00\u6b21\u6d4b\u8bd5\u673a\u4f1a\uff0c\u6240\u4ee5\u5728\u524d\u671f\u8bad\u7ec3\u5355\u4e2a\u6a21\u578b\u65f6\uff0c\u53ea\u6536\u96c6\u4e86\u6548\u679c\u6700\u597d\u7684CatBoost\u6a21\u578b\u7684AUC\u7ed3\u679c\u3002</li> </ul> <p>\u4ece\u6a21\u578b\u5bf9\u6bd4\u6765\u770b\uff0cXGBoost\u7684\u8fc7\u62df\u5408\u73b0\u8c61\u8f83\u4e3a\u4e25\u91cd\uff0cLightGBM \u6bd4\u8f83\u5747\u8861\uff0cCatBoost\u6cdb\u5316\u80fd\u529b\u5f88\u597d\u5e76\u4e14\u8868\u73b0\u51fa\u4f17\u3002XGBoost\u6a21\u578b\u4e2d\uff0c\u8d85\u53c2\u6570min_child_weight\u7684\u503c\u76f8\u5bf9\u5176\u4ed6LightGBM\u4e2d\u8f83\u5c0f\uff0c\u8fd9\u53ef\u80fd\u662f\u6a21\u578b\u8fc7\u62df\u5408\u7684\u539f\u56e0\u3002CatBoost\u7684\u4f18\u79c0\u8868\u73b0\u4e3b\u8981\u5f97\u76ca\u4e8e\u5bf9\u7c7b\u522b\u53d8\u91cf\u7684\u5f3a\u5927\u5904\u7406\u80fd\u529b\u3002MLP\u6a21\u578b\u8868\u73b0\u4e00\u822c\uff0c\u53ef\u80fd\u662f\u6570\u636e\u89c4\u6a21\u8fd8\u6ca1\u6709\u8db3\u591f\u5927\u5230\u8ba9\u5b83\u80fd\u591f\u5b8c\u5168\u53d1\u6325\u6316\u6398\u975e\u7ebf\u6027\u7279\u5f81\u7684\u80fd\u529b\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#34","title":"3.4 \u7279\u5f81\u91cd\u8981\u6027","text":"CatBoost\u6a21\u578b\u7279\u5f81\u7684SHAP\u503c- Top20 <p>\u4e09\u4e2aBoosting\u6a21\u578b\u5bf9\u7279\u5f81\u91cd\u8981\u6027\u7684\u8bc4\u4f30\u7565\u6709\u533a\u522b\uff0c\u6bd4\u8f83\u660e\u663e\u7684\u533a\u522b\u662fCatBoost\u6a21\u578b\u4e2d\uff0c\u79bb\u6563\u6570\u636e\u7684\u91cd\u8981\u6027\u666e\u904d\u8f83\u9ad8\u3002\u4ee5CatBoost\u7684SHAP\u503c\u4e3a\u4f8b\uff0c\u6700\u91cd\u8981\u7684\u7279\u5f81\u6709\u70b9\u51fa\u4e4e\u610f\u6599\u5730\u662f**\u7533\u8bf7\u4eba\u804c\u79f0**\uff0c\u6b64\u5916\uff0c**\u8d37\u6b3e\u671f\u6570\uff0c\u8d37\u6b3e\u5b50\u7ea7\uff0c\u5730\u533a\u90ae\u7f16\uff0c\u503a\u52a1\u6536\u5165\u6bd4**\u7b49\u4e5f\u6709\u8f83\u9ad8\u7684SHAP\u503c\u3002\u5bf9\u4e8e\u6570\u503c\u578b\u7279\u5f81\u800c\u8a00\uff0c\u4e09\u4e2a\u6a21\u578b\u7684\u6392\u5e8f\u57fa\u672c\u76f8\u4f3c\u3002\u5728\u7279\u5f81\u5de5\u7a0b\u4e2d\u6784\u9020\u7684\u5c11\u6570\u51e0\u4e2a\u53d8\u91cf\u5982**\u5ba1\u6279\u65f6\u95f4\uff0c\u6709\u6548\u8d26\u6237/\u603b\u8d26\u6237\u6bd4**\u4e5f\u6709\u5e78\u88ab\u9009\u8fdb\u91cd\u8981\u5ea6\u524d20\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#4","title":"4 \u603b\u7ed3","text":"<p>\u8fd9\u6b21\u7684\u8d5b\u9898\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u673a\u5668\u5b66\u4e60\u5206\u7c7b\u9884\u6d4b\u95ee\u9898\uff0cBoosting\u6a21\u578b\u5b9e\u4e43\u8fd9\u79cd\u6570\u636e\u91cf\u7684\u6bd4\u8d5b\u4e2d\u7684\u5927\u6740\u5668\uff0c\u5176\u4e2dCatBoost\u53c8\u5c24\u4e3a\u9002\u5408\u6316\u6398\u79bb\u6563\u578b\u53d8\u91cf\u3002\u518d\u5229\u7528\u6a21\u578b\u878d\u5408\uff0c\u6700\u7ec8\u5728\u6b63\u8d5b\u9636\u6bb5\u6392\u540d\u699c\u7684Top30\u3002\u4f46\u662f\u7531\u4e8e\u4e1a\u52a1\u7ecf\u9a8c\u6709\u9650\uff0c\u5728\u7279\u5f81\u5de5\u7a0b\u65b9\u9762\u7ed9\u6a21\u578b\u8868\u73b0\u5e26\u6765\u7684\u63d0\u5347\u4e0d\u591a\uff0c\u8fd9\u5e94\u8be5\u662f\u540e\u671f\u6a21\u578b\u8868\u73b0\u4f18\u5316\u7684\u4e3b\u8981\u65b9\u5411\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#5","title":"5 \u53c2\u8003","text":"<ol> <li>\u5929\u6c60\u7ade\u8d5b \u96f6\u57fa\u7840\u5165\u95e8\u91d1\u878d\u98ce\u63a7-\u8d37\u6b3e\u8fdd\u7ea6\u9884\u6d4b: https://tianchi.aliyun.com/competition/entrance/531830/information</li> <li>Target Encoding \u53c2\u8003\u6587\u732e:  A Preprocessing Scheme for High-Cardinality Categorical Attributes in Classification and Prediction Problems</li> <li>CatBoost\u5e93: https://CatBoost.ai/</li> </ol>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/","title":"Kaggle tips","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-08-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#1","title":"1 \u5f15\u8a00","text":"<p>Kaggle\u4f5c\u4e3a\u6700\u6709\u540d\u7684\u6570\u636e\u79d1\u5b66\u7ade\u8d5b\u5e73\u53f0(\u6ca1\u6709\u4e4b\u4e00)\uff0c\u63d0\u4f9b\u4e86\u5404\u79cd\u9ad8\u8d28\u91cf\u7684\u6bd4\u8d5b\uff0c\u4e5f\u5f62\u6210\u4e86\u53cb\u5584\u3001\u5f00\u6e90\u7684\u793e\u533a\u6c1b\u56f4\u3002\u5404\u79cd\u5927\u795e\u603b\u662f\u6177\u6168\u5730\u5206\u4eab\u81ea\u5df1\u7684\u77e5\u8bc6\u548c\u7ecf\u9a8c\u3002 \u672c\u6587\u6574\u7406\u4e86\u5728Kaggle\u5927\u5b9d\u5e93\u4e2d\u6240\u89c1\u6240\u5f97\u7684\u4e00\u4e9b\u6709\u7528\u7684tips\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#2-tips","title":"2 Tips","text":"<p>Chris Deotte\u662fKaggle\u793e\u533a\u4e00\u4f4d\u6d3b\u8dc3\u7684\u5927\u795e\uff0c\u662fCompetitions\uff0cDatasets\uff0cNotebooks\uff0cDiscussion\u7684\u5168\u79d1Grandmaster\u3002\u5728Discussion\u677f\u5757\u4e2d\u66f4\u662f\u6392\u540d\u4e16\u754c\u7b2c\u4e00(\u4ee5\u8ba8\u8bba\u5e16\u6240\u5f97\u7684\u5956\u724c\u6570\u6392\u540d)\u3002\u4ece\u4ed6\u7684\u8ba8\u8bba\u5e16\u4e2d\u603b\u662f\u80fd\u6536\u83b7\u8bb8\u591a\u7ecf\u9a8c\u3001\u77e5\u8bc6\u3002  </p> <p>\u4ed6\u6709\u4e00\u7bc7\u5173\u4e8e\u7279\u5f81\u5de5\u7a0b\u7684\u6587\u7ae0\uff1a  </p> <ul> <li>label encoding\u8981\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e00\u8d77\u505a\u3002\u4e3b\u8981\u662f\u9632\u6b62\u6d4b\u8bd5\u96c6\u51fa\u73b0\u65b0\u7684\u7c7b\u522b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u662f\u6d89\u53ca\u5230label\u7684\u5904\u7406\uff0c\u5982WOE\uff0c\u5219\u9700\u8981\u8bad\u7ec3\u96c6\u5904\u7406\u597d\uff0c\u9a8c\u8bc1\u96c6\u6309\u7167\u5b57\u5178\u53bb\u67e5\u627e\u5bf9\u5e94\u7684\u503c\uff0c\u4ee5\u9632\u6b62\u6570\u636e\u6cc4\u9732\u3002</li> <li>\u7a7a\u503c\u5904\u7406\u3002\u5bf9\u4e8e\u6811\u6a21\u578b\u6765\u8bf4\uff0c\u4f1a\u5c06\u7a7a\u503c\u7684\u6837\u672c\u57fa\u4e8e\u589e\u76ca\u5206\u7ed9\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u3002\u4e00\u79cd\u5904\u7406\u65b9\u5f0f\u662f\u5c06\u7a7a\u503c\u586b\u5145\u4e3a-999\uff0c\u8fd9\u6837\u8fd9\u4e9b\u6837\u672c\u4e5f\u80fd\u53c2\u4e0e\u7ed3\u70b9\u7684\u5206\u88c2\u3002\u81f3\u4e8e\u8fd9\u79cd\u65b9\u5f0f\u662f\u5426\u80fd\u63d0\u5347\u6a21\u578b\u8868\u73b0\uff0c\u9700\u8981\u7528\u9a8c\u8bc1\u7ed3\u679c\u6765\u8bf4\u8bdd\u3002</li> <li>\u7531\u4e8eKaggle\u7ade\u8d5b\u9898\u5e38\u4f1a\u9047\u5230\u6570\u636e\u91cf\u592a\u5927\u7684\u95ee\u9898\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u51cf\u5c11\u6570\u636e\u7684\u5185\u5b58\u5360\u7528\u3002Kaggle\u4e0a\u6709\u4e00\u4e2a\u7ecf\u5178\u7684memory_reduce\u7684\u51fd\u6570\u53ef\u4ee5\u5f88\u597d\u5730\u51cf\u5c11\u6570\u636e\u5927\u5c0f\u3002</li> <li>\u5bf9\u4e8e\u6811\u6a21\u578b\u4e2d\u7684\u7c7b\u522b\u53d8\u91cf\uff0c\u5728label encoding\u4e4b\u540e\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u7c7b\u522b\u6216\u662f\u6570\u5b57\u3002\u81f3\u4e8e\u54ea\u79cd\u65b9\u6cd5\u597d\uff0c\u8fd8\u662f\u9700\u8981\u770b\u9a8c\u8bc1\u7ed3\u679c\u3002</li> <li>\u5c06\u67d0\u4e2a\u7279\u5f81\u62c6\u5206\u6210\u591a\u4e2a\u7279\u5f81\u3002\u5982\u5c06\u91d1\u989d\u62c6\u5206\u6210\u6574\u6570\u548c\u5c0f\u6570\u90e8\u5206\u3002\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u7528\u3002</li> <li>\u7279\u5f81\u7ec4\u5408\u3002\u7c7b\u522b\u53d8\u91cf\u7684\u7ec4\u5408\u6216\u662f\u6570\u5b57\u53d8\u91cf\u7684\u52a0\u51cf\u4e58\u9664\u3002</li> <li>Frequency Encoding(\u7b49\u5404\u79cdencoding)\u3002</li> <li>Group by\u4e4b\u540e\u7684\u4e00\u4e9b\u7edf\u8ba1\u91cf\u3002</li> <li>\u5f52\u4e00\u5316\u3002\u4e00\u822c\u6765\u8bf4\u5f52\u4e00\u5316\u90fd\u6ca1\u6709\u592a\u5927\u7684\u95ee\u9898(\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\u662f\u5fc5\u987b\u7684\uff0c\u6709\u8d8b\u52bf\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u53bb\u9664\u8d8b\u52bf)\u3002</li> <li>\u53bb\u9664\u6781\u7aef\u503c\u7684\u5f71\u54cd\u3002</li> </ul> <p>\u5728IEEE-CIS Fraud Detection\u8fd9\u4e2a\u7ade\u8d5b\u4e2d\uff0cChris\u4e5f\u62ff\u4e86\u7b2c\u4e00\u540d\u3002\u5173\u4e8e\u6b64\u7ade\u8d5b\u7684\u7ecf\u9a8c\u5206\u4eab\u6709\uff1a</p> <ul> <li>\u8d5b\u9898\u7684\u5173\u952e\u662f\u8bc6\u522b\u51fa\u5ba2\u6237\u7684uid\u3002\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u628auid\u7b49id\u7c7b\u53d8\u91cf\u4f5c\u4e3a\u7279\u5f81\uff0c\u56e0\u4e3a\u6d4b\u8bd5\u96c6\u4e2d\u6709\u5f88\u591a\u65b0\u51fa\u73b0\u7684uid\u3002</li> <li>CatBoost\u6a21\u578b\u5728\u6811\u6a21\u578b\u4e2d\u8868\u73b0\u8f83\u597d\u3002</li> <li>\u53d8\u91cf\u7684\u65f6\u95f4\u4e00\u81f4\u6027\uff1a\u8fd9\u91ccChris\u6240\u7528\u7684\u65b9\u5f0f\u662f\u5bf9\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7528\u7b2c\u4e00\u4e2a\u6708\u7684\u6570\u636e\u53bb\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u7136\u540e\u770b\u6700\u540e\u4e00\u4e2a\u6708\u7684\u6a21\u578b\u8868\u73b0\u3002\u5982\u679c\u8868\u73b0\u8f83\u5dee\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u53d8\u91cf\u53ef\u80fd\u53ea\u5728\u8fc7\u53bb\u8d77\u4f5c\u7528\uff0c\u8fd9\u65f6\u5e94\u8be5\u4e22\u5f03\u8fd9\u4e9b\u53d8\u91cf\u3002</li> <li>\u4f4evariance\u7684\u6570\u5b57\u53d8\u91cf\u5f80\u5f80\u662f\u6ca1\u6709\u7528\u7684\u3002sklearn.feature_selection\u4e2d\u6709VarianceThreshold\u6765\u8fdb\u884c\u7279\u5f81\u7b5b\u9009\u3002</li> </ul> <p>Chris\u8fd8\u53c2\u52a0\u4e86\u4e00\u4e9b\u56fe\u50cf\u3001NLP\u76f8\u5173\u7684\u6bd4\u8d5b\uff0c\u7531\u4e8e\u548c\u81ea\u5df1\u7684\u4e3b\u8425\u4e1a\u52a1\u4e0d\u592a\u76f8\u5173\uff0c\u8fd9\u91cc\u5c31\u4e0d\u505a\u6574\u7406\u4e86\u3002</p> <p>CPMP\u4e5f\u662fDiscussion\u7684Grandmaster\uff0c\u4ed6\u6709\u4e00\u7bc7\u5173\u4e8e\u907f\u514doverfitting\u7684tips\u7684\u6587\u7ae0\u3002</p> <ul> <li>\u9a8c\u8bc1\u96c6\u4f7f\u7528\u7684\u8d8a\u591a\u5c31\u8d8a\u5bb9\u6613\u8fc7\u62df\u5408\u9a8c\u8bc1\u96c6\uff0c\u4f8b\u5982\u6bd4\u8d5b\u4e2d\u7684public LB(\u516c\u699c)\u4ee5\u53ca\u56fa\u5b9a\u7684k-fold CV\u3002\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u968f\u673a\u7684k-fold CV\u3002</li> <li>\u4ed6\u63a8\u8350\u4e86\u4e00\u7bc7\u5173\u4e8emodel validation and model selection\u7684\u8bba\u6587\u3002</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#3","title":"3 \u5c0f\u7ed3","text":"<p>\u8fd9\u4e9b\u77e5\u8bc6\u3001\u7ecf\u9a8c\u867d\u7136\u6709\u4e00\u4e9b\u9488\u5bf9\u6bd4\u8d5b\u7684\u5947\u6deb\u6280\u5de7\uff0c\u4f46\u662f\u5b83\u4eec\u5bf9\u4e8e\u65e5\u5e38\u5efa\u6a21\u4ecd\u7136\u5177\u6709\u4e00\u5b9a\u7684\u6307\u5bfc\u610f\u4e49\uff0c\u503c\u5f97\u6211\u4eec\u53bb\u601d\u8003\u3001\u5c1d\u8bd5\u3002 \u611f\u8c22\u8fd9\u4e9b\u5927\u795e\u4eec\u4e50\u4e8e\u5206\u4eab\u7684\u7cbe\u795e\uff0c\u80fd\u4eceKaggle\u5927\u793e\u533a\u4e2d\u6c72\u53d6\u77e5\u8bc6\u548c\u8425\u517b\u771f\u662f\u4e00\u79cd\u5e78\u4e8b\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/","title":"Kaggle Optiver\u7ade\u8d5b\u524d\u6392\u5927\u795e\u5f00\u6e90\u65b9\u6848","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-08-27\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#1","title":"1 \u5f15\u8a00","text":"<p>\u6545\u4e8b\u7684\u8d77\u56e0\u662f8\u670826\u53f7\u7684\u65f6\u5019\u770b\u5230\u4e86\u4e00\u7bc7\u5fae\u4fe1\u6587\u7ae0\uff0cKaggle Optiver\u7ade\u8d5b\u7684\u524d\u6392(top 50)\u9009\u624b\u7adf\u7136\u516c\u5f00\u4e86\u81ea\u5df1\u7684\u65b9\u6848\u3002 \u672c\u7740\u770b\u70ed\u95f9\u4ee5\u53ca\u5b66\u4e60\u7684\u6001\u5ea6\uff0c\u5c31\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e00\u4e0b\u5177\u6709\u65e0\u79c1\u5f00\u6e90\u7cbe\u795e\u7684\u524d\u6392\u5927\u795e\u7684\u65b9\u6848\u5427\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#2","title":"2 \u7ade\u8d5b\u4ecb\u7ecd","text":"<p>Optiver\u662f\u975e\u5e38top\u7684\u5bf9\u51b2\u57fa\u91d1\uff0c\u8d5b\u9898\u7684\u8981\u6c42\u662f\u9884\u6d4b\u9ad8\u9891\u91d1\u878d\u6570\u636e(\u80a1\u7968)\u7684\u6ce2\u52a8\u7387\u3002\u4e3a\u4ec0\u4e48\u8981\u9884\u6d4b\u6ce2\u52a8\u7387\u5462\uff1f\u4e00\u662f\u56e0\u4e3a\u6ce2\u52a8\u7387\u76f8\u8f83\u80a1\u4ef7\u5bb9\u6613\u9884\u6d4b\uff0c\u4e8c\u662f\u51c6\u786e\u9884\u6d4b\u6ce2\u52a8\u7387\u53ef\u4ee5\u8fd0\u7528\u4e8e\u671f\u6743\u5b9a\u4ef7\u7b49\u3002 \u5728\u91d1\u878d\u8303\u7574\u4e2d\uff0c\u6ce2\u52a8\u7387\u6709\u4e0d\u540c\u7684\u8861\u91cf\u65b9\u5f0f\uff0c\u5982\u6700\u7b80\u5355\u7684\u80a1\u7968\u6536\u76ca\u7387\u7684\u6807\u51c6\u5dee\uff0c\u4e5f\u6709\u5176\u4ed6\u7684\uff0c\u5982\u9ad8\u9891\u4e2d\u7684\u5df2\u5b9e\u73b0\u6ce2\u52a8\u7387\uff0c\u9690\u542b\u6ce2\u52a8\u7387\u7b49\u3002 \u8d5b\u9898\u662f\u4e00\u4e2a\u56de\u5f52\u95ee\u9898\uff0c\u7ed9\u51fa\u4e8610\u5206\u949f\u7684\u8ba2\u5355\u8584\u6570\u636e\uff0c\u9700\u8981\u6211\u4eec\u9884\u6d4b\u672a\u676510\u5206\u949f\u7684\u5df2\u5b9e\u73b0\u6ce2\u52a8\u7387\uff1a  </p> \\[ \\sigma=\\sqrt{\\sum_{t} r_{t-1, t}^{2}} \\] <p>\u5176\u4e2d\uff0cr\u662f\u80a1\u7968\u7684log\u6536\u76ca\u7387\uff0c\u5373\u80a1\u4ef7\u53d6log\u505a\u5dee\u5206\u3002\u8bc4\u4ef7\u6307\u6807\u662fRMSPE(root mean square percentage error)\uff1a  </p> \\[ \\mathrm{RMSPE}=\\sqrt{\\frac{1}{n} \\sum_{i=1}^{n}\\left(\\left(y_{i}-\\hat{y}_{i}\\right) / y_{i}\\right)^{2}} \\]","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#3","title":"3 \u5177\u4f53\u4ee3\u7801","text":"<p>\u4e0b\u9762\u6211\u4eec\u5c31\u6765\u770b\u770b\u524d\u6392\u5927\u795e\u7684\u4ee3\u7801\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#31-import-packages","title":"3.1 import packages","text":"<p>\u7b2c\u4e00\u90e8\u5206\u7167\u4f8b\u662f\u5bfc\u5165\u4e00\u5806\u5305\u3002</p> <pre><code>from IPython.core.display import display, HTML\n\nimport pandas as pd\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport glob\nimport os\nimport gc\n\nfrom joblib import Parallel, delayed\n\nfrom sklearn import preprocessing, model_selection\nfrom sklearn.preprocessing import MinMaxScaler\nfrom sklearn.preprocessing import QuantileTransformer\nfrom sklearn.metrics import r2_score\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport numpy.matlib\n\n\npath_submissions = '/'\n\ntarget_name = 'target'\nscores_folds = {}\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#32","title":"3.2 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u7b2c\u4e8c\u90e8\u5206\u662f\u6784\u9020\u4e86\u4e00\u5806\u7279\u5f81\u3002\u5176\u4e2d\uff0c\u9898\u76ee\u8bf4\u660e\u4e86\u80a1\u4ef7\u7684\u8ba1\u7b97\u65b9\u5f0f\u91c7\u7528WAP(weighted averaged price)\u7684\u65b9\u5f0f:</p> \\[ W A P=\\frac{\\text { BidPrice }_{1} * \\text { AskSize }_{1}+\\text { AskPrice }_{1} * \\text { BidSize }_{1}}{\\text { BidSize }_{1}+\\text { AskSize }_{1}} \\] <p>\u8fd9\u79cd\u8ba1\u7b97\u65b9\u5f0f\u9002\u7528\u4e8e\u6709\u4e70\u4e00\u5356\u4e00\u7b49\u7684\u8ba2\u5355\u8584\u6570\u636e\uff0c\u540c\u65f6\u8003\u8651\u4e86\u4ef7\u683c\u548c\u6302\u5355\u91cf\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#321","title":"3.2.1 \u8ba2\u5355\u8584\u7279\u5f81","text":"<p>\u5173\u4e8e\u8ba2\u5355\u8584\u7279\u5f81(\u5728book_preprocessor\u51fd\u6570\u4e2d)\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6784\u9020\u4e86\u57fa\u4e8e\u4e0d\u540c\u6863\u4f4d(\u4e70\u4e00\u5356\u4e00\uff0c\u4e70\u4e8c\u5356\u4e8c\uff0c\u4e70\u4e09\u5356\u4e09\uff0c\u4e70\u56db\u5356\u56db)WAP\u8ba1\u7b97\u7684\u5df2\u5b9e\u73b0\u6ce2\u52a8\u7387\uff0c\u4e00\u4e9b\u76d8\u53e3\u7684\u7279\u5f81\uff0c\u5982\u4ef7\u5dee\uff0csize\u7b49\u7b49\u3002\u5e76\u7528\u6ed1\u52a8\u7a97\u53e3\uff0c\u6784\u9020\u4e86\u4ee5\u4e0a\u7279\u5f81\u7684\u4e00\u4e9b\u7edf\u8ba1\u91cf\u3002</p> <pre><code># data directory\ndata_dir = '../input/optiver-realized-volatility-prediction/'\n\n# Function to calculate first WAP\ndef calc_wap1(df):\n    wap = (df['bid_price1'] * df['ask_size1'] + df['ask_price1'] * df['bid_size1']) / (df['bid_size1'] + df['ask_size1'])\n    return wap\n\n# Function to calculate second WAP\ndef calc_wap2(df):\n    wap = (df['bid_price2'] * df['ask_size2'] + df['ask_price2'] * df['bid_size2']) / (df['bid_size2'] + df['ask_size2'])\n    return wap\n\ndef calc_wap3(df):\n    wap = (df['bid_price1'] * df['bid_size1'] + df['ask_price1'] * df['ask_size1']) / (df['bid_size1'] + df['ask_size1'])\n    return wap\n\ndef calc_wap4(df):\n    wap = (df['bid_price2'] * df['bid_size2'] + df['ask_price2'] * df['ask_size2']) / (df['bid_size2'] + df['ask_size2'])\n    return wap\n\n# Function to calculate the log of the return\n# Remember that logb(x / y) = logb(x) - logb(y)\ndef log_return(series):\n    return np.log(series).diff()\n\n# Calculate the realized volatility\ndef realized_volatility(series):\n    return np.sqrt(np.sum(series**2))\n\n# Function to count unique elements of a series\ndef count_unique(series):\n    return len(np.unique(series))\n\n# Function to read our base train and test set\ndef read_train_test():\n    train = pd.read_csv('../input/optiver-realized-volatility-prediction/train.csv')\n    test = pd.read_csv('../input/optiver-realized-volatility-prediction/test.csv')\n    # Create a key to merge with book and trade data\n    train['row_id'] = train['stock_id'].astype(str) + '-' + train['time_id'].astype(str)\n    test['row_id'] = test['stock_id'].astype(str) + '-' + test['time_id'].astype(str)\n    print(f'Our training set has {train.shape[0]} rows')\n    return train, test\n\n# Function to preprocess book data (for each stock id)\ndef book_preprocessor(file_path):\n    df = pd.read_parquet(file_path)\n    # Calculate Wap\n    df['wap1'] = calc_wap1(df)\n    df['wap2'] = calc_wap2(df)\n    df['wap3'] = calc_wap3(df)\n    df['wap4'] = calc_wap4(df)\n    # Calculate log returns\n    df['log_return1'] = df.groupby(['time_id'])['wap1'].apply(log_return)\n    df['log_return2'] = df.groupby(['time_id'])['wap2'].apply(log_return)\n    df['log_return3'] = df.groupby(['time_id'])['wap3'].apply(log_return)\n    df['log_return4'] = df.groupby(['time_id'])['wap4'].apply(log_return)\n    # Calculate wap balance\n    df['wap_balance'] = abs(df['wap1'] - df['wap2'])\n    # Calculate spread\n    df['price_spread'] = (df['ask_price1'] - df['bid_price1']) / ((df['ask_price1'] + df['bid_price1']) / 2)\n    df['price_spread2'] = (df['ask_price2'] - df['bid_price2']) / ((df['ask_price2'] + df['bid_price2']) / 2)\n    df['bid_spread'] = df['bid_price1'] - df['bid_price2']\n    df['ask_spread'] = df['ask_price1'] - df['ask_price2']\n    df[\"bid_ask_spread\"] = abs(df['bid_spread'] - df['ask_spread'])\n    df['total_volume'] = (df['ask_size1'] + df['ask_size2']) + (df['bid_size1'] + df['bid_size2'])\n    df['volume_imbalance'] = abs((df['ask_size1'] + df['ask_size2']) - (df['bid_size1'] + df['bid_size2']))\n\n    # Dict for aggregations\n    create_feature_dict = {\n        'wap1': [np.sum, np.std],\n        'wap2': [np.sum, np.std],\n        'wap3': [np.sum, np.std],\n        'wap4': [np.sum, np.std],\n        'log_return1': [realized_volatility],\n        'log_return2': [realized_volatility],\n        'log_return3': [realized_volatility],\n        'log_return4': [realized_volatility],\n        'wap_balance': [np.sum, np.max],\n        'price_spread':[np.sum, np.max],\n        'price_spread2':[np.sum, np.max],\n        'bid_spread':[np.sum, np.max],\n        'ask_spread':[np.sum, np.max],\n        'total_volume':[np.sum, np.max],\n        'volume_imbalance':[np.sum, np.max],\n        \"bid_ask_spread\":[np.sum,  np.max],\n    }\n    create_feature_dict_time = {\n        'log_return1': [realized_volatility],\n        'log_return2': [realized_volatility],\n        'log_return3': [realized_volatility],\n        'log_return4': [realized_volatility],\n    }\n\n    # Function to get group stats for different windows (seconds in bucket)\n    def get_stats_window(fe_dict,seconds_in_bucket, add_suffix = False):\n        # Group by the window\n        df_feature = df[df['seconds_in_bucket'] &gt;= seconds_in_bucket].groupby(['time_id']).agg(fe_dict).reset_index()\n        # Rename columns joining suffix\n        df_feature.columns = ['_'.join(col) for col in df_feature.columns]\n        # Add a suffix to differentiate windows\n        if add_suffix:\n            df_feature = df_feature.add_suffix('_' + str(seconds_in_bucket))\n        return df_feature\n\n    # Get the stats for different windows\n    df_feature = get_stats_window(create_feature_dict,seconds_in_bucket = 0, add_suffix = False)\n    df_feature_500 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 500, add_suffix = True)\n    df_feature_400 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 400, add_suffix = True)\n    df_feature_300 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 300, add_suffix = True)\n    df_feature_200 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 200, add_suffix = True)\n    df_feature_100 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 100, add_suffix = True)\n\n    # Merge all\n    df_feature = df_feature.merge(df_feature_500, how = 'left', left_on = 'time_id_', right_on = 'time_id__500')\n    df_feature = df_feature.merge(df_feature_400, how = 'left', left_on = 'time_id_', right_on = 'time_id__400')\n    df_feature = df_feature.merge(df_feature_300, how = 'left', left_on = 'time_id_', right_on = 'time_id__300')\n    df_feature = df_feature.merge(df_feature_200, how = 'left', left_on = 'time_id_', right_on = 'time_id__200')\n    df_feature = df_feature.merge(df_feature_100, how = 'left', left_on = 'time_id_', right_on = 'time_id__100')\n    # Drop unnecesary time_ids\n    df_feature.drop(['time_id__500','time_id__400', 'time_id__300', 'time_id__200','time_id__100'], axis = 1, inplace = True)\n\n\n    # Create row_id so we can merge\n    stock_id = file_path.split('=')[1]\n    df_feature['row_id'] = df_feature['time_id_'].apply(lambda x: f'{stock_id}-{x}')\n    df_feature.drop(['time_id_'], axis = 1, inplace = True)\n    return df_feature\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#322","title":"3.2.2 \u4ea4\u6613\u7279\u5f81","text":"<p>\u8fd9\u90e8\u5206\u7279\u5f81\u5305\u62ec\u5b9e\u9645\u4ea4\u6613\u4ef7\u683c\uff0c\u6210\u4ea4\u91cf\u7684\u76f8\u5173\u7279\u5f81\uff0c\u5982\u6ce2\u52a8\u7387\uff0c\u6700\u5c0f\u503c\uff0c\u6700\u5927\u503c\u7b49\u7b49\u3002</p> <pre><code># Function to preprocess trade data (for each stock id)\ndef trade_preprocessor(file_path):\n    df = pd.read_parquet(file_path)\n    df['log_return'] = df.groupby('time_id')['price'].apply(log_return)\n    df['amount']=df['price']*df['size']\n    # Dict for aggregations\n    create_feature_dict = {\n        'log_return':[realized_volatility],\n        'seconds_in_bucket':[count_unique],\n        'size':[np.sum, np.max, np.min],\n        'order_count':[np.sum,np.max],\n        'amount':[np.sum,np.max,np.min],\n    }\n    create_feature_dict_time = {\n        'log_return':[realized_volatility],\n        'seconds_in_bucket':[count_unique],\n        'size':[np.sum],\n        'order_count':[np.sum],\n    }\n    # Function to get group stats for different windows (seconds in bucket)\n    def get_stats_window(fe_dict,seconds_in_bucket, add_suffix = False):\n        # Group by the window\n        df_feature = df[df['seconds_in_bucket'] &gt;= seconds_in_bucket].groupby(['time_id']).agg(fe_dict).reset_index()\n        # Rename columns joining suffix\n        df_feature.columns = ['_'.join(col) for col in df_feature.columns]\n        # Add a suffix to differentiate windows\n        if add_suffix:\n            df_feature = df_feature.add_suffix('_' + str(seconds_in_bucket))\n        return df_feature\n\n\n    # Get the stats for different windows\n    df_feature = get_stats_window(create_feature_dict,seconds_in_bucket = 0, add_suffix = False)\n    df_feature_500 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 500, add_suffix = True)\n    df_feature_400 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 400, add_suffix = True)\n    df_feature_300 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 300, add_suffix = True)\n    df_feature_200 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 200, add_suffix = True)\n    df_feature_100 = get_stats_window(create_feature_dict_time,seconds_in_bucket = 100, add_suffix = True)\n\n    def tendency(price, vol):    \n        df_diff = np.diff(price)\n        val = (df_diff/price[1:])*100\n        power = np.sum(val*vol[1:])\n        return(power)\n\n    lis = []\n    for n_time_id in df['time_id'].unique():\n        df_id = df[df['time_id'] == n_time_id]        \n        tendencyV = tendency(df_id['price'].values, df_id['size'].values)      \n        f_max = np.sum(df_id['price'].values &gt; np.mean(df_id['price'].values))\n        f_min = np.sum(df_id['price'].values &lt; np.mean(df_id['price'].values))\n        df_max =  np.sum(np.diff(df_id['price'].values) &gt; 0)\n        df_min =  np.sum(np.diff(df_id['price'].values) &lt; 0)\n        # new\n        abs_diff = np.median(np.abs( df_id['price'].values - np.mean(df_id['price'].values)))        \n        energy = np.mean(df_id['price'].values**2)\n        iqr_p = np.percentile(df_id['price'].values,75) - np.percentile(df_id['price'].values,25)\n\n        # vol vars\n\n        abs_diff_v = np.median(np.abs( df_id['size'].values - np.mean(df_id['size'].values)))        \n        energy_v = np.sum(df_id['size'].values**2)\n        iqr_p_v = np.percentile(df_id['size'].values,75) - np.percentile(df_id['size'].values,25)\n\n        lis.append({'time_id':n_time_id,'tendency':tendencyV,'f_max':f_max,'f_min':f_min,'df_max':df_max,'df_min':df_min,\n                   'abs_diff':abs_diff,'energy':energy,'iqr_p':iqr_p,'abs_diff_v':abs_diff_v,'energy_v':energy_v,'iqr_p_v':iqr_p_v})\n\n    df_lr = pd.DataFrame(lis)\n\n\n    df_feature = df_feature.merge(df_lr, how = 'left', left_on = 'time_id_', right_on = 'time_id')\n\n    # Merge all\n    df_feature = df_feature.merge(df_feature_500, how = 'left', left_on = 'time_id_', right_on = 'time_id__500')\n    df_feature = df_feature.merge(df_feature_400, how = 'left', left_on = 'time_id_', right_on = 'time_id__400')\n    df_feature = df_feature.merge(df_feature_300, how = 'left', left_on = 'time_id_', right_on = 'time_id__300')\n    df_feature = df_feature.merge(df_feature_200, how = 'left', left_on = 'time_id_', right_on = 'time_id__200')\n    df_feature = df_feature.merge(df_feature_100, how = 'left', left_on = 'time_id_', right_on = 'time_id__100')\n    # Drop unnecesary time_ids\n    df_feature.drop(['time_id__500','time_id__400', 'time_id__300', 'time_id__200','time_id','time_id__100'], axis = 1, inplace = True)\n\n\n    df_feature = df_feature.add_prefix('trade_')\n    stock_id = file_path.split('=')[1]\n    df_feature['row_id'] = df_feature['trade_time_id_'].apply(lambda x:f'{stock_id}-{x}')\n    df_feature.drop(['trade_time_id_'], axis = 1, inplace = True)\n    return df_feature\n\n# Function to get group stats for the stock_id and time_id\ndef get_time_stock(df):\n    vol_cols = ['log_return1_realized_volatility', 'log_return2_realized_volatility', 'log_return1_realized_volatility_400', 'log_return2_realized_volatility_400',\n                'log_return1_realized_volatility_300', 'log_return2_realized_volatility_300', 'log_return1_realized_volatility_200', 'log_return2_realized_volatility_200',\n                'trade_log_return_realized_volatility', 'trade_log_return_realized_volatility_400', 'trade_log_return_realized_volatility_300', 'trade_log_return_realized_volatility_200']\n\n\n    # Group by the stock id\n    df_stock_id = df.groupby(['stock_id'])[vol_cols].agg(['mean', 'std', 'max', 'min', ]).reset_index()\n    # Rename columns joining suffix\n    df_stock_id.columns = ['_'.join(col) for col in df_stock_id.columns]\n    df_stock_id = df_stock_id.add_suffix('_' + 'stock')\n\n    # Group by the stock id\n    df_time_id = df.groupby(['time_id'])[vol_cols].agg(['mean', 'std', 'max', 'min', ]).reset_index()\n    # Rename columns joining suffix\n    df_time_id.columns = ['_'.join(col) for col in df_time_id.columns]\n    df_time_id = df_time_id.add_suffix('_' + 'time')\n\n    # Merge with original dataframe\n    df = df.merge(df_stock_id, how = 'left', left_on = ['stock_id'], right_on = ['stock_id__stock'])\n    df = df.merge(df_time_id, how = 'left', left_on = ['time_id'], right_on = ['time_id__time'])\n    df.drop(['stock_id__stock', 'time_id__time'], axis = 1, inplace = True)\n    return df\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#323","title":"3.2.3 \u805a\u5408\u7279\u5f81","text":"<p>\u8fd9\u4e00\u5757\u91c7\u7528\u4e86kmeans\u805a\u7c7b\u7684\u65b9\u5f0f\uff0c\u6309\u76f8\u4f3c\u80a1\u7968\u805a\u5408\uff0c\u5e76\u8ba1\u7b97\u4ee5\u4e0a\u7279\u5f81\u7684\u5e73\u5747\u503c\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81\u3002</p> <pre><code>from sklearn.cluster import KMeans\n# making agg features\n\ntrain_p = pd.read_csv('../input/optiver-realized-volatility-prediction/train.csv')\ntrain_p = train_p.pivot(index='time_id', columns='stock_id', values='target')\n\ncorr = train_p.corr()\n\nids = corr.index\n\nkmeans = KMeans(n_clusters=7, random_state=0).fit(corr.values)\nprint(kmeans.labels_)\n\nl = []\nfor n in range(7):\n    l.append ( [ (x-1) for x in ( (ids+1)*(kmeans.labels_ == n)) if x &gt; 0] )\n\n\nmat = []\nmatTest = []\n\nn = 0\nfor ind in l:\n    print(ind)\n    newDf = train.loc[train['stock_id'].isin(ind) ]\n    newDf = newDf.groupby(['time_id']).agg(np.nanmean)\n    newDf.loc[:,'stock_id'] = str(n)+'c1'\n    mat.append ( newDf )\n\n    newDf = test.loc[test['stock_id'].isin(ind) ]    \n    newDf = newDf.groupby(['time_id']).agg(np.nanmean)\n    newDf.loc[:,'stock_id'] = str(n)+'c1'\n    matTest.append ( newDf )\n\n    n+=1\n\nmat1 = pd.concat(mat).reset_index()\nmat1.drop(columns=['target'],inplace=True)\n\nmat2 = pd.concat(matTest).reset_index()\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#33","title":"3.3 \u5e76\u884c\u5316\u4ee5\u53ca\u635f\u5931\u51fd\u6570\u8ba1\u7b97","text":"<p>\u5e76\u884c\u5316\u662f\u5bf9\u6bcf\u53ea\u80a1\u7968\u505a\u7279\u5f81\u8ba1\u7b97\u7684\u5e76\u884c\u3002</p> <pre><code># Funtion to make preprocessing function in parallel (for each stock id)\ndef preprocessor(list_stock_ids, is_train = True):\n\n    # Parrallel for loop\n    def for_joblib(stock_id):\n        # Train\n        if is_train:\n            file_path_book = data_dir + \"book_train.parquet/stock_id=\" + str(stock_id)\n            file_path_trade = data_dir + \"trade_train.parquet/stock_id=\" + str(stock_id)\n        # Test\n        else:\n            file_path_book = data_dir + \"book_test.parquet/stock_id=\" + str(stock_id)\n            file_path_trade = data_dir + \"trade_test.parquet/stock_id=\" + str(stock_id)\n\n        # Preprocess book and trade data and merge them\n        df_tmp = pd.merge(book_preprocessor(file_path_book), trade_preprocessor(file_path_trade), on = 'row_id', how = 'left')\n\n        # Return the merge dataframe\n        return df_tmp\n\n    # Use parallel api to call paralle for loop\n    df = Parallel(n_jobs = -1, verbose = 1)(delayed(for_joblib)(stock_id) for stock_id in list_stock_ids)\n    # Concatenate all the dataframes that return from Parallel\n    df = pd.concat(df, ignore_index = True)\n    return df\n\n# Function to calculate the root mean squared percentage error\ndef rmspe(y_true, y_pred):\n    return np.sqrt(np.mean(np.square((y_true - y_pred) / y_true)))\n\n# Function to early stop with root mean squared percentage error\ndef feval_rmspe(y_pred, lgb_train):\n    y_true = lgb_train.get_label()\n    return 'RMSPE', rmspe(y_true, y_pred), False\n</code></pre> <pre><code># Read train and test\ntrain, test = read_train_test()\n\n# Get unique stock ids\ntrain_stock_ids = train['stock_id'].unique()\n# Preprocess them using Parallel and our single stock id functions\ntrain_ = preprocessor(train_stock_ids, is_train = True)\ntrain = train.merge(train_, on = ['row_id'], how = 'left')\n\n# Get unique stock ids\ntest_stock_ids = test['stock_id'].unique()\n# Preprocess them using Parallel and our single stock id functions\ntest_ = preprocessor(test_stock_ids, is_train = False)\ntest = test.merge(test_, on = ['row_id'], how = 'left')\n\n# Get group stats of time_id and stock_id\ntrain = get_time_stock(train)\ntest = get_time_stock(test)\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#34","title":"3.4 \u6a21\u578b\u8bad\u7ec3","text":"<p>\u5173\u4e8e\u6a21\u578b\u90e8\u5206\uff0c\u91c7\u7528\u4e86\u4e00\u4e2aLightGBM\u548c\u4e00\u4e2aNN\u6a21\u578bensemble\uff0c\u8fd9\u4e00\u5757\u5e76\u6ca1\u6709\u592a\u591a\u72ec\u7279\u7684\u4e1c\u897f\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u4e0b\u6e90\u4ee3\u7801\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#35","title":"3.5 \u6a21\u578b\u878d\u5408\u53ca\u63d0\u4ea4","text":"<p>Ensemble\u8fd9\u5757\u5c31\u662fLGBM\u548cNN\u7684\u7b80\u5355\u5e73\u5747\u3002</p> <pre><code>test_nn[\"row_id\"] = test_nn[\"stock_id\"].astype(str) + \"-\" + test_nn[\"time_id\"].astype(str)\ntest_nn[target_name] = (test_predictions_nn+predictions_lgb)/2\n\nscore = round(rmspe(y_true = train_nn[target_name].values, y_pred = train_nn[pred_name].values),5)\nprint('RMSPE {}: {} - Folds: {}'.format(model_name, score, scores_folds[model_name]))\n\ndisplay(test_nn[['row_id', target_name]].head(3))\ntest_nn[['row_id', target_name]].to_csv('submission.csv',index = False)\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-27-Kaggle-optiver/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u524d\u6392\u5927\u795e\u5728\u7279\u5f81\u5de5\u7a0b\u65b9\u9762\u505a\u4e86\u4e0d\u5c11\u5de5\u4f5c\uff0c\u540c\u65f6\u5de5\u7a0b\u4e0a\u7684\u826f\u597d\u5b9e\u73b0\u4e5f\u662f\u6709\u4e00\u4e2a\u4e0d\u9519\u7ed3\u679c\u7684\u5fc5\u5907\u57fa\u7840\u3002\u867d\u7136\u6a21\u578b\u5e76\u4e0dfancy\uff0c\u4f46\u662f\u7ed3\u679c\u4f9d\u65e7\u7ed9\u529b\uff0c\u503c\u5f97\u6211\u4eec\u597d\u597d\u5b66\u4e60\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/","title":"\u51b3\u7b56\u6811\u5b66\u4e60\u7b14\u8bb0","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2021-08-28\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#1","title":"1 \u524d\u8a00","text":"<p>\u51b3\u7b56\u6811\u662f\u975e\u5e38\u7ecf\u5178\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u65e5\u5e38\u5de5\u4f5c\u4e2d\u8bb8\u591a\u5206\u7c7b\u548c\u56de\u5f52\u95ee\u9898\u90fd\u53ef\u4ee5\u7528\u51b3\u7b56\u6811\u89e3\u51b3\uff0c\u5f88\u591a\u66f4\u9ad8\u7ea7\u3001\u5148\u8fdb\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u4e5f\u57fa\u4e8e\u51b3\u7b56\u6811\u6784\u5efa\uff0c\u4e3a\u4e86\u592f\u5b9e\u57fa\u7840\u3001\u6b63\u786e\u8fd0\u7528\u51b3\u7b56\u6811\uff0c\u4eca\u5929\u6211\u4eec\u6765\u56de\u987e\u4e00\u4e9b\u51b3\u7b56\u6811\u91cc\u6700\u91cd\u8981\u7684\u6280\u672f\u7ec6\u8282\u3002</p> \u9e22\u5c3e\u82b1\u54c1\u79cd\u5206\u7c7b\u51b3\u7b56\u6811\u793a\u4f8b","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#2","title":"2 \u7b97\u6cd5\u91cd\u8981\u7ec6\u8282","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#21","title":"2.1 \u5982\u4f55\u505a\u9884\u6d4b","text":"<p>\u793a\u4f8b\u4e2d\u6df1\u5ea6\u4e3a2\u7684\u51b3\u7b56\u6811\u7684\u5c55\u793a\u4e86\u505a\u51b3\u7b56\u7684\u8fc7\u7a0b\u548c\u7ed3\u8bba\uff0c\u5bf9\u4e8e150\u4e2a\u6837\u672c\u70b9\uff0c\u5728\u6839\u8282\u70b9\u4e0a\uff0c\u51b3\u7b56\u6811\u4ee5\u82b1\u74e3\u957f\u5ea6\uff08petal length\uff09\u662f\u5426\u5c0f\u4e8e2.45\u5398\u7c73\u5c06\u6570\u636e\u5206\u6210\u4e24\u90e8\u5206\uff0c\u82b1\u74e3\u957f\u5ea6\u5c0f\u4e8e2.45\u5398\u7c73\u7684\u6837\u672c\u88ab\u5206\u7c7b\u6210setosa\uff0c\u5927\u4e8e2.45\u5398\u7c73\u7684\u6570\u636e\u7ee7\u7eed\u4ee5\u82b1\u74e3\u5bbd\u5ea6\uff08petal width\uff09\u662f\u5426\u5c0f\u4e8e1.75\u5398\u7c73\u8fdb\u884c\u5206\u7c7b\uff0c\u5c0f\u4e8e\u7684\u90e8\u5206\u88ab\u8ba4\u4e3a\u662fversicolor\uff0c\u5927\u4e8e\u7684\u90e8\u5206\u5219\u662fvirginica\u3002</p> <p>\u56fe\u4e2d\u7684samples\u5373\u4e3a\u8fd9\u4e2a\u5927\u7c7b\u4e2d\u7684\u6837\u672c\u6570\u91cf\uff0c\u5982\u6df1\u5ea6\u4e3a1\u7684\u5de6\u4fa7\u53f6\u5b50\u8282\u70b9\u4e2dsamples=50\u610f\u5473\u7740\u82b1\u74e3\u957f\u5ea6\uff08petal length\uff09\u5c0f\u4e8e2.45\u5398\u7c73\u7684\u6837\u672c\u670950\u4e2a\u3002\u800cvalue\u5219\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u4e2d\u8bad\u7ec3\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u6df1\u5ea6\u4e3a2\u7684\u5de6\u4fa7\u7eff\u8272\u8282\u70b9\u4e2d[0, 49, 5]\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u4e2d\uff0c\u67090\u4e2asetosa\uff0c49\u4e2aversicolor\u548c5\u4e2avirginica\uff0c\u603b\u517154\u4e2asamples\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#22","title":"2.2 \u9884\u6d4b\u7684\u4f9d\u636e","text":"<p>\u5728\u793a\u4f8b\u7684\u51b3\u7b56\u6811\u4e2d\uff0c\u8fd8\u8981\u4e00\u4e2a\u91cd\u8981\u7684\u6307\u6807\u53eb\u505a<code>Gini - \u57fa\u5c3c\u7cfb\u6570</code>\uff0c\u8fd9\u4e2a\u7cfb\u6570\u8861\u91cf\u5f53\u524d\u8282\u70b9\u7684\u4e0d\u7eaf\u51c0\u5ea6\uff08impurity\uff09\uff0c\u76f4\u89c2\u6765\u8bf4\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u91cc\u7684\u6240\u6709\u6837\u672c\u90fd\u5c5e\u4e8e\u540c\u4e00\u7c7b\u65f6\uff0c\u8282\u70b9\u7684\u7eaf\u51c0\u5ea6\u6700\u9ad8\uff0c\u57fa\u5c3c\u7cfb\u6570\u4e3a0\u3002<code>Gini</code>\u7684\u5b9a\u4e49\u4e3a</p> Gini <p>\u5176\u4e2d\\(P_{i,k}\\)\u662f\u5728i\u4e2a\u8282\u70b9\u4e2dk\u7c7b\u7684\u6837\u672c\u5360\u603b\u4f53\u6837\u672c\u7684\u6bd4\u4f8b\u3002\u6bd4\u5982\u793a\u4f8b\u4e2d\u6df1\u5ea6\u4e3a2\u7684\u53f3\u4fa7\u8282\u70b9\u7684<code>Gini</code>\u4e3a\\(1-(0/46)^{2}-(1/46)^{2}-(45/46)^{2} ~= 0.043\\)\u3002\u4ee5\u6700\u5e38\u7528\u7684Python\u673a\u5668\u5b66\u4e60\u5e93<code>Scikit-Learn(v0.24.2)</code>\u4e2d\u7684DecisionTreeClassifier\u7c7b\u4e3a\u4f8b\uff0c\u5176\u5728\u5b9e\u73b0\u5206\u7c7b\u548c\u56de\u5f52\u6811\uff08Classification and Regression Tree, CART\uff09\u65f6\uff0c\u5728\u9009\u62e9\u5206\u88c2\u8282\u70b9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51b3\u7b56\u6811\u9009\u62e9\u5206\u88c2\u8282\u70b9\u548c\u9608\u503c\u7684\u4f9d\u636e\u5373\u4e0e<code>Gini</code>\u6709\u5173\u3002\u5176\u4f18\u5316\u76ee\u6807\uff08\u635f\u5931\u51fd\u6570\uff09\u5982\u4e0b\u6240\u793a\uff1a</p> CART\u5206\u7c7b\u635f\u5931\u51fd\u6570 <p>\u5176\u4e2d\\(G_{left/right}\\)\u5206\u522b\u4e3a\u5de6\u4fa7\u548c\u53f3\u4fa7\u8282\u70b9\u7684<code>Gini</code>\uff0c\u800c\\(m_{left/right}\\)\u5206\u522b\u4e3a\u5de6\u4fa7\u548c\u53f3\u4fa7\u8282\u70b9\u7684\u6837\u672c\u6570\u91cf\u3002CART\u7b97\u6cd5\u4f1a\u505a\u8d2a\u5fc3\u641c\u7d22\uff08Greedy Search\uff09\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5206\u88c2\uff0c\u5e76\u5728\u5c42\u5c42\u5b50\u8282\u70b9\u4e2d\u641c\u7d22\u80fd\u591f\u6709\u6548\u51cf\u5c11<code>Gini</code>\u7684\u7279\u5f81\u548c\u9608\u503c\uff0c\u76f4\u5230\u5206\u88c2\u7684\u5c42\u6570\u5230\u8fbe\u6700\u5927\u6df1\u5ea6\uff08\u7531max_depth\u53c2\u6570\u5b9a\u4e49\uff09\u6216\u5df2\u7ecf\u627e\u4e0d\u5230\u80fd\u591f\u51cf\u5c11<code>Gini</code>\u7684\u8282\u70b9\u3002\u76f4\u89c2\u6765\u8bf4\uff0c\u627e\u5230\u6700\u597d\u7684\u6811\u662f\u4e00\u4e2aNP-complete\u95ee\u9898\uff0c\u56e0\u6b64\u7b97\u6cd5\u6700\u7ec8\u53ea\u4f1a\u627e\u5230\u4e00\u4e2a\u76f8\u5bf9\u597d\u7684\u65b9\u6848\uff0c\u800c\u975e\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002</p> <p>\u9664\u4e86<code>Gini</code>\u4e4b\u5916\uff0c\u71b5\uff08Entropy\uff09\u4e5f\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u5206\u88c2\u8282\u70b9\u7684\u6548\u679c\uff0c\u7528\u4ee5\u8861\u91cf\u6df7\u4e71\u5ea6\uff0c\u5728\u51b3\u7b56\u6811\u7684\u8282\u70b9\u4e2d\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u91cc\u7684\u6837\u672c\u90fd\u5c5e\u4e8e\u540c\u4e00\u7c7b\u65f6\uff0c\u71b5\u7684\u503c\u4e3a0\u3002\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \u71b5\uff08Entropy\uff09 <p>\u5176\u4e2d\\(P_{i,k}\\)\u662f\u5728i\u4e2a\u8282\u70b9\u4e2dk\u7c7b\u7684\u6837\u672c\u5360\u603b\u4f53\u6837\u672c\u7684\u6bd4\u4f8b\u3002\u6bd4\u5982\u793a\u4f8b\u4e2d\u6df1\u5ea6\u4e3a2\u7684\u53f3\u4fa7\u8282\u70b9\u7684\u71b5\u4e3a\\(-(1/46)log_{2}(1/46)-(45/46)log_{2}(45/46) ~= 0.151\\)\u3002\u5728<code>Scikit-Learn(v0.24.2)</code>\u4e2d\u4f7f\u7528<code>DecisionTreeClassifier</code>\u7c7b\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e<code>criterion</code>\u53c2\u6570\u4e3a<code>entropy</code>\u6765\u4f7f\u7528\u71b5\u4f5c\u4e3a\u8861\u91cf\u6307\u6807\u3002\u4f46\u901a\u5e38\u4f7f\u7528<code>gini</code>\u548c<code>Entropy</code>\u5f97\u51fa\u7684\u6811\u5dee\u522b\u4e0d\u5927\u3002\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e<code>Gini</code>\u8ba1\u7b97\u66f4\u5feb\uff0c\u5e76\u4e14\u4f7f\u7528<code>Gini</code>\u4f1a\u8ba9\u6811\u5c06\u6837\u672c\u66f4\u52a0\u96c6\u4e2d\u5730\u5212\u5206\u5230\u8282\u70b9\u91cc\uff0c\u800c\u4f7f\u7528<code>Entropy</code>\u4f1a\u8ba9\u6837\u672c\u5728\u6811\u7684\u5206\u5e03\u66f4\u52a0\u5747\u8861\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#23","title":"2.3 \u9632\u6b62\u8fc7\u62df\u5408","text":"<p>\u51b3\u7b56\u6811\u672c\u8eab\u51e0\u4e4e\u6ca1\u6709\u5047\u8bbe\uff0c\u540c\u65f6\u4e0d\u4f9d\u8d56\u4e8e\u7279\u5f81\u7f29\u653e\uff08Feature Scaling\uff09\uff0c\u4f46\u6a21\u578b\u672c\u8eab\u662f\u9700\u8981\u52a0\u7ea6\u675f\u9632\u6b62\u8fc7\u62df\u5408\u3002\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u6a21\u578b\u53c2\u6570\u8fbe\u5230\u6b63\u5219\u5316\u7684\u76ee\u7684\u3002\u4ee5<code>Scikit-Learn(v0.24.2)</code>\u4e2d\u4f7f\u7528<code>DecisionTreeClassifier</code>\u7c7b\u4e3a\u4f8b\uff0c\u4e0b\u5217\u53c2\u6570\u5e38\u7528\u4e8e\u5b9e\u65bd\u6b63\u5219\u5316\u9632\u6b62\u8fc7\u62df\u5408\uff1a</p> <ul> <li>max_depth\uff1a\u6811\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u9ed8\u8ba4\u503c\u662f\u7a7a\uff0c\u610f\u5473\u7740\u6811\u7684\u6700\u5927\u6df1\u5ea6\u4e0d\u53d7\u9650\u5236\u3002</li> <li>min_samples_split\uff1a\u5206\u88c2\u4e00\u4e2a\u8282\u70b9\u524d\u6240\u9700\u7684\u6700\u5c0f\u6837\u672c\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a2\u3002</li> <li>min_samples_leaf\uff1a\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u6700\u5c11\u6240\u9700\u7684\u6837\u672c\u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002</li> <li>min_weight_fraction_leaf\uff1a\u9ed8\u8ba4\u503c\u4e3a0\u3002\u5f53\u8bbe\u7f6e\u4e86<code>class_weight</code>\u540e\uff0c\u6837\u672c\u6743\u91cd\u4e0d\u540c\uff0c\u800c\u8be5\u53c2\u6570\u5219\u7ea6\u675f\u53f6\u5b50\u8282\u70b9\u4e2d\u6743\u91cd\u5360\u603b\u4f53\u6837\u672c\u7684\u6bd4\u4f8b\uff0c\u5927\u610f\u548c<code>min_samples_leaf</code>\u7c7b\u4f3c\uff0c\u4f46\u7528\u6bd4\u4f8b\u8868\u793a\u3002</li> <li>max_feature\uff1a\u5206\u88c2\u8282\u70b9\u65f6\u8003\u8651\u7684\u7279\u5f81\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a\u8003\u8651\u6240\u6709\u7279\u5f81\u3002\u6ce8\u610f\uff0c\u51b3\u7b56\u6811\u5728\u627e\u5230\u4e00\u4e2a\u6709\u6548\u7684\u5206\u88c2\u8282\u70b9\u524d\u4e0d\u4f1a\u505c\u6b62\u641c\u7d22\uff0c\u5373\u4fbf\u662f\u641c\u7d22\u7684\u7279\u5f81\u6570\u91cf\u5df2\u7ecf\u8d85\u8fc7\u4e86max_feature\u8bbe\u5b9a\u7684\u503c\u3002</li> <li>max_leaf_nodes\uff1a\u53f6\u5b50\u8282\u70b9\u6570\u91cf\u7684\u4e0a\u9650\uff0c\u9ed8\u8ba4\u503c\u4e3a\u7a7a\u3002</li> <li>min_impurity_decrease\uff1a\u5206\u88c2\u4e00\u4e2a\u8282\u70b9\u6240\u9700\u51cf\u5c11\u7684\u6700\u4f4e\u4e0d\u7eaf\u51c0\u5ea6\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002</li> </ul> <p>\u901a\u5e38\uff0c\u589e\u52a0min_\u53c2\u6570\u6216\u8005\u51cf\u5c11max_\u53c2\u6570\u6709\u52a9\u4e8e\u51b3\u7b56\u6811\u7684\u6b63\u5219\u5316\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#24","title":"2.4 \u56de\u5f52\u4efb\u52a1","text":"<p>\u5728<code>Scikit-Learn(v0.24.2)</code>\u4e2d\u53ef\u4ee5\u4f7f\u7528DecisionTreeRegressor\u7c7b\u6765\u6267\u884c\u56de\u5f52\u4efb\u52a1\u3002</p> \u56de\u5f52\u6811 <p>\u6b64\u65f6\u9884\u6d4b\u503c\u662f\u53f6\u5b50\u8282\u70b9\u91cc\u6837\u672c\u76ee\u6807\u503c\u7684\u5747\u503c\u3002\u505a\u56de\u5f52\u4efb\u52a1\u65f6\uff0cCART\u7b97\u6cd5\u5b9e\u65bd\u65b9\u5f0f\u548c\u5206\u7c7b\u57fa\u672c\u4e00\u81f4\uff0c\u53ea\u4e0d\u8fc7\u6b64\u65f6\u4f18\u5316\u7684\u76ee\u6807\u662f\u51cf\u5c11\u4e0e\u76ee\u6807\u503c\u7684\u5747\u65b9\u5dee\uff08Mean Squared Error, MSE\uff09</p> \u56de\u5f52\u6811\u7684\u635f\u5931\u51fd\u6570 <p>\u56de\u5f52\u6811\u6a21\u578b\u53c2\u6570\u57fa\u672c\u4e0e\u5206\u7c7b\u6570\u6a21\u578b\u53c2\u6570\u4e00\u81f4\uff0c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u529e\u6cd5\u9632\u6b62\u6a21\u578b\u8fc7\u62df\u5408\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#25","title":"2.5 \u5176\u4ed6\u91cd\u8981\u5c5e\u6027","text":"<p><code>Scikit-Learn</code>\u7684\u5b9e\u73b0\u4e2d\uff0c\u51b3\u7b56\u6811\u7684<code>feature_importances_</code>\u5c5e\u6027\u80fd\u5c55\u793a\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u5176\u4f9d\u636e\u662f\u5404\u7279\u5f81\u5bf9\u4e8e\u8861\u91cf\u6307\u6807\u7684\u51cf\u5c11\u91cf\uff0c\u8fd4\u56de\u5f52\u4e00\u5316\u540e\u7684\u503c\u3002\u5982\u679c\u7279\u5f81\u4e2d\u4e0d\u540c\u503c\u7684\u6570\u91cf\u975e\u5e38\u591a\uff08\u9ad8\u6570\u91cf\u7c7b\u522b\u5c5e\u6027\uff0cHigh Cardinality Features\uff09\uff0c\u63a8\u8350\u4f7f\u7528sklearn.inspection.permutation_importance\u3002</p> <p>\u5982\u679c\u8981\u5bf9\u6811\u8fdb\u884c\u624b\u52a8\u8c03\u6574\u5982\u6539\u53d8\u5206\u88c2\u7684\u9608\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528sklearn.tree._tree.Tree\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#3","title":"3 \u603b\u7ed3","text":"<p>\u51b3\u7b56\u6811\u5e94\u5bf9\u5206\u7c7b\u548c\u56de\u5f52\u95ee\u9898\u6709\u4e0d\u9519\u7684\u8868\u73b0\uff0c\u4f46\u4e5f\u5b58\u5728\u4e00\u4e9b\u9650\u5236\u548c\u5f31\u70b9\uff0c\u5982\u5bf9\u4e8e\u6570\u636e\u7684\u65b9\u5411\u6027\u548c\u6ce2\u52a8\u8f83\u4e3a\u654f\u611f\uff0c\u8fd9\u4e9b\u95ee\u9898\u4e00\u68f5\u6811\u96be\u4ee5\u5b8c\u7f8e\u89e3\u51b3\uff0c\u90a3\u591a\u79cd\u51e0\u68f5\u6811\u662f\u5426\u6709\u66f4\u597d\u7684\u8868\u73b0\u5462\uff1f\u4e0b\u56de\u6211\u4eec\u804a\u804a\u968f\u673a\u68ee\u6797\uff01</p> <p>\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code># \u4f9d\u8d56\u5305\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.tree import export_graphviz\n\nimport matplotlib.pylab as plt\nimport numpy as np\n\n\n# \u5bfc\u5165\u793a\u8303\u6570\u636e\niris = load_iris()\nX = iris.data[:,:2] # \u9009\u62e9\u82b1\u74e3\u957f\u5ea6\u548c\u82b1\u74e3\u5bbd\u5ea6\u4f5c\u4e3a\u7279\u5f81\ny = iris.target\n\n# \u67e5\u770b\u6570\u636e\u5206\u5e03\nplt.scatter(X[y==0,0], X[y==0,1])\nplt.scatter(X[y==1,0], X[y==1,1])\nplt.scatter(X[y==2,0], X[y==2,1])\nplt.show()\n\n# \u5efa\u8bbe\u4e00\u9897\u51b3\u7b56\u6811\ntree_clf = DecisionTreeClassifier(criterion='entropy', max_depth=2)\ntree_clf.fit(X, y)\n\n# \u5bfc\u51fa\u51b3\u7b56\u6811\u56fe\u5f62\nexport_graphviz( tree_clf,\nout_file=\"iris_tree.dot\",\nfeature_names=iris.feature_names[:2],\nclass_names=iris.target_names,\nrounded=True,\nfilled=True\n)\n\n# \u51b3\u7b56\u8fb9\u754c\u7ed8\u5236\u51fd\u6570\ndef plot_decision_boundary(model, x):\n    #\u751f\u6210\u7f51\u683c\u70b9\u5750\u6807\u77e9\u9635,\u5f97\u5230\u4e24\u4e2a\u77e9\u9635\n    M, N = 500, 500\n    x0, x1 = np.meshgrid(np.linspace(x[:,0].min(),x[:,0].max(),M),np.linspace(x[:,1].min(),x[:,1].max(),N))\n    X_new = np.c_[x0.ravel(), x1.ravel()]\n    y_predict = model.predict(X_new)\n    z = y_predict.reshape(x0.shape)\n    from matplotlib.colors import ListedColormap\n    custom_cmap = ListedColormap(['#EF9A9A','#FFF59D','#90CAF9'])\n    plt.pcolormesh(x0, x1, z, cmap=custom_cmap)\n\n# \u7ed8\u5236\u51b3\u7b56\u8fb9\u754c\nplot_decision_boundary(tree_clf, X)\nplt.scatter(X[y==0,0], X[y==0,1])\nplt.scatter(X[y==1,0], X[y==1,1])\nplt.scatter(X[y==2,0], X[y==2,1])\nplt.show()\n\n# \u67e5\u770b\u7279\u5f81\u91cd\u8981\u6027\nprint(tree_clf.feature_importances_)\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/","title":"Kaggle Jane Street\u7ade\u8d5b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-09-02\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#1","title":"1 \u5f15\u8a00","text":"<p>Kaggle\u4e0a\u5bf9\u51b2\u57fa\u91d1\u8d5e\u52a9\u7684\u7ade\u8d5b\u4e0d\u5c11\uff0c\u53ef\u80fd\u6210\u4e3a\u4e86\u4e00\u79cd\u65b0\u5f0f\u5185\u5377\uff0c\u4e5f\u53ef\u80fd\u662f\u771f\u7684\u60f3\u4eceKaggler\u8eab\u4e0a\u5f97\u5230\u4e00\u4e9bidea\u3002 \u8fd9\u6b21\u6211\u4eec\u6765\u5b66\u4e60\u7684\u662f\u521a\u521a\u7ed3\u675f\u7684Jane Street\u8d5e\u52a9\u7684\u6bd4\u8d5b\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#2","title":"2 \u7ade\u8d5b\u4ecb\u7ecd","text":"<p>\u672c\u6b21\u7ade\u8d5b\u662f\u4e00\u4e2a\u5206\u7c7b\u95ee\u9898\uff0c\u5bf9\u6bcf\u4e00\u6761\u6570\u636e(\u4e00\u6b21\u4ea4\u6613\u673a\u4f1a)\uff0c\u6211\u4eec\u9700\u8981\u7ed9\u51fa\u662f\u5426\u884c\u52a8(action)\u3002\u5982\u679c\u6267\u884c\u4ea4\u6613\uff0c\u76f8\u5e94\u7684\u6536\u76ca\u5c31\u662freturn * weight\uff0c\u52a0\u603b\u5230\u6bcf\u4e00\u5929\u5373\u4e3a\uff1a</p> \\[ p_{i}=\\sum_{j}\\left(\\text { weight }_{i j} * \\operatorname{resp}_{i j} * \\operatorname{action}_{i j}\\right) \\] <p>\u5728\u6295\u8d44\u9886\u57df\uff0c\u5f88\u591a\u4eba\u8ffd\u6c42\u7684\u662f\u9ad8sharpe\u503c(\u540c\u65f6\u8003\u8651\u4e86\u6536\u76ca\u548c\u98ce\u9669)\uff0c\u5b83\u7684\u5177\u4f53\u8ba1\u7b97\u5982\u4e0b\u6240\u793a\uff1a</p> \\[ t=\\frac{\\sum p_{i}}{\\sqrt{\\sum p_{i}^{2}}} * \\sqrt{\\frac{250}{|i|}} \\] <p>\u6211\u4eec\u6700\u7ec8\u7684\u8bc4\u4ef7\u6307\u6807\u4e3a\uff1a</p> \\[ u=\\min (\\max (t, 0), 6) \\sum p_{i} \\]","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#3","title":"3 \u5177\u4f53\u4ee3\u7801","text":"<p>\u540c\u6837\uff0c\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e00\u4e0b\u5f00\u6e90\u7684\u9ad8\u5206\u4ee3\u7801\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#31-import-packages","title":"3.1 import packages","text":"<p>\u7b2c\u4e00\u90e8\u5206\u7167\u4f8b\u662f\u5bfc\u5165\u4e00\u5806\u5305\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7531\u4e8e\u672c\u6b21\u6570\u636e\u91cf\u8f83\u5927\u3002\u4ee3\u7801\u4f7f\u7528\u4e86datatable\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u3002datatable\u636e\u79f0\u662f\u4e00\u4e2a\u6027\u80fd\u78be\u538bpandas\u7684\u9ad8\u6548\u591a\u7ebf\u7a0b\u6570\u636e\u5904\u7406\u5de5\u5177</p> <pre><code>import datatable as dtable\ntrain = dtable.fread('/kaggle/input/jane-street-market-prediction/train.csv').to_pandas()\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#32","title":"3.2 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u7531\u4e8e\u672c\u6b21\u63d0\u4f9b\u7684\u7279\u5f81\u4ecd\u7136\u662f\u4e00\u4e9b\u4e0d\u77e5\u9053\u542b\u4e49\u7684\u533f\u540d\u7279\u5f81\u3002\u4ee3\u7801\u6839\u636e\u6bcf\u4e2a\u7279\u5f81\u7684\u5206\u5e03\u4eba\u4e3a\u5730\u5212\u5206\u4e3a\u4e864\u79cd\u7279\u5f81\uff1aLinear\uff0cNoisy\uff0cNegative\u548cHybrid\u3002 \u6700\u540e\u7684\u7279\u5f81\u5373\u4e3a\u6240\u6709\u539f\u59cb\u7279\u5f81\uff0c\u52a0\u4e0a\u6bcf\u7c7b\u7279\u5f81\u7684\u5747\u503c\u6784\u9020\u7684\u7279\u5f81\u3002</p> <pre><code>train['f_Linear']=train[f_Linear].mean(axis=1)\ntrain['f_Noisy']=train[f_Noisy].mean(axis=1)\ntrain['f_Negative']=train[f_Negative].mean(axis=1)\ntrain['f_Hybrid']=train[f_Hybrid].mean(axis=1)\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#33-label","title":"3.3 \u786e\u5b9alabel","text":"<p>\u8bad\u7ec3\u96c6\u5e76\u6ca1\u6709\u76f4\u63a5\u7ed9\u6211\u4eeclabel\uff0c\u5373\u662f\u5426action\u3002\u5b83\u63d0\u4f9b\u7684\u662f5\u79cd\u4e0d\u540c\u65f6\u95f4\u7a97\u53e3\u7684\u6536\u76ca\u7387(return)\u3002\u4ee3\u7801\u6784\u9020label\u7684\u65b9\u5f0f\u662f\u5224\u65ad\u82e5\u6709\u5927\u4e8e3\u4e2a\u6536\u76ca\u4e3a\u6b63\uff0c\u5373\u6267\u884c\u4ea4\u6613(action=1)\u3002</p> <pre><code>resp_cols = ['resp', 'resp_1', 'resp_2', 'resp_3', 'resp_4']\ny = np.stack([(train[c] &gt; 0).astype('int') for c in resp_cols]).T\n\ntrain['action'] = (y.mean(axis=1) &gt; 0.5).astype('int')\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#34","title":"3.4 \u6a21\u578b\u8bad\u7ec3","text":"<p>\u5173\u4e8e\u6a21\u578b\u90e8\u5206\uff0c\u65b9\u6848\u4f7f\u7528\u4e86\u4e00\u4e2aXGBoost\u6a21\u578b\uff0c\u5e76\u7528HyperOpt\u8fdb\u884c\u4e86\u53c2\u6570\u4f18\u5316\u3002 \u5173\u4e8ecv\u7684\u4f7f\u7528\uff0c\u5b83\u4f7f\u7528\u4e86\u9002\u5408\u4e8e\u6b64\u7c7b\u65f6\u95f4\u5e8f\u5217\u95ee\u9898\u7684PurgedGroupTimeSeriesSplit\uff0c\u4ece\u4e0b\u56fe\u4e2d\u53ef\u4ee5\u5f88\u76f4\u89c2\u7684\u770b\u5230\u3002\u9a8c\u8bc1\u96c6\u6c38\u8fdc\u5728\u8bad\u7ec3\u96c6\u540e\u9762\uff0c\u5e76\u4e14\u4e2d\u95f4\u9694\u4e86\u4e00\u5c0f\u6bb5\u65f6\u95f4\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u672c\u6b21\u5f00\u6e90\u65b9\u6848\u5e76\u4e0d\u590d\u6742\uff0c\u4e5f\u4ecd\u6709\u5f88\u591a\u7a7a\u95f4\u53ef\u4ee5\u63d0\u5347\uff0c\u5982\u5206\u6790\u7279\u5f81\u542b\u4e49\uff0c\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u4f18\u5316\u9898\u76ee\u7ed9\u51fa\u7684\u8bc4\u4ef7\u6307\u6807\u7b49\u7b49\u3002\u4f46\u662f\uff0c\u5728\u4fe1\u566a\u6bd4\u8f83\u4f4e\u7684\u91d1\u878d\u4e16\u754c\u4e2d\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u5426\u6709\u7528\u4ecd\u662f\u4e00\u4e2a\u95ee\u53f7\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/","title":"\u795e\u7ecf\u7f51\u7edc\u8c03\u53c2\u6280\u5de7","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-09-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#1","title":"1 \u5f15\u8a00","text":"<p>\u6700\u8fd1\u5411\u77e5\u4e4e\u5927\u795e\u5b66\u4e60\u4e86\u4e00\u6ce2\u795e\u7ecf\u7f51\u7edc\u7684\u8c03\u53c2\u6280\u5de7\uff0c\u4e5f\u641c\u5230\u4e86\u6df1\u5ea6\u5b66\u4e60\u4e13\u5bb6Andrej Kapathy\u7684\u4e00\u7bc7\u535a\u5ba2\u300aA Recipe for Training Neural Networks\u300b\u3002\u5728\u6b64\u7ed3\u5408\u8fd9\u51e0\u7bc7\u6587\u7ae0\u548c\u81ea\u5df1\u7684\u4e00\u4e9b\u7ecf\u9a8c\uff0c\u505a\u4e00\u7bc7\u795e\u7ecf\u7f51\u7edc\u8c03\u53c2\u7684\u5c0f\u6280\u5de7\u5206\u4eab\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#2","title":"2 \u635f\u5931\u66f2\u7ebf\u5206\u6790","text":"<p>\u6709\u4e86Tensorboard, MLflow\u7b49\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u635f\u5931\u66f2\u7ebf\u5f88\u5bb9\u6613\u89c2\u6d4b\u3002\u66f2\u7ebf\u7684\u5f62\u72b6\u5f80\u5f80\u53ef\u4ee5\u76f4\u89c2\u5730\u53cd\u5e94\u6a21\u578b\u8bad\u7ec3\u7684\u72b6\u51b5\u3002</p> <ul> <li>\u5e38\u89c1\u7684\u635f\u5931\u66f2\u7ebf\u5f80\u5f80\u4e00\u5f00\u59cb\u4e0b\u964d\u8f83\u5feb\uff0c\u540e\u9762\u9010\u6e10\u8d8b\u7f13\u3002\u5982\u679c\u53d1\u73b0\u66f2\u7ebf\u63a5\u8fd1\u7ebf\u6027\uff0c\u5219\u53ef\u80fd\u5b66\u4e60\u7387\u8f83\u5c0f\uff0c\u635f\u5931\u4e0b\u964d\u4e0d\u591f\u5145\u5206\u3002</li> <li>\u66f2\u7ebf\u6ce2\u52a8\u8fc7\u4e8e\u5267\u70c8\uff0c\u53ef\u80fd\u7684\u539f\u56e0\u662fbatch size\u592a\u5c0f\u3002batch size\u4e5f\u4e0d\u662f\u8d8a\u5927\u8d8a\u597d\uff0cbatch size\u5c0f\u7684\u65f6\u5019\uff0c\u6bcf\u4e2abatch\u8ba1\u7b97\u7684\u68af\u5ea6\u65b9\u5411\u6ca1\u6709\u90a3\u4e48\u7cbe\u786e\uff0cbatch\u95f4\u7684\u65b9\u5dee\u8f83\u5927\uff0c\u53cd\u800c\u5bb9\u6613\u9003\u79bb\u978d\u70b9\u3002batch size\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u53c2\u6570\u8c03\u8282\u3002\u7ecf\u9a8c\u4e0a\uff0cbatch size\u53ef\u4ee5\u4e3a\u6570\u636e\u91cf\u7684\u6839\u53f7\u5927\u5c0f\u3002</li> <li>\u8bad\u7ec3\u96c6\u548c\u9a8c\u8bc1\u96c6\u66f2\u7ebf\u5dee\u8ddd\u8f83\u5927\uff0c\u53ef\u80fd\u662f\u8bad\u7ec3\u96c6\u53d1\u751f\u4e86\u8fc7\u62df\u5408\u3002\u53cd\u4e4b\uff0c\u82e5\u5dee\u8ddd\u592a\u5c0f\uff0c\u5219\u53ef\u80fd\u6a21\u578b\u62df\u5408\u4e0d\u591f\u3002</li> <li>loss\u6700\u5c0f\u7684\u70b9\u672a\u5fc5\u662f\u8bc4\u4ef7\u6307\u6807\u6700\u4f18\u7684\u70b9\u3002\u6bd4\u5982\u5728\u4e8c\u5206\u7c7b\u95ee\u9898\u4e2d\uff0closs\u6700\u5c0f\u7684\u70b9\u672a\u5fc5\u662fauc\u6700\u5927\u7684\u70b9\u3002\u6709\u6548\u7684\u65b9\u6cd5\u662f\uff0c\u6253\u5370\u51fa\u6bcf\u4e00\u4e2aepoch\u7684\u6a21\u578b\u8868\u73b0\u3002</li> <li>\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u6211\u8fd8\u9047\u5230\u8fc7\u9a8c\u8bc1\u96c6loss\u4e00\u8def\u5411\u4e0a\u7684\u60c5\u51b5\uff0c\u5947\u602a\u7684\u662f\u9009\u51fa\u7684\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8868\u73b0\u5e76\u4e0d\u5dee\uff0c\u4f3c\u4e4e\u5e76\u4e0d\u662f\u7531\u4e8e\u8fc7\u62df\u5408\u9020\u6210\u7684\u3002\u8fd9\u4e00\u73b0\u8c61\u5728\u77e5\u4e4e\u4e0a\u4e5f\u6709\u8ba8\u8bba\uff0c\u5927\u5bb6\u7684\u89c2\u70b9\u662f\u9a8c\u8bc1\u96c6\u7684loss\u5e76\u4e0d\u80fd\u5b8c\u5168\u53cd\u5e94\u6700\u7ec8\u6a21\u578b\u7684\u597d\u574f\u3002</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#3","title":"3 \u5b66\u4e60\u7387\u8c03\u6574","text":"<p>\u5bf9\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\uff0c\u5b66\u4e60\u7387\u7684\u8c03\u6574\u4f18\u5148\u7ea7\u8f83\u9ad8\u3002\u8c03\u53c2\u7684\u987a\u5e8f\u53ef\u4ee5\u662f\u5b66\u4e60\u7387\u3001epoch\u4e2a\u6570 - batch size - \u5b66\u4e60\u7387\u8870\u51cf\u53c2\u6570\u3002</p> <ul> <li>\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u5b66\u4e60\u7387\u7684warm up\u3002</li> <li>\u5b66\u4e60\u7387\u8870\u51cf\u7684\u53c2\u6570\u5728\u4e0d\u540c\u6a21\u578b\u548c\u4efb\u52a1\u4e0b\u5f80\u5f80\u4e0d\u540c\u3002</li> <li>\u4e00\u822c\u4ee510\u500d\u95f4\u9694\u6765\u8fdb\u884c\u53c2\u6570\u641c\u7d22\u3002</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#4-dropout","title":"4 dropout\u5c42","text":"<p>dropout\u5c42\u53ef\u4ee5\u5f88\u597d\u5730\u51cf\u5c11\u8fc7\u62df\u5408\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8fd8\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd\u6a21\u578bensemble\u7684\u65b9\u5f0f\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#5","title":"5 \u4f18\u5316\u5668","text":"<p>Adam\u4f18\u5316\u5668\u662f\u5bf9\u53c2\u6570\u6bd4\u8f83\u7a33\u5065\u7684\u4f18\u5316\u5668\uff0c\u5305\u62ec\u4e0d\u5408\u9002\u7684\u5b66\u4e60\u7387\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#6-ensemble","title":"6 ensemble","text":"<p>\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u968f\u673a\u6570\u79cd\u5b50\u6765ensemble\u6a21\u578b\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#7-swish","title":"7 Swish\u6fc0\u6d3b\u51fd\u6570","text":"<p>Swish\u6fc0\u6d3b\u51fd\u6570\u5176\u5b9e\u5df2\u7ecf\u63d0\u51fa\u6765\u5f88\u4e45\u4e86\uff0c\u4f46\u662f\u6700\u8fd1Kaggle\u7684\u9ad8\u5206\u65b9\u6848\u4e2d\u5b83\u5374\u5c61\u5c61\u51fa\u73b0\u3002\u5b83\u7684\u5f62\u5f0f\u662f\uff1af(x) = x \u00b7 sigmoid(x)\u3002\u662f\u4e00\u4e2a\u5e73\u6ed1\u4e14\u975e\u5355\u8c03\u7684\u51fd\u6570\u3002 \u5728\u63d0\u51fa\u7684\u5b83\u7684\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u6307\u51fa\u4e86\u5728\u795e\u7ecf\u7f51\u7edc\u5c42\u6570\u5927\u4e8e40\u5c42\u4ee5\u540e\uff0cSwish\u6fc0\u6d3b\u51fd\u6570\u4f18\u4e8eReLU\u7b49\u5176\u4ed6\u6fc0\u6d3b\u51fd\u6570\u3002\u5728\u6d45\u5c42\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5b83\u5bf9\u6a21\u578b\u7ed3\u679c\u662f\u5426\u6709\u6240\u63d0\u5347\uff0c\u4ecd\u9700\u8981\u6211\u4eec\u81ea\u5df1\u53bb\u5c1d\u8bd5\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#8-batch-normalization","title":"8 batch normalization","text":"<p>batch normalization\u5728norm\u7684\u65f6\u5019\uff0c\u4f7f\u6bcf\u4e2a\u72ec\u7acb\u6837\u672c\u770b\u5230\u4e86\u540c\u4e00\u4e2abatch\u5185\u5176\u4ed6\u6837\u672c\u7684\u4fe1\u606f\uff0c\u8d77\u5230\u4e86\u4e00\u5b9a\u7684\u6b63\u5219\u5316\u7684\u6548\u679c\u3002 0\u5747\u503c\u4e5f\u4f7f\u8f93\u5165\u4f4d\u4e8e\u6fc0\u6d3b\u51fd\u6570\u7684\u9971\u548c\u533a\uff0c\u52a0\u5feb\u6536\u655b\u901f\u5ea6\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#9","title":"9 \u5c0f\u7ed3","text":"<p>\u8c03\u53c2\u6709\u79d1\u5b66\u4e5f\u6709\u827a\u672f\u7684\u6210\u5206\u3002\u5728\u5b9e\u9645\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e00\u4e0b\u4e0a\u8ff0\u7ecf\u9a8c\u4e4b\u8c08\u3002\u53ef\u80fd\u67d0\u4e9btips\u6070\u597d\u9002\u7528\u4e8e\u4f60\u7684\u6a21\u578b\u548c\u4efb\u52a1\uff0c\u52a9\u4f60\u6a21\u578b\u8868\u73b0\u4e00\u98de\u51b2\u5929\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/","title":"\u91d1\u878d\u98ce\u63a7\u7279\u5f81\u5de5\u7a0b\u5c0f\u7ed3","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-09-25\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#1","title":"1 \u524d\u8a00","text":"<p>\u524d\u4e00\u9635\u5b50\u603b\u7ed3\u4e86\u4e0b\u81ea\u5df1\u53c2\u52a0\u7684\u4fe1\u8d37\u8fdd\u7ea6\u98ce\u9669\u9884\u6d4b\u6bd4\u8d5b\u7684\u6570\u636e\u5904\u7406\u548c\u5efa\u6a21\u7684\u6d41\u7a0b\uff0c\u53d1\u73b0\u81ea\u5df1\u5bf9\u4e1a\u52a1\u4e0a\u7684\u7279\u5f81\u5de5\u7a0b\u8ba4\u8bc6\u5c1a\u6d45\uff0c\u51d1\u5de7\u5728Kaggle\u4e0a\u66fe\u7ecf\u4e5f\u6709\u4e00\u4e2a\u91d1\u878d\u98ce\u63a7\u9886\u57df\u2014\u2014\u623f\u8d37\u8fdd\u7ea6\u98ce\u63a7\u7684\u6bd4\u8d5b\uff0c\u91cc\u9762\u6709\u8bb8\u591a\u5927\u795e\u5206\u4eab\u4e86\u4ed6\u4eec\u7684\u7279\u5f81\u5de5\u7a0b\u65b9\u6cd5\uff0c\u7ec6\u770b\u4e0b\u6765\u6709\u4e0d\u5c11\u503c\u5f97\u53c2\u8003\u548c\u501f\u9274\u7684\u5730\u65b9\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#2","title":"2 \u8d5b\u9898\u548c\u6570\u636e\u7b80\u4ecb","text":"<p>\u8fd9\u4e2a\u6bd4\u8d5b\u4e5f\u662f\u7ecf\u5178\u7684\u76d1\u7763\u5b66\u4e60\u4e2d\u7684\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u9700\u8981\u6211\u4eec\u6839\u636e\u7528\u6237\u7684\u7533\u8bf7\u4fe1\u606f\uff0c\u5f81\u4fe1\u4fe1\u606f\uff08Bureau\uff09\u4ee5\u53ca\u7528\u6237\u5728\u8be5\u673a\u6784\u7684\u4fe1\u7528\u5386\u53f2\u7b49\u4fe1\u606f\uff0c\u9884\u6d4b\u7533\u8bf7\u4eba\u8d37\u6b3e\u8fdd\u7ea6\u7684\u6982\u7387\u3002\u7531\u4e8e\u8d5b\u9898\u662f\u505a\u8d37\u524d\u9884\u6d4b\uff0c\u6240\u4ee5\u9700\u8981\u627e\u7684\u7279\u5f81\u4e3b\u8981\u662f\u6316\u6398\u5ba2\u6237\u662f\u5426\u5b58\u5728\u6b3a\u8bc8\uff0c\u5bf9\u4e8e\u975e\u6b3a\u8bc8\u7528\u6237\uff0c\u4ed6\u4eec\u662f\u5426\u6709\u80fd\u529b\u8fd8\u6b3e\u3001</p> \u6570\u636e\u8868\u5173\u7cfb\u56fe <p>\u8d5b\u9898\u7684\u6570\u636e\u5206\u5e03\u5728\u51e0\u5f20\u8868\u91cc\uff0c\u9700\u8981\u6211\u4eec\u505a\u9002\u5f53\u7684\u8868\u8fde\u63a5\u64cd\u4f5c\uff1a</p> <ul> <li>\u7533\u8bf7\u8868:\u8d37\u6b3e\u7533\u8bf7\u4fe1\u606f\uff0c\u4e3b\u8868\uff0c\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u8d37\u6b3e\u7533\u8bf7id\u3002</li> <li>\u5f81\u4fe1(Bureau)\u4f59\u989d\u8868: Bureau\u4fe1\u7528\u8bb0\u5f55\uff0c\u6bcf\u884c\u662f\u4e00\u4e2a\u7533\u8bf7\u7528\u6237\u7684\u6708\u5ea6\u6570\u636e\uff0c\u4e00\u4e2aid\u6700\u591a\u6709\u8fd196\u4e2a\u6708\u7684\u8bb0\u5f55</li> <li>\u7533\u8bf7\u5386\u53f2\u8868: \u540c\u4e00\u7528\u6237\u7684\u5386\u53f2\u8d37\u6b3e\u7533\u8bf7\u4fe1\u606f\uff0c\u989d\u5ea6\uff0c\u671f\u9650\uff0c\u5229\u7387\uff0c\u662f\u5426\u5ba1\u6279\u901a\u8fc7\u7b49</li> <li>\u8fd8\u6b3e\u8bb0\u5f55\u8868: \u540c\u4e00\u7528\u6237\u7684\u5386\u53f2\u8fd8\u6b3e\u884c\u4e3a\u8bb0\u5f55\u3002</li> <li>\u4fe1\u7528\u5361\u4f59\u989d\u8bb0\u5f55\u8868: \u6301\u6709\u4fe1\u7528\u5361\u7684\u7528\u6237\u7684\u4fe1\u7528\u5361\u6d88\u8d39\u884c\u4e3a\u8bb0\u5f55\u6570\u636e\u3002</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#3","title":"3 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u7279\u5f81\u5de5\u7a0b\u7684\u4e3b\u8981\u601d\u8def\u662f\u5c3d\u53ef\u80fd\u591a\u5730\u6784\u9020\u5927\u91cf\u7279\u5f81\uff0c\u518d\u5229\u7528\u7279\u5f81\u7b5b\u9009\u6307\u6807\u6216\u662f\u6a21\u578b\u51cf\u5c11\u7279\u5f81\u6570\u91cf\u3002</p> <p>\u81ea\u52a8\u5316\u7684\u6570\u636e\u5de5\u7a0b\u8fd9\u4e00\u6b65\uff0c\u6709\u4e9b\u9009\u624b\u51e0\u4e4e\u5b8c\u5168\u4f9d\u8d56\u81ea\u52a8\u7279\u5f81\u5de5\u7a0b\uff0c\u4f8b\u5982\u6784\u9020polynomial features\uff0c\u6709\u4e9b\u5229\u7528\u5f00\u6e90\u7684\u6570\u636e\u5de5\u7a0b\u5305\u5982Featuretools\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#31","title":"3.1 \u8fd1\u671f\u7279\u5f81","text":"<p>\u6709\u65f6\u6570\u636e\u4e2d\u7684\u65f6\u95f4\u4fe1\u606f\u4e3a\u65f6\u95f4\u6233\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u5de5\u5c06\u5176\u8f6c\u6362\u6210\u6570\u503c\u4fe1\u606f\uff0c\u5982\u8ba1\u7b97\u6700\u8fd1\u4e00\u6b21\u4f7f\u7528\u4fe1\u7528\u5361\u7684\u65f6\u95f4\uff0c\u4e0a\u4e00\u6b21\u8054\u7cfb\u65f6\u95f4\uff0c\u4e0a\u6b21\u903e\u671f\u65f6\u95f4\u7b49\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#32","title":"3.2 \u7edf\u8ba1\u7279\u5f81","text":"<p>\u4e00\u4e2a\u7533\u8bf7id\u4f1a\u5bf9\u5e94\u62c9\u53d6\u5176\u7533\u8bf7\u4eba\u7684\u5f81\u4fe1(Bureau Credit)\u6570\u636e\u548c\u4fe1\u7528\u5361\u4f7f\u7528\u6570\u636e\uff0c\u4e00\u4e2a\u7533\u8bf7id\u5728\u5176\u4ed6\u8868\u4e2d\u5bf9\u5e94\u591a\u884c\u8bb0\u5f55\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u53d8\u91cf\uff0c\u5f80\u5f80\u4f1a\u8003\u8651\u6784\u9020\u7edf\u8ba1\u6027\u7279\u5f81\uff0c\u5982\u5747\u503c\uff0c\u6700\u5927/\u6700\u5c0f\u503c\uff0c\u5408\u8ba1\u503c\uff0c\u9891\u6b21\u7b49\u7b49\u3002</p> <pre><code>def agg_numeric(df, group_var, df_name):\n\"\"\"\n    Aggregates the numeric values in a dataframe. This can\n    be used to create features for each instance of the grouping variable.\n    \"\"\"\n    # Remove id variables other than grouping variable\n    for col in df:\n        if col != group_var and 'SK_ID' in col:\n            df = df.drop(columns = col)\n\n    group_ids = df[group_var]\n    numeric_df = df.select_dtypes('number')\n    numeric_df[group_var] = group_ids\n\n    # Group by the specified variable and calculate the statistics\n    agg = numeric_df.groupby(group_var).agg(['count', 'mean', 'max', 'min', 'sum']).reset_index()\n\n    # Need to create new column names\n    columns = [group_var]\n\n    # Iterate through the variables names\n    for var in agg.columns.levels[0]:\n        # Skip the grouping variable\n        if var != group_var:\n            # Iterate through the stat names\n            for stat in agg.columns.levels[1][:-1]:\n                # Make a new column name for the variable and stat\n                columns.append('%s_%s_%s' % (df_name, var, stat))\n\n    agg.columns = columns\n    return agg\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#33","title":"3.3 \u65f6\u5e8f\u7279\u5f81","text":"<p>\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u7a97\u53e3\u8ba1\u7b97\u65f6\u5e8f\u7279\u5f81\u5f80\u5f80\u80fd\u5e2e\u52a9\u8bc6\u522b\u5f02\u5e38\u7684\u7528\u6237\u6d88\u8d39\u884c\u4e3a\u3002\u5e38\u89c1\u7684\u65f6\u5e8f\u7279\u5f81\u6709\uff1a</p> <ul> <li>\u6700\u5927\u503c-\u6700\u5c0f\u503c</li> <li>\u5f53\u524d\u503c/N\u6708\u5747\u503c</li> <li>N\u6708\u5185\u6301\u7eed\u5347\u9ad8/\u964d\u4f4e</li> <li>\u6700\u5927\u8fde\u7eed\u4e0a\u5347/\u4e0b\u964d\u6708\u4efd\u6570</li> </ul> <p>\u4f8b\u5982\u5982\u679c\u4e00\u4e2a\u7528\u6237\u5728\u672c\u6708\u6d88\u8d39\u91d1\u989d\u8fdc\u9ad8\u4e8e\u8fc7\u53bb12\u4e2a\u6708\u5185\u7684\u6708\u5747\u6d88\u8d39\u91d1\u989d\uff0c\u53ef\u80fd\u8bf4\u660e\u5ba2\u6237\u5728\u6076\u610f\u900f\u652f\u4fe1\u7528\u989d\u5ea6\u6216\u8005\u76d7\u5237\uff0c\u7528\u6237\u7684\u98ce\u9669\u5e94\u63d0\u9ad8\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#34","title":"3.4 \u7279\u5f81\u7b5b\u9009","text":"<p>\u6839\u636e\u7279\u5f81\u9009\u62e9\u7684\u5f62\u5f0f\uff0c\u53ef\u5206\u4e3a\u4e09\u5927\u7c7b\uff1a</p> <ul> <li>Filter(\u8fc7\u6ee4\u6cd5)\uff1a\u6309\u7167\u53d1\u6563\u6027\u6216\u76f8\u5173\u6027\u5bf9\u5404\u4e2a\u7279\u5f81\u8fdb\u884c\u8bc4\u5206\uff0c\u8bbe\u5b9a\u9608\u503c\u6216\u8005\u5f85\u9009\u62e9\u7279\u5f81\u7684\u4e2a\u6570\u8fdb\u884c\u7b5b\u9009\uff0c\u5e38\u89c1\u7684\u6307\u6807\u6709pearson\u76f8\u5173\u7cfb\u6570\uff0c\u5361\u65b9\u9a8c\u8bc1\uff0c\u4e92\u4fe1\u606f\u7b49\u3002</li> <li>Wrapper(\u5305\u88c5\u6cd5)\uff1a\u6839\u636e\u76ee\u6807\u51fd\u6570\uff08\u5f80\u5f80\u662f\u9884\u6d4b\u6548\u679c\u8bc4\u5206\uff09\uff0c\u6bcf\u6b21\u9009\u62e9\u82e5\u5e72\u7279\u5f81\uff0c\u6216\u8005\u6392\u9664\u82e5\u5e72\u7279\u5f81\uff0c\u5e38\u89c1\u5982\u9012\u5f52\u7279\u5f81\u6d88\u9664\u6cd5\u3002</li> <li>Embedded(\u5d4c\u5165\u6cd5)\uff1a\u5148\u4f7f\u7528\u67d0\u4e9b\u673a\u5668\u5b66\u4e60\u7684\u6a21\u578b(\u5e38\u89c1\u7528\u6811\u6a21\u578b)\u8fdb\u884c\u8bad\u7ec3\uff0c\u5f97\u5230\u5404\u4e2a\u7279\u5f81\u7684\u6743\u503c\u7cfb\u6570\uff0c\u6839\u636e\u7cfb\u6570\u4ece\u5927\u5230\u5c0f\u9009\u62e9\u7279\u5f81\uff08\u7c7b\u4f3c\u4e8eFilter\uff0c\u53ea\u4e0d\u8fc7\u7cfb\u6570\u662f\u901a\u8fc7\u8bad\u7ec3\u5f97\u6765\u7684\uff09\u3002</li> </ul> <p>\u4e3a\u4e86\u4fdd\u8bc1\u6a21\u578b\u7684\u53ef\u89e3\u91ca\u6027\uff0c\u4f8b\u5982PCA\u5bf9\u7279\u5f81\u505a\u53d8\u6362\u7684\u7279\u5f81\u964d\u7ef4\u65b9\u6cd5\u4e00\u822c\u4e0d\u7528\u4e8e\u98ce\u63a7\u5efa\u6a21\u4e2d\u3002\u591a\u6570\u7279\u5f81\u7b5b\u9009\u65b9\u6cd5\u662f\u5148\u7528filter\u6cd5\u79fb\u9664\u5171\u7ebf\u7279\u5f81\uff0c\u7136\u540e\u5229\u7528\u5d4c\u5165\u6cd5\u8ba1\u7b97\u7279\u5f81\u91cd\u8981\u6027\u5bf9\u8fdb\u884c\u6392\u5e8f\u3002</p> <p>\u5728 Introduction to Feature Selection \u4e2d\uff0c\u4f5c\u8005\u6700\u7ec8\u4ece1465\u4e2a\u53d8\u91cf\u4e2d\u7b5b\u9009342\u4e2a\u53d8\u91cf\u653e\u5165LightGBM\u6a21\u578b\u4e2d\uff0c\u6d4b\u8bd5\u96c6AUC\u4ec5\u4ece0.783\u964d\u4f4e\u52300.782\uff0c\u672a\u7ecf\u8fc7\u7279\u5f81\u5de5\u7a0b\u7684LightGBM\u6a21\u578bbaseline\u4e3a0.735\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#4","title":"4 \u5c0f\u7ed3","text":"<p>Kaggle \u5927\u795e\u4eec\u7684\u7279\u5f81\u5de5\u7a0b\u601d\u8def\u540e\uff0c\u6700\u5927\u7684\u611f\u53d7\u662f\u5de5\u7a0b\u91cf\u5f88\u5927\u3002\u4e00\u4e9b\u516c\u53f8\u4f1a\u9009\u62e9\u76f4\u63a5\u5c06\u7279\u5f81\u6269\u5c55\u7684\u6b65\u9aa4\u5408\u5e76\u5728\u6570\u636e\u4ed3\u5e93\u7684ETL\u4e2d\uff0c\u4ece\u800c\u964d\u4f4e\u5efa\u6a21\u7684\u5468\u671f\u548c\u6210\u672c\u3002\u5bf9\u4e8e\u4e2a\u4eba\u6765\u8bf4\uff0c\u4e86\u89e3\u6570\u636e\u4ed3\u5e93\u4e2d\u7684ETL\u8fc7\u7a0b\uff0c\u6216\u8bb8\u662f\u63d0\u9ad8\u4e1a\u52a1\u8ba4\u77e5\u7684\u624b\u6bb5\u4e4b\u4e00\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/","title":"\u5982\u4f55\u505a\u7279\u5f81\u9009\u62e9","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-09-26\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#1","title":"1 \u5f15\u8a00","text":"<p>\u7279\u5f81\u5de5\u7a0b\u4e0e\u7279\u5f81\u9009\u62e9\u5728\u6570\u636e\u5efa\u6a21\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u5730\u4f4d\uff0c\u5c24\u5176\u662f\u5904\u7406\u7ed3\u6784\u5316\u7684\u6570\u636e\u3002\u5982\u4f55\u79d1\u5b66\u5730\u5728\u4f17\u591a\u7279\u5f81\u4e2d\u9009\u62e9\u4e00\u90e8\u5206\u6709\u6548\u7279\u5f81\u662f\u4e00\u4e2a\u6d89\u53ca\u79d1\u5b66\u4e0e\u827a\u672f\u7684\u8bdd\u9898\u3002  </p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#2","title":"2 \u662f\u5426\u9700\u8981\u505a\u7279\u5f81\u9009\u62e9","text":"<p>\u9700\u8981\u3002\u56e0\u4e3a\u6211\u4eec\u9762\u5bf9\u7684\u5019\u9009\u7279\u5f81\u5f80\u5f80\u662f\u6570\u91cf\u4f17\u591a\u7684\u3002\u8fc7\u591a\u7684\u7279\u5f81\u4f1a\u6d88\u8017\u4e0d\u5fc5\u8981\u7684\u6a21\u578b\u8bad\u7ec3\u65f6\u95f4\uff0c\u5e76\u4e14\u4ece\u7ecf\u9a8c\u4e0a\u6765\u8bb2\uff0c\u6709\u4e9b\u6a21\u578b\u7279\u5f81\u8fc7\u591a\u53cd\u800c\u53ef\u80fd\u8868\u73b0\u53d8\u5dee\u3002 \u90a3\u4e48\u7279\u5f81\u9009\u62e9\u80fd\u7ed9\u6a21\u578b\u8868\u73b0\u5e26\u6765\u63d0\u5347\u5417\uff1f\u6bd4\u5982\u4e0d\u540c\u65b9\u6cd5\u9009\u51fa\u540c\u4e00\u6570\u91cf\u7ea7\u7684\u7279\u5f81\u3002\u6709\u5927\u4f6c\u8bf4\uff0c\u5e76\u6ca1\u6709\u5927\u7684\u63d0\u5347\u3002\u81f3\u4e8e\u662f\u5426\u5982\u6b64\uff0c\u8fd8\u9700\u8981\u81ea\u5df1\u5b9e\u9a8c\u6c42\u8bc1\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#3","title":"3 \u5982\u4f55\u505a\u7279\u5f81\u9009\u62e9","text":"<p>\u7279\u5f81\u9009\u62e9\u6709\u4e09\u5927\u7c7b\u65b9\u6cd5\uff1a</p> <ul> <li>Filter\uff1a\u8861\u91cf\u5355\u4e2a\u7279\u5f81</li> <li>Embedded\uff1a\u901a\u8fc7\u6a21\u578b\u5f97\u5230\u7279\u5f81\u5728\u6a21\u578b\u4e2d\u7684\u91cd\u8981\u6027</li> <li>Wrapper\uff1a\u6839\u636e\u76ee\u6807\u51fd\u6570\uff0c\u6bcf\u6b21\u9009\u62e9\u6216\u8005\u6392\u9664\u82e5\u5e72\u7279\u5f81</li> </ul> <p>\u611f\u89c9\u524d\u4e24\u79cd\u65b9\u6cd5\u8f83\u4e3a\u5b9e\u7528\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f88\u5feb\u5730\u5c06\u7279\u5f81\u51cf\u5c11\u5230\u53ef\u4ee5\u8bad\u7ec3\u6a21\u578b\u7684\u4e2a\u6570\uff0c\u4ece\u800c\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u3002 \u5173\u4e8e\u8861\u91cf\u5355\u4e2a\u7279\u5f81\u7684\u6307\u6807\uff0c\u5e38\u89c1\u7684\u6709\uff1a</p> <ul> <li>\u76f8\u5173\u6027\uff1a\u5e38\u7528\u76ae\u5c14\u65af\u76f8\u5173\u7cfb\u6570\u6765\u8861\u91cf\u3002\u4e5f\u53ef\u4ee5\u7528\u65af\u76ae\u5c14\u66fc\u76f8\u5173\u7cfb\u6570(\u6392\u5e8f\u76f8\u5173)\uff0c\u5b83\u5bf9\u6781\u7aef\u503c\u4e0d\u654f\u611f\uff0c\u4f46\u7531\u4e8e\u53ea\u7528\u5230\u4e86\u539f\u5e8f\u5217\u7684\u6392\u5e8f\u4fe1\u606f\uff0c\u4f7f\u7528\u4fe1\u606f\u8f83\u5c11\uff0c\u8868\u8fbe\u80fd\u529b\u8f83\u5f31\u3002</li> <li>\u7a33\u5b9a\u6027\uff1a\u5e38\u7528\u7fa4\u4f53\u7a33\u5b9a\u6027\u6307\u6807(population stability index, PSI)\u6765\u8861\u91cf\u3002</li> <li>\u6709\u6548\u6027\uff1a\u5bf9\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u5e38\u628a\u7279\u5f81\u5206\u7bb1\u540e\uff0c\u7528\u4fe1\u606f\u4ef7\u503c(Information Value, IV)\u503c\u6765\u8861\u91cf\u3002\u5f53\u7136\u8fd8\u6709\u5f88\u591a\u522b\u7684\u7edf\u8ba1\u91cf\u3002\u4e3a\u4e86\u4fbf\u4e8e\u4e0d\u540c\u7edf\u8ba1\u91cf(\u6bd4\u5982\u8ba1\u7b97\u8fde\u7eed\u7279\u5f81\u3001\u79bb\u6563\u7279\u5f81\u4e0elabel\u4e4b\u95f4\u6709\u6548\u6027\u7684\u4e0d\u540c\u7edf\u8ba1\u91cf)\u7684\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u90fd\u8f6c\u6362\u4e3a\u5047\u8bbe\u68c0\u9a8c\u4e2d\u7684p\u503c\u3002</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#31","title":"3.1 \u76f8\u5173\u6027","text":"<p>\u76ae\u5c14\u65af\u76f8\u5173\u7cfb\u6570\u53ea\u80fd\u53cd\u6620\u53d8\u91cf\u95f4\u7684\u7ebf\u6027\u5173\u7cfb\u3002  </p> <p>\u6700\u5927\u4fe1\u606f\u7cfb\u6570(maximal information coefficient, MIC)\u53ef\u4ee5\u8861\u91cf\u53d8\u91cf\u95f4\u9ad8\u7ef4\u7684\u76f8\u5173\u6027\u3002\u5b83\u53cd\u6620\u4e86\u53d8\u91cf\u95f4\u6700\u5927\u7684\u4e92\u4fe1\u606f(mutual information, MI)\u3002\u4ece\u76f4\u89c2\u4e0a\u6765\u8bb2\uff0c\u5982\u679cX\uff0cY\u5b58\u5728\u5173\u8054\uff0c\u5f53Y\u5df2\u77e5\u65f6\uff0cX\u7684\u4e0d\u786e\u5b9a\u6027\u4f1a\u53d8\u5c0f\u3002\u8fd9\u4e00\u53d8\u5316\u503c\u5c31\u662f\u4e92\u4fe1\u606f\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#32","title":"3.2 \u7a33\u5b9a\u6027","text":"<p>\u53d8\u91cf\u7684\u7a33\u5b9a\u6027\u5e38\u7528PSI\u6765\u8861\u91cf\u3002\u4ece\u71b5\u7684\u89d2\u5ea6\u6765\u770b\uff0cPSI\u8861\u91cf\u4e86\u4e24\u4e2a\u5206\u5e03\u7684\u5dee\u5f02\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u8861\u91cf\u7684\u89d2\u5ea6\uff0c\u5982\u65f6\u95f4\u7ef4\u5ea6\uff0c\u7fa4\u4f53\u7ef4\u5ea6\u7b49\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cPSI\u8f83\u5927\u65e0\u6cd5\u53cd\u6620\u662f\u5de6\u504f\u8fd8\u662f\u53f3\u504f\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#33","title":"3.3 \u6709\u6548\u6027","text":"<p>\u5bf9\u4e8e\u98ce\u63a7\u5efa\u6a21\u6765\u8bf4\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u5c06\u53d8\u91cf\u5206\u7bb1\u540e\uff0c\u8ba1\u7b97IV\u3002\u540c\u6837\u4ece\u71b5\u7684\u89d2\u5ea6\uff0cIV\u53cd\u6620\u4e86\u597d\u574f\u5206\u5e03\u95f4\u7684\u5dee\u5f02\u3002 \u867d\u7136\u8bc1\u636e\u6743\u91cd(Weight of Evidence, WOE)\u548cIV\u6700\u521d\u662f\u4e3a\u4e86\u9002\u914d\u903b\u8f91\u56de\u5f52\u6a21\u578b\u3002\u4f46\u662f\u5728\u5b9e\u52a1\u4e2d\uff0c\u5e38\u7528IV\u7b5b\u9009\u540e\uff0c\u5c06\u53d8\u91cf\u9001\u5165\u975e\u903b\u8f91\u56de\u5f52\u7684\u6811\u6a21\u578b\u6216\u662f\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002 \u6f5c\u5728\u7684\u95ee\u9898\u6709\uff0cIV\u53cd\u6620\u7684\u662f\u5355\u53d8\u91cf\u4e0elabel\u7684\u5173\u7cfb\uff0c\u65e0\u6cd5\u53cd\u6620\u53d8\u91cf\u95f4\u7684\u4ea4\u4e92\u3002\u7531\u6b64\uff0c\u5d4c\u5165\u5f0f(Embedded)\u7684\u7279\u5f81\u9009\u62e9\u51fa\u73b0\u4e86\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#34","title":"3.4 \u5d4c\u5165\u5f0f\u7279\u5f81\u9009\u62e9","text":"<p>\u901a\u8fc7\u4e0a\u8ff0\u7684\u4e00\u4e9b\u521d\u7b5b\u6b65\u9aa4\uff0c\u7279\u5f81\u7684\u6570\u91cf\u5df2\u7ecf\u80fd\u8f83\u5feb\u5730\u964d\u4f4e\u5230\u53ef\u4ee5\u8bad\u7ec3\u6a21\u578b\u7684\u7a0b\u5ea6\u3002\u4e0b\u4e00\u6b65\uff0c\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u8861\u91cf\u7279\u5f81\u91cd\u8981\u6027\u7684\u65b9\u6cd5\u4f5c\u5d4c\u5165\u5f0f\u7684\u7279\u5f81\u9009\u62e9\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u540c\u6a21\u578b\u5bf9\u7279\u5f81\u7684\u8981\u6c42\u4e0d\u540c\u3002\u6709\u5b9e\u9a8c\u8868\u660e\uff0c\u5bf9\u4e8e\u52a0\u5165\u65e0\u5173\u53d8\u91cf\uff0c\u795e\u7ecf\u7f51\u7edc\u7684\u8868\u73b0\u4f1a\u660e\u663e\u53d8\u5dee(loss\u4e0a\u5347)\u3002\u56e0\u6b64\uff0c\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u524d\uff0c\u9700\u8981\u53bb\u9664\u65e0\u5173\u53d8\u91cf\u53ca\u9ad8\u76f8\u5173\u6027\u53d8\u91cf\u3002</p> <p>\u6811\u6a21\u578b\u5bf9\u6b64\u8f83\u4e3a\u4e0d\u654f\u611f\u3002\u4f46\u662f\u5728\u8861\u91cf\u7279\u5f81\u91cd\u8981\u6027\u65f6\uff0c\u4e24\u4e2a\u540c\u6837\u6709\u6548\u7684\u53d8\u91cf\u4f1a\u7531\u4e8e\u9ad8\u76f8\u5173\u6027\u800c\u4f7f\u7279\u5f81\u91cd\u8981\u6027\u4e0b\u964d(\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4e0b\u964d\uff0c\u5e76\u4e0d\u4f1a\u4e0b\u964d\u52300)\u3002  </p> <p>\u5d4c\u5165\u5f0f\u7684\u7279\u5f81\u9009\u62e9\u5f80\u5f80\u4f9d\u8d56\u4e8e\u6a21\u578b\uff0c\u5728\u6811\u6a21\u578b\u4e0b\u91cd\u8981\u7684\u7279\u5f81\u5e76\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002\u540c\u65f6\uff0c\u6a21\u578b\u7684\u53c2\u6570\u4e5f\u4f1a\u5f71\u54cd\u5230\u7279\u5f81\u91cd\u8981\u6027\u7684\u6392\u5e8f\u3002\u63a8\u8350\u7528\u201c\u7956\u4f20\u53c2\u6570\u201d\u6216\u662f\u9ed8\u8ba4\u53c2\u6570\uff0c\u8ba9\u6a21\u578b\u7a0d\u7a0d\u8fc7\u62df\u5408\u4e00\u70b9\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-09-26-feature-selection/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u7279\u5f81\u9009\u62e9\u662f\u4e00\u4e2a\u517c\u987e\u79d1\u5b66\u4e0e\u827a\u672f\u7684\u8bdd\u9898\uff0c\u4ee5\u4e0a\u603b\u7ed3\u53ea\u662f\u57fa\u4e8e\u4f5c\u8005\u6709\u9650\u7684\u77e5\u8bc6\u4e0e\u7ecf\u9a8c\u3002\u5f88\u96be\u6709\u653e\u4e4b\u56db\u6d77\u800c\u7686\u51c6\u7684\u65b9\u6cd5\uff0c\u66f4\u591a\u7684\u662f\u9700\u8981\u5728\u5b9e\u52a1\u4e2d\u591a\u505a\u5b9e\u9a8c\uff0c\u591a\u601d\u8003\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/","title":"KDD Cup2021\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u603b\u7ed3","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-10-30\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea66\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#1","title":"1 \u5f15\u8a00","text":"<p>\u6211\u4eec\u5728\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u66fe\u4ecb\u7ecd\u8fc7KDD Cup2021\u7684\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u3002\u7ade\u8d5b\u8981\u6c42\u6211\u4eec\u5728250\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\u627e\u51fa\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u7684\u552f\u4e00\u5f02\u5e38\u70b9\u6240\u5728\u533a\u95f4\u3002 \u6700\u8fd1\uff0c\u8d5b\u4e8b\u516c\u5e03\u4e86\u6700\u7ec8\u9ad8\u5206\u56e2\u961f\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6276\u6211\u8d77\u6765\u6211\u8fd8\u80fd\u5b66\uff0c\u4eca\u5929\u5c31\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u4e00\u4e0b\u8fd9\u4e9b\u9ad8\u5206\u65b9\u6848\u5427\u3002</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#2","title":"2 \u80cc\u666f\u4ecb\u7ecd","text":"<p>\u7b2c\u4e00\u540d\u662f\u6765\u81ea\u6df1\u5170\u79d1\u6280(DeepBlue Technology)\u7684\u56e2\u961f\u3002\u8fd9\u5bb6\u516c\u53f8\u6709\u4e00\u4e9bAI\u673a\u5668\u4eba\u7684\u4ea7\u54c1\uff0c\u4e5f\u5f88\u70ed\u8877\u4e8e\u53c2\u52a0\u5404\u7c7b\u7ade\u8d5b\u3002\u5b83\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u662f<code>TsaDetect</code>: An efficient and flexible time series anomaly detection framework\u3002 \u603b\u7684\u6765\u8bf4\uff0c\u4ed6\u4eec\u96c6\u6210\u4e86\u51e0\u79cd\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7684\u7b97\u6cd5\uff0c\u5f97\u5230\u4e86\u4e0d\u9519\u7684\u6548\u679c\u3002  </p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#3","title":"3 \u5bfb\u627e\u5468\u671f","text":"<p>\u7531\u4e8e\u672c\u6b21\u7ade\u8d5b\u63d0\u4f9b\u7684\u65f6\u95f4\u5e8f\u5217\u90fd\u662f\u5f88\u89c4\u5f8b\u3001\u5468\u671f\u5f88\u660e\u663e\u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u7684\u5f02\u5e38\u70b9\uff0c\u5176\u5b9e\u66f4\u53ef\u4ee5\u88ab\u79f0\u4e3a\u5f02\u5e38\u5468\u671f\u3002\u5982\u4f55\u627e\u5230\u65f6\u95f4\u5e8f\u5217\u7684\u5468\u671f\u6210\u4e3a\u4e86\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002 \u6211\u4eec\u81ea\u5df1\u5728\u7ade\u8d5b\u4e2d\uff0c\u91c7\u7528\u4e86\u5085\u91cc\u53f6\u53d8\u6362\u7684\u65b9\u5f0f\u5bfb\u627e\u5468\u671f\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f\u5085\u91cc\u53f6\u53d8\u6362\u5462\uff1f  </p> <p>\u9996\u5148\uff0c\u5085\u91cc\u53f6\u7ea7\u6570\u7684\u6982\u5ff5\u662f\u8bf4\u4efb\u4f55\u5468\u671f\u51fd\u6570\u90fd\u53ef\u4ee5\u5206\u89e3\u6210\u4e0d\u540c\u5468\u671f(\u6216\u8005\u8bf4\u4e0d\u540c\u9891\u7387\uff0c\u9891\u7387\u7b49\u4e8e\u5468\u671f\u7684\u5012\u6570)\u7684\u6b63\u5f26\u51fd\u6570\u76f8\u52a0\u3002\u90a3\u4e48\u8fd9\u4e9b\u4e0d\u540c\u9891\u7387\u5c31\u6784\u6210\u4e86\u8fd9\u4e2a\u5e8f\u5217\u7684\u9891\u8c31\u3002\u6a2a\u8f74\u4e3a\u9891\u7387\uff0c\u7eb5\u8f74\u4e3a\u632f\u5e45\u3002  </p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u9891\u8c31\u4e2d\uff0c\u632f\u5e45\u6700\u5927\u7684\u70b9\u7684\u9891\u7387\u5c31\u662f\u539f\u59cb\u5e8f\u5217\u7684\u9891\u7387\uff0c\u56e0\u4e3a\u6b64\u65f6\u8fd9\u4e2a\u9891\u7387\u4ee5\u53ca\u632f\u5e45\u7684\u6b63\u5f26\u51fd\u6570\u5305\u62ec\u4e86\u539f\u59cb\u5e8f\u5217\u7684\u5cf0\u8c37\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u786e\u5b9a\u539f\u59cb\u5e8f\u5217\u7684\u5468\u671f\u3002  </p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5728Python\u4e2d\u7ed8\u5236\u5e8f\u5217\u7684\u9891\u8c31\u56fe\u3002</p> <pre><code>import scipy\nimport matplotlib.pyplot as plt\n\nX = scipy.fft.fft(this.values.reshape((-1,))) #\u5085\u91cc\u53f6\u53d8\u6362\u540e\u7684\u503c\nfreqs = scipy.fft.fftfreq(len(this.values),1)\nfig=plt.figure(figsize=(20,12))\nplt.plot(freqs,np.abs(X))#np.abs\u662f\u6a21\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528\u7ade\u8d5b\u63d0\u4f9b\u7684\u5982\u4e0b\u5e8f\u5217\u8bd5\u4e00\u8bd5\uff0c</p> <p>\u73b0\u5b9e\u5f88\u9aa8\u611f\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u627e\u5230\u539f\u59cb\u5e8f\u5217\u7684\u5468\u671f\u3002</p> <p>\u53ef\u4ee5\u8bf4\u5085\u91cc\u53f6\u53d8\u6362\u5bfb\u627e\u5468\u671f\u662f\u4e00\u79cd\u4f20\u7edf\u7684\u5bfb\u627e\u5468\u671f\u7684\u65b9\u5f0f\uff0c\u4f46\u5728\u67d0\u4e9b\u5e8f\u5217\u4e2d\u5e76\u4e0d\u9002\u5408\u3002  </p> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u770b\u770b\u9ad8\u5206\u65b9\u6848\u662f\u600e\u4e48\u505a\u7684\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5468\u671f\u957f\u5ea6(gap distance)\uff0c\u627e\u5230\u6bcf\u4e2a\u5468\u671f\u7684\u5cf0\u503c\uff0c\u7136\u540e\u8ba1\u7b97\u5cf0\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb(peak intervals)\u3002\u6700\u7ec8\u7684score\u7b49\u4e8estd(peak intervals)/sqrt(gap distance)\u3002\u901a\u8fc7\u904d\u5386\u4e0d\u540c\u7684\u5468\u671f\u957f\u5ea6\uff0c\u5f97\u5230\u6700\u5c0f\u7684score\uff0c\u6b64\u65f6\u7684\u5468\u671f\u957f\u5ea6\u5373\u4e3a\u5e8f\u5217\u7684\u5468\u671f\u3002 \u4ece\u76f4\u89c2\u4e0a\u6765\u8bb2\uff0c\u5cf0\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u8d8a\u7a33\u5b9a\uff0c\u5468\u671f\u957f\u5ea6\u8d8a\u5927(\u504f\u597d\u66f4\u5927\u5c3a\u5ea6\u7684\u5468\u671f)\uff0c\u6b64\u65f6\u7684\u5468\u671f\u8d8a\u53ef\u80fd\u4e3a\u539f\u59cb\u5e8f\u5217\u7684\u5468\u671f\u3002\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u633a\u79d1\u5b66\u7684\u3002  </p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#4","title":"4 \u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5","text":"<p>\u627e\u5230\u5468\u671f\u4e4b\u540e\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\u3002\u9ad8\u5206\u65b9\u6848\u4e3b\u8981\u4f7f\u7528\u4e86\u5085\u91cc\u53f6\u6ee4\u6ce2\u7b97\u6cd5\uff0c\u4e0a\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u8fc7\u7684Matrix Profile\u7b97\u6cd5\uff0c\u57fa\u4e8e\u56de\u5f52\u7684\u7b97\u6cd5\u7b49\u3002  </p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#41","title":"4.1 \u5085\u91cc\u53f6\u6ee4\u6ce2\u7b97\u6cd5","text":"<p>\u5085\u91cc\u53f6\u6ee4\u6ce2\u7b97\u6cd5\u662f\u6307\u5c06\u539f\u59cb\u5e8f\u5217\u505a\u5085\u91cc\u53f6\u53d8\u6362\u540e\uff0c\u5728\u9891\u57df\u4e2d\u53bb\u9664\u67d0\u4e9b\u9891\u7387\u7684\u6210\u5206\uff0c\u7136\u540e\u505a\u5085\u91cc\u53f6\u9006\u53d8\u6362\u91cd\u65b0\u8f6c\u6362\u4e3a\u65f6\u57df\u7684\u5e8f\u5217\u3002\u6700\u7ec8\u548c\u539f\u59cb\u5e8f\u5217\u505a\u5dee\uff0c\u5f97\u5230\u6b8b\u5dee\uff0c\u4ece\u800c\u627e\u5230\u5f02\u5e38\u70b9\u3002\u9ad8\u5206\u65b9\u6848\u91c7\u7528\u4e86\u9ad8\u901a\u3001\u4f4e\u901a\u6ee4\u6ce2\u4ee5\u53ca\u5e73\u6ed1\u7684\u65b9\u5f0f\uff0c\u90fd\u53ef\u4ee5\u6210\u529f\u5730\u5f97\u5230\u5f02\u5e38\u70b9\u6240\u5728\u4f4d\u7f6e\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u8fd9\u4e2a\u5e8f\u5217\u7684\u5f02\u5e38\u70b9\u7528\u4eba\u773c\u5176\u5b9e\u5f88\u96be\u8bc6\u522b\u51fa\u6765\u3002  </p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#42-matrix-profile","title":"4.2 Matrix Profile\u7b97\u6cd5","text":"<p>Matrix Profile\u7b97\u6cd5\u5728\u4e0a\u7bc7\u4e2d\u5df2\u7ecf\u8be6\u7ec6\u5730\u4ecb\u7ecd\u8fc7\uff0c\u5177\u4f53\u7684\u601d\u60f3\u662f\u8ba1\u7b97\u6bcf\u4e2a\u533a\u95f4\u548c\u5176\u4ed6\u533a\u95f4\u7684\u6b27\u5f0f\u8ddd\u79bb\uff0c\u5f97\u5230\u5f02\u5e38\u533a\u95f4\u3002</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#43","title":"4.3 \u57fa\u4e8e\u56de\u5f52\u7684\u7b97\u6cd5","text":"<p>\u57fa\u4e8e\u56de\u5f52\u7684\u7b97\u6cd5\u662f\u6307\u7528\u6a21\u578b\u505a\u4e00\u4e2a\u56de\u5f52\u95ee\u9898\uff0c\u6765\u9884\u6d4b\u67d0\u4e2a\u70b9\u7684\u503c\u3002\u7136\u540e\u5728\u6d4b\u8bd5\u96c6\u7528\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u505a\u5dee\uff0c\u5f97\u5230\u6b8b\u5dee\uff0c\u6b8b\u5dee\u6700\u5927\u7684\u70b9\u5373\u4e3a\u5f02\u5e38\u70b9\u3002\u9ad8\u5206\u65b9\u6848\u5c1d\u8bd5\u4e86\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u6700\u7ec8\u9009\u62e9\u7684\u662fGBDT\u548cCNN\u7b97\u6cd5\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cX\u53ef\u4ee5\u53d6\u9884\u6d4b\u503c\u5de6\u53f3\u4e24\u8fb9\u7684\u6570\u636e\u3002\u540c\u65f6\u5f02\u5e38\u70b9\u9644\u8fd1\u53ef\u80fd\u90fd\u662f\u5f02\u5e38\u7684\uff0c\u4e3a\u6b64\uff0cX\u548c\u9884\u6d4b\u503c\u4e4b\u95f4\u7559\u4e86\u4e00\u70b9gap\u3002</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#5","title":"5 \u6a21\u578b\u96c6\u6210","text":"<p>\u6709\u4e86\u4e00\u4e9b\u4e0d\u9519\u7684\u57fa\u7840\u6a21\u578b\u540e\uff0c\u9ad8\u5206\u65b9\u6848\u6700\u7ec8\u91c7\u7528\u4e86\u52a0\u6743\u96c6\u6210\u7684\u65b9\u5f0f\u3002\u5728\u6743\u91cd\u8bbe\u5b9a\u65b9\u9762\uff0c\u4ed6\u4eec\u91c7\u7528\u4e86\u6bcf\u4e2a\u6a21\u578b\u7684\u7f6e\u4fe1\u5ea6\u3002 \u6bcf\u4e2a\u6a21\u578b\u7684\u7f6e\u4fe1\u5ea6\u7684\u8ba1\u7b97\u4e3a\uff0c\u6700\u5927\u7684\u6b8b\u5dee/\u7b2c\u4e8c\u5927\u7684\u6b8b\u5dee\u3002\u76f4\u89c2\u4e0a\u7406\u89e3\uff0c\u5982\u679c\u8fd9\u4e2a\u503c\u8d8a\u5927\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6a21\u578b\u5bf9\u6700\u5927\u7684\u6b8b\u5dee\u6240\u5728\u7684\u70b9\u662f\u5f02\u5e38\u70b9\u66f4\u4e3a\u81ea\u4fe1\u3002\u8fd9\u5728\u53ea\u6709\u4e00\u4e2a\u5f02\u5e38\u70b9\u7684\u4efb\u52a1\u8bbe\u5b9a\u4e2d\u662f\u9002\u7528\u7684\u3002</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#6","title":"6 \u5c0f\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u9ad8\u5206\u65b9\u6848\u5176\u5b9e\u4e5f\u662f\u91c7\u7528\u4e86\u4e00\u4e9b\u8f83\u4e3a\u4f20\u7edf\u7684\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\u3002\u4f46\u503c\u5f97\u5b66\u4e60\u7684\u662f\uff0c\u65b9\u6848\u5f88\u6ce8\u91cd\u6bcf\u4e2a\u73af\u8282\u7684\u7ec6\u8282\uff0c\u65e0\u8bba\u662f\u6700\u5f00\u59cb\u5468\u671f\u957f\u5ea6\u7684\u786e\u5b9a\uff0c\u8fd8\u662f\u9009\u62e9\u4e0d\u540c\u7684\u6709\u6548\u7b97\u6cd5\uff0c\u4ee5\u53ca\u6700\u540e\u52a0\u6743\u6743\u91cd\u7684\u786e\u5b9a\uff0c\u9ad8\u5206\u56e2\u961f\u90fd\u6709\u81ea\u5df1\u7684\u601d\u8003\u548c\u7ecf\u9a8c\uff0c\u503c\u5f97\u6211\u4eec\u5b66\u4e60\u3002</p>","tags":["machine learning","time series"]},{"location":"Main_Course/Machine_Learning/2022-01-22-Permutation-importance/","title":"\u7279\u5f81\u9009\u62e9\u4e4bPermutation Importance","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-01-22\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea62\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#1","title":"1 \u524d\u8a00","text":"<p>\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u63d0\u5230\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u7279\u5f81\u9009\u62e9\u7684\u6280\u5de7\uff0c\u672c\u6587\u7ee7\u7eed\u9488\u5bf9\u8fd9\u4e00\u8bdd\u9898\u8fdb\u884c\u7814\u7a76\uff0c\u8bb2\u89e3\u4e00\u79cd\u65b0\u7684\u68c0\u67e5\u7279\u5f81\u91cd\u8981\u6027\u7684\u65b9\u6cd5\uff1aPermutation Importance\u3002\u7ee7\u7eed\u9605\u8bfb\u524d\uff0c\u53ef\u5148\u9605\u8bfb\u76f8\u5173\u524d\u6587\u56de\u987e\u77e5\u8bc6\uff1a</p> <ul> <li>\u51b3\u7b56\u6811\u5b66\u4e60\u7b14\u8bb0</li> <li>\u5982\u4f55\u505a\u7279\u5f81\u9009\u62e9</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#2","title":"2 \u7b97\u6cd5\u89e3\u6784","text":"<p>Permutation Importance\u9002\u7528\u4e8e\u8868\u683c\u578b\u6570\u636e\uff0c\u5176\u5bf9\u4e8e\u7279\u5f81\u91cd\u8981\u6027\u7684\u8bc4\u5224\u53d6\u51b3\u4e8e\u8be5\u7279\u5f81\u88ab\u968f\u673a\u91cd\u6392\u540e\uff0c\u6a21\u578b\u8868\u73b0\u8bc4\u5206\u7684\u4e0b\u964d\u7a0b\u5ea6\u3002\u5176\u6570\u5b66\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> <ul> <li>\u8f93\u5165\uff1a\u8bad\u7ec3\u540e\u7684\u6a21\u578bm\uff0c\u8bad\u7ec3\u96c6\uff08\u6216\u9a8c\u8bc1\u96c6\uff0c\u6216\u6d4b\u8bd5\u96c6\uff09D</li> <li>\u6a21\u578bm\u5728\u6570\u636e\u96c6D\u4e0a\u7684\u6027\u80fd\u8bc4\u5206s</li> <li>\u5bf9\u4e8e\u6570\u636e\u96c6D\u7684\u6bcf\u4e00\u4e2a\u7279\u5f81j</li> <li>\u5bf9\u4e8eK\u6b21\u91cd\u590d\u5b9e\u9a8c\u4e2d\u7684\u6bcf\u4e00\u6b21\u8fed\u4ee3k\uff0c\u968f\u673a\u91cd\u6392\u5217\u7279\u5f81j\uff0c\u6784\u9020\u4e00\u4e2a\u88ab\u6c61\u67d3\u7684\u6570\u636e\u96c6\\(Dc_{k,j}\\)</li> <li>\u8ba1\u7b97\u6a21\u578bm\u5728\u6570\u636e\u96c6\\(Dc_{k,j}\\)\u4e0a\u7684\u6027\u80fd\u8bc4\u5206\\(s_{k,j}\\)</li> <li>\u7279\u5f81j\u7684\u91cd\u8981\u6027\u5206\u6570\\(i_{j}\\)\u5219\u53ef\u4ee5\u8bb0\u4f5c</li> </ul> \\[ i_{j} = s - \\frac{1}{K}\\sum_{k=1}^{K}s_{k,j} \\]","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#3","title":"3 \u793a\u4f8b\u4ee3\u7801","text":"<pre><code>from sklearn.datasets import load_diabetes\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import Ridge\ndiabetes = load_diabetes()\nX_train, X_val, y_train, y_val = train_test_split(\n    diabetes.data, diabetes.target, random_state=0)\n\nmodel = Ridge(alpha=1e-2).fit(X_train, y_train)\nmodel.score(X_val, y_val)\n\n\nscoring = ['r2', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error']\n# scoring\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u52a0\u5165\u591a\u4e2a\u8ba1\u7b97\u6307\u6807\uff0c\u8fd9\u6837\u6bd4\u91cd\u590d\u4f7f\u7528permutation_importance\u66f4\u6709\u6548\u7387\uff0c\u56e0\u4e3a\u9884\u6d4b\u503c\u80fd\u88ab\u7528\u6765\u8ba1\u7b97\u4e0d\u540c\u7684\u6307\u6807\nr_multi = permutation_importance(model, X_val, y_val, n_repeats=30, random_state=0, scoring=scoring)\n\nfor metric in r_multi:\n    print(f\"{metric}\")\n    r = r_multi[metric]\n    for i in r.importances_mean.argsort()[::-1]:\n        if r.importances_mean[i] - 2 * r.importances_std[i] &gt; 0:\n            print(f\"    {diabetes.feature_names[i]:&lt;8}\"\n                  f\"{r.importances_mean[i]:.3f}\"\n                  f\" +/- {r.importances_std[i]:.3f}\")\n</code></pre> <p>\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>r2\n  s5      0.204 +/- 0.050\n  bmi     0.176 +/- 0.048\n  bp      0.088 +/- 0.033\n  sex     0.056 +/- 0.023\nneg_mean_absolute_percentage_error\n  s5      0.081 +/- 0.020\n  bmi     0.064 +/- 0.015\n  bp      0.029 +/- 0.010\nneg_mean_squared_error\n  s5      1013.903 +/- 246.460\n  bmi     872.694 +/- 240.296\n  bp      438.681 +/- 163.025\n  sex     277.382 +/- 115.126\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#4","title":"4 \u603b\u7ed3","text":"<p>\u76f8\u6bd4\u800c\u8a00\uff0c\u6811\u6a21\u578b\u901a\u5e38\u57fa\u4e8e\u4e0d\u7eaf\u51c0\u5ea6\u7684\u4e0b\u964d\u6765\u5224\u65ad\u7279\u5f81\u91cd\u8981\u6027\uff0c\u8be5\u91cd\u8981\u6027\u901a\u5e38\u662f\u57fa\u4e8e<code>\u8bad\u7ec3\u96c6</code>\u7684\uff0c\u5f53\u6a21\u578b\u8fc7\u62df\u5408\u65f6\uff0c\u7279\u5f81\u7684\u91cd\u8981\u6027\u5219\u5177\u6709\u8bef\u5bfc\u6027\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u770b\u4f3c\u91cd\u8981\u7684\u7279\u5f81\u53ef\u80fd\u5bf9\u4e8e\u6a21\u578b\u4e0a\u7ebf\u540e\u7684\u9047\u5230\u7684\u65b0\u6570\u636e\u5e76\u6ca1\u6709\u4ee4\u4eba\u6ee1\u610f\u7684\u9884\u6d4b\u80fd\u529b\u3002</p> <p>\u540c\u65f6\uff0c\u57fa\u4e8e\u4e0d\u7eaf\u51c0\u5ea6\u7684\u7279\u5f81\u91cd\u8981\u6027\u5bb9\u6613\u53d7\u5230\u9ad8\u6570\u91cf\u7c7b\u522b\u5c5e\u6027\u7684\u5f71\u54cd\uff08High Cardinality Features\uff09\uff0c\u6240\u4ee5\u90a3\u4e9b\u6570\u503c\u578b\u53d8\u91cf\u5f80\u5f80\u6392\u540d\u9760\u524d\u3002\u800cPermutation Importance\u5bf9\u6a21\u578b\u7684\u7279\u5f81\u6ca1\u6709\u504f\u89c1\uff0c\u4e5f\u4e0d\u5c40\u9650\u4e8e\u7279\u5b9a\u7684\u6a21\u578b\u7c7b\u522b\uff0c\u9002\u7528\u6027\u8f83\u5e7f\u3002\u8bf7\u6ce8\u610f\u3002\u5982\u679c\u7279\u5f81\u6709\u8f83\u5f3a\u7684\u591a\u91cd\u5171\u7ebf\u6027\uff0c\u5efa\u8bae\u53ea\u53d6\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u5f81\uff0c\u65b9\u6cd5\u53ef\u67e5\u770b\u793a\u4f8b\u3002</p> <p>\u540c\u65f6\uff0c<code>Scikit Learn</code>\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f4\u89c2\u7684\u793a\u4f8b\u5c55\u73b0\u57fa\u4e8e\u4e0d\u7eaf\u51c0\u5ea6\u7684\u7279\u5f81\u91cd\u8981\u6027\u548cPermutation Importance\u7684\u533a\u522b\u3002</p> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/","title":"\u96c6\u6210\u5b66\u4e60\u5c0f\u4ecb","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aTina\uff0c\u53d1\u5e03\u4e8e2022-01-28\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u6709\u4e00\u4e2a\u5e38\u89c1\u4e14\u91cd\u8981\u7684\u6982\u5ff5\u2014\u2014\u96c6\u6210\u5b66\u4e60\uff08Ensemble Learning\uff09\uff0c\u5373\u901a\u8fc7\u6784\u5efa\u591a\u4e2a\u673a\u5668\u5b66\u4e60\u5668\u6765\u5b8c\u6210\u5b66\u4e60\u4efb\u52a1\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u96c6\u6210\u5b66\u4e60\u7684\u4e00\u4e9b\u5e38\u89c1\u65b9\u6cd5\uff0c\u5982<code>Voting Classifiers</code>,<code>Bagging</code>\u548c<code>Boosting</code>\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#2","title":"2 \u96c6\u6210\u65b9\u6cd5","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#21-voting-classifiers","title":"2.1 Voting Classifiers","text":"<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c<code>Voting Classifiers</code>\u7684\u57fa\u672c\u539f\u5219\u5c31\u662f\u57fa\u4e8e\u76f8\u540c\u7684\u8bad\u7ec3\u96c6\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u6a21\u578b\u7b97\u6cd5\u53bb\u62df\u5408\u6570\u636e\uff0c\u4ece\u800c\u5c06\u6700\u540e\u7684\u9884\u6d4b\u7ed3\u679c\u805a\u5408\u53d6\u5f97\u6700\u7ec8\u7684\u7ed3\u679c\u3002</p> Voting Classifier Prediction <p>\u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a <pre><code>## RandomForest, Logistic Regression and SVC\n## participate in ensemble learning\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nlog_clf = LogisticRegression()\nrnd_clf =  RandomForestClassifier()\nsvm_clf = SVC()\n##aggregate three algorithms as Voting Classifier\nvoting_clf = VotingClassifier(\n    estimators=[('lr',log_clf),('rf',rnd_clf),('svc',svm_clf )],\n    voting= 'hard'\n)\n\nvoting_clf.fit(X_tran,y_train)\n</code></pre> \u8bad\u7ec3\u7ed3\u675f\u540e\uff0c\u53ef\u4ee5\u67e5\u770b\u6bcf\u4e2a\u5206\u7c7b\u5668\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0\uff1a</p> <p><pre><code>## Look at each classifier's accuracy on the test set:\nfrom sklearn.metrics import accuracy_score\nfor clf in (log_cf,rnd_clf,svm_clf,voting_clf):\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.name__,accuracy_score(y_test,y_pred))\n#### Output:\n### LogisticRegression 0.864\n### RandomForestClassifier 0.872\n### SVC 0.888\n### VotingClassifier 0.896\n</code></pre> \u9700\u8981\u8865\u5145\u4e00\u70b9\u7684\u662f\uff0c\u96c6\u6210\u5206\u7c7b\u5668\u5e76\u4e0d\u4e00\u5b9a\u5728\u6240\u6709\u7684\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u6709\u5f88\u597d\u7684\u8868\u73b0\uff0c\u6bd4\u5982\u5f53\u7ec4\u6210\u96c6\u6210\u5206\u7c7b\u5668\u4e2d\uff0c<code>weak learner</code>\u5360\u591a\u6570\uff0c\u800c\u6709\u826f\u597d\u8868\u73b0\u7684\u6a21\u578b\u5360\u5c11\u6570\uff0c\u5728\u53d6<code>major votes</code>\u4f5c\u4e3a\u9884\u6d4b\u7ed3\u679c\u65f6\uff0c\u96c6\u5408\u5b66\u4e60\u7684\u8868\u73b0\u5c31\u6709\u53ef\u80fd\u6ca1\u6709\u67d0\u4e2a\u5355\u4e2a\u5206\u7c7b\u5668\u597d\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#22-bagging-and-pasting","title":"2.2 Bagging and Pasting","text":"<p>\u96c6\u6210\u5b66\u4e60\u4e5f\u53ef\u4ee5\u7528\u4e00\u4e2a\u6a21\u578b\u7b97\u6cd5\u53bb\u62df\u5408\u4e0d\u540c\u7684\u5b50\u6570\u636e\u96c6\u6765\u5b9e\u73b0\u3002</p> <p><code>bagging (boostrap aggregating)</code>\u662f\u6307\u62bd\u6837\u5e76\u653e\u56de\uff0c\u800c<code>pasting</code>\u662f\u6307\u62bd\u6837\u4e0d\u653e\u56de\u3002 \u7531\u4e0b\u56fe\u6240\u793a\uff0c\u96c6\u6210\u5b66\u4e60\u53ef\u901a\u8fc7\u591a\u6b21\u62bd\u6837\u83b7\u5f97\u591a\u4e2a\u9884\u6d4b\u7ed3\u679c\uff0c\u518d\u5c06\u6240\u6709\u7684\u7ed3\u679c\u96c6\u6210\u5728\u4e00\u8d77\uff0c\u4e00\u822c\u9009\u62e9\u9891\u7387\u6700\u5927\u7684\u9884\u6d4b\u503c\u6216\u662f\u5e73\u5747\u503c\u4f5c\u4e3a\u6700\u7ec8\u5b66\u4e60\u7684\u7ed3\u679c\u3002</p> Bagging Training <p>\u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>from sklearn.ensemble import BaggingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n## with 500 trees, n_jobs = -1\n## means using all processors\n##to fit and predict in parallel.\nbag_clf = BaggingClassifier(\n    DecisionTreeClassifier(), n_estimators=500,\n    max_samples=100, bootstrap=True, n_jobs = -1\n)\n\nbag_clf.fit(X_train,y_pred)\ny_pred = bag_clf.predict(X_test)\n</code></pre> <p>\u5728<code>bagging</code>\u4e2d\uff0c\u4f1a\u51fa\u73b0\u6570\u636e\u88ab\u591a\u4e2a\u5206\u7c7b\u5668\u540c\u65f6\u62df\u5408\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u4e9b\u6570\u636e\u6ca1\u6709\u88ab\u8bad\u7ec3\u8fc7\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u6570\u636e\u5c31\u662f<code>out-of-bag(oob)</code>\uff0c\u6700\u540e\u7528\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u8868\u73b0\u3002</p> <p>\u5728<code>Scikit-Learn</code>\u4e2d\u53ef\u901a\u8fc7\u8bbe\u7f6e<code>oob_score=True</code>\u6765\u76f4\u63a5\u5b9e\u73b0\uff1a</p> <pre><code>bag_clf = BaggingClassifier(\n    DecisionTreeClassifier(), n_estimators=500,\n    max_samples=100, bootstrap=True, n_jobs = -1, oob_score = True\n)\nbag_clf.fit(X_train,y_pred)\nbga_clf.oob_score_\n###0.93066666666664\n\n### To verify by accuracy score on test set\n\nfrom sklearn.metrics import accuracy_score\ny_pred = bag_clf(X_test)\naccuracy_score(y_test,y_pred)\n\n###0.936000000000005\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#23-boosting","title":"2.3 Boosting","text":"<p><code>Boosting</code>\u662f\u6307\u5c06\u591a\u4e2a<code>weak learner</code>\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u96c6\u6210\u65b9\u5f0f\u3002\u4e0e\u524d\u9762\u51e0\u4e2a\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u662f\u6309\u7167\u987a\u5e8f\u9010\u4e2a\u8bad\u7ec3\u5206\u7c7b\u5668\uff0c\u5e76\u5728\u6bcf\u6b21\u8bad\u7ec3\u4e2d\u7ea0\u6b63\u524d\u4e00\u4e2a\u5206\u7c7b\u5668\uff0c\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u5c31\u662f<code>Adaptive Boosting(AdaBoost)</code>\u548c<code>Gradient Boosting</code>\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#231-adaboost","title":"2.3.1 AdaBoost","text":"<p><code>AdaBoost</code>\u5728\u8fdb\u5316\u5206\u7c7b\u5668\u8fc7\u7a0b\u4e2d\u662f\u7740\u91cd\u8bad\u7ec3\u6b20\u62df\u5408\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5728\u642d\u5efa\u6b64\u7c7b\u5206\u7c7b\u5668\u65f6\uff0c\u540e\u7eed\u7684\u5206\u7c7b\u5668\u5728\u8bad\u7ec3\u65f6\u4f1a\u4e0d\u65ad\u5730\u5b66\u4e60\u4ee5\u66f4\u65b0\u524d\u8005\u7684\u6743\u91cd\u4ee5\u63d0\u9ad8\u6570\u636e\u7684\u62df\u5408\u6548\u679c\u3002</p> AdaBoost sequential training <p>\u5176\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\u6240\u793a\uff1a <pre><code>from sklearn.ensemble import AdaBoostClassifier\n## 200 decision stumps with 0.5 learning rate using the\n## Stagewise Additive Modeling Multiclass Exponential loss function\nada_clf = AdaBoostClassifier(\n    DecisionTreeClassifier(max_depth =1),n_estimator = 200,\n    algorithm = \"SAMME.R\",learning_rate =0.5\n)\n\nada_clf.fit(X_train,y_train)\n</code></pre> \u53ef\u901a\u8fc7\u51cf\u5c11<code>n_estimator</code>\u6570\u91cf\u6765\u63a7\u5236<code>AdaBoost Ensemble</code>\u51fa\u73b0\u8fc7\u5ea6\u62df\u5408\u7684\u60c5\u51b5\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#232-gradient-boosting","title":"2.3.2 Gradient Boosting","text":"<p>\u548c<code>AdaBoosting</code>\u4e00\u6837\uff0c\u68af\u5ea6\u63d0\u5347(Gradient Boosting)\u4e5f\u662f\u6309\u7167\u4e00\u5b9a\u5e8f\u5217\u53bb\u5b66\u4e60\u6570\u636e\u96c6\uff0c\u4e0d\u65ad\u8fed\u4ee3\u6765\u751f\u6210\u7a33\u5065\u7684\u96c6\u6210\u6a21\u578b\u3002\u7136\u800c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u68af\u5ea6\u63d0\u5347\u662f\u62df\u5408\u65b0\u6570\u636e\u6765\u51cf\u5c11\u524d\u8005\u7684\u6b8b\u5dee\uff0c\u800c\u975e\u66f4\u65b0\u524d\u8005\u7684\u6743\u91cd\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528<code>Gradient Boosted Regression Trees(GBRT)</code>\u4e3a\u4f8b\u6765\u5b66\u4e60\u4ee3\u7801\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <pre><code>from sklearn.tree import DecisionTreeRegressor\n\ntree_reg1 = DecisionTreeRegressor(max_depth=2)\ntree_reg1.fit(X,y)\n### residual errors\ny2 = y-tree_reg1.predict(X)\n## Train the second regressor on residual errors made by the first one\ntree_reg2 = DecisionTreeRegressor(max_depth=2)\ntree_reg2.fit(X,y2)\n## Train the third regressor on the residual errors made by the second one\n y3 = y2 - tree_reg2.predict(X)\n tree_reg3 = DecisionTreeRegressor(max_depth=2)\n tree_reg3.fit(X,y3)\n## The ensemble model contains three trees, it can make predictions on a\n## new instance by adding up the predictions of all trees\n y_pred = sum(tree.predict(X_new) for tree in (tree_reg1, tree_reg2,tree_reg3))\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528<code>GradientBoostingRegressor</code>\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u4ee5\u4e0a\u7684\u6548\u679c\uff1a</p> <pre><code>from sklearn.ensemble import GradientBoostingRegressor\n\ngbrt = GradientBoostingRegressor(max_depth = 2,n_estimators = 3, learning_rate=1.0)\ngbrt.fit(X,y)\n</code></pre> <p>\u4e3a\u4e86\u627e\u5230\u6700\u4f73\u7684\u51b3\u7b56\u6811\u7684\u6570\u91cf\uff0c<code>staged_predict()</code>\u6839\u636e\u8bbe\u5b9a\u7684<code>n_estimators</code>\uff0c\u4ece0\u5230<code>n_estimators</code>\u4e0d\u65ad\u5730\u9884\u6d4b\uff0c\u4ea7\u751f\u9884\u6d4b\u503c\u548c\u8bef\u5dee\u503c\uff0c\u7136\u540e\u6839\u636e<code>n_estimator</code>\u548c\u5bf9\u5e94\u7684\u8bef\u5dee\u503c\uff0c\u627e\u5230\u6700\u4f73\u7684\u53c2\u6570\u503c\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import mean_squared_error\n\nX_train, X_val, y_train, y_val = train_test_split(X, y)\n\ngbrt = GradientBoostingRegressor(max_depth=2, n_estimators=120)\n\ngbrt.fit(X_train, y_train)\n\nerrors = [mean_squared_error(y_val, y_pred) for y_pred in gbrt.staged_predict(X_val)]\nbst_n_estimators = np.argmin(errors)\n\ngbrt_best = GradientBoostingRegressor(max_depth=2,n_estimators=bst_n_estimators)\n\ngbrt_best.fit(X_train, y_train)\n</code></pre>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#3","title":"3 \u603b\u7ed3","text":"<p>\u901a\u4fd7\u5730\u8bf4\uff0c\u96c6\u6210\u5b66\u4e60\u5c31\u662f\u5229\u7528\u7fa4\u4f17\u7684\u667a\u6167\u53bb\u5b66\u4e60\u540c\u6837\u7684\u6570\u636e\u96c6\uff0c\u4e0d\u65ad\u5730\u8fed\u4ee3\u4ee5\u8fbe\u5230\u6bd4\u5355\u4e2a\u6a21\u578b\u66f4\u597d\u7684\u6548\u679c\uff0c\u56e0\u6b64\u96c6\u6210\u5b66\u4e60\u4e00\u822c\u90fd\u6709\u5f88\u9ad8\u7684\u51c6\u786e\u6027\u3002\u4f46\u662f\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0a\u8ff0\u96c6\u6210\u5b66\u4e60\u7684\u65b9\u6cd5\u8fd8\u662f\u6709\u5404\u81ea\u7684\u5c40\u9650\u6027\u7684\uff0c\u6bd4\u5982\u4f1a\u5b58\u5728\u8fc7\u5ea6\u62df\u5408\uff0c\u5206\u7c7b\u5668\u6570\u76ee\u7684\u8bbe\u5b9a\uff0c\u5bf9\u79bb\u7fa4\u70b9\u654f\u611f\u7b49\u96be\u70b9\u3002</p> <p>\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u53ef\u4ee5\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u6b22\u8fce\u5404\u4f4d\u7559\u8a00\u8ba8\u8bba\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/","title":"Kaggle\u91cf\u5316\u7ade\u8d5bTop\u65b9\u6848","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2022-01-30\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#1","title":"1 \u5f15\u8a00","text":"<p>\u6700\u8fd1\uff0cKaggle\u4e0a\u91cf\u5316\u76f8\u5173\u7684\u7ade\u8d5b\u5c42\u51fa\u4e0d\u7a77\u3002 \u524d\u6709Jane Street\u4e3b\u529e\u7684\u9884\u6d4b\u662f\u5426\u4ea4\u6613\uff0c\u6700\u5927\u5316\u6536\u76ca\u7684\u6bd4\u8d5b\uff0c\u521a\u7ed3\u675f\u7684Optiver\u4e3b\u529e\u7684\u9884\u6d4b\u5df2\u5b9e\u73b0\u6ce2\u52a8\u7387\u7684\u6bd4\u8d5b\u3002\u5728\u8fdb\u884c\u4e2d\u7684\uff0cG-Research\u4e3b\u529e\u7684\u9884\u6d4b\u6570\u5b57\u8d27\u5e01\u6536\u76ca\u7387\u7684\u6bd4\u8d5b\u4ee5\u53ca\u56fd\u5185\u91cf\u5316\u79c1\u52df\u2014\u2014\u4e5d\u5764\u4e3b\u529e\u7684\u9884\u6d4b\u6536\u76ca\u7387\u7684\u6bd4\u8d5b\u3002 \u53ef\u80fd\u662f\u8fd9\u4e9b\u673a\u6784\u771f\u7684\u4eceKaggle\u4e2d\u83b7\u5f97\u4e86\u4e0d\u5c11insight\uff0c\u8d5a\u5230\u4e86\u771f\u91d1\u767d\u94f6\uff0c\u624d\u4f7f\u5b83\u4eec\u5982\u6b64\u70ed\u8877\u5730\u4e3e\u529e\u6b64\u7c7b\u7ade\u8d5b\u3002 \u4e0d\u540c\u4e8e\u4e4b\u524d\u89e3\u8bfb\u5728\u6bd4\u8d5b\u8fdb\u884c\u4e2d\u5f00\u6e90\u7684\u65b9\u6848\uff1a</p> <ul> <li>\u60f3\u4f53\u9a8c\u91cf\u5316\u4ea4\u6613\u5417</li> <li>\u6284\u4f5c\u4e1a\u5566</li> </ul> <p>\u672c\u6587\u5c06\u89e3\u8bfb\u5df2\u7ed3\u675f\u7684<code>Jane Street Market Prediction</code>\u4ee5\u53ca<code>Optiver Realized Volatility Prediction</code>\u6700\u7ec8\u6392\u540d\u7b2c\u4e00\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#2","title":"2 \u7ade\u8d5b\u4ecb\u7ecd","text":"<p>\u7b80\u5355\u56de\u987e\u4e0b\u4e24\u4e2a\u7ade\u8d5b\u7684\u8d5b\u9898\uff1a</p> <ul> <li>Jane Street\u8981\u6c42\u6211\u4eec\u7ed9\u51fa\u662f\u5426\u4ea4\u6613\u7684\u4fe1\u53f7\u4ee5\u6700\u5927\u5316\u6536\u76ca\u3002</li> <li>Optiver\u8981\u6c42\u6211\u4eec\u9884\u6d4b\u9ad8\u9891\u91d1\u878d\u6570\u636e(\u80a1\u7968)\u7684\u6ce2\u52a8\u7387\u3002</li> </ul> <p>\u8fd9\u4e24\u4e2a\u6bd4\u8d5b\u5728\u79c1\u699c(Private Leaderboard)\u9636\u6bb5\u90fd\u4f1a\u5b9a\u671f\u7684\u7528\u5b9e\u9645\u7684\u91d1\u878d\u6570\u636e\u66f4\u65b0\u65b9\u6848\u6392\u540d\u3002\u867d\u7136\u91d1\u878d\u5e02\u573a\u96be\u4ee5\u9884\u6d4b\uff0c\u4f46\u662f\u795e\u5947\u7684\u662f\u9ad8\u5206\u56e2\u961f\u53ef\u4ee5\u4e00\u76f4\u4fdd\u6301\u5728\u6392\u884c\u699c\u9876\u7aef\uff0c\u8ba9\u4eba\u4e0d\u5f97\u4e0d\u4fe1\u670d\u4ed6\u4eec\u65b9\u6848\u7684\u6709\u6548\u6027\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u6765\u4e00\u8d77\u770b\u770b\u4ed6\u4eec\u7684\u83b7\u80dc\u65b9\u6848\u5427\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#3","title":"3 \u65b9\u6848\u89e3\u8bfb","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#31-jane-street-top-1-solution-from-cats-trading","title":"3.1 Jane Street Top 1 solution from Cats Trading...","text":"<p>\u83b7\u80dc\u65b9\u6848\u91c7\u7528\u4e86\u4e00\u4e2aXGBoost\u548c\u4e00\u4e2a\u542b\u6709\u81ea\u7f16\u7801\u5668\u7684\u795e\u7ecf\u7f51\u7edc(Supervised Autoencoder with MLP)\u6a21\u578b\u96c6\u6210\uff0c\u5176\u4e2d\u540e\u8005\u5355\u6a21\u578b\u4e5f\u80fd\u4fdd\u6301\u7b2c\u4e00\u3002\u6a21\u578b\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a  </p> <pre><code>def create_ae_mlp(num_columns, num_labels, hidden_units, dropout_rates, ls = 1e-2, lr = 1e-3):\n\n    inp = tf.keras.layers.Input(shape = (num_columns, ))\n    x0 = tf.keras.layers.BatchNormalization()(inp)\n\n    encoder = tf.keras.layers.GaussianNoise(dropout_rates[0])(x0)\n    encoder = tf.keras.layers.Dense(hidden_units[0])(encoder)\n    encoder = tf.keras.layers.BatchNormalization()(encoder)\n    encoder = tf.keras.layers.Activation('swish')(encoder)\n\n    decoder = tf.keras.layers.Dropout(dropout_rates[1])(encoder)\n    decoder = tf.keras.layers.Dense(num_columns, name = 'decoder')(decoder)\n\n    x_ae = tf.keras.layers.Dense(hidden_units[1])(decoder)\n    x_ae = tf.keras.layers.BatchNormalization()(x_ae)\n    x_ae = tf.keras.layers.Activation('swish')(x_ae)\n    x_ae = tf.keras.layers.Dropout(dropout_rates[2])(x_ae)\n\n    out_ae = tf.keras.layers.Dense(num_labels, activation = 'sigmoid', name = 'ae_action')(x_ae)\n\n    x = tf.keras.layers.Concatenate()([x0, encoder])\n    x = tf.keras.layers.BatchNormalization()(x)\n    x = tf.keras.layers.Dropout(dropout_rates[3])(x)\n\n    for i in range(2, len(hidden_units)):\n        x = tf.keras.layers.Dense(hidden_units[i])(x)\n        x = tf.keras.layers.BatchNormalization()(x)\n        x = tf.keras.layers.Activation('swish')(x)\n        x = tf.keras.layers.Dropout(dropout_rates[i + 2])(x)\n\n    out = tf.keras.layers.Dense(num_labels, activation = 'sigmoid', name = 'action')(x)\n\n    model = tf.keras.models.Model(inputs = inp, outputs = [decoder, out_ae, out])\n    model.compile(optimizer = tf.keras.optimizers.Adam(learning_rate = lr),\n                  loss = {'decoder': tf.keras.losses.MeanSquaredError(),\n                          'ae_action': tf.keras.losses.BinaryCrossentropy(label_smoothing = ls),\n                          'action': tf.keras.losses.BinaryCrossentropy(label_smoothing = ls),\n                         },\n                  metrics = {'decoder': tf.keras.metrics.MeanAbsoluteError(name = 'MAE'),\n                             'ae_action': tf.keras.metrics.AUC(name = 'AUC'),\n                             'action': tf.keras.metrics.AUC(name = 'AUC'),\n                            },\n                 )\n\n    return model\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u6700\u7ec8\u7684\u635f\u5931\u662fDecoder\u7684MSE\u635f\u5931\u52a0\u4e0a\u81ea\u7f16\u7801\u5668BCE\u635f\u5931(\u662f\u5426\u4ea4\u6613)\u52a0\u4e0a\u539f\u59cbInput\u548cEncoder\u62fc\u63a5\u540e\u7f51\u7edc\u7684BCE\u635f\u5931(\u662f\u5426\u4ea4\u6613)\u3002\u867d\u7136\u6bd4\u8d5b\u65f6\u5df2\u7ecf\u6709\u5f00\u6e90\u7684\u65b9\u6848\u4f7f\u7528\u4e86\u81ea\u7f16\u7801\u5668\u3002\u4f46\u662fCats Trading...\u505a\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u5982\u5c06\u81ea\u7f16\u7801\u5668\u90e8\u5206\u548c\u62fc\u63a5\u540e\u7684\u7f51\u7edc\u540c\u65f6\u4f18\u5316\uff0c\u8fd9\u6837\u4e5f\u907f\u514d\u4e86\u5148\u5728\u6574\u4f53\u8bad\u7ec3\u81ea\u7f16\u7801\u5668\u518d\u4f7f\u7528CV(cross validation)\u5e26\u6765\u7684leakage(\u6570\u636e\u6cc4\u9732)\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#32-optiver-top-1-solution-from-nyanp","title":"3.2 Optiver Top 1 solution from nyanp","text":"<p>\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u7ade\u8d5b\u7ed9\u51fa\u7684\u6570\u636e\u4e3b\u8981\u662f\u4ea4\u6613\u76f8\u5173\u6570\u636e(\u4ef7\u683c\u3001\u6210\u4ea4\u91cf\u7b49)\u4ee5\u53ca\u8ba2\u5355\u7c3f\u6570\u636e(\u4e70\u4e00\u4ef7\u3001\u5356\u4e00\u4ef7\u7b49)\u8fd9\u4e24\u5927\u7c7b\u3002\u6709\u4e00\u5b9a\u9886\u57df\u76f8\u5173\u77e5\u8bc6\u7684\u9009\u624b\u53ef\u4ee5\u6784\u9020\u51fa\u4e0d\u5c11\u6709\u7528\u7684\u7279\u5f81\u3002\u5728\u5f00\u6e90\u7684Code\u6216\u662fDiscussion\u4e2d\u4e5f\u6709\u5927\u4f6c\u7ed9\u51fa\u4e86\u8fd9\u4e9b\u601d\u8def\u3002\u5927\u5bb6\u7528\u7684\u7279\u5f81\u90fd\u5dee\u4e0d\u591a\uff0c\u56e0\u6b64\u7279\u5f81\u8fd9\u5757\u5e76\u4e0d\u662f\u83b7\u80dc\u7684\u5173\u952e\u3002  </p> <p>\u5728\u6a21\u578bensemble\u65b9\u9762\uff0c\u6700\u7ec8\u7684\u6a21\u578b\u662f\u4e00\u4e2aCNN(\u6743\u91cd0.4)\uff0c\u4e00\u4e2aGBDT(\u6743\u91cd0.4)\uff0c\u4e00\u4e2aTabNet(\u6743\u91cd0.1)\u4ee5\u53ca\u4e00\u4e2aMLP(\u6743\u91cd0.1)\u7684\u96c6\u6210\u3002\u4ece\u5355\u6a21\u578b\u89d2\u5ea6\uff0c\u4e00\u4e2aGBDT\u6700\u7ec8\u5373\u53ef\u83b7\u5f97\u7b2c\u4e00\uff0c\u5176\u4ed6\u5355\u6a21\u578b\u4e5f\u90fd\u5728\u91d1\u724c\u533a\u3002\u53ef\u89c1\u4ed6\u7684\u5355\u6a21\u578b\u90fd\u8868\u73b0\u5f88\u597d\uff0c\u6700\u7ec8\u6a21\u578b\u96c6\u6210\u7684\u63d0\u5347\u5e76\u6ca1\u6709\u7279\u522b\u5927\u3002  </p> <p>\u83b7\u80dc\u7684\u5173\u952e\u662fnyanp\u91c7\u7528\u4e867\u79cd\u4e0d\u540c\u7684\u6700\u8fd1\u90bb\u7684\u65b9\u5f0f\u6765\u83b7\u5f97\u805a\u5408\u7279\u5f81\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u805a\u5408\u7684\u7ef4\u5ea6\u4e3b\u8981\u662f\u65f6\u95f4\u548c\u80a1\u7968\u4e24\u79cd\uff0c\u8861\u91cf\u7684\u6307\u6807\u6709\u4ef7\u683c\u3001\u6ce2\u52a8\u7387\u3001\u4ea4\u6613\u91cf\uff0c\u91c7\u7528\u7684\u6700\u8fd1\u90bb\u7b97\u6cd5\u662fsklearn\u4e2d\u7684NearestNeighbors\u7b97\u6cd5\uff0c\u5e76\u91c7\u7528\u4e86\u4e0d\u540c\u7684\u8861\u91cf\u8ddd\u79bb\u7684\u65b9\u5f0f\u3002 NearestNeighbors\u662f\u65e0\u76d1\u7763\u7684\u6700\u8fd1\u90bb\u7b97\u6cd5\uff0c\u5305\u62ec\u4e86brute force\u4ee5\u53ca\u901a\u8fc7KD\u6811\u7b49\u4f18\u5316\u8ddd\u79bb\u8ba1\u7b97\u7684\u4e00\u4e9b\u7b97\u6cd5\u3002  </p> <pre><code>class Neighbors:\n    def __init__(self,\n                 name: str,\n                 pivot: pd.DataFrame,\n                 p: float,\n                 metric: str = 'minkowski',\n                 metric_params: Optional[Dict] = None,\n                 exclude_self: bool = False):\n        self.name = name\n        self.exclude_self = exclude_self\n        self.p = p\n        self.metric = metric\n\n        if metric == 'random':\n            n_queries = len(pivot)\n            self.neighbors = np.random.randint(n_queries, size=(n_queries, N_NEIGHBORS_MAX))\n        else:\n            nn = NearestNeighbors(\n                n_neighbors=N_NEIGHBORS_MAX,\n                p=p,\n                metric=metric,\n                metric_params=metric_params\n            )\n            nn.fit(pivot)\n            _, self.neighbors = nn.kneighbors(pivot, return_distance=True)\n\n        self.columns = self.index = self.feature_values = self.feature_col = None\n\n    def rearrange_feature_values(self, df: pd.DataFrame, feature_col: str) -&gt; None:\n        raise NotImplementedError()\n\n    def make_nn_feature(self, n=5, agg=np.mean) -&gt; pd.DataFrame:\n        assert self.feature_values is not None, \"should call rearrange_feature_values beforehand\"\n\n        start = 1 if self.exclude_self else 0\n\n        pivot_aggs = pd.DataFrame(\n            agg(self.feature_values[start:n,:,:], axis=0),\n            columns=self.columns,\n            index=self.index\n        )\n\n        dst = pivot_aggs.unstack().reset_index()\n        dst.columns = ['stock_id', 'time_id', f'{self.feature_col}_nn{n}_{self.name}_{agg.__name__}']\n        return dst\n\n\nclass TimeIdNeighbors(Neighbors):\n    def rearrange_feature_values(self, df: pd.DataFrame, feature_col: str) -&gt; None:\n        feature_pivot = df.pivot('time_id', 'stock_id', feature_col)\n        feature_pivot = feature_pivot.fillna(feature_pivot.mean())\n        feature_pivot.head()\n\n        feature_values = np.zeros((N_NEIGHBORS_MAX, *feature_pivot.shape))\n\n        for i in range(N_NEIGHBORS_MAX):\n            feature_values[i, :, :] += feature_pivot.values[self.neighbors[:, i], :]\n\n        self.columns = list(feature_pivot.columns)\n        self.index = list(feature_pivot.index)\n        self.feature_values = feature_values\n        self.feature_col = feature_col\n\n    def __repr__(self) -&gt; str:\n        return f\"time-id NN (name={self.name}, metric={self.metric}, p={self.p})\"\n</code></pre> <p>\u5176\u5b9e\uff0c\u5728\u6bd4\u8d5b\u4e2d\u5f00\u6e90\u7684\u65b9\u6848\u4e5f\u63d0\u5230\u4e86\u901a\u8fc7Kmeans\u83b7\u5f97\u805a\u5408\u7279\u5f81\u3002nyanp\u505a\u7684\u8f83\u597d\u7684\u5730\u65b9\u662f\u91c7\u7528\u4e86\u4e0d\u540c\u65b9\u5f0f\uff0c\u4f7f\u83b7\u5f97\u7684\u7279\u5f81\u66f4\u52a0\u7a33\u5065\u3002\u52a0\u4e0a\u6b64\u7c7b\u805a\u5408\u7279\u5f81\u540e\uff0c\u65b9\u6848\u7684\u6392\u540d\u6709\u4e86\u5927\u5e45\u5ea6\u7684\u63d0\u5347\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#4","title":"4 \u5c0f\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u83b7\u80dc\u65b9\u6848\u5e76\u6ca1\u6709\u7279\u522b\u6807\u65b0\u7acb\u5f02\uff0c\u800c\u662f\u57fa\u4e8e\u5df2\u6709\u7684\u597d\u7684\u89e3\u51b3\u65b9\u6848(\u81ea\u7f16\u7801\u5668\u53ca\u805a\u7c7b\u7279\u5f81\u7b49)\u505a\u4e86\u4e00\u4e9b\u4f18\u5316\u6539\u8fdb\u3002\u6a21\u578b\u7ed3\u679c\u5728\u53d8\u5316\u83ab\u6d4b\u7684\u91d1\u878d\u5e02\u573a\u4e2d\u7ecf\u53d7\u4f4f\u4e86\u8003\u9a8c\uff0c\u503c\u5f97\u6211\u4eec\u5b66\u4e60\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/","title":"\u56e0\u679c\u63a8\u65ad\u4e4b Uplift Model","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aEcho\uff0c\u53d1\u5e03\u4e8e2022-02-03\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea68\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#1","title":"1 \u80cc\u666f\u4ecb\u7ecd","text":"<p>\u6625\u8282\u5b85\u5bb6\u671f\u95f4\uff0c\u8ddf\u5c0f\u4f19\u4f34\u7ebf\u4e0a\u4ea4\uff08ma\uff09\u6d41\uff08jiang\uff09\u7684\u65f6\u5019\u53d1\u73b0\u6211\u4eec\u88ab\u540c\u4e00\u4e2a\u6e38\u620f\u5e7f\u544a\u5237\u5c4f\u4e86\uff08\u6bd5\u7adf\u6b22\u4e50\u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u7136\u800c\u6b22\u4e50\u8c46\u7684\u83b7\u53d6\u65b9\u5f0f\u7740\u5b9e\u5355\u4e00\uff09\u3002\u5728\u88ab\u52a8\u53cd\u590d\u89c2\u770b\u4e86\u5f88\u591a\u4e2a30\u79d2\u4e4b\u540e\uff0c\u5c0f\u4f19\u4f34\u6210\u4e3a\u4e86\u5b83\u7684\u7528\u6237\u3002\u800c\u6211\u88ab\u5b83\u7684\u8425\u9500\u6210\u672c\u6253\u52a8\u4e86\uff0c\u51b3\u5b9a\u6765\u7814\u7a76\u4e00\u4e0b\u80cc\u540e\u7684\u8425\u9500\u7b56\u7565\u3002</p> <p>\u5f00\u59cb\u4e4b\u524d\u8ba9\u6211\u4eec\u590d\u4e60\u4e00\u4e0b\u7528\u6237\u7684\u56db\u4e2a\u8c61\u9650\u3002</p> <p>\u6a2a\u7eb5\u5750\u6807\u5206\u522b\u662f\u7528\u6237\u5728\u6709\u65e0\u5e72\u9884\u60c5\u51b5\u4e0b\u7684\u8d2d\u4e70\u60c5\u51b5\uff0c\u5e72\u9884\u4ee5\u53d1\u653e\u4f18\u60e0\u5238\u4e3a\u4f8b\u3002 - Persuadables\uff1a\u5e72\u9884\u654f\u611f\u578b\u7528\u6237\uff0c\u53ea\u6709\u53d1\u4f18\u60e0\u5238\u624d\u4f1a\u8d2d\u4e70\uff0c\u4e0d\u53d1\u5219\u4e0d\u4e70\u3002 - Sure things\uff1a\u81ea\u7136\u8f6c\u5316\u578b\u7528\u6237\uff0c\u4e0d\u7ba1\u53d1\u4e0d\u53d1\uff0c\u90fd\u4f1a\u8d2d\u4e70\u3002 - Lost causes\uff1a\u5fc3\u5982\u78d0\u77f3\u578b\u7528\u6237\uff0c\u4e0d\u7ba1\u53d1\u4e0d\u53d1\u90fd\u4e0d\u4e70\u3002 - Sleeping dogs\uff1a\u5357\u8f95\u5317\u8f99\u578b\u7528\u6237\uff0c\u4e0d\u53d1\u4f18\u60e0\u5238\u4f1a\u4e70\uff0c\u53d1\u4e86\u53cd\u800c\u4e0d\u4e70\u3002</p> <p>\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u53d1\u653e\u4f18\u60e0\u5238\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u6700\u7ec8\u7684\u8f6c\u5316\u7387\u3002\u5e38\u7528\u7684\u54cd\u5e94\u6a21\u578b\uff08Response Model\uff09\u4e00\u822c\u4ee5\u662f\u5426\u8d2d\u4e70\u5546\u54c1\u4e3a\u56e0\u53d8\u91cf\u8fdb\u884c\u5efa\u6a21\uff0c\u6765\u9884\u6d4b\u53d1\u653e\u4f18\u60e0\u5238\u540e\u7528\u6237\u8d2d\u4e70\u7684\u6982\u7387\u3002\u4f46\u8fd9\u4e2a\u6a21\u578b\u4fa7\u91cd\u76f8\u5173\u6027\uff0c\u53ea\u770b\u81ea\u53d8\u91cf\u662f\u5426\u548c\u56e0\u53d8\u91cf\u76f8\u5173\uff0c\u65e0\u6cd5\u533a\u5206\u7528\u6237\u7684\u8d2d\u4e70\u884c\u4e3a\u662f\u5426\u662f\u7531\u53d1\u653e\u4f18\u60e0\u5238\u5bfc\u81f4\uff0c\u8bc6\u522b\u4e0d\u51fa\u81ea\u7136\u8f6c\u6362\u4eba\u7fa4\uff0c\u56e0\u6b64\u4e5f\u65e0\u6cd5\u8bc6\u522b\u4f18\u60e0\u5238\u7684\u6548\u7528\u3002\u8003\u8651\u5230\u8425\u9500\u662f\u9700\u8981\u6210\u672c\u7684\uff0c\u5e72\u9884\u654f\u611f\u578b\u7528\u6237\u624d\u80fd\u53cd\u6620\u51fa\u8425\u9500\u6d3b\u52a8\u7684\u4f5c\u7528\uff0c\u6240\u4ee5\u66f4\u6709\u6548\u7684\u4f30\u8ba1\u662f\u9488\u5bf9\u67d0\u79cdtreatment\uff08\u5e72\u9884\uff09\u5bf9\u4e2a\u4f53\u884c\u4e3a\uff08\u5982\u8d2d\u4e70\uff09\u7684**\u56e0\u679c\u6548\u5e94**\uff08\u5982\u5e26\u6765\u7684\u589e\u91cf\uff09\u8fdb\u884c\u5efa\u6a21\uff0c\u5373\u589e\u91cf\u6a21\u578b\uff08Uplift Model\uff09\u3002\u6839\u636e\u56fe\u7075\u5956\u5f97\u4e3bJudea Pearl\u6307\u51fa\u7684\u56e0\u679c\u5173\u7cfb\u4e09\u5c42\u7ea7\uff0c\u53ef\u77e5\u8fd9\u662f\u4e00\u4e2a\u53cd\u4e8b\u5b9e\u56e0\u679c\u63a8\u65ad\u3002\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u79fb\u6b65\u300aThe Book of Why: The New Science of Cause and Effect\u300b\u8ffd\u6839\u6eaf\u6e90\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#2","title":"2 \u7406\u8bba\u4f9d\u636e","text":"<p>\u5b9a\u4e49X\u4e3a\u7528\u6237\u7279\u5f81\uff08\u5982\u6027\u522b\uff0c\u5e74\u9f84\uff0c\u6536\u5165\u7b49\uff09\uff0cT\u4ee3\u8868treatment\uff08\u6709\u65e0\u5e72\u9884\uff0c1\u4e3a\u6709\uff0c0\u4e3a\u65e0\uff09\uff0cY\u8868\u793a\u56e0\u53d8\u91cf\u7ed3\u679c\uff08\u5982\u70b9\u51fb\u7387/\u8f6c\u5316\u7387\u7b49\uff09\u3002Uplift Model\u65e8\u5728\u9884\u6d4bITE\uff08Individual Treatment Effect\uff09\uff0c\\(\\tau_{i}=Y_{i}(1)-Y_{i}(0)\\) \u53ef\u4ee5\u8868\u793a\u4e3a\u7528\u6237\u5728\u6709\u65e0\u5e72\u9884\u65f6\u7684\u8f6c\u5316\u6982\u7387\u4e4b\u5dee\uff0c\u4e5f\u5c31\u662f\u72ec\u7acb\u6837\u672c\u7684treated\u548ccontrol\u7684\u6f5c\u5728\u7ed3\u679c\u7684\u5dee\u503c\u3002Uplift Model\u7684\u76ee\u6807\u4e3a\u6700\u5927\u5316\\(\\tau_{i}\\)\u3002\u8003\u8651\u5230\u4e0d\u53ef\u80fd\u5bf9\u540c\u4e00\u4e2a\u7528\u6237\u65e2\u77e5\u9053\u53d1\u4f18\u60e0\u5238\u7684\u7ed3\u679c\u53c8\u77e5\u9053\u4e0d\u53d1\u4f18\u60e0\u5238\u7684\u7ed3\u679c\uff08\u8fd9\u5c31\u662f\u53cd\u4e8b\u5b9e\u4e4b\u5904\uff09\uff0c\u6a21\u578b\u56e0\u6b64\u5f3a\u4f9d\u8d56\u4e8e\u6761\u4ef6\u72ec\u7acb\u5047\u8bbeCIA(Conditional Independent Assumption)\uff0c\u5373\u8981\u6c42\u7528\u6237\u7279\u5f81\u548c\u5e72\u9884\u7b56\u7565\u76f8\u4e92\u72ec\u7acb\u3002</p> \\[ \\left\\{Y_{i}(1), Y_{i}(0)\\right\\} \\perp T_{i} \\mid X_{i} \\] <p>\u5b9e\u9645\u5e94\u7528\u4e2d\u53ef\u4ee5\u901a\u8fc7A/B test\u968f\u673a\u8bd5\u9a8c\u5f97\u5230\u4f7f\u7528\u5e72\u9884\u7b56\u7565\u548c\u4e0d\u5e72\u9884\u7b56\u7565\u7684\u4e24\u7ec4\u6837\u672c\uff0c\u4e14\u4e24\u7ec4\u6837\u672c\u7684\u7279\u5f81\u5206\u5e03\u4e00\u81f4\u3002\u53ea\u6709\u5728CIA\u5047\u8bbe\u4e0b\uff0c\u7528\u6240\u6709\u6837\u672c\u7684\u56e0\u679c\u6548\u5e94\u7684\u671f\u671b\u7684\u4f30\u8ba1\u503c\u6765\u4ee3\u8868\u603b\u4f53\u7528\u6237\u624d\u662f\u65e0\u504f\u7684\uff0c\u53ef\u5f97\u6761\u4ef6\u5e73\u5747\u5e72\u9884\u6548\u5e94 CATE(Conditional Average Treatment Effect)\u4e3a</p> \\[ \\tau\\left(X_{i}\\right)=E\\left[Y_{i}(1) \\mid X_{i}\\right]-E\\left[Y_{i}(0) \\mid X_{i}\\right]=E\\left[Y_{i}^{o b s} \\mid X_{i}=x, T=1\\right]-E\\left[Y_{i}^{o b s} \\mid X_{i}=x, T=0\\right] \\] <p>\u5176\u4e2d \\(Y_{i}^{o b s}=T_{i} Y_{i}(1)+\\left(1-T_{i}\\right) Y_{i}(0)\\).</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#3","title":"3 \u6a21\u578b","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#31","title":"3.1 \u6539\u9020\u6811\u6a21\u578b","text":"<p>\u4f20\u7edf\u6811\u6a21\u578b\u7684\u5206\u88c2\u89c4\u5219\u4e3a\u4fe1\u606f\u589e\u76ca\u3002\u76ee\u6807\u662f\u6700\u5927\u5316\u5206\u88c2\u524d\u540e\u7684\u4fe1\u606f\u5dee\u5f02\uff0c\u5e0c\u671b\u7279\u5f81\u5206\u88c2\u4e4b\u540e\u4e0b\u6e38\u8282\u70b9\u7684**\u6b63\u8d1f\u6837\u672c\u5206\u5e03**\u66f4\u52a0\u60ac\u6b8a\u3002\u5728Uplift model\u4e2d\u7c7b\u4f3c\uff0c\u6bcf\u4e2a\u8282\u70b9\u5185\u90fd\u89c2\u5bdf\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u7684\u56e0\u53d8\u91cf\u7684\u5206\u5e03\uff0c\u76ee\u7684\u662f\u5e0c\u671b\u7279\u5f81\u5206\u88c2\u4e4b\u540e\u53ef\u4ee5\u628auplift\u66f4\u9ad8\u548c\u66f4\u4f4e\u7684\u4eba\u7fa4\u533a\u5206\u5f00\u6765\uff0c\u4e5f\u5c31\u662f\u5206\u88c2\u540e\uff0c\u76f8\u6bd4\u4e8e\u4e0a\u6e38\u8282\u70b9\uff0c\u4e0b\u6e38\u8282\u70b9\u7684**\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u95f4\u7684\u6b63\u8d1f\u6837\u672c\u5206\u5e03\u5dee\u5f02**\u66f4\u5927\u3002\u901a\u5e38\u53ef\u4ee5\u7528\u8ddd\u79bb\u6765\u8861\u91cf\u8fd9\u79cd\u5dee\u5f02\uff0c\u5982KL\u6563\u5ea6\uff08KL divergence\uff09\u3001\u6b27\u6c0f\u8ddd\u79bb\u3001\u5361\u65b9\u8ddd\u79bb\u7b49\u7b49\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4f18\u70b9\u662f\u76f4\u63a5\u5bf9\u589e\u91cf\u5efa\u6a21\uff0c\u66f4\u7cbe\u51c6\u3002\u7f3a\u70b9\u662f\u6a21\u578b\u6539\u9020\u6210\u672c\u8f83\u9ad8\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#32","title":"3.2 \u5dee\u5206\u54cd\u5e94\u6a21\u578b","text":"<ul> <li> <p>Two model approach \u5206\u522b\u5bf9A/B test\u7684\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u72ec\u7acb\u5efa\u6a21\uff0c\u5f97\u5230\u7528\u6237\u884c\u4e3a\u6982\u7387\uff0c\u4e24\u6a21\u578b\u7684\u6982\u7387\u671f\u671b\u76f8\u51cf\u5373\u4e3auplift score\u3002\u5728\u9884\u6d4b\u65f6\u7528\u4e24\u6a21\u578b\u5206\u522b\u5bf9\u540c\u4e00\u7528\u6237\u9884\u6d4b\uff0c\u4e24\u9884\u6d4b\u503c\u76f8\u51cf\u5373\u4e3a\u9884\u6d4b\u7684\u56e0\u679c\u6548\u5e94\u3002\u4f18\u70b9\u662f\u7b80\u5355\uff0c\u4e14\u53ef\u5957\u7528\u73b0\u6709\u7684\u5206\u7c7b\u6a21\u578b\u3002\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u7167\u732b\u753b\u864e\uff0c\u672c\u8d28\u4e0a\u8fd8\u662f\u7528\u54cd\u5e94\u6a21\u578b\u6765\u6a21\u62df\u589e\u91cf\u6a21\u578b\uff0c\u5bb9\u6613\u7d2f\u8ba1\u8bef\u5dee\u3002</p> </li> <li> <p>One model approach \u5408\u5e76\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\uff0c\u5c06Treatment\u4f5c\u4e3a\u5206\u7c7b\u53d8\u91cf\u52a0\u5165\u7528\u6237\u7279\u5f81\u4e2d\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5bf9\u6240\u6709\u6837\u672c\u5efa\u4e00\u4e2a\u6a21\u578b\u3002\u4f18\u70b9\u662f\u907f\u514d\u8bef\u5dee\u7d2f\u8ba1\uff0c\u53ef\u5957\u7528\u73b0\u6709\u6a21\u578b\u3002\u7f3a\u70b9\u662f\u672c\u8d28\u4e0a\u4f9d\u7136\u662f\u54cd\u5e94\u6a21\u578b\uff0c\u800c\u4e14\uff0c\u8bad\u7ec3\u6570\u636e\u6253\u901a\u4e4b\u540e\uff0c\u5f88\u96be\u8bf4X\u548cT\u8fd8\u662f\u4e0d\u662f\u6ee1\u8db3\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u2026</p> </li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#33","title":"3.3 \u6a21\u578b\u8bc4\u4f30","text":"<p>\u8003\u8651\u5230\u589e\u91cf\u6a21\u578b\u7684\u53cd\u4e8b\u5b9e\u4e4b\u5904\uff0c\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u6d4b\u8bd5\u96c6\u7684\u6df7\u6dc6\u77e9\u9635\u6765\u8ba1\u7b97\u51c6\u786e\u7387\uff0c\u53ec\u56de\u7387\uff0cAUC\u7b49\u7b49\u6307\u6807\u3002\u4f46\u5728\u6ee1\u8db3CIA\u5047\u5b9a\u7684\u524d\u63d0\u4e0b\uff0c\u6240\u6709\u6837\u672c\u7279\u5f81\u540c\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u6837\u672c\u5206\u522b\u9884\u4f30uplift score\uff0c\u964d\u5e8f\u6392\u5217\uff0c\u5206\u522b\u622a\u53d6\u5341\u5206\u4f4d\u6570\uff08decile\uff09\uff0c\u8ba1\u7b97\u8be5\u533a\u95f4\u5185\u4e24\u7ec4\u6837\u672c\u8f6c\u5316\u7387\u7684\u5dee\u5f02\uff0c\u6765\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u7684uplift\uff0c\u4ece\u800c\u80fd\u5bf9\u9f50\u5b9e\u9a8c\u7ec4\u548c\u5bf9\u7167\u7ec4\u6570\u636e\uff0c\u5b9e\u73b0\u95f4\u63a5\u8bc4\u4f30\u3002\u5bf9uplift\u7ed8\u5236\u7d2f\u8ba1\u76f4\u65b9\u56fe\uff0c\u5219\u53ef\u5f97\u5230Gini\u66f2\u7ebf\u7b49\u6765\u8861\u91cf\u4e0d\u540cuplift model\u7684\u597d\u574f\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#3_1","title":"3 \u793a\u4f8b\u4ee3\u7801","text":"<p>Python\u6709pylift\u5305\u53ef\u4f9b\u4f7f\u7528\uff0c\u4e5f\u6709\u8be6\u5c3d\u7684\u5b98\u65b9\u6587\u6863\u53ef\u4f9b\u53c2\u8003\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u3002</p> <pre><code>import numpy as np\nimport pandas as pd\n#\u6a21\u62df\u6570\u636e\u96c6\ndf = {'X1':list(np.random.normal(10,5,100)),\n      'X2':list(np.random.normal(11,5,100)),\n      'X3':list(np.random.normal(20,5,100)),\n      'Treatment':list(np.random.randint(0,2,100)), #\u5b9e\u9a8c\u7ec41/\u5bf9\u7167\u7ec40\n      'Converted':list(np.random.randint(0,2,100))} #\u968f\u673a\u751f\u6210\u76840-1\u56e0\u53d8\u91cf\ndf = pd.DataFrame(df)\ndf.head()\n\n#\u4ee5\u4e0b\u4e3a\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801\uff0c\u9ed8\u8ba4\u4f7f\u7528XGBoost\u6a21\u578b\nfrom pylift import TransformedOutcome\nup = TransformedOutcome(df1, col_treatment='Treatment', col_outcome='Converted')\n\nup.randomized_search()\nup.fit(**up.rand_search_.best_params_)\n\nup.plot(plot_type='aqini', show_theoretical_max=True)\nprint(up.test_results_.Q_aqini)\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff0c\u6211\u968f\u673a\u751f\u6210\u7684\u6570\u636e\u96c6\u8fc7\u4e8e\u968f\u673a\u2026\u2026\u6240\u4ee5\u56fe\u770b\u8d77\u6765\u5947\u5947\u602a\u602a\u3002\u901a\u5e38\u5e94\u8be5\u659c\u7387\u4e3a\u6b63\uff0c\u5efa\u8bae\u5927\u5bb6\u641e\u70b9\u771f\u5b9e\u6570\u636e\u6765\u8bd5\u8bd5\u3002</p> <p>\u5728\u6a21\u578b\u8bc4\u4f30\u4e0apylift\u63d0\u4f9b\u4e866\u79cd\u56fe\uff0c\u7b80\u4ecb\u5982\u4e0b\u3002\u5177\u4f53\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#4","title":"4 \u603b\u7ed3","text":"<p>uplift model\u4fa7\u91cd\u56e0\u679c\u5173\u7cfb\u800c\u4e0d\u662f\u76f8\u5173\u5173\u7cfb\u3002\u56e0\u6b64\u5efa\u6a21\u548c\u8bc4\u4f30\u4e0a\u4e0e\u4f20\u7edf\u54cd\u5e94\u6a21\u578b\u7565\u6709\u4e0d\u540c\u3002\u672c\u8d28\u4e0a\u8fd8\u662f\u53cd\u4e8b\u5b9e\u56e0\u679c\u63a8\u65ad\u53ca\u6761\u4ef6\u6982\u7387\u3002\u503c\u5f97\u5f3a\u8c03\u7684\u662f\uff0cuplift model\u4f9d\u8d56\u4e8eCIA\u5047\u8bbe\uff0c\u5bf9\u6570\u636e\u8981\u6c42\u5f88\u9ad8\uff0c\u5b9e\u9645\u5e94\u7528\u65f6\u9700\u8981\u6ce8\u610f\u6837\u672c\u7684\u9009\u53d6\u3002</p> <p>\u4ee5\u4e0a\uff0c\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\u3002\u4e0b\u6b21\u89c1\u670b\u53cb\u4eec~</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/","title":"Machine Learning\u5b66\u4e60\u8d44\u6599\u6c47\u603b\uff08\u6301\u7eed\u66f4\u65b0\uff09","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVincent\uff0c\u53d1\u5e03\u4e8e2022-06-05\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea60\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#1","title":"1 \u6982\u8ff0","text":"<p>\u672c\u6587\u65e8\u5728\u6c47\u603b\u672c\u4eba\u5e73\u65f6\u5e38\u7528\u7684\u673a\u5668\u5b66\u4e60\u53c2\u8003\u8d44\u6599\uff0c\u65b9\u4fbf\u81ea\u5df1\u968f\u65f6\u67e5\u770b\u3001\u66f4\u65b0\uff0c\u540c\u65f6\u4e5f\u5206\u4eab\u7ed9\u6709\u9700\u8981\u7684\u670b\u53cb\u3002\u672c\u6587\u5c06\u4e0d\u5b9a\u671f\u66f4\u65b0\uff0c\u786e\u4fdd\u5185\u5bb9\u7684\u65f6\u6548\u6027\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#2","title":"2 \u5728\u7ebf\u8bfe\u7a0b","text":"<ul> <li>Standford CS 229: Machine Learning - Bilibili</li> <li>Stanford Seminar CS25: Transformers United - YouTube</li> <li>\u8ddf\u674e\u6c90\u5b66AI - Bilibili</li> <li>TensorFlow Developer Certificate Course - Zero to Mastery</li> <li>Intro to TensorFlow for Deep Learning - Udacity</li> <li>Machine Learning Crash Course - Google</li> <li>Machine Learning for Beginners - Microsoft</li> <li>Data Science for Beginners - Microsoft</li> <li>Kaggle courses</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#3","title":"3 \u6280\u672f\u535a\u5ba2 &amp; \u7535\u5b50\u4e66","text":"","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#31","title":"3.1 \u6280\u672f\u535a\u5ba2","text":"<ul> <li>Kaggle Winner's Blog</li> <li>Visualizing machine learning one concept at a time - Jay Alammar</li> <li>Han Xiao tech blog</li> <li>Google AI</li> <li>Open AI</li> <li>The Unofficial Google Data Science Blog</li> <li>Andrej Karpathy blog</li> <li>Surge AI blog</li> <li>Paper with Code</li> <li>Diving into data</li> <li>Cloudera Blog</li> <li>Cookiecutter Data Science</li> <li>Hugging Face Chinese Blog</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#32","title":"3.2 \u7535\u5b50\u4e66","text":"<ul> <li>TensorFlow Developer Certificate Learning E-book</li> <li>\u7b80\u5355\u7c97\u66b4 TensorFlow 2 | A Concise Handbook of TensorFlow 2</li> <li>30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2</li> <li>Machine Learning Interviews Book</li> <li>\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 - Amazon</li> <li>HuggingFace Course</li> <li>Forecasting: Principles and Practice - 3rd Edition</li> <li>Rules of Machine Learning</li> <li>Machine Learning Glossary</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#4-github","title":"4 GitHub \u8d44\u6e90","text":"<ul> <li>Data-Science-For-Beginners - Microsoft</li> <li>ML-For-Beginners - Microsoft</li> <li>Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow</li> <li>TensorFlow In Practice</li> <li>TensorFlow Examples</li> <li>Deep Learning Tuning Playbook</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#5-notion","title":"5 Notion \u7b14\u8bb0","text":"<ul> <li>TensorFlow in Practice on Coursera Notes</li> <li>MIT Introduction to Deep Learning Notes</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#6","title":"6 \u7ade\u8d5b\u7ecf\u9a8c","text":"<ul> <li>2021\u5e74Kaggle\u6240\u6709\u8d5b\u4e8bTOP\u65b9\u6848\u6c47\u603b</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#61","title":"6.1 \u63a2\u7d22\u6027\u6570\u636e\u5206\u6790","text":"<ul> <li>Exploratory Data Analysis with Pandas</li> <li>Comprehensive data exploration with Python</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#62","title":"6.2 \u7279\u5f81\u5de5\u7a0b","text":"<ul> <li>Feature Engineering Techniques</li> <li>IEEE - FE for Local test</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#63","title":"6.3 \u8868\u683c\u578b\u6570\u636e\u5efa\u6a21","text":"<ul> <li>Tabular Data Binary Classification: All Tips and Tricks from 5 Kaggle Competitions</li> <li>Data Science for tabular data: Advanced Techniques</li> <li>Tabular Classification - Tips and Tricks</li> <li>Feature Ranking RFE, Random Forest, linear models</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#64","title":"6.4 \u65f6\u95f4\u5e8f\u5217\u5efa\u6a21","text":"<ul> <li>Time Series Analysis in Python</li> <li>Deep Learning for Time Series Forecasting</li> <li>Electricity price forecasting with DNNs (+ EDA)</li> </ul>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-06-05-ML-Reference/#7","title":"7 \u603b\u7ed3","text":"<p>\u672c\u6587\u5c06\u6301\u7eed\u66f4\u65b0\uff0c\u4e5f\u6b22\u8fce\u63d0\u4ea4Pull Requests\u8865\u5145\u8d44\u6e90\u3002</p>","tags":["machine learning"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/","title":"AMEX - Default Prediction Kaggle\u7ade\u8d5b\u7cbe\u534e\u603b\u7ed3","text":"<p>Info</p> <p>\u4f5c\u8005\uff1a\u8881\u5b50\u5f39\u8d77\u98de\uff0c\u53d1\u5e03\u4e8e2022-08-30\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea67\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#1","title":"1 \u6982\u8ff0","text":"<p>\u7f8e\u56fd\u8457\u540d\u91d1\u878d\u670d\u52a1\u516c\u53f8American Express\uff08AMEX\uff09\u5728Kaggle\u4e0a\u4e3e\u529e\u4e86\u4e00\u4e2a\u6570\u636e\u79d1\u5b66\u7ade\u8d5b\uff0c\u8981\u6c42\u53c2\u8d5b\u8005\u9488\u5bf9\u4fe1\u7528\u5361\u8d26\u5355\u6570\u636e\u9884\u6d4b\u6301\u5361\u4eba\u662f\u5426\u5728\u672a\u6765\u4f1a\u903e\u671f\u3002\u5176\u4e2d\uff0c\u5404\u4e2a\u7279\u5f81\u90fd\u505a\u4e86\u8131\u654f\u5904\u7406\uff0cAMEX\u63d0\u4f9b\u4e86\u7279\u5f81\u524d\u7f00\u7684\u89e3\u91ca:</p> <pre><code>D_* = \u903e\u671f\u76f8\u5173\u7684\u53d8\u91cf\nS_* = \u6d88\u8d39\u76f8\u5173\u7684\u53d8\u91cf\nP_* = \u8fd8\u6b3e\u4fe1\u606f\nB_* = \u6b20\u6b3e\u4fe1\u606f\nR_* = \u98ce\u9669\u76f8\u5173\u7684\u53d8\u91cf\n</code></pre> <p>\u4e0b\u8868\u4e3a\u7ade\u8d5b\u7684\u6570\u636e\u793a\u610f\uff08\u503c\u4e3a\u865a\u6784\uff0c\u4ec5\u505a\u53c2\u8003\uff09</p> customer_ID S_2 P_2 ... B_2 D_41 target 000002399d6bd597023 2017-04-07 0.9366 ... 0.1243 0.2824 1 0000099d6bd597052ca 2017-03-32 0.3466 ... 0.5155 0.0087 0 <p>\u5176\u4e2d<code>'B_30', 'B_38', 'D_114', 'D_116', 'D_117', 'D_120', 'D_126', 'D_63', 'D_64', 'D_66', 'D_68'</code>\u7279\u5f81\u4e3a\u7c7b\u522b\u578b\u7684\u6570\u636e\u3002\u6bd4\u8d5b\u7684\u76ee\u6807\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2acustomer_ID\uff0c\u9884\u6d4b\u5176\u5728\u672a\u6765\u903e\u671f\uff08target = 1\uff0c\u5426\u5219target = 0\uff09\u7684\u53ef\u80fd\u6027\u3002\u5176\u4e2d\u8d1f\u6837\u672c\u5df2\u7ecf\u505a\u4e86\u6b20\u91c7\u6837\uff08\u91c7\u6837\u7387\u4e3a5%\uff09\u3002\u8fd1\u65e5\u6bd4\u8d5b\u5df2\u7ecf\u7ed3\u675f\uff0c\u672c\u6587\u5c06\u9009\u53d6\u76ee\u524d\u5df2\u7ecf\u516c\u5f00\u4ee3\u7801\u7684\u65b9\u6848\u53ca\u4e00\u4e9b\u8ba8\u8bba\u8fdb\u884c\u603b\u7ed3\uff0c\u548c\u5927\u5bb6\u4e00\u8d77\u5b66\u4e60\u793e\u533a\u4e2d\u4f18\u79c0\u7684\u601d\u8def\u548c\u5177\u4f53\u5b9e\u73b0\u3002</p>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#2","title":"2 \u51c6\u5907\u5de5\u4f5c","text":"<p>\u7531\u4e8e\u6570\u636e\u91cf\u76f8\u5bf9\u4e8eKaggle\u63d0\u4f9b\u7684\u5b9e\u9a8c\u73af\u5883\u5f88\u5927\uff0c\u56e0\u6b64\u6709\u4e00\u4e9b\u5de5\u4f5c\u662f\u56f4\u7ed5\u5185\u5b58\u7684\u4f18\u5316\u5c55\u5f00\u7684\uff0c\u6bd4\u5982AMEX data - integer dtypes - parquet format\u5c06\u6d6e\u70b9\u578b\u7684\u6570\u636e\u8f6c\u5316\u4e3a\u4e86\u6574\u578b\uff0c\u5e76\u5c06\u6570\u636e\u4ee5<code>parquet format</code>\u683c\u5f0f\u5b58\u50a8\uff0c\u6709\u6548\u5730\u51cf\u5c11\u4e86\u5185\u5b58\u7684\u5f00\u9500\u3002\u7c7b\u4f3c\u7684\u6570\u636e\u538b\u7f29\u65b9\u6848\u8fd8\u6709AMEX-Feather-Dataset\u3002</p> <pre><code>60M sample_submission.csv\n32G test_data.csv\n16G train_data.csv\n30M  train_labels.csv\n</code></pre> <p>\u540c\u65f6\uff0c\u672c\u6b21\u7ade\u8d5b\u7684\u8bc4\u4ef7\u6307\u6807\u662f\u5ba2\u5236\u5316\u7684\uff0c\u878d\u5408\u4e86<code>top 4% capture</code>\u548c<code>gini</code>\uff0c\u8bb8\u591a\u65b9\u6848\u90fd\u53c2\u8003\u4e86Amex Competition Metric (Python)\u548cMetric without DF\u7684\u4ee3\u7801\u8fdb\u884c\u6a21\u578b\u6027\u80fd\u7684\u8bc4\u4ef7\u3002</p>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#3","title":"3 \u63a2\u7d22\u6027\u6570\u636e\u5206\u6790","text":"<p>\u5728\u5bf9\u6570\u636e\u5efa\u6a21\u524d\uff0c\u900f\u5f7b\u5730\u4e86\u89e3\u5b83\u975e\u5e38\u5173\u952e\uff0c\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790\uff08Exploratory Data Analysis\uff09\u6210\u4e3a\u4e86\u8bb8\u591a\u540e\u7eed\u5de5\u4f5c\u7684\u57fa\u7840\u3002\u5728AMEX\u7684\u7ade\u8d5b\u4e2d\uff0cKagglers\u5728\u8fd9\u4e00\u9636\u6bb5\u7684\u5de5\u4f5c\u5173\u6ce8\u70b9\u4e3b\u8981\u6709\uff1a</p> <ul> <li>\u68c0\u67e5\u7f3a\u5931\u503c</li> <li>\u68c0\u67e5\u91cd\u590d\u7684\u8bb0\u5f55</li> <li>\u6807\u7b7e\u7684\u5206\u5e03</li> <li>\u6bcf\u4f4d\u5ba2\u6237\u4fe1\u7528\u5361\u8d26\u5355\u6570\u91cf\u53ca\u8d26\u5355\u65e5\u5206\u5e03</li> <li>\u7c7b\u522b\u578b\u53d8\u91cf\u53ca\u6570\u503c\u578b\u53d8\u91cf\u7684\u5206\u5e03\uff0c\u662f\u5426\u6709\u5f02\u5e38\u503c</li> <li>\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u5173\u6027</li> <li>\u4eba\u4e3a\u566a\u97f3</li> <li>\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7279\u5f81\u5206\u5e03\u5bf9\u6bd4</li> </ul> <p>\u9488\u5bf9\u8fd9\u4e9b\u5206\u6790\uff0c\u9ad8\u5206\u7b14\u8bb0\u672c\u6709\u5982\u4e0b\uff1a</p> <ul> <li>Time Series EDA</li> <li>AMEX EDA which makes sense</li> <li>American Express EDA</li> <li>Understanding NA values in AMEX competition</li> </ul>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#4","title":"4 \u7279\u5f81\u5de5\u7a0b &amp; \u5efa\u6a21","text":"","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#41","title":"4.1 \u7279\u5f81\u5de5\u7a0b","text":"<p>\u56e0\u4e3a\u6570\u636e\u4e3a\u4fe1\u7528\u5361\u8d26\u5355\uff0c\u4e00\u4e2a\u5ba2\u6237\u6709\u591a\u4e2a\u8d26\u5355\uff0c\u800c\u6700\u540e\u9884\u6d4b\u76ee\u6807\u662f\u4ee5\u5ba2\u6237\u4e3a\u5355\u4f4d\u7684\uff0c\u56e0\u6b64\u878d\u5408\u4e0d\u540c\u65f6\u95f4\u7684\u8d26\u5355\u6570\u636e\u6210\u4e3a\u4e86\u8bb8\u591a\u65b9\u6848\u7684\u5173\u6ce8\u70b9\uff0c\u5982\uff1a</p> <ul> <li>\u9488\u5bf9\u8fde\u7eed\u578b\u53d8\u91cf\uff0c\u4ee5\u5ba2\u6237\u4e3a\u5355\u4f4d\u5bf9\u6bcf\u4e2a\u7279\u5f81\u5728\u6240\u6709\u65f6\u95f4\u8303\u56f4\u5185\u6c42\u5747\u503c\u3001\u6807\u51c6\u5dee\u3001\u6700\u5c0f\u503c\u3001\u6700\u5927\u503c\u3001\u6700\u8fd1\u4e00\u6b21\u8d26\u5355\u7684\u503c\uff0c\u4ee5\u53ca\u6700\u8fd1\u4e00\u4e2a\u8d26\u5355\u548c\u6700\u5f00\u59cb\u8d26\u5355\u7279\u5f81\u7684\u5dee\u503c\u3001\u6bd4\u7387\u7b49\u3002</li> <li>\u9488\u5bf9\u7c7b\u522b\u578b\u53d8\u91cf\uff0c\u4ee5\u5ba2\u6237\u4e3a\u5355\u4f4d\u5bf9\u6bcf\u4e2a\u7279\u5f81\u5728\u6240\u6709\u65f6\u95f4\u8303\u56f4\u5185\u8ba1\u6570\uff0c\u6700\u8fd1\u4e00\u6b21\u8d26\u5355\u7684\u503c\uff0c\u6bcf\u4e2a\u7279\u5f81\u503c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u6570\u503c\u578b\u53d8\u91cf\u3002\u968f\u540e\u518d\u6839\u636e\u6a21\u578b\u7c7b\u522b\u505a\u7f16\u7801\uff08\u6216\u4e0d\u624b\u52a8\u7f16\u7801\uff0c\u8ba9\u6a21\u578b\u81ea\u5df1\u5904\u7406\uff09\u3002</li> </ul> <p>\u76f8\u5173\u7684\u9ad8\u5206\u7b14\u8bb0\u672c\u4e3b\u8981\u6709\uff1a</p> <ul> <li>Amex Agg Data How It Created</li> <li>Lag Features Are All You Need</li> <li>Amex Features: The best of both worlds</li> </ul>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#42","title":"4.2 \u6a21\u578b\u8bbe\u8ba1\u3001\u8bad\u7ec3\u53ca\u63a8\u7406","text":"<p>\u9ad8\u5206\u65b9\u6848\u57fa\u672c\u662fXGBoost\uff0cLightGBM\uff0cCatBoost\uff0cTransformer, TabNet\u4ee5\u53ca\u8fd9\u4e9b\u6a21\u578b\u7684\u96c6\u6210\uff0c\u5404\u8def\u9ad8\u624b\u4e3a\u4e86\u63d0\u9ad8\u5206\u6570\u5404\u663e\u795e\u901a\uff0c\u5728\u6b64\u9488\u5bf9\u4e00\u4e9b\u9ad8\u5206\u601d\u8def\u8fdb\u884c\u8ba8\u8bba\u3002</p> <p>Chris Deotte\u662f\u4e00\u4f4d\u5728Nvidia\u5de5\u4f5c\u7684Kaggle Grandmaster\uff0c\u4ed6\u8d21\u732e\u4e86\u8bb8\u591a\u57fa\u7840\u7684\u89e3\u51b3\u65b9\u6848\uff08\u5982XGBoost\uff0cTensorFlow GRU\uff0cTensorFlow Transformer\uff09\u4f9b\u53c2\u8003\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u4e3a\u793e\u533a\u63d0\u4f9b\u4e86\u5f88\u597d\u7684\u5de5\u4f5c\u8d77\u70b9\uff0c\u800cChris\u6700\u7ec8\u7684\u65b9\u6848\u6392\u540d15/4875\uff0c\u4f7f\u7528Transformer\u5e76\u52a0\u5165\u4e86LightGBM\u77e5\u8bc6\u84b8\u998f\uff0c\u8be6\u89c115th Place Gold \u2013 NN Transformer using LGBM Knowledge Distillation\uff1a</p> Transformer\u548cLGBM\u77e5\u8bc6\u84b8\u998f <ul> <li>\u9996\u5148\u5728\u539f\u59cb\u6570\u636e\u4e0a\u8bad\u7ec3LightGBM\uff0c\u5c06cross validation\u4e2d\u7684out of fold\uff08OOF\uff09\u9884\u6d4b\u7ed3\u679c\u5b58\u4e0b\uff0c\u540c\u65f6\u5bf9test\u96c6\u8fdb\u884c\u9884\u6d4b\u505apseudo labeling\uff0c\u540c\u65f6\u5c06<code>OOF\u548ctest preds</code>\u9001\u5165Transformer\u8fdb\u884c\u8bad\u7ec3</li> <li>Transformer\u4ece\u96f6\u5f00\u59cb\u8bad\u7ec3\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u4f46\u501f\u52a9\u77e5\u8bc6\u84b8\u998f\uff0cTransformer\u63a5\u53d7\u4e86\u6765\u81eaLightGBM\u7684\u6559\u80b2\uff0c\u540c\u65f6\u5e26\u6709\u4f2a\u6807\u7b7e\u7684\u6d4b\u8bd5\u96c6\u6570\u636e\u91cf\u5f88\u5927\uff0c\u8fd9\u4e9b\u90fd\u5e2e\u52a9\u4e86Transformer\u8fdb\u884c\u5b66\u4e60\u3002\u7531\u4e8eTransformer\u4e0eLightGBM\u7ed3\u6784\u8fe5\u5f02\uff0c\u501f\u52a9\u4e8e\u6ce8\u610f\u529b\u673a\u5236\uff0cTransformer\u5b66\u4e60\u5230\u7684\u4fe1\u606f\u4e5f\u6709\u6240\u4e0d\u540c\uff0c\u4f7f\u5f97\u6700\u540e\u5728\u6a21\u578b\u878d\u5408\u65f6\u6709\u66f4\u597d\u7684\u6548\u679c\u3002</li> <li>\u7136\u540eTransformer\u7ee7\u7eed\u57fa\u4e8e\u539f\u59cb\u7684\u8bad\u7ec3\u96c6\u518d\u6b21\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fd9\u5176\u4e2d\u878d\u5408\u4e86nested cross validation\uff0cseed blending\u7b49\u65b9\u6cd5</li> <li>\u6700\u7ec8\u4f7f\u752850%/50%\u96c6\u6210LightGBM\u548cTransformer\u7684\u8f93\u51fa</li> </ul> <p>\u79c1\u699c\u7b2c\u4e8c\u540d\u7684\u56e2\u961f\u4e5f\u5bf9\u65b9\u6848\uff082nd place solution - team JuneHomes\uff09\u8fdb\u884c\u4e86\u5206\u4eab\uff08\u5176\u79f0\u6e90\u7801\u4f1a\u7a0d\u540e\u516c\u5f00\uff09\uff0c\u5728JuneHomes\u7684\u5206\u4eab\u91cc\uff0c\u9664\u4e86\u6280\u672f\u672c\u8eab\uff0c\u8fd8\u6709\u5f88\u591a\u6700\u4f73\u5b9e\u8df5\uff1a</p> <ul> <li>\u56e2\u961f\u4e3a\u4e86\u534f\u4f5c\uff0c\u4f7f\u7528\u4e86AWS\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u540c\u65f6\u5bf9\u5404\u4e2a\u8fc7\u7a0b\u8fdb\u884c\u4e86\u7248\u672c\u7ba1\u7406\uff08\u5982\u6d41\u7a0b\u7248\u672c\uff0c\u7279\u5f81\u5de5\u7a0b\u7248\u672c\uff0c\u6a21\u578b\u7248\u672c\u7b49\uff09</li> <li>\u9996\u5148\u501f\u52a9\u793e\u533a\u4e2d\u7684\u601d\u8def\u53bb\u9664\u4e86\u4e00\u4e9b\u6570\u636e\u4e2d\u7684\u566a\u97f3\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e9b\u624b\u52a8\u7279\u5f81\u5de5\u7a0b\u7684\u5c1d\u8bd5\uff0c\u4f46\u6548\u679c\u6709\u9650\uff0c\u6700\u7ec8\u8fd8\u662f\u9009\u62e9\u4e86\u4f7f\u7528\u4e0a\u6587\u63d0\u53ca\u7684\u7edf\u8ba1\u91cf\u3002</li> <li>\u5728\u7279\u5f81\u9009\u62e9\u65f6\uff0c\u4e3b\u8981\u4f9d\u8d56\u4e8eLightGBM\u7684\u7279\u5f81\u91cd\u8981\u6027\u548cPermutation importance\u5faa\u73af\u8fed\u4ee3\u7279\u5f81\u9009\u62e9\uff0c\u5e76\u7528\u6a21\u578bCV\u7ed3\u679c\u4e2d\u7684AUC\u505a\u9a8c\u8bc1\u3002\u4f5c\u8005\u4e5f\u63d0\u5230\u5176\u56e2\u961f\u5c1d\u8bd5\u4e86\u5176\u4ed6\u7684\u7279\u5f81\u9009\u62e9\u7684\u529e\u6cd5\uff0c\u4f46\u90fd\u4e0d\u5982\u8be5\u65b9\u6cd5\u7a33\u5b9a\u3002</li> <li>\u505a\u6a21\u578b\u9009\u62e9\u65f6\uff0c\u4f5c\u8005\u7ecf\u8fc7\u5f88\u591a\u5b9e\u9a8c\u6700\u540e\u9009\u62e9\u4e86LightGBM\uff0c\u540c\u65f6\u8fd8\u9488\u5bf9\u8d26\u5355\u8f83\u5c11\u7684\u5ba2\u6237\u5355\u72ec\u5efa\u6a21\uff0c\u6700\u540e\u8fdb\u884c\u96c6\u6210\u3002\u4f5c\u8005\u7684\u5b9e\u9a8c\u8868\u660eStacking\u4f5c\u7528\u5f88\u5c0f\uff0c\u4e0d\u540c\u7684seed\u548c\u7279\u5f81\u5de5\u7a0b\u7684\u987a\u5e8f\u5bf9\u4e8e\u7ed3\u679c\u540c\u6837\u5f71\u54cd\u751a\u5fae\u3002</li> <li>\u6700\u540e\u4f5c\u8005\u5206\u4eab\u4e86\u56e2\u961f\u7684\u6700\u5f00\u59cb\u7684\u9879\u76ee\u8ba1\u5212\uff0c\u5c06\u5168\u8fc7\u7a0b\u5de5\u4f5c\u6d41\u91cc\u503c\u5f97\u6ce8\u610f\u7684\u70b9\u53ca\u76f8\u5173\u7684\u8d44\u6599\u8be6\u7ec6\u5730\u8bb0\u5f55\u4e86\u4e0b\u6765\uff0c\u6309\u7167\u8ba1\u5212\u4e95\u4e95\u6709\u6761\u5730\u6267\u884c\uff0c\u771f\u662f\u8d62\u5f97\u5b9e\u81f3\u540d\u5f52\uff01</li> </ul> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7b2c\u4e00\u540d\u7684\u65b9\u68481st solution \u57fa\u672c\u662f\u4e00\u4e2a\u5927\u7194\u7089\uff0c\u5e76\u4e14\u4f5c\u8005\u6ca1\u6709\u8be6\u7ec6\u63cf\u8ff0\uff0c\u5728\u6b64\u4e0d\u505a\u8ba8\u8bba\u3002</p>","tags":["machine learning","python"]},{"location":"Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#5","title":"5 \u603b\u7ed3","text":"<p>\u5728\u672c\u6b21\u6bd4\u8d5b\u4e2d\uff0c\u5f88\u591a\u6709\u7528\u7684\u4fe1\u606f\u548c\u6280\u5de7\u6765\u6e90\u4e8eDiscussion\u6a21\u5757\uff0c\u56e0\u6b64\u672c\u6587\u4e5f\u505a\u4e86\u4e00\u4e9b\u7cbe\u534e\u7684\u6458\u5f55\uff1a</p> <ul> <li>Speed Up XGB, CatBoost, and LGBM by 20x</li> <li>Which is the right feature importance?</li> <li>11th Place Solution (LightGBM with meta features)</li> <li>14th Place Gold Solution</li> </ul> <p>\u4e5f\u6709\u8bb8\u591akagglers\u5206\u4eab\u4e86\u5f88\u6709\u501f\u9274\u610f\u4e49\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7b14\u8bb0\u672c\uff1a</p> <ul> <li>AMEX TabNetClassifier + Feature Eng [0.791]</li> <li>KerasTuner - Find the MLP for you!</li> <li>AmEx lgbm+optuna baseline</li> <li>RAPIDS cudf Feature Engineering + XGB</li> <li>Amex LGBM Dart CV 0.7977</li> <li>AMEX Rank Ensemble</li> </ul> <p>\u5e0c\u671b\u8fd9\u6b21\u7684\u5206\u4eab\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff01</p>","tags":["machine learning","python"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/","title":"\u7528\u6700\u901a\u4fd7\u7684\u65b9\u5f0f\u804a\u804a\u533a\u5757\u94fe\u548c\u6bd4\u7279\u5e01","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-06-05\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea612\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u8fd1\u671f\u56e0\u4e3a\u865a\u62df\u8d27\u5e01\u4ef7\u683c\u5927\u8d77\u5927\u843d\uff0c\u548c\u5176\u76f8\u5173\u7684\u8bdd\u9898\uff0c\u4f8b\u5982\u6bd4\u7279\u5e01\uff0c\u533a\u5757\u94fe\u7b49\u7b49\u53c8\u4e00\u6b21\u5438\u5f15\u4e86\u5927\u5bb6\u7684\u6ce8\u610f\u3002\u4f8b\u5982\u4ece\u8c37\u6b4c\u8d8b\u52bf\uff08google trends\uff09\u91cc\u5f97\u5230\u7684\u6570\u636e\u6765\u770b\uff0c\"\u6bd4\u7279\u5e01\"\u7684\u5168\u7403\u641c\u7d22\u70ed\u5ea6\u4ece2020\u5e74\u5e95\u8d77\u548c\u5b83\u7684\u4ef7\u683c\u4e00\u6837\"\u4e00\u98de\u51b2\u5929\"\uff0c\"\u533a\u5757\u94fe\"\u76f8\u5173\u7684\u641c\u7d22\u91cf\u4e5f\u968f\u4e4b\u98d9\u5347\u3002</p> <p> </p> <p>\u770b\u6765\u4eba\u4eec\u9664\u4e86\u60f3\u4e86\u89e3\u6bd4\u7279\u5e01\u884c\u60c5\u4ee5\u5916\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u4e5f\u60f3\u5f04\u6e05\u695a\u7a76\u7adf\u4ec0\u4e48\u662f\u533a\u5757\u94fe\u3002\u867d\u7136\u6211\u5bf9\u533a\u5757\u94fe\u4e00\u76f4\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u4f46\u5766\u767d\u7684\u8bf4\uff0c\u4e4b\u524d\u5bf9\u8fd9\u4e00\u6982\u5ff5\u7684\u7406\u89e3\u53ea\u505c\u7559\u5728\"\u6211\u7684\u4e00\u4e2a\u670b\u53cb\u544a\u8bc9\u6211\u533a\u5757\u94fe\u662fXXX\"\u7684\u9636\u6bb5\uff0c\u6240\u4ee5\u603b\u89c9\u5f97\u5b83\u795e\u79d8\u53c8\u6709\u5438\u5f15\u529b\u3002\u6700\u8fd1\u56e0\u4e3a\u5b9e\u5728\u60f3\u5728\u8fd1\u671f\"\u8bd5\u6c34\"\u5e01\u5708\uff0c\u6240\u4ee5\u4e0b\u51b3\u5fc3\u8981\u597d\u597d\u5f04\u6e05\u695a\u533a\u5757\u94fe\uff0c\u865a\u62df\u8d27\u5e01\u7b49\u7b49\u6982\u5ff5\uff0c\u4e89\u53d6\u505a\u4e00\u540d\"\u6b7b\u4e5f\u7791\u76ee\"\u7684\u97ed\u83dc\u3002\u63a5\u4e0b\u6765\u6211\u5c31\u60f3\u7528\u6700\u901a\u4fd7\u7684\u8bed\u8a00\uff0c\u4ecb\u7ecd\u4e0b\u6211\u5bf9\u533a\u5757\u94fe\u7684\u7406\u89e3\uff0c\u5e76\u4e14\u5206\u4eab\u4e0b\u5982\u4f55\u5c1d\u8bd5\u7528Python\u4ee3\u7801\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u52a0\u5bc6\u8d27\u5e01\u5e94\u7528\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/#_2","title":"\u4ec0\u4e48\u662f\u533a\u5757\u94fe\uff1f","text":"<p>\u5728\u89e3\u91ca\u533a\u5757\u94fe\u4e4b\u524d\uff0c\u6211\u8fd8\u60f3\u5148\u804a\u804a\u533a\u5757\u94fe\u6700\u521d\u88ab\u53d1\u660e\u51fa\u6765\u7684\u76ee\u7684\u3002\u533a\u5757\u94fe\u6700\u65e9\u7531\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u4e8e1991\u5e74\u63d0\u51fa\uff0c\u7528\u4e8e\u7ed9\u6587\u6863\u6253\u4e0a\u65f6\u95f4\u6233\u3002\u65f6\u95f4\u6233\u7684\u8bb0\u5f55\u5bf9\u6240\u6709\u76f8\u5173\u4eba\u5458\u5f00\u653e\uff0c\u4e00\u65e6\u6587\u6863\u91cc\u7684\u5185\u5bb9\u88ab\u4fee\u6539\uff0c\u65f6\u95f4\u6233\u4e5f\u4f1a\u8ddf\u7740\u53d8\u5316\uff0c\u6709\u5173\u4eba\u5458\u5c31\u77e5\u9053\u8be5\u6587\u6863\u88ab\u4fee\u6539\u8fc7\u4e86\u3002</p> <p>2009\u5e74\uff0c\u4e00\u4e2a\uff08\u7f51\uff09\u540d\u53eb\u4e2d\u672c\u806a\u7684\u4eba\uff0c\u53d1\u5e03\u4e86\u4e00\u79cd\u70b9\u5bf9\u70b9\u7535\u5b50\u8d27\u5e01\u7cfb\u7edf\u7684\u767d\u76ae\u4e66\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u4e0d\u9700\u8981\u501f\u52a9\u7b2c\u4e09\u65b9\u673a\u6784\uff0c\u4e5f\u53ef\u4ee5\u907f\u514d\u53cc\u91cd\u652f\u4ed8\u95ee\u9898\uff08\u53cc\u91cd\u652f\u4ed8\u95ee\u9898\u4f1a\u5728\u4e0b\u9762\u7684\u6587\u7ae0\u4e2d\u4e3e\u4f8b\u4ecb\u7ecd\uff09\uff0c\u5b9e\u73b0\u4e2a\u4eba\u5bf9\u4e2a\u4eba\u4ea4\u6613\u7684\u652f\u4ed8\u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f\u540e\u4eba\u719f\u77e5\u7684\u6bd4\u7279\u5e01\u3002\u533a\u5757\u94fe\uff08chain of blocks\uff09\u7684\u6982\u5ff5\u4ece\u6b64\u8fdb\u5165\u4e86\u5927\u4f17\u7684\u89c6\u91ce\u3002\u6bd4\u7279\u5e01\u53ef\u80fd\u662f\u533a\u5757\u94fe\u5f71\u54cd\u529b\u6700\u5927\u7684\u7684\u65e9\u671f\u5e94\u7528\u4e4b\u4e00\uff0c \u533a\u5757\u94fe\u6982\u5ff5\u7684\u6210\u719f\u4e0e\u6bd4\u7279\u5e01\u7684\u5173\u7cfb\u5bc6\u4e0d\u53ef\u5206\uff0c\u6240\u4ee5\u4e0b\u6587\u4e2d\u5982\u679c\u6709\u804a\u5230\u6bd4\u8f83\u62bd\u8c61\u96be\u4ee5\u7406\u89e3\u7684\u6982\u5ff5\u65f6\uff0c\u53ef\u80fd\u4f1a\u7528\u6bd4\u7279\u5e01\u5217\u4e3e\uff0c\u5e0c\u671b\u80fd\u6709\u52a9\u4e8e\u5927\u5bb6\u7406\u89e3~</p> <p>ok\uff0c\u4e0b\u9762\u8fdb\u5165\u6b63\u9898\uff1a</p> <p>\u533a\u5757\u94fe\uff0c\u5c31\u662f\u7531\u4e00\u7ec4\u5305\u542b\u4fe1\u606f\u7684\u533a\u5757\u7ec4\u6210\u7684\u94fe\u6761\u3002\u6bcf\u4e00\u4e2a\u533a\u5757\u5927\u81f4\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u5185\u5bb9\uff1a\u8be5\u533a\u5757\u7684\u54c8\u5e0c\u503c\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u4e2a\u533a\u5757\u7684\"\u6307\u7eb9\"\uff09\uff0c\u4e0a\u4e00\u4e2a\u533a\u5757\u7684\u54c8\u5e0c\u503c\uff0c\u4ee5\u53ca\u8fd9\u4e00\u4e2a\u533a\u5757\u91cc\u6240\u5b58\u50a8\u7684\u6570\u636e\u3002\u5b66\u8fc7\u6570\u636e\u7ed3\u6784\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u611f\u89c9\u8fd9\u548c\u94fe\u8868\u975e\u5e38\u76f8\u4f3c\u2014\u2014\u6ca1\u9519\uff0c\u6211\u4e00\u5f00\u59cb\u4e5f\u662f\u8fd9\u4e48\u7406\u89e3\u7684\u3002\u4e0e\u94fe\u8868\u4e0d\u540c\u7684\u662f\uff0c\u533a\u5757\u7684\u54c8\u5e0c\u503c\u662f\u5728\u8be5\u533a\u5757**\u521b\u5efa**\u65f6\uff0c\u6839\u636e\u8fd9\u4e2a\u533a\u5757\u5b58\u50a8\u7684\u6570\u636e\u4fe1\u606f\u548c\u4e0a\u4e00\u533a\u5757\u7684\u54c8\u5e0c\u503c\u4e00\u8d77\u4f5c\u4e3a\u8f93\u5165\u751f\u6210\u7684\u3002\u8fd9\u6837\u4e00\u6765\u533a\u5757\u94fe\u548c\u94fe\u8868\u4e0d\u540c\u7684\u5730\u65b9\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff1a\u5728\u533a\u5757\u94fe\u91cc\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u4e2d\u95f4\u533a\u5757\uff08block_K\uff09\u7684\u4fe1\u606f\u53d1\u751f\u4e86\u6539\u53d8\uff0cblock_K\u5c31\u4e0d\u518d\u662f\u4e4b\u524d\u7684block_K\u4e86\uff08\u54c8\u5e0c\u503c\u6539\u53d8\u4e86\uff09\uff0c\u53c8\u56e0\u4e3a\u4e0b\u4e00\u533a\u5757\u4f1a\u5b58\u50a8\u524d\u4e00\u533a\u5757\u7684\u54c8\u5e0c\u503c\uff0c\u94fe\u4e2d\u4efb\u610f\u533a\u5757\u7684\u53d8\u5316\u90fd\u80fd\u901a\u8fc7\u7b80\u5355\u7684\u54c8\u5e0c\u503c\u6821\u9a8c\u6765\u53d1\u73b0\u3002</p> <p></p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u8981\u4fee\u6539\u5b58\u50a8\u5728\u67d0\u4e2a\u533a\u5757\u94fe\u91cc\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u786e\u4fdd\u533a\u5757\u94fe\u7684\u5b8c\u6574\u5408\u7406\uff0c\u5219\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u8be5\u533a\u5757\u540e\u9762\u6240\u6709\u533a\u5757\u7684\u54c8\u5e0c\u503c\u3002\u56e0\u6b64\u5728\u533a\u5757\u94fe\u4e2d\u4fee\u6539\u7684\u8bb0\u5f55\u90fd\u662f\"\u6709\u8ff9\u53ef\u5faa\"\u7684\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/#_3","title":"\u5171\u8bc6\u673a\u5236","text":"<p>\u76ee\u524d\u6709\u4e86\u533a\u5757\u8fd9\u79cd\u5b58\u50a8\u7ed3\u6784\uff0c\u62e5\u6709\u8fd9\u4e2a\u533a\u5757\u94fe\u7684\u672c\u4eba\u53ef\u4ee5\u77e5\u9053\u533a\u5757\u94fe\u91cc\u7684\u4fe1\u606f\u662f\u5426\u6709\u4fee\u6539\uff0c\u4f46\u662f\u5982\u4f55\u8ba9\u522b\u4eba\u4e5f\u80fd\u591f\u9a8c\u8bc1\u5462\uff1f</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff1f\u6211\u4eec\u53ef\u4ee5\u62ff\u6bd4\u7279\u5e01\u4e3e\u4e2a\u6817\u5b50\uff1a\u6bd4\u7279\u5e01\u4e2d\u533a\u5757\u5b58\u50a8\u7684\u662f\u8d26\u672c\u4fe1\u606f\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u5f88\u591a\u8f6c\u8d26\u8bb0\u5f55\uff0c\u4f8b\u5982A\u652f\u4ed8\u7ed9B 10\u5757\u94b1\uff09\u3002\u7531\u4e8e\u6ca1\u6709\u94f6\u884c\u8fd9\u79cd\u7b2c\u4e09\u65b9\u673a\u6784\uff0c\u4e5f\u6ca1\u6709\u5b9e\u4f53\u7684\u8d27\u5e01\uff08\u5982\u7eb8\u5e01\uff09\uff0c\u4e3a\u4e86\u8ba9\u8f6c\u8d26\u751f\u6548\uff0c\u65b9\u6cd5\u4e4b\u4e00\u662f\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u4f5c\u4e3a\u89c1\u8bc1\u8005\u53bb\u9a8c\u8bc1\u8fd9\u4e00\u8f6c\u8d26\uff0c\u5f53\u8fd9\u4e2a\u8f6c\u8d26\u88ab\u5927\u591a\u6570\u4eba\u9a8c\u8bc1\u771f\u5b9e\u540e\uff0cA\u5982\u679c\u60f3\u518d\u7528\u540c\u6837\u768410\u5757\u94b1\u652f\u4ed8\u7ed9C\u4ee5\u6362\u53d6\u4e1c\u897f\uff0c\u5e76\u4e14\u628a\u8fd9\u7b14\u4ea4\u6613\u5e7f\u64ad\u7ed9\u89c1\u8bc1\u8005\u4eec\uff0c\u89c1\u8bc1\u8005\u4eec\u5c31\u4f1a\u63d0\u51fa\u8fd9\u7b14\u8f6c\u8d26\u4e0d\u5408\u7406\u3002A\u7684\u8fd9\u7c7b\u884c\u4e3a\u5373\u4e3a\u53cc\u91cd\u652f\u4ed8\uff0c\u8fd9\u79cd\u901a\u8fc7\u5224\u5b9a\u8db3\u591f\u6570\u91cf\u7684\u7528\u6237\u662f\u5426\u8fbe\u6210\u5171\u8bc6\u6765\u9a8c\u8bc1\u7684\u673a\u5236\u53eb\u505a\"\u5171\u8bc6\u673a\u5236\"\u3002</p> <p>\u56de\u5230\u6700\u521d\u7684\u95ee\u9898\uff1a\u628a\u4ea4\u6613\u5e7f\u64ad\u51fa\u53bb\u4ee5\u540e\uff0c\u5982\u4f55\u8ba9\u522b\u4eba\u9a8c\u8bc1\u8f6c\u8d26\u5462\uff1f\u6bd4\u7279\u5e01\u662f\u8fd9\u6837\u5b9e\u73b0\u7684\uff1a\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u62e5\u6709\u4e00\u4efd\u5b8c\u6574\u7684\u533a\u5757\u94fe\u8d26\u672c\uff0c\u6709\u4eba\u60f3\u8981\u4fee\u6539\u8d26\u672c\u65f6\u5019\uff0c\u5176\u4ed6\u4eba\u53ea\u9700\u8981\u9a8c\u8bc1\u4fee\u6539\u7684\u8d26\u672c\u548c\u81ea\u5df1\u5df2\u6709\u7684\u8d26\u672c\u662f\u5426\u4e00\u81f4\u5c31\u53ef\u4ee5\uff0c\u53ea\u8981\u5927\u591a\u6570\u4eba\u6295\u53cd\u5bf9\u7968\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8d26\u672c\u7684\u4fee\u6539\u5c31\u4f1a\u88ab\u4f5c\u5e9f\u4e86\u3002</p> <p>\u7136\u800c\u5373\u4f7f\u8fd9\u6837\uff0c\u5982\u679c\u60f3\u8981\u7be1\u6539\u8bb0\u5f55\u7684\u653b\u51fb\u8005\u65e0\u9650\u5236\u5730\u53d1\u9001\u865a\u5047\u533a\u5757\u7ed9\u4ed6\u4eba\u9a8c\u8bc1\uff0c\u4e5f\u4f1a\u5bf9\u6574\u4f53\u7f51\u7edc\u5176\u4ed6\u5e2e\u52a9\u9a8c\u8bc1\u4eba\uff08\u8282\u70b9\uff09\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u6bd4\u7279\u5e01\u63d0\u4f9b\u7684\u65b9\u6cd5\u662f\u589e\u52a0\u533a\u5757\u521b\u5efa\u7684\u65f6\u95f4\u6210\u672c\u3001\u8ba1\u7b97\u6210\u672c\uff0c\u8fd9\u6837\u5373\u4f7f\u6709\u4e0d\u6000\u597d\u610f\u7684\u653b\u51fb\u8005\uff0c\u653b\u51fb\u8005\u7be1\u6539\u7684\u6210\u672c\u5927\u5927\u589e\u52a0\uff0c\u5bf9\u5168\u7f51\u5176\u4ed6\u7684\u5f71\u54cd\u4e5f\u5927\u5927\u51cf\u5c11\uff0c\u8fd9\u4e5f\u88ab\u79f0\u505a\u5de5\u4f5c\u91cf\u8bc1\u660e\u673a\u5236\uff08proof of Work\uff09\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/#_4","title":"\u5de5\u4f5c\u91cf\u8bc1\u660e\u673a\u5236","text":"<p>\u5728\u6bd4\u7279\u5e01\u4e2d\u5de5\u4f5c\u91cf\u8bc1\u660e\u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u54c8\u5e0c\u7b97\u6cd5\u7c7b\u4f3c\u4e8e\u5c06\u4e00\u4e2a\u7b80\u5355\u8f93\u5165\u503cx\uff0c\u901a\u8fc7\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u51fd\u6570\uff08\u6563\u5217\u51fd\u6570\uff09\uff0c\u8ba1\u7b97\u51fa\u54c8\u5e0c\u503cy\u3002\u4e5f\u5c31\u662f</p> <p>\\(f(x) = y\\)</p> <p>\u5176\u4e2d\uff0c\\(f(x)\\) \u53ef\u4ee5\u60f3\u8c61\u6210\u662f\u6bd4\\(x^2+\\sqrt{x}-\\int ^4_3 \\sum ^x_3 \\frac{1}{x^2}{\\rm d}x\\) \u590d\u6742\u7684\u591a\u7684\u516c\u5f0f\u3002\u8ba1\u7b97\u673a\u901a\u8fc7\\(x\\)\u53ef\u4ee5\u5f88\u5bb9\u6613\u89e3\u51fa\\(y\\)\uff0c\u4f46\u662f\u5982\u679c\u77e5\u9053\\(y\\)\u60f3\u8981\u5f97\u5230\\(x\\)\u51e0\u4e4e\u4e0d\u53ef\u80fd\u3002</p> <p>\u5982\u679c\u4eba\u7c7b\u7ed9\u51fa\u4e00\u4e2a\\(y\\)\uff0c\u8ba9\u8ba1\u7b97\u673a\u6839\u636e\u51fd\u6570\u53cd\u63a8x\uff0c\u8ba1\u7b97\u673a\u53ea\u80fd\u901a\u8fc7\u7528\u4e00\u4e2a\u4e2a\u4e0d\u540c\u7684\\(x\\)\u66b4\u529b\u5c1d\u8bd5\u51fa\u521a\u597d\u80fd\u8ba1\u7b97\u51fay\u7684\u7b54\u6848\u3002\u5728\u6563\u5217\u51fd\u6570\u4e2d\uff0c\u8fd9\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\u662f\u4e2a\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u4efb\u52a1\u3002\u6240\u4ee5\u4e3a\u4e86\u63a7\u5236\u96be\u5ea6\uff0c\u53ef\u4ee5\u7ed9\u8ba1\u7b97\u673a\u4e00\u4e2a\u5408\u9002\u7684\u7b54\u6848\u8303\u56f4\uff0c\u4f8b\u5982\u8981\u6c42\u8ba1\u7b97\u673a\u901a\u8fc7\u4fee\u6539\u533a\u5757\u91cc\u7684\u4e00\u4e2a\u968f\u673a\u6570nonce\uff0c\u8ba1\u7b97\u51fa\u54c8\u5e0c\u503c\uff0c\u8fd9\u4e2a\u54c8\u5e0c\u503c\u5fc5\u987b\u4ee5'0000'\u5f00\u5934\u3002\u5982\u679c\u8fd9\u4e2a\u54c8\u5e0c\u503c\u662f16\u8fdb\u5236\uff0c\u54c8\u5e0c\u503c\u91cc\u7684\u6bcf\u4e00\u4f4d\u6570\u6570\u503c\u53ef\u4ee5\u770b\u4f5c\u662f\u968f\u673a\u7684\uff0c\u90a3\u4e48\u6539\u53d8\u4e00\u6b21nonce\u80fd\u591f\u521a\u597d\u51d1\u51fa'0000'\u5f00\u5934\u7684\u6982\u7387\u5c31\u662f\\(\\frac{1}{16^4}\\),\u8ba1\u7b97\u673a\u53ef\u80fd\u8981\u7ecf\u8fc7\u5343\u4e07\u6b21\u7684\u5c1d\u8bd5\u624d\u80fd\u521a\u597d\u5f97\u5230\u7b26\u5408\u6761\u4ef6\u7684\u54c8\u5e0c\u503c\u3002\u7b54\u6848\u8303\u56f4\u8d8a\u5c0f\uff0c\u8ba1\u7b97\u673a\u9700\u8981\u5c1d\u8bd5\u7684\u6b21\u6570\u5c31\u8d8a\u591a\uff0c\u4fee\u6539\u533a\u5757\u94fe\u9700\u8981\u7684\u5f00\u9500\u5c31\u8d8a\u5927\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ee3\u7801\u5b9e\u73b0:</p> <p><pre><code># We want the hash value starts with '00000'\ndifficulty = 5\nanswer = '0'*difficulty\n\ndef compute_hash(data,nonce):\n    return sha256((data+str(nonce)).encode()).hexdigest()\n\ndata = '123'\nnonce = 1 # data to change\n\n# init hash_value    \nhash_value = compute_hash(data,nonce)\n\n# change nonce recursively until hash_value begins with the answer.\nwhile hash_value[:difficulty] != answer:\n    nonce += 1\n    hash_value = compute_hash(data,nonce)\n\n\nprint('tryout times:',nonce)\nprint('hash_value:',hash_value)\n</code></pre> \u8f93\u51fa\uff1a <pre><code>tryout times: 96064\nhash_value: 00000bdebc0a945fcd1a1b6127267393dfc299c89b031b7879d926a32921e9f6\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u8ba1\u7b97\u673a\u5c1d\u8bd5\u4e8696064\u4e2a\u4e0d\u540c\u7684nonce\u503c\u624d\u8ba9\u54c8\u5e0c\u503c\u7684\u524dN\u4f4d\u6570\u7b26\u5408\u6211\u4eec\u7684\u7b54\u6848\u3002</p> <p>\u5728\u6bd4\u7279\u5e01\u533a\u5757\u94fe\u4e2d\uff0c\u4ea7\u751f\u4e00\u4e2a\u533a\u5757\u5e73\u5747\u65f6\u95f4\u572810\u5206\u949f\u5de6\u53f3\uff0c\u540c\u65f6\u8003\u8651\u5230\u5168\u7f51\u7b97\u529b\u7684\u63d0\u5347\uff0c\u6bd4\u7279\u5e01\u4f1a\u901a\u8fc7\u63d0\u9ad8\u96be\u5ea6\uff08\u51cf\u5c0f\u7b54\u6848\u8303\u56f4\uff09\u7684\u65b9\u5f0f\uff0c\u8ba9\u76ee\u524d\u4e00\u4e2a\u533a\u5757\u4ea7\u751f\u7684\u5e73\u5747\u65f6\u95f4\u4e0d\u4f1a\u56e0\u4e3a\u7b97\u529b\u7684\u63d0\u5347\u589e\u957f\uff0c\u751a\u81f3\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u6bd4\u7279\u5e01\u7684\u4ea7\u91cf\u4f1a\u51cf\u534a\u3002</p> <p>\u6709\u4e86\u8fd9\u4e9b\u673a\u5236\u7684\u4fdd\u62a4\uff0c\u533a\u5757\u94fe\u7684\u7be1\u6539\u51e0\u4e4e\u6210\u4e86\u4e0d\u53ef\u80fd\u3002\u6b64\u5916\u5728\u8bb8\u591a\u865a\u62df\u8d27\u5e01\u4f8b\u5982\u6bd4\u7279\u5e01\u4e2d\uff0c\u8fd8\u52a0\u5165\u4e86\u533a\u5757\u5956\u52b1\u673a\u5236\uff0c\u5373\u7b2c\u4e00\u4f4d\u628a\u4e00\u4e2a\u65b0\u533a\u5757\u52a0\u5165\u5230\u4e3b\u94fe\u4e0a\u7528\u6237\u4f1a\u6536\u5230\u4e00\u5b9a\u6570\u91cf\u7684\u6bd4\u7279\u5e01\uff08\u76ee\u524d\u662f12.5\u679a/\u533a\u5757\uff09\u3002\u8fd9\u79cd\u5956\u52b1\u673a\u5236\u6709\u52a9\u4e8e\u5e2e\u52a9\u7cfb\u7edf\u5185\u7684\u8282\u70b9\u7528\u6237\u4fdd\u6301\"\u8bda\u5b9e\"\u3002\u5373\u4fbf\u771f\u7684\u6709\u4eba\u62e5\u6709\u8db3\u591f\u7684\u7b97\u529b\u7834\u574f\u865a\u62df\u8d27\u5e01\u7cfb\u7edf\uff0c\u4ed6\u624b\u4e0a\u6301\u6709\u7684\u8d27\u5e01\u4e5f\u4f1a\u56e0\u4e3a\u4fe1\u7528\u5d29\u584c\u800c\u5931\u53bb\u4ef7\u503c\uff0c\u800c\u5982\u679c\u9075\u5b88\u89c4\u5219\uff0c\u7b97\u529b\u7528\u4e8e\u8ba1\u7b97\u533a\u5757\u83b7\u5f97\u533a\u5757\u5956\u52b1\uff0c\u4ed6\u5c06\u4f1a\u83b7\u5f97\u4ef7\u503c\u66f4\u9ad8\u7684\u5956\u52b1\u6536\u76ca\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/#_5","title":"\u533a\u5757\u94fe\u6709\u90a3\u4e9b\u5e94\u7528\u65b9\u5411\uff1f","text":"<p>\u9664\u4e86\u865a\u62df\u8d27\u5e01\u4ee5\u5916\uff0c\u533a\u5757\u94fe\u6280\u672f\u5176\u5b9e\u8fd8\u6709\u5927\u91cf\u5e94\u7528\u573a\u666f\uff0c\u4e60\u5927\u5927\u4e5f\u66fe\u5f3a\u8c03\"\u533a\u5757\u94fe\u6280\u672f\u7684\u96c6\u6210\u5e94\u7528\u5728\u65b0\u7684\u6280\u672f\u9769\u65b0\u548c\u4ea7\u4e1a\u53d8\u9769\u4e2d\u8d77\u7740\u91cd\u8981\u4f5c\u7528\"\u3002\u4e00\u65b9\u9762\uff0c\u53ea\u8981\u662f\u8bb0\u5f55\u90fd\u53ef\u4ee5\u4fdd\u5b58\u5728\u533a\u5757\u94fe\u4e2d\uff0c\u4f8b\u5982\u53ef\u4ee5\u5b58\u50a8\u7a0e\u52a1\u4fe1\u606f\uff0c\u533b\u4fdd\u4fe1\u606f\uff0c\u98df\u54c1\u6eaf\u6e90\u4fe1\u606f\uff0c\u751a\u81f3\u5065\u5eb7\u7801\u7684\u80cc\u540e\u4e5f\u6709\u533a\u5757\u94fe\u6280\u672f\u7684\u52a0\u6301\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u53bb\u533a\u5757\u94fe\u548c\u7269\u8054\u7f51\u4e5f\u5341\u5206\u5951\u5408\uff0c\u7269\u8054\u7f51\u5927\u91cf\u5206\u6563\u7684\u7ec8\u7aef\u8bbe\u5907\u662f\u533a\u5757\u94fe\u7406\u60f3\u7684\u843d\u5730\u573a\u6240\uff0c\u533a\u5757\u94fe\u53c8\u5e2e\u52a9\u7269\u8054\u7f51\u5b9e\u73b0\u6570\u636e\u7684\u9ad8\u6548\u5b89\u5168\u4f20\u8f93\uff0c\u89e3\u51b3\u4fe1\u4efb\u6210\u672c\u9ad8\u7684\u75db\u70b9\u3002\u5e94\u7528\u65b9\u5411\u4f8b\u5982\u53bb\u4e2d\u5fc3\u5316\u7684\u65e0\u7ebf\u901a\u4fe1\u7f51\u7edc\uff0c\u53bb\u4e2d\u5fc3\u5316\u7684\u4e91\u670d\u52a1\u548c\u6570\u636e\u4ea4\u6362\u670d\u52a1\u7b49\u7b49\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-05-blockchain_intro/#_6","title":"\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355\u7684\u52a0\u5bc6\u8d27\u5e01","text":"<p>\u4e3a\u4e86\u66f4\u6df1\u5730\u7406\u89e3\u533a\u5757\u94fe\uff0c\u6211\u53c2\u8003\u4e86\u7f51\u4e0a\u4e00\u4e9b\u8d44\u6599\uff0c\u5c1d\u8bd5\u7528Python\u5b9e\u73b0\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u4ea4\u6613\u8bb0\u5f55\u7684\u533a\u5757\u94fe\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u548c\u7406\u89e3: <pre><code>from hashlib import sha256\nimport time\nimport json\nimport logging\nfrom typing import Dict, List\nimport rsa\n\n\n# block + chain\nclass Block():\n    def __init__(self, transactions: List, prev_hash):\n        # transaction -&gt; list of objects\n        self.transactions = transactions\n        self.prev_hash = prev_hash\n        self.nonce = 1  # use for mining\n        self.timestamp = time.time()\n        self.hash = self.compute_hash()\n\n    def __repr__(self):\n        return f\"{self.transactions}\"\n\n    def compute_hash(self):\n        block_string = \"{}{}{}{}\".format(json.dumps(\n            self.transactions), self.prev_hash, str(self.nonce), self.timestamp)\n        return sha256(block_string.encode()).hexdigest()\n\n    def validate_transaction(self):\n        for transaction in self.transactions:\n            if not transaction.is_valid():\n                return False\n            else:\n                return True\n\n    def mine(self, difficulty: int):\n        if not self.validate_transaction():\n            raise Exception('Abnormal transaction found, abort.')\n\n        answer = '0'*difficulty\n\n        while self.hash[:difficulty] != answer:\n            self.nonce += 1\n            self.hash = self.compute_hash()\n\n        print(f'Finished mining, tryout times:{self.nonce}')\n\n\nclass Transaction(Dict):\n    def __init__(self, payer, payee, amount):\n        self.update(payer=payer)\n        self.update(payee=payee)\n        self.update(amount=amount)\n        # self.timestamp = timestamp\n        self.update(hash=self.compute_hash())\n\n    def __repr__(self):\n        return json.dumps(self)\n\n    def sign(self, private_key):\n        self.signature = rsa.sign_hash(\n            hash_value=self['hash'].encode(\"utf-8\"),\n            priv_key=private_key,\n            hash_method='SHA-256')\n\n    def is_valid(self):\n        if not self['payer']:\n            return False\n\n        else:\n            # \u8fd9\u91cc\u7531\u4e8e\u6ca1\u6709\u5f15\u5165\u6570\u5b57\u7b7e\u540d\uff0c\u6682\u4e0d\u9a8c\u8bc1\n            return True\n\n    def compute_hash(self):\n        Transaction_string = \"{}{}{}\".format(\n            self['payer'], self['payee'], self['amount'])\n        return sha256(Transaction_string.encode()).hexdigest()\n\n\nclass BlockChain():\n    def __init__(self, difficulty):\n        self.chain = [self.create_genesis()]\n        self.transactionPool = []\n        self.Reward = 1\n        self.difficulty = difficulty\n\n    def set_difficulty(self, difficulty):\n        self.difficulty = difficulty\n\n    def create_genesis(self) -&gt; Block:\n        genesis_block = Block(transactions=[], prev_hash=0)\n        return genesis_block\n\n    def get_latest_block(self):\n        return self.chain[-1]\n\n    def add_block_to_chain(self, new_block: Block):\n        if new_block.hash[:self.difficulty] == '0'*self.difficulty:\n            new_block.prev_hash = self.get_latest_block().hash\n            self.chain.append(new_block)\n            print(f\" a new block added to blockchain.\")\n        else:\n            print('block validation failed.')\n\n    def validate_chain(self):\n        if len(self.chain) == 1:\n            return self.chain[0].compute_hash() == self.chain[0].hash\n\n        # validate block\n        for i in range(1, len(self.chain)):\n            block_to_validate = self.chain[i]\n\n            # validate transactions in block\n            if not block_to_validate.validate_transaction():\n                logging.error('Fraud transactions!')\n                return False\n\n            # validate data in this block hasn't been tampered\n            elif not block_to_validate.hash == block_to_validate.compute_hash():\n                logging.error(\n                    f'Data has been tampered! \\n this hash:{block_to_validate.hash} \\n computed hash:{block_to_validate.compute_hash()}')\n                return False\n\n            # validate block.prev_hash == previous block.hash\n            elif not block_to_validate.prev_hash() == self.chain[i-1].hash:\n                logging.error('Chain broke!')\n                return False\n\n            else:\n                return True\n    pass\n</code></pre></p> <p>\u770b\u4e00\u4e9b\u8f93\u51fa\uff1a <pre><code># test\n# \u521b\u5efa\u533a\u5757\u94fe\uff0c\u540c\u65f6\u751f\u6210\u521b\u59cb\u533a\u5757\nblockchain = BlockChain(4)\n\ntransaction1 = Transaction(payer='Paparazzi', payee='Elephant', amount='666')\n\ntransaction2 = Transaction(payer='Elephant', payee='Sylar', amount='100')\n\n# add one block to chain\nblock1 = Block(\n    transactions=[transaction1],\n    prev_hash=blockchain.get_latest_block().hash)\nblock1.mine(difficulty=4)\nblockchain.add_block_to_chain(block1)\nprint(f\"hash of block1: {block1.hash}\")\n\n# add another block to chain\nblock2 = Block(\n    transactions=[transaction2],\n    prev_hash=blockchain.get_latest_block().hash)\nblock2.mine(difficulty=5)\nblockchain.add_block_to_chain(block2)\nprint(f\"hash of block2: {block1.hash}\")\n\n# Output:\nFinished mining, tryout times:222523\n a new block added to blockchain.\nhash of block1: 0000d7f7e1018f498431eefa24faf7ab6b8ec9c42ecf89d1039939f8f74c15d5\nFinished mining, tryout times:1321891\n a new block added to blockchain.\nhash of block2: 0000018c800c81b750dae4785652efc679929177c6fed9b0d268627f038dde1c\n</code></pre></p> <p><pre><code>print(f\"previous hash of last block:{blockchain.chain[-1].prev_hash}\")\nprint(f\"hash of second last block:{blockchain.chain[-2].hash}\")\n\n# Output:\nprevious hash of last block:0000c245596fd46a0a8b80e8c2f84efb7f19b077a1a61881260f95dc6098d57a\nhash of second last block:0000c245596fd46a0a8b80e8c2f84efb7f19b077a1a61881260f95dc6098d57a\n</code></pre> \u53c2\u8003\u8d44\u6599\uff1a</p> <p>Bitcoin: A Peer-to-Peer Electronic Cash System; 2009; Satoshi Nakamoto; https://bitcoin.org/bitcoin.pdf</p> <p>\u79d1\u666e\u77ed\u7247\uff1a\u533a\u5757\u94fe\u5982\u4f55\u5de5\u4f5c\uff1f  bilibili.com</p> <p>\u7a0b\u5e8f\u5458\u624b\u628a\u624b\u5e26\u4f60\u642d\u5efa\u4e00\u4e2a\u7b80\u5355\u6613\u61c2\u7684\u533a\u5757\u94fe bilibili.com</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/","title":"\u5229\u7528\u663e\u5361\u5b9e\u73b0\u6bcf\u5929\u4e00\u676fmanner\u81ea\u7531\uff0c\u4f60\u4e5f\u53ef\u4ee5\uff01","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aJeremy\uff0c\u53d1\u5e03\u4e8e2021-06-21\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea610\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p> <p>\u4e0a\u4e00\u671f\u533a\u5757\u94fe\u4ecb\u7ecd\u6587\u7ae0\u53d1\u5e03\u540e\uff0c\u4e0d\u5c11\u5c0f\u4f19\u4f34\u8868\u793a\u5bf9\u6316\u77ff\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u521a\u597d\u524d\u6bb5\u65f6\u95f4\u6211\u4e5f\u8bd5\u8fc7\u6316\u77ff\u7a76\u7adf\u80fd\u4ea7\u751f\u591a\u5c11\u6536\u76ca\u3002\u4e3a\u4e86\u6ee1\u8db3\u5927\u5bb6\u7684\u597d\u5947\u5fc3\uff0c\u4eca\u5929\u6211\u60f3\u6316\u4ee5\u592a\u5e01\u4e3a\u4f8b\uff0c\u624b\u628a\u624b\u6559\u5927\u5bb6\u5982\u4f55\u5229\u7528\u624b\u8fb9\u7684\u663e\u5361\u6316\u77ff\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_1","title":"\u6316\u77ff\u771f\u7684\u6709\u6536\u76ca\u5417\uff1f","text":"<p>\u60f3\u5fc5\u8fd9\u662f\u5927\u5bb6\u6700\u5173\u5fc3\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5148\u8bf4\u7ed3\u8bba\uff1a\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u539f\u4ef7\u4e70\u5230\u7684\u4e0d\u9519\u7684\u663e\u5361(\u82f1\u4f1f\u8fbe16\u7cfb\u4ee5\u4e0a)\uff0c\u662f\u6709\u4e00\u5b9a\u6536\u76ca\u7684\u3002\u6309\u7167\u76ee\u524d\u7684\u4ee5\u592a\u5e01\u4ef7\u683c\uff082000-3000\u7f8e\u5143/\u4e2a\uff09\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u4e0d\u8ba9\u663e\u5361\u5728\u8fc7\u9ad8\u6e29\u5ea6\u4e0b\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u8bdd\uff0c\u53bb\u6389\u7535\u8d39\u540e\u5927\u81f4\u80fd\u57286\u4e2a\u6708\u5de6\u53f3\u6536\u56de\u663e\u5361\u7684\u6210\u672c\u3002\u867d\u7136\u73b0\u5728\u663e\u5361\u4ef7\u683c\u8fd8\u662f\u8fdc\u9ad8\u4e8e\u5e02\u573a\u4ef7\uff0c\u4f46\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u8003\u8651\"\u6253\u4e0d\u8fc7\u5c31\u52a0\u5165\"\uff0c\u5728\u51e0\u4e2a\u6708\u540e\u51ed\u5b9e\u529b\u5347\u7ea7\u81ea\u5df1\u7684\u663e\u5361\u5462\uff1f</p> <p>\u5982\u679c\u4f60\u5fc3\u52a8\u6216\u8005\u611f\u5174\u8da3\u4e86\uff0c\u90a3\u4e48\u8bf7\u7ee7\u7eed\u5f80\u4e0b\u9605\u8bfb\u5427\uff1a</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#1","title":"1. \u6750\u6599\u51c6\u5907\uff1a","text":"<ol> <li>\u663e\u5361</li> </ol> <p>\u5bf9\u4e8e\u666e\u901a\u7528\u6237\u800c\u8a00\uff0c\u60f3\u8981\u6316\u77ff\u4ea7\u751f\u4e00\u5b9a\u6536\u76ca\u7684\u524d\u63d0\u662f\u6709\u4e00\u5757\u6027\u80fd\u8f83\u597d\u7684\u663e\u5361\u3002\u76ee\u524d\u4e3b\u6d41\u7684\u865a\u62df\u8d27\u5e01\u4e3b\u8981\u662f\u901a\u8fc7\u8ba1\u7b97\u533a\u5757\u7684\u54c8\u5e0c\u503c\u4ea7\u751f\u7684\uff0c\u7b2c\u4e00\u4e2a\u8ba1\u7b97\u51fa\u533a\u5757\u54c8\u5e0c\u503c\u7684\u4eba\u5c31\u4f1a\u83b7\u5f97\u4e00\u5b9a\u7684\u865a\u62df\u8d27\u5e01\u5956\u52b1\u3002\u5728\u524d\u4e00\u7bc7\u533a\u5757\u94fe\u4ecb\u7ecd\u6587\u7ae0\u4e2d\u5df2\u7ecf\u63d0\u5230\uff0c\u8ba1\u7b97\u54c8\u5e0c\u503c\u7684\u8fc7\u7a0b\u9700\u8981\u6d88\u8017\u5927\u91cf\u7b97\u529b\u3002\u5bf9\u4e8e\u666e\u901a\u4eba\u800c\u8a00\uff0c\u663e\u5361\u662f\u6bd4\u8f83\u6613\u5f97\u7684\u80fd\u83b7\u5f97\u5927\u91cf\u7b97\u529b\u7684\u786c\u4ef6\u4ea7\u54c1\u3002\u663e\u5361\u7b97\u529b\u548c\u6316\u77ff\u53ef\u4ee5\u83b7\u5f97\u7684\u6536\u76ca\u6210\u6b63\u6bd4\u3002</p> <ol> <li>\u6316\u77ff\u7a0b\u5e8f</li> </ol> <p>\u5e02\u9762\u4e0a\u5927\u81f4\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u6316\u77ff\u7a0b\u5e8f\uff0c\u4e00\u79cd\u662f\u5e26UI\u754c\u9762\u7684\u5ba2\u6237\u7aef\u8f6f\u4ef6\uff0c\u914d\u7f6e\u8d77\u6765\u76f8\u5bf9\u5bb9\u6613\uff0c\u4f46\u662f\u4e00\u822c\u4f1a\u63d0\u53d6\u8f83\u9ad8\u7684\u62bd\u6210\uff0c\u6240\u4ee5\u6536\u76ca\u4f1a\u7a0d\u4f4e\u4e00\u4e9b\u3002    \u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u4e0b\u8f7d\u6316\u77ff\u8f6f\u4ef6\u5185\u6838\uff0c\u4ee3\u7801\u66f4\u900f\u660e\uff0c\u4e14\u62bd\u6210\u6bd4\u4f8b\u5f88\u4f4e\u3002\u4e0b\u8f7d\u8fc7\u540e\u9700\u8981\u6309\u7167\u63a5\u4e0b\u6765\u7684\u6559\u7a0b\u7a0d\u5fae\u4fee\u6539\u4e0b\u4ee3\u7801\u914d\u7f6e\uff0c\u6700\u540e\u901a\u8fc7\u547d\u4ee4\u884c\u8fd0\u884c\u7a0b\u5e8f\u3002\u6211\u6bd4\u8f83\u63a8\u8350\u8fd9\u4e00\u79cd\u65b9\u6cd5\uff0c\u6709\u4e00\u70b9github\u4f7f\u7528\u548c\u7f16\u7a0b/linux\u57fa\u7840\u7684\u540c\u5b66\u5f88\u5bb9\u6613\u4e0a\u624b\uff0c\u5c0f\u767d\u4e5f\u53ea\u9700\u8981\u5b8c\u5168\u6309\u7167\u6b65\u9aa4\u64cd\u4f5c\u5c31\u6ca1\u6709\u95ee\u9898\uff0c\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u540e\u5f88geeky\uff0c\u5728\u5b66\u4e60\u63a2\u7d22\u7684\u8fc7\u7a0b\u4e2d\u76f8\u4fe1\u4f60\u4e5f\u4f1a\u5f88\u6709\u6210\u5c31\u611f :)\u3002</p> <ol> <li>\u77ff\u6c60</li> </ol> <p>\u6316\u77ff\u7a0b\u5e8f\u7684\u4e00\u7aef\u8fde\u63a5\u7684\u662f\u6211\u4eec\u7684\u663e\u5361\uff0c\u53e6\u4e00\u7aef\u5c31\u662f\u8d1f\u8d23\u628a\u8bb8\u591a\u96f6\u6563\u7b97\u529b\u5408\u5e76\u8d77\u6765\u8fd0\u4f5c\u7684\u5e73\u53f0\uff1a\u77ff\u6c60\uff08Mining Pool\uff09\u3002\u8fd9\u76f8\u5f53\u4e8e\u6211\u4eec\u7684\u663e\u5361\u5728\u548c\u4e16\u754c\u4e0a\u5176\u4ed6\u7684\u77ff\u5de5\u4e00\u8d77\"\u7ec4\u961f\u6316\u77ff\"\uff0c\u6316\u5230\u865a\u62df\u8d27\u5e01\u540e\u518d\u6839\u636e\u6bcf\u4e2a\u4eba\u8d21\u732e\u7684\u7b97\u529b\u6bd4\u4f8b\u6765\u5206\u914d\u5956\u52b1\u3002    \u4e0d\u540c\u77ff\u6c60\u6316\u77ff\u6536\u76ca\u7684\u533a\u522b\u4e0d\u5927\uff0c\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\u8f83\u8fd1\uff0c\u901a\u4fe1\u826f\u597d\u7684\u77ff\u6c60\u5373\u53ef\u3002</p> <ol> <li>\u8d26\u6237</li> </ol> <p>\u5728\u77ff\u6c60\u6316\u77ff\u4ea7\u751f\u6536\u76ca\u540e\uff0c\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u5730\u5740\u597d\u8ba9\u77ff\u6c60\u5c06\"\u5de5\u8d44\"\u53d1\u5230\u6211\u4eec\u7684\u94b1\u5305\u91cc\u3002\u4e00\u4e2a\u94b1\u5305\u6709\u72ec\u7acb\u7684\u5bc6\u94a5\uff0c\u516c\u94a5\uff0c\u548c\u5730\u5740\uff0c\u5927\u81f4\u5206\u4e3a\u70ed\u94b1\u5305\u548c\u51b7\u94b1\u5305\u4e24\u79cd\uff0c\u70ed\u94b1\u5305\u662f\u7ebf\u4e0a\u94b1\u5305\uff0c\u53ef\u4ee5\u7406\u89e3\u6210\u5728\u4ea4\u6613\u6240\uff08\u706b\u5e01\uff0c\u5e01\u5b89\uff09\u4e0a\u7684\u94b1\u5305\uff0c\u7531\u4ea4\u6613\u6240\u5e2e\u5fd9\u7ba1\u7406\uff0c\u4e5f\u53ef\u4ee5\u6bd4\u8f83\u5feb\u901f\u5730\u8fdb\u884c\u4ea4\u6613\uff1b\u51b7\u94b1\u5305\u662f\u7ebf\u4e0b\u94b1\u5305\uff0c\u81ea\u5df1\u4fdd\u7ba1\u5bc6\u94a5\uff0c\u76f8\u5bf9\u800c\u8a00\u66f4\u52a0\u5b89\u5168\uff0c\u66f4\u52a0\"\u53bb\u4e2d\u5fc3\u5316\"\u3002\u4f46\u7531\u4e8e\u6211\u662f\u4e2a\u4e22\u4e09\u843d\u56db\u7684\u4eba\uff0c\u975e\u5e38\u62c5\u5fc3\u81ea\u5df1\u7684\u5bc6\u94a5\u5728\u67d0\u4e00\u5929\u6253\u5f00\u94b1\u5305\u7684\u65f6\u5019\u53d1\u73b0\u4e22\u5931\u4e86\uff0c\u6240\u4ee5\u8fd8\u662f\u9009\u62e9\u4e86\u76f4\u63a5\u6253\u5230\u5e01\u5b89(Binance)\u4ea4\u6613\u6240\u4e0a\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#2","title":"2. \u6b65\u9aa4\u6559\u5b66","text":"","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_2","title":"\u7b2c\u4e00\u6b65\uff1a\u4e0b\u8f7d\u6316\u77ff\u7a0b\u5e8f","text":"<p>\u6211\u9009\u62e9\u7684\u6316\u77ff\u7a0b\u5e8f\u662fpheonix miner\uff0c\u8be5\u8f6f\u4ef6\u53f7\u79f0\u6709\u5168\u7f51\u6700\u4f4e\u7684\u62bd\u6210\u6bd4\u4f8b(0.65%)\uff0c\u4eb2\u6d4b\u8fd0\u884c\u4e5f\u8f83\u4e3a\u7a33\u5b9a\u3002 \u76ee\u524d\u6709\u4e09\u79cd\u4e0b\u8f7d\u65b9\u5f0f\uff0c\u5982\u679c\u4f60\u80fd\u591f\u79d1\u5b66\u4e0a\u7f51\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u524d\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <p>\u65b9\u5f0f1\uff1a\u5b98\u7f51\u4e0b\u8f7dhttp://phoenixminer.org/ \uff0c\u5b98\u7f51\u4e0a\u80fd\u70b9\u7684\u57fa\u672c\u4e0a\u90fd\u662fdownload\u6309\u94ae\uff0c\u53ea\u8981\u786e\u4fdd\u4e0b\u8f7d\u7684\u662f\u5bf9\u5e94\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u7248\u672c\u5373\u53ef\u3002</p> Pheonix Miner \u5b98\u7f51\u4e3b\u9875 <p>\u65b9\u5f0f2\uff1a\u5728bitcointalk\u8bba\u575b\u4e0a\u8fdb\u884c\u4e0b\u8f7d\uff0c\u5730\u5740\u4e3a\uff1ahttps://bitcointalk.org/index.php?topic=2647654.msg26969355#msg26969355</p> \u662f\u7684...\u8fd9\u662f\u4e00\u4e2a\u6b63\u7ecf\u7684\u8bba\u575b <p>\u70b9\u51fb\u7ea2\u6846\u4e2d\u7684download\u540e\uff0c\u6839\u636e\u8ba1\u7b97\u673a\u7cfb\u7edf\u9009\u62e9\u5bf9\u5e94\u7684\u7248\u672c\u4e0b\u8f7d\u5373\u53ef\u3002</p> Windows \u7528\u6237\u4e0b\u8f7d\u7ea2\u6846\u5185\u7684\u6587\u4ef6\u5373\u53ef <p>\u65b9\u5f0f3\uff1a\u5982\u679c\u4ee5\u4e0a\u4e24\u79cd\u65b9\u5f0f\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u90fd\u4e0d\u9002\u7528\uff0c\u6211\u4eec\u4e5f\u63d0\u4f9b\u7f51\u76d8\u4e0b\u8f7d\u65b9\u5f0f\uff1a</p> <p>https://www.aliyundrive.com/s/aU87cY9UHpu</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_3","title":"\u7b2c\u4e8c\u6b65\uff1a\u83b7\u53d6\u6bd4\u7279\u5e01\u94b1\u5305\u5730\u5740","text":"<p>\u7531\u4e8e\u6211\u662f\u4f7f\u7528\u4ea4\u6613\u6240\u63d0\u4f9b\u7684\u94b1\u5305\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8bb0\u4f4f\u5bc6\u94a5\uff0c\u52a9\u8bb0\u8bcd\u7b49\u7b49\u3002\u6211\u4eec\u9700\u8981\u7684\u53ea\u662f\u4ea4\u6613\u6240\u63d0\u4f9b\u7684\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740\u3002\u4ee5\u5e01\u5b89\u4ea4\u6613\u6240( https://www.binancezh.co/zh-CN )\u4e3a\u4f8b\uff1a \u9996\u5148\u5728\u4ea4\u6613\u6240\u6ce8\u518c\u8d26\u6237\uff1a</p> \u5e01\u5b89\u5b98\u7f51 <p>\u6ce8\u518c\u6210\u529f\u540e\u5728\u94b1\u5305\u4e2d\u70b9\u51fb\u94b1\u5305\u603b\u89c8 - \u5145\u503c - \u6570\u5b57\u8d27\u5e01\u5145\u503c\uff0c\u9009\u62e9\u5e01\u79cd\u4e3a**\u4ee5\u592a\u574a**\uff0c\u9009\u597d\u540e\u590d\u5236\u53f3\u65b9\u5730\u5740\uff0c\u8be5\u5730\u5740\u5373\u4e3a\u5e01\u5b89\u5e2e\u4f60\u4fdd\u7ba1\u7684\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740\uff1a</p> \u94b1\u5305\u603b\u89c8\u754c\u9762 ETH\u94b1\u5305\u754c\u9762","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_4","title":"\u7b2c\u4e09\u6b65\uff1a\u9009\u62e9\u77ff\u6c60","text":"<p>\u8fd9\u91cc\u63a8\u8350\u5728https://ethermine.org/ \u91cc\u9009\u62e9\u4ee5\u592a\u5e01\u77ff\u6c60\u3002 \u52a0\u8f7d\u7f51\u5740\u540e\u9996\u5148\u70b9\u51fb\"Start Mining\"\uff0c\u627e\u5230\u77ff\u6c60\u670d\u52a1\u5668\u7684\u914d\u7f6e\u53c2\u6570\uff1a</p> Ethermine\u9996\u9875 \u77ff\u6c60\u670d\u52a1\u5668\u53c2\u6570","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_5","title":"\u7b2c\u56db\u6b65\uff1a\u914d\u7f6e\u6316\u77ff\u811a\u672c","text":"<p>\u56de\u5230\u7b2c\u4e00\u6b65\u4e0b\u8f7d\u7684Pheonix Miner \u6587\u4ef6\u5939\u4e0b\uff0c\u4f1a\u53d1\u73b0\u6709\u4e00\u5806.bat\u540e\u7f00\u7684\u811a\u672c\uff0c\u8fd9\u4e9b\u662f\u9884\u5148\u914d\u7f6e\u597d\u7684\u94fe\u63a5\u4e0d\u540c\u77ff\u6c60\u7684\u811a\u672c\u4ee3\u7801\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u5199\u4e00\u4e2a\u65b0\u7684\u811a\u672c\u5373\u53ef\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684txt\u6587\u4ef6\uff0c\u547d\u540d\u53ef\u4ee5\u4e3a\uff1a0_start_miner</p> \u65b0\u5efa\u4e00\u4e2abat\u6587\u4ef6 <p>\u6253\u5f00\u540e\u590d\u5236\u4e0b\u5217\u4ee3\u7801\uff1a</p> <pre><code>REM\nREM Example bat file for starting PhoenixMiner.exe to mine ETH\nREM\n\nREM setx GPU_FORCE_64BIT_PTR 0\nREM setx GPU_MAX_HEAP_SIZE 100\nREM setx GPU_USE_SYNC_OBJECTS 1\nREM setx GPU_MAX_ALLOC_PERCENT 100\nREM setx GPU_SINGLE_ALLOC_PERCENT 100\n\nREM IMPORTANT: Replace the ETH address with your own ETH wallet address in the -wal option (Rig001 is the name of the rig)\nPhoenixMiner.exe -pool ssl://asia1.ethermine.org:5555 -pool2 ssl://us1.ethermine.org:5555 -wal \u4f60\u7684\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740.Rig001 -cdmrs -ttli 66\npause\n</code></pre> <p>\u5176\u4e2d\u6700\u5173\u952e\u7684\u662f\u6700\u540e\u4e00\u884c\u547d\u4ee4\u884c\uff0c\u4e00\u5b9a\u8bb0\u5f97\u628a\u4e4b\u524d\u590d\u5236\u7684\u7684\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740\u62f7\u8d1d\u5230\u547d\u4ee4\u884c\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u5426\u5219\u4f60\u7684\u8d26\u6237\u4e0a\u6536\u4e0d\u5230\u77ff\u6c60\u7ed9\u4f60\u53d1\u653e\u7684\"\u5de5\u8d44\"\u3002\u6b64\u5916-pool\u4ee5\u540e\u914d\u7f6e\u7684\u662f\u77ff\u6c60\u7684\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3\uff0c\u8fd9\u91cc\u5e94\u8be5\u548c\u6211\u4eec\u5728\u7b2c\u4e09\u6b65\u77ff\u6c60\u7f51\u7ad9\u4e2d\u770b\u5230\u7684\u670d\u52a1\u5668\u53c2\u6570\u4e00\u81f4\uff0c-cdmrs -ttli 66\u8868\u793a\u663e\u5361\u6e29\u5ea6\u5230\u8fbe66\u6444\u6c0f\u5ea6\u662f\u4f1a\u9002\u5f53\u964d\u4f4e\u7b97\u529b\u4ee5\u4fdd\u62a4\u4e0b\u663e\u5361\uff0c\u8fd9\u91cc\u5efa\u8bae\u914d\u7f6e\u6e29\u5ea6\u4e0a\u9650\uff0c\u6bd5\u7adf\u9002\u5f53\u8ba9\u6211\u4eec\u7684\u663e\u5361\u77ff\u5de5\u4f11\u606f\uff0c\u4fdd\u6301\u826f\u597d\u7684 work-life-balance \u624d\u80fd\u8ba9\u4ed6\u5de5\u4f5c\u66f4\u4e45:)\u3002</p> <p>\u66f4\u591a\u7684\u547d\u4ee4\u884c\u914d\u7f6e\u53c2\u6570\u53ef\u4ee5\u5728docs - arguments\u91cc\u9762\u627e\u5230\uff0c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u7814\u7a76\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u6709\u8da3\u7684\u914d\u7f6e\u65b9\u5f0f\u4e0d\u59a8\u5728\u8bc4\u8bba\u533a\u5206\u4eab\u4e00\u4e0b\u3002</p> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5c06txt\u6587\u4ef6\u540e\u7f00\u6539\u6210.bat,\u53cc\u51fb\u8fd0\u884c\u540e\u547d\u4ee4\u884c\u7684log\u5927\u81f4\u4f1a\u5982\u4e0b\u6240\u793a\uff1a</p> \u8fd0\u884clog","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#_6","title":"\u7b2c\u4e94\u6b65\uff1a\u67e5\u770b\u8fd0\u884c\u72b6\u51b5","text":"<p>\u56de\u5230 https://ethermine.org/ \u7f51\u7ad9\uff0c\u8fd9\u65f6\u5728miner address\u4e2d\u8f93\u5165\u4f60\u521a\u521a\u914d\u7f6e\u5728\u547d\u4ee4\u884c\u91cc\u7684\u4ee5\u592a\u574a\u94b1\u5305\u5730\u5740\uff0c\u5c31\u53ef\u4ee5\u5b9e\u65f6\u76d1\u6d4b\u5230\u4f60\u7684\u663e\u5361\u4ea7\u51fa\u60c5\u51b5\u4e86\uff1a</p> \u8f9b\u52e4\u5de5\u4f5c\u7684\u663e\u5361\u77ff\u5de5\u72b6\u6001 <p>\u6700\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u83b7\u5f97\u7684\u6536\u76ca\u4e0d\u662f\u7acb\u5373\u4ece\u77ff\u6c60\u8fdb\u5165\u4f60\u7684\u94b1\u5305\u8d26\u6237\u4e2d\uff0c\u800c\u662f\u5148\u6682\u5b58\u5728\u77ff\u6c60\u91cc\uff0c\u5728unpaid balance\u5904\u663e\u793a\u51fa\u6765\uff0c\u5728\u6bcf\u670828\u53f7\uff0c\u6216\u5f97\u5230\u4e00\u5b9a\u6570\u91cf\u7684\u4ee5\u592a\u5e01(\u4e00\u822c\u662f0.01\u4e2a\uff0c\u5728settings\u4e2d\u53ef\u4ee5\u770b\u5230\u5177\u4f53\u53d1\u653e\u89c4\u5219)\uff0c\u624d\u4f1a\u4e00\u8d77\u53d1\u653e\u5230\u94b1\u5305\u8d26\u6237\u4e2d\u3002  </p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#3","title":"3. \u6536\u76ca\u60c5\u51b5","text":"<p>\u6211\u7684\u663e\u5361\u578b\u53f7\u662fNvidia 2070s\uff0c\u5728\u663e\u5361\u4e0d\u8fc7\u70ed\u7684\u524d\u63d0\u4e0b\uff0c\u771f\u5b9e\u7b97\u529b\u5927\u6982\u4e3a34MH/s\uff0c\u4e00\u5929\u8dd1\u6ee124\u5c0f\u65f6\u7684\u6536\u76ca\u57280.0013\u4e2a\u4ee5\u592a\u5e01\u5de6\u53f3\uff0c\u6309\u7167\u76ee\u524d\u7684\u4ef7\u683c(2000-2500$/\u4e2a)\uff0c\u6bcf\u5929\u7684\u6536\u76ca\u572816-20\u5143\u4e4b\u95f4\u3002\u7535\u8d39\u5927\u6982\u9700\u89816-8\u5ea6/\u5929\uff0c\u7535\u8d39\u6210\u672c\u5927\u81f4\u662f\u6536\u76ca\u7684\u2159\u3002\u7efc\u5408\u4e0b\u6765\uff0c\u5dee\u4e0d\u591a\u7b97\u662f\u6bcf\u5929\u4e00\u676fmanner\u5427\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-06-21-Mining/#4","title":"4.\u603b\u7ed3","text":"<p>\u603b\u7684\u6765\u8bf4\uff0c\u663e\u5361\u6316\u77ff\u662f\u4e2a\u6bd4\u8f83\u5bb9\u6613\u4e0a\u624b\u7684\u4e8b\u60c5\u3002\u5ba2\u89c2\u800c\u8a00\uff0c\u6316\u77ff\u7684\u6536\u76ca\u77ed\u671f\u6765\u770b\u5e76\u4e0d\u663e\u8457\uff0c\u52a0\u4e0a\u865a\u62df\u8d27\u5e01\u4ef7\u683c\u6ce2\u52a8\u5f88\u5927\uff0c\u5982\u679c\u4e3a\u4e86\u6316\u77ff\u9ad8\u4ef7\u8d2d\u4e70\u6216\u56e4\u79ef\u663e\u5361\uff0c\u56de\u672c\u5468\u671f\u4f1a\u5f88\u957f\u4e14\u98ce\u9669\u8f83\u9ad8\uff0c\u51e0\u4e4e\u6ca1\u6709\u6295\u8d44\u7684\u5fc5\u8981\u3002\u4f46\u5982\u679c\u662f\u624b\u8fb9\u521a\u597d\u6709\u7a7a\u7f6e\u7684\u663e\u5361\uff0c\u5355\u7eaf\u4e3a\u4e86\u5b9e\u73b0\u6bcf\u5929\u4e00\u676f\u5496\u5561\u81ea\u7531\uff0c\u6216\u662f\u4e3a\u4e86\u4e0b\u4e00\u5757\u663e\u5361\u505a\u8d44\u91d1\u51c6\u5907\uff0c\u5168\u6258\u7ba1\u5f0f\u7684\u6316\u77ff\u4e0d\u5931\u4e3a\u4e00\u79cd\u9009\u62e9\u3002\u6700\u540e\u8fd8\u662f\u9700\u8981\u63d0\u9192\u5c0f\u4f19\u4f34\u4eec\u5728\u5c1d\u8bd5\u7528\u81ea\u5df1\u7684\u663e\u5361\u6316\u77ff\u7684\u65f6\u5019\uff0c\u8bf7\u65f6\u5e38\u5173\u6ce8\u4e3b\u673a\u5c24\u5176\u663e\u5361\u6e29\u5ea6\u72b6\u6001\uff0c\u4e0d\u9700\u8981\u76f2\u76ee\u8ffd\u6c42\u6781\u81f4\u7684\u7b97\u529b\u800c\u4f24\u5bb3\u5230\u786c\u4ef6\u672c\u8eab\u3002</p>","tags":["blockchain"]},{"location":"Main_Course/One_Day_Build/2021-10-21-flaskbb/","title":"\u57fa\u4e8eFlaskBB\u81ea\u5efa\u8bba\u575b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-10-21\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-21-flaskbb/#1","title":"1 \u524d\u8a00","text":"<p>\u867d\u7136\u8bba\u575b\u662f\u4e00\u4e2a\u542c\u4e0a\u53bb\u6709\u70b9\u4e0a\u5e74\u7eaa\u7684\u540d\u8bcd\u3002\u4f46\u662f\u6211\u4eec\u53ef\u80fd\u6216\u591a\u6216\u5c11\u5730\u90fd\u4f7f\u7528\u8fc7\u5b83\u3002\u65e0\u8bba\u662f\u627e\u5de5\u4f5c\u65f6\u7684\u5e94\u5c4a\u751f\u8bba\u575b\uff0c\u8fd8\u662f\u9ad8\u6821\u7684\u5317\u5927\u672a\u540dBBS\u7b49\uff0c\u6216\u662f\u627e\u6e38\u620f\u8d44\u6e90\u76843DM\u8bba\u575b\uff0c\u8fd9\u4e9b\u8bba\u575b\u90fd\u5728\u4fe1\u606f\u4ea4\u6362(\u5439\u6c34)\u3001\u8d44\u6e90\u5171\u4eab(\u697c\u4e3b\u597d\u4eba)\u65b9\u9762\u7ed9\u6211\u4eec\u7684\u751f\u6d3b\u5e26\u6765\u4e86\u4fbf\u5229\u3002 \u81ea\u5df1\u642d\u5efa\u4e00\u4e2a\u8bba\u575b\uff0c\u9080\u8bf7\u597d\u53cb\u8fdb\u6765\u804a\u5929\u3001\u704c\u6c34\u60f3\u60f3\u5e94\u8be5\u662f\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u672c\u6587\u5c06\u6f14\u793a\u5982\u4f55\u57fa\u4e8e\u5f00\u6e90\u7684FlaskBB\u642d\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684\u8bba\u575b\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-21-flaskbb/#2-flaskbb","title":"2 \u90e8\u7f72FlaskBB\u8bba\u575b","text":"<p>FlaskBB\u662f\u57fa\u4e8ePython Flask\u7684\u5f00\u6e90\u8bba\u575b\u8f6f\u4ef6\u3002\u5b83\u7684GitHub Repo\u4ee5\u53ca\u6587\u6863\u7ed9\u51fa\u4e86\u8f83\u4e3a\u8be6\u7ec6\u7684\u5b89\u88c5\u65b9\u5f0f\u3002\u6211\u4eec\u9996\u5148\u5c06\u5b83\u7684Repo clone\u4e0b\u6765\u3002   \u4e3a\u4e86\u907f\u514d\u5f71\u54cd\u5df2\u6709\u7684Python\u73af\u5883\u3002\u5b98\u65b9\u5efa\u8bae\u6211\u4eec\u5728\u865a\u62df\u73af\u5883\u4e2d\uff0c\u5b89\u88c5\u5305\u5e76\u8fd0\u884cFlaskBB\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528virtualenv\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883\u5e76\u6fc0\u6d3b\u3002\u5728\u865a\u62df\u73af\u5883\u4e2d\uff0c\u6211\u4eec\u5207\u6362\u5230FlaskBB\u6587\u4ef6\u5939\uff0c\u5b89\u88c5\u4f9d\u8d56\u5305\uff1a</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>\u4f5c\u4e3a\u53ef\u9009\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5\u4e00\u4e9b\u4fbf\u4e8e\u5f00\u53d1\u7684\u5305(requirements-dev.txt)\u4ee5\u53caRedis\u3002\u5f53\u7136\u57fa\u7840\u7684\u5305\u5c31\u80fd\u6ee1\u8db3\u8fd0\u884c\u7684\u9700\u6c42\u3002 \u5b89\u88c5\u5b8c\u4f9d\u8d56\u5305\u540e\uff0c\u6211\u4eec\u9700\u8981\u5bf9FlaskBB\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u914d\u7f6e(\u4ee5\u95ee\u7b54\u7684\u65b9\u5f0f)\u3002\u6211\u4eec\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a  </p> <pre><code>flaskbb makeconfig\n</code></pre> <p>\u91cc\u9762\u6709\u4e0d\u5c11\u53ef\u9009\u9879\uff0c\u5982\u4f7f\u7528Redis\uff0c\u7ed9\u7ba1\u7406\u5458\u90ae\u7bb1\u53d1\u62a5\u8b66\u90ae\u4ef6\u7b49\u7b49\uff0c\u53ef\u4ee5\u6309\u9700\u914d\u7f6e\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u90fd\u9009\u62e9\u4e86\u6700\u7b80\u6613\u7684\u914d\u7f6e\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662fSERVER_NAME\u8981\u5e26\u4e0a\u7aef\u53e3\u53f7\u3002   \u914d\u7f6e\u5b8c\u540e\uff0c\u7531\u4e8e\u6211\u4eec\u6ca1\u6709\u9009\u62e9Redis\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662fSQLite\u6765\u5b58\u50a8\u6570\u636e\u3002\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4:</p> <pre><code>flaskbb install\n</code></pre> <p>\u5b83\u4f1a\u8981\u6c42\u6211\u4eec\u521b\u5efa\u7ba1\u7406\u5458\u8d26\u53f7\uff0c\u5305\u62ec\u8d26\u53f7\u540d\u5b57\uff0c\u90ae\u7bb1\uff0c\u5bc6\u7801\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e00\u6b65\u53ef\u80fd\u4f1a\u51fa\u73b0Redis URL\u7684\u62a5\u9519\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u7684\u5728\u521a\u521a\u751f\u6210\u7684flaskbb.cfg\u4e2d\uff0c\u4fee\u6539Redis URL\u4e3aREDIS_URL = \"redis://\" \u6700\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd0\u884c:</p> <pre><code>flaskbb --config flaskbb.cfg run\n</code></pre> <p>\u6211\u4eec\u6253\u5f000.0.0.0:5000\u5c31\u80fd\u770b\u5230\u8bba\u575b\u5df2\u7ecf\u8dd1\u8d77\u6765\u4e86\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-21-flaskbb/#3","title":"3 \u8bba\u575b\u4f7f\u7528","text":"<p>\u6211\u4eec\u7684\u8bba\u575b\u5df2\u7ecf\u521d\u5177\u89c4\u6a21\u3002\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7login in\u767b\u5f55\u8bba\u575b\u3002\u53ef\u4ee5\u770b\u5230\u8bba\u575b\u6709\u4ee5\u4e0b\u51e0\u4e2a\u677f\u5757\uff1a</p> <ul> <li>Portal\uff1a\u5305\u62ec\u65b0\u95fb\uff0c\u6700\u8fd1\u8bdd\u9898\u4ee5\u53ca\u4e00\u4e9b\u7edf\u8ba1\u91cf\u3002</li> <li>Forum\uff1a\u8bba\u575b\u672c\u8eab\uff0c\u5305\u62ec\u4e00\u7bc7\u7bc7\u5e16\u5b50</li> <li>Memberlist\uff1a\u8bba\u575b\u6210\u5458</li> <li>Search\uff1a\u641c\u7d22</li> </ul> <p>\u5728Portal\u677f\u5757\u6211\u4eec\u53ef\u80fd\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u63d0\u793a\u3002  </p> <p>\u6211\u4eec\u70b9\u51fblogin in(\u6b64\u65f6\u5e94\u8be5\u5df2\u7ecf\u662f\u7528\u6237\u540d)\u65c1\u8fb9\u7684\u5c0f\u7bad\u5934\u4e0b\u62c9\u83dc\u5355\u4e2d\u7684Management\u3002\u9009\u62e9Plugins\uff0cinstall Portal (flaskbb-plugin-portal)\u3002 \u6b64\u65f6\uff0c\u53ef\u4ee5\u770b\u5230Portal\u5df2\u7ecf\u6062\u590d\u4e86\u6b63\u5e38\u3002  </p> <p>\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4f53\u9a8c\u8bba\u575b\u7684\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u4e1d\u6ed1\u5730\u7f16\u8f91\u3001\u56de\u8d34\uff0c\u6574\u4e2a\u7528\u6237\u4f53\u9a8c\u548c\u6210\u719f\u7684\u8bba\u575b\u57fa\u672c\u4e00\u81f4\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-21-flaskbb/#4","title":"4 \u603b\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u901a\u8fc7FlaskBB\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u6c34\u51c6\u76f8\u5f53\u9ad8\u7684\u8bba\u575b\u96cf\u5f62\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u6b64\u4e4b\u4e0a\u505a\u4e00\u4e9b\u6ee1\u8db3\u81ea\u5df1\u9700\u6c42\u7684\u66f4\u6539\u548c\u8bbe\u8ba1\u3002 \u6574\u4f53\u4ee3\u7801\u662f\u57fa\u4e8eFlask\u8fd9\u4e00\u8f7b\u91cf\u7ea7\u7684\u6846\u67b6\uff0c\u5bf9\u6b64\u7684\u4fee\u6539\u5e76\u4e0d\u7b97\u7279\u522b\u590d\u6742\u3002\u4e0b\u7bc7\u6211\u4eec\u5c06\u8bb2\u8bb2\u5982\u4f55\u4fee\u6539\u4ee3\u7801\uff0c\u8ba9\u6211\u4eec\u7684\u8bba\u575b\u7115\u7136\u4e00\u65b0\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-29-flaskbb2/","title":"\u89e3\u8bfbFlaskBB\u6e90\u7801","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-10-29\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-29-flaskbb2/#1","title":"1 \u524d\u8a00","text":"<p>\u4e0a\u56de\u57fa\u4e8eFlaskBB\u81ea\u5efa\u8bba\u575b\u8bf4\u5230FlaskBB\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u529f\u80fd\u5f3a\u5927\u7684\u8bba\u575b\uff0c\u6211\u4eec\u4e5f\u5df2\u7ecf\u6210\u529f\u5730\u5728\u672c\u5730\u8fd0\u884c\u4e86\u8d77\u6765\u3002\u4e0d\u6b62\u4e8e\u6b64\uff0c\u672c\u6587\u5c06\u5e26\u7740\u5927\u5bb6\u89e3\u8bfbFlaskBB\u7684\u6e90\u7801\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-29-flaskbb2/#2","title":"2 \u76ee\u5f55\u7ed3\u6784","text":"<p>\u6211\u4eec\u9996\u5148\u6765\u770b\u770b\u5b83\u7684\u76ee\u5f55\u7ed3\u6784\u3002</p> <p>\u5728\u6839\u76ee\u5f55\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u5e38\u89c1\u7684\u4f9d\u8d56\u76f8\u5173\u7684\u6587\u4ef6(requirements.txt\uff0csetup.py\u7b49)\uff0c\u4e5f\u6709\u521a\u521a\u901a\u8fc7flaskbb makeconfig\u751f\u6210\u7684flaskbb.cfg\u3002tests\u6587\u4ef6\u5939\u5b58\u653e\u4e86\u81ea\u52a8\u6d4b\u8bd5\u76f8\u5173\u7684\u4ee3\u7801\u3002\u5bf9\u4e8e\u4e00\u4e2a\u4ea7\u54c1\u7ea7\u7684\u5e94\u7528\uff0c\u81ea\u52a8\u6d4b\u8bd5\u662f\u4e0d\u53ef\u6216\u7f3a\u7684\u3002 \u6700\u540e\u662f\u4e3b\u6587\u4ef6\u5939flaskbb\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-29-flaskbb2/#3","title":"3 \u6e90\u7801\u89e3\u8bfb","text":"<p>\u6211\u4eec\u6765\u770b\u770bflaskbb\u7684\u4e3b\u7a0b\u5e8fapp.py\u4e2d\u7684create_app\u51fd\u6570\uff1a</p> <pre><code>def create_app(config=None, instance_path=None):\n\n    app = Flask(\n        \"flaskbb\", instance_path=instance_path, instance_relative_config=True\n    )\n\n    # instance folders are not automatically created by flask\n    if not os.path.exists(app.instance_path):\n        os.makedirs(app.instance_path)\n\n    configure_app(app, config)\n    configure_celery_app(app, celery)\n    configure_extensions(app)\n    load_plugins(app)\n    configure_blueprints(app)\n    configure_template_filters(app)\n    configure_context_processors(app)\n    configure_before_handlers(app)\n    configure_errorhandlers(app)\n    configure_migrations(app)\n    configure_translations(app)\n    app.pluggy.hook.flaskbb_additional_setup(app=app, pluggy=app.pluggy)\n\n    return app\n</code></pre> <p>\u5728configure_app\u91ccFlaskBB\u9996\u5148\u52a0\u8f7d\u4e86\u914d\u7f6e\u4fe1\u606f\u3002FlaskBB\u4f1a\u4f9d\u6b21\u5c1d\u8bd5\u4ece\u9ed8\u8ba4\u914d\u7f6e\u3001\u7528\u6237\u914d\u7f6e\u548c\u73af\u5883\u53d8\u91cf\u4e2d\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f\u3002configure_extensions\u521d\u59cb\u5316\u4e86\u7528\u5230\u7684\u76f8\u5173Flask\u6269\u5c55\u3002configure_blueprints\u521d\u59cb\u5316\u4e86Blueprint\uff0c\u5305\u62ecuser\u3001forum\u3001auth\u3001management\u3002\u4ee5\u4e0a\u56db\u5757\u5185\u5bb9\u6302\u8f7d\u5728\u4e0d\u540c\u7684url\u4e0b\uff0c\u5b83\u4eec\u662f\u6574\u4e2a\u7ed3\u6784\u7684\u56db\u5927\u91cd\u8981\u677f\u5757\u3002\u8fd8\u6709\u5904\u7406error\u7684configure_errorhandlers\uff0c\u5728Jinja2\u6a21\u677f\u4e2d\u6dfb\u52a0\u8fc7\u6ee4\u5668\u7684configure_template_filters\u7b49\u6a21\u5757\u3002</p> <p>\u770b\u5b8c\u4e86\u6700\u91cd\u8981\u7684app.py\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u540c\u4e00\u76ee\u5f55\u4e0b\u6709\u521a\u521a\u63d0\u5230\u7684user\u3001forum\u3001auth\u3001management\u56db\u4e2a\u6587\u4ef6\u5939\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u8fd9\u56db\u5927\u677f\u5757\u662f\u5982\u4f55\u6784\u9020\u7684\u3002  </p> <p>\u6211\u4eec\u6253\u5f00user\u6587\u4ef6\u5939\u7684models.py\uff0c\u8fd9\u4e00\u6587\u4ef6\u5b9a\u4e49\u4e86\u7528\u6237\u8fd9\u4e00\u6a21\u5757\u4e2d\uff0c\u7528\u6237\u3001\u7fa4\u7ec4\u7b49\u5173\u7cfb\u3002\u8fd9\u8fb9\u9700\u8981\u63d0\u5230\u4e00\u4e2a\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04(ORM\uff0cObject Relational Mapping)\u7684\u6982\u5ff5\u3002\u7b80\u5355\u7406\u89e3ORM\u662f\u6307\u7528\u7a0b\u5e8f\u8bed\u8a00\u6765\u5b9a\u4e49\u7684\u6570\u636e\u5e93\u3002</p> <pre><code>class User(db.Model, UserMixin, CRUDMixin):\n    __tablename__ = \"users\"\n\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(200), unique=True, nullable=False)\n    email = db.Column(db.String(200), unique=True, nullable=False)\n    _password = db.Column('password', db.String(120), nullable=False)\n</code></pre> <p>\u5b57\u6bb5\u7684\u5b9a\u4e49\u770b\u4e0a\u53bb\u6bd4\u8f83\u76f4\u63a5\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u6765\u5b9a\u4e49\u5173\u7cfb\u5462\uff1f\u6bd4\u5982\u7528\u6237\u548c\u4e3b\u9898\u7684\u4e00\u5bf9\u591a\u5173\u7cfb\u3002\u4e00\u4e2a\u7528\u6237\u53ef\u80fd\u4f1a\u53d1\u8d77\u591a\u4e2a\u4e3b\u9898\u3002\u5728User\u8fd9\u4e2aclass\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u5982\u4e0b\u4ee3\u7801\u3002</p> <pre><code>topics = db.relationship(\n    \"Topic\",\n    backref=\"user\",\n    primaryjoin=\"User.id == Topic.user_id\",\n    lazy=\"dynamic\"\n)\n</code></pre> <p>\u5982\u6b64\u5b9a\u4e49\u4f1a\u5728User\u4e2d\u521b\u5efatopics\u8fd9\u4e00\u5b57\u6bb5\uff0c\u4e5f\u4f1a\u5728Topic\u8fd9\u4e00\u8868\u4e2d\u521b\u5efauser\u8fd9\u4e00\u5b57\u6bb5\u3002\u8fde\u63a5\u67e5\u8be2\u65f6\u7684\u6761\u4ef6\u4e3aUser.id == Topic.user_id\u3002 \u4ee3\u7801\u4e2d\u8fd8\u5b9a\u4e49\u4e86\u5220\u9664\u3001\u4fdd\u5b58\u7b49\u5e38\u89c4\u64cd\u4f5c\u3002</p> <p>\u56db\u5927\u6a21\u5757\u90fd\u6709models\uff0cviews\uff0cforms\u4e09\u4e2a\u5b50\u6a21\u5757\u3002\u6574\u4f53\u7684\u7ed3\u6784\u662f\u975e\u5e38\u6e05\u6670\u7684\u3002\u548c\u5927\u90e8\u5206Flask\u9879\u76ee\u7c7b\u4f3c\uff0chtml\u6a21\u677f\u4f9d\u7136\u653e\u5728templates\u6587\u4ef6\u5939\u4e0b\uff0cjs\uff0ccss\uff0c\u56fe\u7247\u7b49\u653e\u5728static\u6587\u4ef6\u5939\u4e0b\u3002\u6700\u5f00\u59cb\u63d0\u5230\u7684tests\u6587\u4ef6\u5939\u5b58\u653e\u4e86\u81ea\u52a8\u6d4b\u8bd5\u7684\u6a21\u5757\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-10-29-flaskbb2/#4","title":"4 \u603b\u7ed3","text":"<p>\u901a\u8fc7FlaskBB\u7684\u6e90\u7801\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e2a\u6210\u719f\u7684\uff0c\u4ea7\u54c1\u7ea7\u7684\u9879\u76ee\u7684\u7ed3\u6784\u4ee5\u53ca\u4e0d\u540c\u6a21\u5757\u7684\u5185\u5bb9\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5b83\u7684\u4ee3\u7801\u975e\u5e38\u5de5\u6574\u3001\u89c4\u8303\u3001\u53ef\u8bfb\u6027\u8f83\u5f3a\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\uff0c\u6839\u636e\u6211\u4eec\u7684\u9700\u6c42\u9b54\u6539\u5185\u5bb9\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u4e2a\u771f\u6b63\u53ef\u7528\u7684\u8bba\u575b\u4ea7\u54c1\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/","title":"12306\u667a\u80fd\u8ba2\u7968","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-11-10\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/#1","title":"1 \u524d\u8a00","text":"<p>\u8282\u5047\u65e5\u7684\u65f6\u5019\uff0c\u56de\u5bb6\u6216\u8005\u70ed\u95e8\u666f\u70b9\u7684\u706b\u8f66\u7968\u5f80\u5f80\u5f88\u5feb\u4e00\u552e\u800c\u7a7a\u3002\u9664\u4e86\u62fc\u4eba\u54c1\u3001\u62fc\u624b\u901f\u5730\u8e72\u70b9\u5b88\u5019\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u79d1\u5b66\u7684\u65b9\u5f0f\u667a\u80fd\u8ba2\u7968\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/#2","title":"2 \u9879\u76ee\u7b80\u4ecb","text":"<p>\u4eca\u5929\u7684\u4e3b\u4eba\u516c\u662fGitHub\u4e0a\u768412306\u9879\u76ee\u3002\u9879\u76ee\u7684\u6574\u4f53\u601d\u8def\u5f88\u76f4\u63a5\uff0c\u5b83\u4f1a\u4e0d\u65ad\u5730\u67e5\u8be2\u5fc3\u4eea\u65f6\u95f4\u7684\u8f66\u6b21\u662f\u5426\u6709\u4f59\u7968\uff0c\u6709\u7684\u8bdd\u5c31\u4f1a\u4e0b\u5355\uff0c\u9501\u5b9a\u5e2d\u4f4d\uff0c\u5e76\u7ed9\u7528\u6237\u53d1\u90ae\u4ef6\u63d0\u9192\u53ca\u65f6\u4ed8\u6b3e\u3002  </p> <p>\u6211\u4eec\u5728\u4e24\u5206\u949f\u6253\u9020\u6dd8\u5b9d\u62a2\u5355\u673a\u5668\u4eba\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u4e5f\u66fe\u4ecb\u7ecd\u8fc7\u7528webdriver\u6765\u63a7\u5236\u6d4f\u89c8\u5668\uff0c\u5b9e\u73b0\u67e5\u8be2\u3001\u70b9\u51fb\u7b49\u884c\u4e3a\u3002\u90a3\u4e4812306\u8fd9\u4e00\u9879\u76ee\u4e2d\u7684\u96be\u70b9\u662f\u4ec0\u4e48\u5462\uff1f \u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u7528\u6237\u67e5\u8be2\u6b21\u6570\u592a\u591a\u65f6\uff0c12306\u4f1a\u8981\u6c42\u6211\u4eec\u70b9\u51fb\u9a8c\u8bc1\u7801\u3002</p> <p>\u4f5c\u4e3a\u771f\u4eba\u6765\u8bf4\u8fd9\u4e9b\u56fe\u7247\u7684\u8bc6\u522b\u5c31\u9887\u4e3a\u4e0d\u6613\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5982\u4f55\u80fd\u6b63\u786e\u5730\u8bc6\u522b\u51fa\u6765\u5462\uff1f\u8fd9\u91cc\u5148\u5356\u4e2a\u5173\u5b50\uff0c\u6211\u4eec\u7a0d\u540e\u518d\u8bf4\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/#3","title":"3 \u9879\u76ee\u4f7f\u7528","text":"<p>\u9879\u76ee\u7684\u76ee\u5f55\u5982\u56fe\u6240\u793a\uff1a</p> <p>\u9879\u76ee\u7684\u4f7f\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u6839\u76ee\u5f55\u4e0b\u7684TickerConfig.py\u8fd9\u4e00\u914d\u7f6e\u6587\u4ef6\u3002\u6211\u4eec\u9700\u8981\u586b\u5199\u51fa\u53d1\u65e5\u671f\uff0c\u8f66\u6b21\uff0c\u51fa\u53d1\u5230\u8fbe\u57ce\u5e02\uff0c\u4e58\u8f66\u4eba\uff0c\u4f60\u7684\u90ae\u7bb1(\u7528\u6765\u6536\u53d1\u63d0\u9192\u90ae\u4ef6)\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f60\u9700\u8981\u572812306\u8d26\u53f7\u4e2d\u5148\u628a\u4e58\u8f66\u4eba(\u53ef\u4ee5\u4e0d\u662f\u4f60\u81ea\u5df1)\u52a0\u5165\u3002 \u53e6\u5916\uff0c\u5f53\u4f60\u8bbe\u7f6eCOOKIE_TYPE = 1\u65f6\uff0c\u9879\u76ee\u4f1a\u4f7f\u7528webdriver\u63a7\u5236\u6d4f\u89c8\u5668\uff0c\u6253\u5f0012306\u5b98\u7f51\uff0c\u8ba9\u7528\u6237\u767b\u5f55\u3002\u56e0\u6b64\u4f60\u9700\u8981\u4e0b\u8f7d\u9002\u7528\u4e8e\u4f60\u7684\u6d4f\u89c8\u5668\u7684driver\uff0c\u5e76\u628a\u8def\u5f84\u586b\u5199\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\u6211\u4eec\u6bd4\u8f83\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002  </p> <p>\u586b\u5199\u5b8c\u6bd5\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u5c31\u53ef\u4ee5\u542f\u52a8\u62a2\u7968\u4efb\u52a1\u4e86\u3002</p> <pre><code>python run.py r\n</code></pre> <p>\u6211\u4eec\u9996\u5148\u9700\u8981\u5728\u5f39\u51fa\u7684\u6d4f\u89c8\u5668\u4e2d\u767b\u5f5512306\u8d26\u53f7\uff0c\u63a5\u7740\u7a0b\u5e8f\u5c31\u4f1a\u81ea\u52a8\u5730\u67e5\u8be2\u4f59\u7968\u4e86\uff0c\u8fd0\u884c\u65f6\u754c\u9762\u5982\u4e0b\u6240\u793a</p> <p>\u5f53\u6709\u4eba\u9000\u7968\u6216\u8005\u6709\u65b0\u7684\u706b\u8f66\u7968\u653e\u51fa\uff0c\u6709\u4f59\u7968\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u4e0b\u5355\uff0c\u5e76\u7ed9\u90ae\u7bb1\u53d1\u9001\u90ae\u4ef6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53ca\u65f6\u4ed8\u6b3e\u5373\u53ef\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/#4","title":"4 \u5982\u4f55\u8bc6\u522b\u9a8c\u8bc1\u7801","text":"<p>\u5982\u4f55\u6709\u6548\u5730\u8bc6\u522b\u9a8c\u8bc1\u7801\u662f\u4e00\u4e2a\u9ad8\u96be\u5ea6\u7684\u95ee\u9898\uff0c\u9879\u76ee\u91c7\u7528\u4e86\u8fd9\u4e2arepo\u4e2d\u7684\u4ee3\u7801\u3002 \u9879\u76ee\u7684\u6574\u4f53\u8bbe\u8ba1\u601d\u8def\u662f\uff1a</p> <ul> <li>\u501f\u7528\u767e\u5ea6\u63d0\u4f9b\u7684\u5149\u5b66\u5b57\u7b26\u8bc6\u522b\u529f\u80fd\uff0c\u7528\u57fa\u4e8e\u5377\u79ef\u7f51\u7edc\u7684\u6587\u5b57\u8bc6\u522b\u5668\uff0c\u8bc6\u522b\u51fa\u8981\u5bfb\u627e\u7684\u4e2d\u6587\u5b57\u7b26(\u5728\u4f8b\u5b50\u4e2d\u5373\u4e3a\u7535\u5b50\u79e4\u548c\u98ce\u94c3)\u3002</li> <li>\u63a5\u7740\u8bad\u7ec3\u51fa\u4e00\u4e2a\u56fe\u7247\u5206\u7c7b\u5668\uff0c\u8bc6\u522b\u51fa\u56fe\u7247\u662f\u54ea\u4e00\u7c7b\u522b\u7684\u3002</li> <li>\u7528\u56fe\u7247\u5206\u7c7b\u5668\u7684\u7ed3\u679c\u7ee7\u7eed\u8bad\u7ec3\u6587\u5b57\u8bc6\u522b\u5668\uff0c\u8981\u8bc6\u522b\u7684\u4e2d\u6587\u5b57\u7b26\u4e00\u5b9a\u5728\u56fe\u7247\u5206\u7c7b\u5668\u7ed9\u51fa\u7684\u7ed3\u679c\u4e4b\u4e2d\u3002</li> </ul> <p>\u5177\u4f53\u6d89\u53ca\u5230\u7684\u6280\u672f\u5305\u62ec\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u7684\u5377\u79ef\u7f51\u7edc\uff0c\u56fe\u50cf\u54c8\u5e0c\u76f8\u4f3c\u6027\u5224\u65ad\u6765\u5bfb\u627e\u76f8\u4f3c\u56fe\u3002 \u56fe\u50cf\u54c8\u5e0c\u76f8\u4f3c\u6027\u5224\u65ad\u7b80\u5355\u6765\u8bf4\u662f\u5c06\u56fe\u50cf\u8f6c\u4e3a\u7070\u5ea6\u56fe\u540e\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u70b9\u548cn\u4e2a\u50cf\u7d20\u7070\u5ea6\u5e73\u5747\u503c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5927\u4e8e\u5373\u4e3a1\uff0c\u5c0f\u4e8e\u5373\u4e3a0\u3002\u8fd9\u4e00\u6bd4\u8f83\u7ed3\u679c\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u6574\u6570\u3002\u5f97\u5230\u8fd9\u4e00\u6574\u6570\u540e\u5c31\u53ef\u4ee5\u6bd4\u8f83\u4e0d\u540c\u56fe\u7247\u7684\u76f8\u4f3c\u6027\u4e86\u3002 \u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u6df1\u5165\u7814\u7a76\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-10-12306ticket/#5","title":"5 \u603b\u7ed3","text":"<p>\u5728\u6211\u4e3a\u6570\u4e0d\u591a(\u6709\u4e14\u4ec5\u6709\u4e00\u6b21)\u5730\u4f7f\u7528\u8fd9\u4e00\u9879\u76ee\u7684\u7ecf\u5386\u4e2d\uff0c\u5b83\u6210\u529f\u5730\u5e2e\u6211\u8ba2\u5230\u4e86\u8f66\u7968\u3002\u4e5f\u8ba9\u6211\u5f3a\u70c8\u5730\u611f\u53d7\u5230\u6df1\u5ea6\u5b66\u4e60\u7b49\u201c\u9ad8\u79d1\u6280\u201d\u771f\u7684\u80fd\u5207\u8eab\u5730\u5728\u6211\u4eec\u7684\u65e5\u5e38\u751f\u6d3b\u4e2d\u53d1\u6325\u4f5c\u7528\u3002 \u5404\u79cd\u590d\u6742\u7684\u7b97\u6cd5\u5e76\u4e0d\u662f\u7a7a\u4e2d\u697c\u9601\uff0c\u800c\u662f\u80fd\u771f\u6b63\u7684\u63d0\u4f9b\u4ef7\u503c\u3002\u5e0c\u671b\u611f\u5174\u8da3\u7684\u8bfb\u8005\u80fd\u7ee7\u7eed\u5728\u6c42\u77e5\u7684\u8def\u4e0a\u63a2\u7d22\uff0c\u4e5f\u5e0c\u671b\u6bcf\u4e2a\u4eba\u90fd\u80fd\u4e70\u5230\u4e00\u5f20\u51fa\u884c\u7684\u8f66\u7968\u3002</p>","tags":["python","automation"]},{"location":"Main_Course/One_Day_Build/2021-11-27-fund_data/","title":"\u83b7\u53d6\u57fa\u91d1\u884c\u60c5\u6570\u636e","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2021-11-27\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea63\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-11-27-fund_data/#1","title":"1 \u524d\u8a00","text":"<p>\u4f5c\u4e3a\u6295\u8d44\u5c0f\u97ed\u83dc\uff0c\u6211\u4eec\u603b\u6709\u4e00\u4e2a\u4e70\u57fa\u91d1\u3001\u4e70\u80a1\u7968\uff0c\u7eb5\u6a2a\u80a1\u5e02\uff0c\u8d70\u5411\u4eba\u751f\u5dc5\u5cf0\u7684\u68a6\u60f3\u3002 \u4f5c\u4e3a\u975e\u4e13\u4e1a\u6295\u8d44\u8005\uff0c\u6211\u4eec\u5f80\u5f80\u53ea\u80fd\u901a\u8fc7\u652f\u4ed8\u5b9d\u3001\u5929\u5929\u57fa\u91d1\u3001\u86cb\u5377\u57fa\u91d1\u3001\u5238\u5546App\u7b49\u91d1\u878d\u673a\u6784\u63d0\u4f9b\u7684App\u83b7\u53d6\u91d1\u878d\u4ea7\u54c1\u7684\u4fe1\u606f\u3002\u867d\u7136\u8fd9\u4e9bApp\u7684\u529f\u80fd\u4e0d\u65ad\u5b8c\u5584\uff0c\u4f46\u662f\u603b\u6709\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u9700\u6c42\u7684\u65f6\u5019\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u8981\u83b7\u53d6\u6295\u8d44\u7684\u57fa\u91d1\u7ec4\u5408\u7684\u51c0\u503c\u6216\u662f\u6211\u4eec\u60f3\u8981\u8ba1\u7b97\u6240\u4e70\u57fa\u91d1\u7684\u7edf\u8ba1\u6307\u6807\uff0c\u76f8\u5173\u6027\u3001\u6ce2\u52a8\u7387\u7b49\u3002 \u5982\u4f55\u83b7\u53d6\u8fd9\u4e9b\u91d1\u878d\u4ea7\u54c1\u7684\u6570\u636e\uff0c\u6210\u4e3a\u4e86\u6211\u4eec\u79d1\u5b66\u6295\u8d44\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\u672c\u7bc7\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528Python\u83b7\u53d6\u57fa\u91d1\u884c\u60c5\u6570\u636e\u3002\u9009\u53d6\u57fa\u91d1\u4e3b\u8981\u6709\u4ee5\u4e0b\u8003\u91cf\uff1a\u57fa\u91d1\u53ca\u57fa\u91d1\u7ec4\u5408\u7684\u6570\u636e\u83b7\u53d6\u8f83\u80a1\u7968\u56f0\u96be\uff0c\u6295\u8d44\u57fa\u91d1\u7684\u53d7\u4f17\u4f3c\u4e4e\u66f4\u591a\u4e00\u4e9b\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-11-27-fund_data/#2","title":"2 \u83b7\u53d6\u86cb\u5377\u57fa\u91d1\u6570\u636e","text":"<p>\u6211\u4e3b\u8981\u901a\u8fc7\u86cb\u5377\u57fa\u91d1\u548c\u5929\u5929\u57fa\u91d1\u8d2d\u4e70\u4e00\u4e9b\u57fa\u91d1\u7ec4\u5408\u3002\u7531\u4e8e\u7f8e\u89c2\u548c\u4f7f\u7528\u65b9\u4fbf\uff0c\u6211\u66f4\u504f\u5411\u4e8e\u4f7f\u7528\u86cb\u5377\u57fa\u91d1(\u975e\u5e7f\u544a)\u3002\u4f46\u5b83\u7684\u7f3a\u70b9\u662f\u65e0\u6cd5\u9ad8\u6548\u5730\u5bfc\u51fa\u7ec4\u5408\u7684\u51c0\u503c\u3002\u800c\u6709\u4e86\u539f\u59cb\u7684\u6570\u636e\uff0c\u6211\u5c31\u53ef\u4ee5\u505a\u4e00\u4e9b\u5206\u6790\uff0c\u5982\u6bd4\u8f83\u591a\u4e2a\u7ec4\u5408\uff0c\u8ba1\u7b97\u7edf\u8ba1\u91cf\u7b49\u3002  </p> <p>\u6211\u4eec\u53ef\u4ee5\u5728\u624b\u673aApp\u6216\u8005\u7535\u8111\u7aef\u6253\u5f00\u86cb\u5377\u57fa\u91d1\uff0c\u67e5\u8be2\u6211\u4eec\u5173\u5fc3\u7684\u7ec4\u5408\uff0c\u5982\u6211\u8981\u7a33\u7a33\u7684\u5e78\u798f(\u4ec5\u4f5c\u793a\u4f8b\uff0c\u975e\u6295\u8d44\u610f\u89c1)\u3002</p> <p>\u5982\u56fe\u662f\u5b83\u7684\u6536\u76ca\u8d70\u52bf\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u70b9\u51fb\u5386\u53f2\u51c0\u503c\u53ca\u4e1a\u7ee9\uff0c\u8df3\u8f6c\u5230\u51c0\u503c\u53ca\u4e1a\u7ee9\u754c\u9762\u3002</p> <p>\u867d\u7136\u6709\u4e86\u6570\u636e\uff0c\u4f46\u662f\u6211\u4eec\u65e0\u6cd5\u5f88\u65b9\u4fbf\u5730\u5c06\u6570\u636e\u5bfc\u51fa\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9ed1\u79d1\u6280Python\uff0c\u83b7\u53d6\u6211\u4eec\u5fc3\u5fc3\u5ff5\u5ff5\u7684\u6570\u636e\u3002 \u6211\u4eec\u9996\u5148\u8981\u505a\u7684\u662f\u5c1d\u8bd5\u627e\u5230\u6570\u636e\u7684\u6765\u6e90\u3002\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u9875\u9762\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u70b9\u51fbNetwork\uff0c\u91cd\u65b0\u5237\u65b0\u7f51\u9875\u3002  </p> <p>\u6211\u4eec\u5728Name\u5217\u8868\u627e\u5230CSI1014?type=2&amp;day=all\uff0c\u4ece\u53f3\u4fa7\u7684Response\uff0c\u6216\u662f\u53cc\u51fb\u5b83\u3002\u6211\u4eec\u90fd\u53ef\u4ee5\u770b\u5230\u60f3\u8981\u7684\u6bcf\u65e5\u7684\u51c0\u503c\u6570\u636e\u3002</p> <p>\u6b64\u65f6\u7684\u6570\u636e\u683c\u5f0f\u5e76\u4e0d\u662f\u5341\u5206\u53cb\u5584\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528Python\u83b7\u53d6\u4ee5\u4e0a\u6570\u636e\u5e76\u5904\u7406\u6210\u7406\u60f3\u7684\u683c\u5f0f\u3002</p> <p><pre><code>import pandas as pd\nheader={\"User-Agent\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\"}\nimport requests\n\nurl='https://danjuanapp.com/djapi/plan/v2/growth/CSI1014?type=2&amp;day=all'\nresponse=requests.get(url,headers=header)\nf=pd.read_json(response.content)\nff=f.loc['fund_nav_growth','data']\nnav=pd.Series(index=[i['date'] for i in ff],data=[i['nav'] for i in ff],name='funds')\nnav=nav[nav.index&gt;'2020-01-01']\nnav=nav.astype(float)\nnav.plot(figsize=(20,10))\n</code></pre> \u5176\u4e2d\uff0curl\u5c31\u662f\u6211\u4eec\u521a\u521a\u627e\u5230\u6570\u636e\u5bf9\u5e94\u7684url\u3002\u6211\u4eec\u5df2\u7ecf\u628a\u6570\u636e\u6574\u7406\u6210DataFrame\uff0c\u63a5\u7740\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5c06\u6570\u636e\u5bfc\u51fa\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u56fe\u7b49\u8fdb\u4e00\u6b65\u5206\u6790\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-11-27-fund_data/#3","title":"3 \u603b\u7ed3","text":"<p>\u6211\u4eec\u6210\u529f\u5730\u901a\u8fc7Python\u722c\u866b\u83b7\u53d6\u4e86\u57fa\u91d1\u7ec4\u5408\u7684\u5386\u53f2\u51c0\u503c\u3002\u6709\u4e86\u539f\u59cb\u6570\u636e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a\u81ea\u5df1\u7684\u6295\u8d44\u7ec4\u5408\u505a\u66f4\u591a\u7684\u79d1\u5b66\u5206\u6790\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/","title":"\u83b7\u53d6\u79df\u623f\u623f\u6e90\u6570\u636e","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aEcho\uff0c\u53d1\u5e03\u4e8e2021-12-04\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea65\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#1","title":"1 \u524d\u8a00","text":"<p>\u79df\u623f/\u6709\u623f\u8981\u51fa\u79df\u7684\u5c0f\u4f19\u4f34\u4eec\u770b\u8fc7\u6765~</p> <p>\u8863\u98df\u4f4f\u884c\u662f\u751f\u6d3b\u7684\u57fa\u672c\u9700\u6c42\u3002\u8863\u548c\u98df\u597d\u89e3\u51b3\uff0c\u4e0d\u559c\u6b22\u7684\u8863\u670d\u53ef\u4ee5\u4e70\u65b0\u7684\uff0c\u4e0d\u597d\u5403\u7684\u98df\u7269\u53ef\u4ee5\u6362\u4e00\u5bb6\u5403\u3002\u53ef\u662f\u5728\u4f4f\u5bbf\u4e0a\uff0c\u4e70\u623f\u548c\u79df\u623f\u7684\u7f6e\u6362\u6210\u672c\u90fd\u76f8\u5bf9\u8f83\u9ad8\uff0c\u56e0\u6b64\u623f\u6e90\u9009\u62e9\u5c24\u4e3a\u614e\u91cd\u3002\u4f5c\u4e3a\u76ee\u524d\u4e70\u4e0d\u8d77\u623f\u7684\u81ea\u7136\u4eba\uff0c\u6211\u4eec\u4e00\u822c\u662f\u901a\u8fc7\u4e2d\u4ecb\u6765\u5b9e\u73b0\u79df\u623f\u7684\u9700\u6c42\uff0c\u6bd4\u5982\u81ea\u5982\uff0c\u8d1d\u58f3\u627e\u623f\u548c\u94fe\u5bb6\u3002\u770b\u6765\u5b87\u5b99\u7684\u5c3d\u5934\u662f\u94c1\u5cad\uff0c\u79df\u623f\u7684\u5c3d\u5934\u662f\u94fe\u5bb6\u2026\u2026 \u94fe\u5bb6\u5360\u636e\u4e86\u79df\u8d41\u5e02\u573a\u7684\u4e3b\u5bfc\u5730\u4f4d\uff0c\u4e14\u63d0\u4f9b\u7684\u4fe1\u606f\u76f8\u5bf9\u516c\u5141\u3002\u4f46\u6bcf\u5f53\u6211\u5237\u8d85\u8fc7\u5341\u4e2a\u623f\u6e90\uff0c\u6211\u5c31\u4f1a\u8bb0\u4e0d\u8d77\u6765\u6bcf\u4e00\u4e2a\u7684\u4fe1\u606f\uff0c\u4e5f\u65e0\u6cd5\u53ef\u89c6\u5316\u53bb\u6bd4\u8f83\u5f88\u591a\u4e2a\u623f\u6e90\u3002\u90a3\u4e48\u8ba9\u6211\u4eec\u5f00\u59cb\u52a8\u624b\uff0c\u7528\u4e07\u80fd\u7684Python\u6765\u8ba9\u94fe\u5bb6\u53d8\u6210\u4f60\u5bb6\uff0c\u83b7\u53d6\u94fe\u5bb6\u7f51\u4e0a\u7684\u4f60\u60f3\u8981\u7684\u4fe1\u606f\u5427\u3002\uff08\u771f\u7684\u4e0d\u662f\u5e7f\u544a\uff09</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#2","title":"2 \u83b7\u53d6\u623f\u6e90\u6570\u636e","text":"<p>\u6b64\u6b21\u4fa7\u91cdXPath\u7684\u4f7f\u7528\u548c\u53cd\u722c\u866b\u5c0f\u6280\u5de7\u3002XPath\u662f\u7528\u8def\u5f84\u8868\u8fbe\u5f0f\u5728XML\u6587\u6863\u4e2d\u9009\u53d6\u8282\u70b9\uff0c\u8fd9\u91cc\u4e5f\u540c\u6837\u9002\u7528\u4e8eHTML\u6587\u6863\u7684\u641c\u7d22\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#21-url","title":"2.1 \u786e\u5b9aURL","text":"<p>\u6253\u5f00\u4e0a\u6d77\u94fe\u5bb6\u7f51\u7684\u79df\u623f\u9875\u9762\uff0c\u9009\u62e9\u7b5b\u9009\u6761\u4ef6\uff0c\u793a\u4f8b\u5982\u4e0b\u3002\u786e\u8ba4\u540e\u5730\u5740\u680f\u7684URL\u4f1a\u6839\u636e\u7b5b\u9009\u6761\u4ef6\u800c\u53d1\u751f\u53d8\u5316\u3002\uff08\u5f53\u7136\u5982\u679c\u6ca1\u6709\u60f3\u597d\u60f3\u8981\u4f4f\u7684\u533a\u57df\uff0c\u5730\u94c1\u7ebf\uff0c\u79df\u91d1\uff0c\u9762\u79ef\uff0c\u671d\u5411\uff0c\u6237\u578b\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u53ef\u4ee5\u76f4\u63a5\u722c\u53d6\u5168\u90e8\u7684\u4e0a\u6d77\u623f\u6e90\u6570\u636e\u3002\uff09</p> <p>\u5171\u8ba128\u9875\u623f\u6e90\u4fe1\u606f\uff0c\u70b9\u51fb\u5207\u6362\u4e0b\u4e00\u9875\uff0c\u89c2\u5bdfURL\u4f1a\u53d1\u73b0\u94fe\u5bb6\u7f51\u662f\u9759\u6001\u7684\u7f51\u9875\uff0c\u9875\u9762\u5207\u6362\u901a\u8fc7\u5728URL\u4e2d\u52a0\u5165pg{i}\u53c2\u6570\u5b9e\u73b0\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u8981\u80fd\u722c\u53d6\u4e00\u9875\u7684\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u5faa\u73af\u6765\u722c\u53d6\u6240\u6709\u9875\u9762\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#22","title":"2.2 \u89e3\u6790\u9875\u9762","text":"<p>\u6309F12\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u5728\u9875\u9762\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u4ee5\u8fdb\u884c\u68c0\u67e5\u3002\u53ef\u4ee5\u770b\u5230\u53f3\u4fa7\u7684\u623f\u6e90\u5217\u8868\u6a21\u5757\u548c\u5de6\u8fb9\u7684\u623f\u6e90\u4fe1\u606f\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u5de6\u4fa7\u7684\u6bcf\u4e00\u6761\u623f\u6e90\u4fe1\u606f\u90fd\u7b49\u4ef7\u4e8e\u53f3\u4fa7\u7684class\u5c5e\u6027\u4e3acontent__list--item\u7684\u4e00\u4e2adiv\u56fe\u5c42\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u89c2\u5bdf\u4e86\u89e3\u7b2c\u4e00\u4e2a\u623f\u6e90\u4fe1\u606f\u5373\u53ef\u3002</p> <p>\u7ee7\u7eed\u5c55\u5f00\u8fd9\u4e2adiv\u56fe\u5c42\uff0c\u4f1a\u53d1\u73b0\u6211\u4eec\u9700\u8981\u7684\u4fe1\u606f\u57fa\u672c\u90fd\u88ab\u5305\u542b\u5728\u5c5e\u6027\u4e3acontent__list--item--main\u7684\u5b50div\u56fe\u5c42\u4e2d\uff0c\u5c24\u5176\u662f\u5176\u4e2d\u51e0\u4e2aclass\u4e3atitle\uff0cdescription\uff0cprice\u7684\u5143\u7d20\u91cc\u3002</p> <p>\u4ee5\u5c5e\u6027\u4e3acontent__list--item--title\u7684paragraph\u4e3a\u4f8b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u79df\u8d41\u65b9\u5f0f\uff0c\u8857\u533a\uff0c\u623f\u5c4b\u671d\u5411\u7b49\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u7528XPath\u6765\u5339\u914d\u548c\u5b9a\u4f4d\u5230\u8fd9\u4e2a\u6bb5\u843d\uff0c\u53d6\u51fa\u91cc\u9762\u7684\u6587\u672c\u3002\u5e38\u7528\u7684\u5339\u914d\u89c4\u5219\u4e3a / \u4ee3\u8868\u9009\u53d6\u76f4\u63a5\u5b50\u8282\u70b9\uff0c// \u4ee3\u8868\u9009\u62e9\u6240\u6709\u5b50\u5b59\u8282\u70b9\uff0c. \u4ee3\u8868\u9009\u53d6\u5f53\u524d\u8282\u70b9\uff0c.. \u4ee3\u8868\u9009\u53d6\u5f53\u524d\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c@ \u5219\u662f\u52a0\u4e86\u5c5e\u6027\u7684\u9650\u5b9a\uff0c\u9009\u53d6\u5339\u914d\u5c5e\u6027\u7684\u7279\u5b9a\u8282\u70b9\u3002\u4e0b\u9762\u662f\u79df\u8d41\u65b9\u5f0f\uff08\u6574\u79df/\u5408\u79df\uff09\u7684\u5339\u914d\u65b9\u5f0f\u3002</p> <p><pre><code>LeaseMethod = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a/text()')[0].strip().split(' ')[0].split('\u00b7')[0]\n</code></pre> \u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u6613\u7684\u53d6\u51fa\u8857\u533a\uff0c\u79df\u8d41\u65b9\u5f0f\uff0c\u671d\u5411\uff0c\u6bcf\u6708\u79df\u91d1\uff0c\u884c\u653f\u533a\uff0c\u677f\u5757\uff0c\u623f\u5c4b\u9762\u79ef\uff0c\u683c\u5c40\u548c\u53d1\u5e03\u65f6\u957f\u7b49\u4fe1\u606f\u3002</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#23","title":"2.3 \u53cd\u722c\u866b\u89e3\u51b3\u63aa\u65bd","text":"<p>\u7f51\u7ad9\u7684\u53cd\u722c\u63aa\u65bd\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u68c0\u6d4b\u8bbf\u95ee\u8bf7\u6c42\u5934\u3002\u4e14\u5982\u679c\u4e00\u4e2aheader\u77ed\u671f\u9891\u7e41\u53d1\u9001\u8bf7\u6c42\uff0c\u4e5f\u5f88\u5bb9\u6613\u88ab\u8bc6\u522b\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u591a\u4e2a\u8bf7\u6c42\u5934\uff0c\u6bcf\u6b21\u968f\u673a\u9009\u53d6\u4e00\u4e2aheader\uff0c\u4f2a\u88c5\u6210\u6d4f\u89c8\u5668\u8bbf\u95ee\uff1b\u4e14\u8bbe\u7f6etime sleep\uff0c\u6bcf\u6b21\u53d1\u9001\u8bf7\u6c42\u968f\u673a\u95f4\u9694\u4e00\u6bb5\u65f6\u95f4\u6765\u9632\u6b62\u51fa\u73b0error403/404\u3002\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u5982\u6dfb\u52a0Referer\uff0chost\uff0c\u4ee3\u7406IP\u7b49\uff0c\u8fd9\u91cc\u4e0d\u505a\u8fc7\u591a\u9610\u8ff0\uff0c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u6b22\u8fce\u81ea\u884c\u63a2\u7d22\u3002</p> <p>\u5b8c\u6574\u4ee3\u7801\u548c\u6700\u7ec8\u7ed3\u679c\u5982\u4e0b\u3002\u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u6b65\u5728\u94fe\u5bb6\u4e3b\u9875\u641c\u7d22\u65f6\u663e\u793a\u7684828\u6761\u8bb0\u5f55\u5df2\u7ecf\u5168\u90e8\u83b7\u53d6\u5230\u6570\u636e\u6846\u4e2d\u3002\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u5206\u6790\u5566\uff01</p> <pre><code>import requests\nfrom lxml import etree\nimport random\nimport time\nimport pandas as pd\n\n#\u4f2a\u88c5\u8bf7\u6c42\u5934\nuser_agents = [\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60',\n    'Opera/8.0 (Windows NT 5.1; U; en)',\n    'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',\n    'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n    'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 ',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36',\n    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14\",\n    \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)\",\n    'Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11',\n    'Opera/9.25 (Windows NT 5.1; U; en)',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',\n    'Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)',\n    'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',\n    'Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',\n    \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7\",\n    \"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 \"\n]\n\ndef getHeaders():\n    user_agent = user_agents[random.randint(0, len(user_agents)-1)]\n    headers = {\n        'User-Agent': user_agent\n    }\n    return headers\n\n\n#\u5bf9\u4e00\u4e2aURL\u53d1\u9001\u8bf7\u6c42\uff0c\u89e3\u6790\u7ed3\u679c\uff0c\u83b7\u53d6\u6240\u9700\u6570\u636e\ndef get_data(url):\n    #\u53cd\u722c\u866b\u7b56\u75651\uff1a\u968f\u673a\u53d6headers\n    response = requests.get(url, headers=getHeaders(), stream=True)\n    tree = etree.HTML(response.text)\n    # \u5b9a\u4f4d\u5230content__list\n    li_list = tree.xpath('//div[@class=\"content w1150\"]/div[@class=\"content__article\"]/div[@class=\"content__list\"]/div')\n    # all_house_list = []\n    for li in li_list:\n        #\u4e0b\u9762\u662f\u4e24\u79cd\u5b9a\u4f4d\u65b9\u5f0f\uff0c\u90fd\u53ef\n        # Nbhood = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a[@class=\"twoline\"]/text()')[0].strip().split(' ')[0].split('\u00b7')[1]\n        Nbhood = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a/text()')[0].strip().split(' ')[0].split('\u00b7')[1]\n        LeaseMethod = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a/text()')[0].strip().split(' ')[0].split('\u00b7')[0]\n        HouseOrientation = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a/text()')[0].strip().split(' ')[2]\n        Rent = li.xpath('.//div[@class=\"content__list--item--main\"]/span[@class=\"content__list--item-price\"]/em/text()')[0]\n        District = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--des\"]/a/text()')[0]\n        Location = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--des\"]/a/text()')[1]\n        Size = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--des\"]/text()')[4].strip()\n        HouseType = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--des\"]/text()')[6].strip()\n        releaseTime = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--brand oneline\"]/span[@class=\"content__list--item--time oneline\"]/text()')[0]\n        Link = li.xpath('.//div[@class=\"content__list--item--main\"]/p[@class=\"content__list--item--title\"]/a[@class=\"twoline\"]//@href')[0]\n        all_house_list.append((Nbhood,LeaseMethod,HouseOrientation,Rent,District,Location,Size,HouseType,releaseTime))\n\n    return all_house_list\n\n#\u5faa\u73af\u722c\u53d6\u6240\u9700\u79df\u623f\u4fe1\u606f\npages = ['https://sh.lianjia.com/ditiezufang/li143685063/pg{}rt200600000001l1l0ra1ra2ra0rp5rp6/'.format(x) for x in range(1,29)]\nall_house_list = []\ncount = 0\nfor page in pages:\n    a = get_data(page)\n    #\u53cd\u722c\u866b\u7b56\u75652\uff1a\u6bcf\u6b21\u722c\u53d6\u968f\u673a\u95f4\u96943-10s\n    time.sleep(random.randint(3,10))\n    count=count+1\n    print ('the '+str(count)+' page is sucessful')\n\nname = [\"\u8857\u533a\", \"\u79df\u8d41\u65b9\u5f0f\", \"\u671d\u5411\", \"\u6bcf\u6708\u79df\u91d1\", \"\u884c\u653f\u533a\",\"\u677f\u5757\",\"\u623f\u5c4b\u9762\u79ef\",\"\u683c\u5c40\",\"\u53d1\u5e03\u65f6\u957f\"]\npage_data = pd.DataFrame( columns= name,data=all_house_list)\n</code></pre>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2021-12-04-renting_data/#3","title":"3 \u603b\u7ed3","text":"<p>\u4e00\u53e5\u8bdd\u603b\u7ed3\uff0c\u722c\u53d6\u6570\u636e\u7684\u672c\u8d28\u5c31\u662f\u89c2\u5bdf\u548c\u627e\u89c4\u5f8b\u3002\u90a3\u4e48\u795d\u5927\u5bb6\u627e\u5230\u6ee1\u610f\u7684\u623f\u5b50\uff01\u6709\u65f6\u95f4\u7684\u8bdd\u4e0b\u6b21\u5199\u5199\u57fa\u4e8e\u83b7\u53d6\u7684\u623f\u6e90\u4fe1\u606f\u505a\u7684\u5206\u6790\uff0c\u5f53\u7136\uff0c\u5982\u679c\u9e3d\u4e86\u7684\u8bdd\u5f53\u6211\u6ca1\u8bf4~</p>","tags":["python"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/","title":"\u57df\u540d\u6ce8\u518c\u53ca\u5907\u6848\u5168\u6d41\u7a0b","text":"<p>Info</p> <p>\u4f5c\u8005\uff1aVoid\uff0c\u53d1\u5e03\u4e8e2022-01-03\uff0c\u9605\u8bfb\u65f6\u95f4\uff1a\u7ea64\u5206\u949f\uff0c\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u94fe\u63a5\uff1a</p>","tags":["server"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/#1","title":"1 \u524d\u8a00","text":"<p>\u5728\u4e07\u7269\u4e0a\u4e91\u7684\u4eca\u5929\uff0c\u8d2d\u4e70xx\u4e91\u7684\u4e91\u670d\u52a1\u5668\uff0c\u8dd1\u4e00\u4e9b\u81ea\u5df1\u7684\u670d\u52a1\u6216\u662f\u642d\u5efa\u4e2a\u4eba\u5fae\u535a\uff0c\u5df2\u7ecf\u662f\u4e00\u4e2a\u6210\u672c\u8f83\u4f4e\uff0c\u4e0a\u624b\u5bb9\u6613\u7684\u4e8b\u60c5\u3002</p> <p>\u5728\u6709\u4e86\u81ea\u5df1\u7684\u4e91\u670d\u52a1\u5668\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u516c\u7f51ip(\u5982139.196.74.248)\u8bbf\u95ee\u6211\u4eec\u7684\u7f51\u7ad9\u3002\u8fd9\u4e32\u6570\u5b57\u5e76\u4e0d\u6717\u6717\u4e0a\u53e3\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u7ed9\u7f51\u7ad9\u53d6\u4e00\u4e2a\u54cd\u4eae\u7684\u540d\u5b57\u5462\uff1f\u672c\u6587\u5c06\u4ecb\u7ecd\u5173\u4e8e\u57df\u540d\u6ce8\u518c\u53ca\u5907\u6848\u7684\u4e00\u7cfb\u5217\u6d41\u7a0b\u3002</p>","tags":["server"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/#2","title":"2 \u8d2d\u4e70\u4e91\u670d\u52a1\u5668\u53ca\u57df\u540d","text":"<p>\u4e91\u670d\u52a1\u5668\u7684\u8d2d\u4e70\u4e0d\u9700\u8981\u8d58\u8ff0\u3002\u5728\u963f\u91cc\u4e91\uff0c\u817e\u8baf\u4e91\u7b49\u5404\u79cd\u4e91\u4e0a\u6311\u9009\u7b26\u5408\u81ea\u5df1\u9700\u6c42\u7684\u914d\u7f6e\uff0c\u5728\u5408\u9002\u7684\u65f6\u673a(\u4fc3\u9500)\u8d2d\u4e70\u5373\u53ef\u3002\u6709\u4e86\u81ea\u5df1\u7684\u4e91\u670d\u52a1\u5668\u540e\uff0c\u53ef\u4ee5\u6839\u636exx\u4e91\u81ea\u5df1\u7684\u6587\u6863\uff0c\u505a\u4e00\u4e9b\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u5c06\u81ea\u5df1\u7684\u670d\u52a1\u8dd1\u8d77\u6765\u3002\u901a\u8fc7\u516c\u7f51IP\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u6210\u529f\u5730\u770b\u5230\u6b63\u5728\u8fd0\u884c\u7684\u670d\u52a1\u3002  </p> <p>\u4e0b\u9762\u5c31\u9700\u8981\u8fdb\u884c\u57df\u540d\u7684\u6ce8\u518c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7f51\u7ad9\u6ce8\u518c\u57df\u540d\uff0c\u8fd9\u91cc\u4ee5\u963f\u91cc\u4e91\u65d7\u4e0b\u7684\u4e07\u7f51\u4e3a\u4f8b\uff1a</p> <p>\u6211\u4eec\u4ee5\u5173\u952e\u8bcd<code>bullettech</code>\u8fdb\u884c\u641c\u7d22\u3002\u6709\u4e9b\u540e\u7f00\u7684\u57df\u540d\u5df2\u7ecf\u88ab\u4ed6\u4eba\u6ce8\u518c\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5408\u9002\u540e\u7f00\u7684\u57df\u540d\u4e0b\u5355\u8d2d\u4e70\u3002</p> <p>\u7ed3\u7b97\u9875\u9762\u5982\u4e0b\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e00\u4e9b\u91cd\u8981\u63d0\u9192\u3002\u540c\u65f6\uff0c\u6709\u4e00\u4e9b\u9644\u52a0\u670d\u52a1\u4f9b\u6211\u4eec\u9009\u62e9\uff0c\u5982\u5907\u6848\u7ba1\u5bb6\u670d\u52a1(\u6709\u4e13\u4eba\u8f85\u52a9\u5907\u6848\u6d41\u7a0b)\uff0c\u4e91\u89e3\u6790DNS(\u66f4\u597d\u5730\u5c06\u57df\u540d\u89e3\u6790\u4e3a\u6570\u5b57IP)\u7b49\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u81ea\u5df1DIY\u5e76\u4e0d\u590d\u6742\u5e76\u4e14\u81ea\u5e26\u7684DNS\u89e3\u6790\u5df2\u7ecf\u591f\u7528\u4e86\u3002  </p> <p>\u6211\u4eec\u81ea\u5df1\u7684\u7f51\u7ad9\u5e76\u6ca1\u6709\u8d2d\u4e70\u4efb\u4f55\u9644\u52a0\u670d\u52a1\u3002\u8bfb\u8005\u53ef\u4ee5\u6309\u9700\u4e86\u89e3\u540e\u8fdb\u884c\u9009\u62e9\u3002</p>","tags":["server"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/#3","title":"3 \u57df\u540d\u5907\u6848","text":"<p>\u5728\u6ce8\u518c\u5b8c\u57df\u540d\u540e\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u540d\u8ba4\u8bc1\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8d2d\u4e70\u7684xx\u4e91\u4e2d\uff0c\u627e\u5230\u5165\u53e3\u8fdb\u884c\u5b9e\u540d\u8ba4\u8bc1\u3002\u5b9e\u540d\u8ba4\u8bc1\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u6700\u7ec8\u4f1a\u5ba1\u6838\u901a\u8fc7\u3002  </p> <p>\u63a5\u7740\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5de5\u4fe1\u90e8\u7684ICP\u5907\u6848\u4e86\u3002\u540c\u6837\u6211\u4eec\u5728xx\u4e91\u4e2d\uff0c\u627e\u5230ICP\u5907\u6848\u7684\u5165\u53e3\uff0c\u5f00\u59cb\u5907\u6848\u3002\u5907\u6848\u9700\u8981\u586b\u5199\u4e00\u4e9b\u4fe1\u606f\uff0c\u5982\u7f51\u7ad9\u7528\u9014\u7b49\uff0c\u6211\u4eec\u5982\u5b9e\u586b\u5199\u5373\u53ef\u3002\u7531\u4e8e\u6211\u4eec\u7684\u7f51\u7ad9\u5c5e\u4e8e\u4e2a\u4eba\uff0c\u79d1\u6280\u7c7b\uff0c\u5907\u6848\u6d41\u7a0b\u8f83\u4e3a\u7b80\u5355\uff0c\u91d1\u878d\u76f8\u5173\u7684\u4ee5\u53ca\u67d0\u4e9b\u5176\u4ed6\u7f51\u7ad9\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u6d41\u7a0b\u3002  </p> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7f51\u7ad9\u540d\u79f0\u4e5f\u6709\u4e00\u5b9a\u7684\u8981\u6c42\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u8981\u6c42(\u5e26\u56fd\u5bb6\u3001\u5730\u533a\uff0c\u5546\u4e1a\u8bcd\uff0c\u8bba\u575b\u7b49)\u7684\u8bdd\uff0c\u53ef\u80fd\u5907\u6848\u65e0\u6cd5\u901a\u8fc7\u3002xx\u4e91\u4f1a\u5bf9\u5907\u6848\u8fdb\u884c\u521d\u5ba1\uff0c\u5982\u679c\u7f51\u7ad9\u540d\u79f0\u6709\u95ee\u9898\u7684\u8bdd\uff0c\u5ba2\u670d\u4f1a\u6253\u7535\u8bdd\u6c9f\u901a\u3002\u7f51\u7ad9\u540d\u79f0\u672c\u8eab\u5e76\u6ca1\u6709\u592a\u5927\u7684\u4f5c\u7528\u3002  </p> <p>\u6210\u529f\u63d0\u4ea4\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7b49\u5f85\u7ba1\u5c40\u7684\u5ba1\u6838\u4e86\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5ba1\u6838\u7684\u65f6\u95f4\u5e76\u4e0d\u957f\u3002\u4ee5\u4e0b\u5c31\u662f\u6574\u4e2aICP\u5907\u6848\u7684\u6d41\u7a0b\uff1a</p> <p>\u5907\u6848\u901a\u8fc7\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u7f51\u9875\u4e0a\u653e\u7f6eICP\u5907\u6848\u53f7\u5e76\u94fe\u63a5\u81f3<code>https://beian.miit.gov.cn</code>\uff0c\u7528\u7b80\u5355\u7684HTML\u5b9e\u73b0\u5373\u53ef\u3002</p>","tags":["server"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/#4","title":"4 \u516c\u5b89\u8054\u7f51\u5907\u6848","text":"<p>\u5728\u5de5\u4fe1\u90e8\u5907\u6848\u6210\u529f\u540e\uff0c\u6211\u4eec\u9700\u5728\u7f51\u7ad9\u5f00\u901a\u4e4b\u65e5\u8d7730\u65e5\u5185\u767b\u5f55<code>\u5168\u56fd\u4e92\u8054\u7f51\u5b89\u5168\u7ba1\u7406\u670d\u52a1\u5e73\u53f0</code>\u63d0\u4ea4<code>\u516c\u5b89\u8054\u7f51\u5907\u6848</code>\u7533\u8bf7\u3002</p>","tags":["server"]},{"location":"Main_Course/One_Day_Build/2022-01-03-domain/#5","title":"5 \u603b\u7ed3","text":"<p>\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0a\u57df\u540d\u6ce8\u518c\u3001\u5907\u6848\u7684\u6d41\u7a0b\u5e76\u4e0d\u7b97\u590d\u6742\u3002\u901a\u8fc7xx\u4e91\u7684\u6587\u6863\u4ee5\u53ca\u7f51\u4e0a\u7684\u8d44\u6599\uff0c\u6211\u4eec\u7684\u7f51\u7ad9\u5728\u77ed\u65f6\u95f4\u5185\u5b8c\u6210\u4e86\u6574\u4e2a\u6d41\u7a0b\uff0c\u80fd\u591f\u6210\u529f\u5730\u901a\u8fc7\u57df\u540d\u8bbf\u95ee\u3002</p>","tags":["server"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/","title":"Powerful and Visually Appealing Personal Note App - Notion","text":"<p>Info</p> <p>Author: Void, Published on June 6th, 2021, Reading time: about 6 minutes, WeChat Official Account Article Link: </p> <p>Taking notes, whether in school or at work, is an efficient and orderly way to live life. </p> <p>Common personal note-taking software includes:</p> <ul> <li>Microsoft's <code>OneNote</code></li> <li>China's <code>Evernote</code></li> </ul> <p>Today, we will introduce an iOS flat-style treasure app - Notion. This article is a personal review, starting from practical use and personal preferences, and only represents personal opinions.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#1-onenote","title":"1 OneNote","text":"<p>As a Microsoft product, it has the same Office-style as always, and it is neither ugly nor beautiful. It can be used personally or as a platform for enterprise team collaboration or knowledge sharing. The function is not powerful, but it is an undistinguished enterprise-level standard product.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#2-evernote","title":"2 Evernote","text":"<p>As a well-known domestic personal note-taking product, it has a large audience. However, when you open the homepage, there is a wave of \"50% off for 3 years for members\" advertisements, which makes people feel a bit of a deduction for Evernote.</p> <p>Notes are divided into two types: ordinary and super notes. The super notes and Notion are surprisingly similar, both composed of modules (Block), such as code blocks, tables, etc. However, some modules are exclusive to paid accounts, which is suffocating. The ordinary notes are indeed very ordinary and can meet the basic needs of most users. However, in terms of details, it is a bit boring. For example, there is a lack of code highlighting in the code block, and text editing does not have practical small details such as formatting brushes or plain text formats.</p> <p>In addition, the team collaboration functions that are advertised are just released and do not have too much presence.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#3-notion","title":"3 Notion","text":"<p>Notion is a note-taking application developed by a Silicon Valley start-up company. The first impression of the official website is a beautiful and simple illustration style, which can be seen that the team is putting effort into making products.</p> Notion <p>Its slogan is to promote the workspaces for team collaboration, and it supports mobile terminals, web terminals, and local clients. In terms of charges, free personal accounts can basically meet the needs of personal use.</p> Pricing <p>When you open Notion, the first getting started can be said to be an excellent note that fully showcases its functions. It includes interactive to-do lists, webpage links, and inserting videos, etc.</p> Getting Started","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#31-page","title":"3.1 Page","text":"<p>Each Page in Notion plays the role of both notes and folders. Pages can be nested with each other to form a tree structure, which is convenient for induction and sorting.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#32-block","title":"3.2 Block","text":"<p>Pages are composed of Blocks, which are powerful and diverse components, such as text blocks, code blocks, to-do lists, and lists. You can even insert maps, videos, etc. These Blocks can be freely dragged and converted, flexibly achieving various presentation effects. In combination with flat-style emoji, it can be said that it has reached a high level in both appearance and detail. Users can conveniently insert corresponding Blocks by entering commands such as /code (code block) by entering /.</p> <p>It is worth mentioning that Notion's code block also supports code highlighting in multiple languages.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#33-text-editing","title":"3.3 Text Editing","text":"<p>Notion also supports Markdown syntax. The Markdown text content completed in other apps can be directly copied and pasted into Notion for layout processing and organizing work. Less is more, only a few text formats not only avoid inconsistent formats but also have a simple and beautiful Zen, improving note efficiency.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#34-template","title":"3.4 Template","text":"<p>In addition, Notion also has 50+ built-in templates to meet the needs of different application scenarios, such as the Kanban for recording project progress:</p> KanBan <p>There is also a fully-equipped Personal Home:</p> Personal Home <p>When using it, just click the Templates in the lower left corner and select the corresponding template.</p> Using Templates <p>Of course, we can also make our templates for easy calling. For example, in the Meeting Notes page, we created the Project Review template. When we use it in batches, we only need to fill in the content.</p> Self-made Template","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#35-team-collaboration","title":"3.5 Team Collaboration","text":"<p>We have also tried the team collaboration function of Notion. In addition to sharing notes and knowledge sharing, we can also see real-time updates, comments, or use Kanban to meet the needs of some project management.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#36-other","title":"3.6 Other","text":"<p>In order to facilitate migration, Notion provides powerful import functions, including from commonly used Evernote, Word, and other software. After importing, you may need to use Blocks to layout the content. In addition, the previously criticized problems in Chinese search and unstable connections have been well resolved.</p> Import Ways","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#37-shortcomings","title":"3.7 Shortcomings","text":"<p>The only drawback is that:</p> <ul> <li>Notion's interface currently only supports English and Korean.</li> <li>Notion presents tables as Databases (with sorting, filtering and other functions), which is very powerful but cannot be used as the most common table.</li> <li>Blocks cannot be nested, such as lists cannot be nested in code blocks.</li> <li>The learning curve is slightly higher than that of OneNote and Evernote.</li> </ul>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-06-Notion/#4-summary","title":"4. Summary","text":"<p>In summary, Notion is an excellent note-taking application with a clear visual appeal, powerful functions, and even a little bit of \"fancy\". If you want to improve work efficiency and turn note-taking into a \"fun little happiness\" in life, you may want to give it a try.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/","title":"Let's get rid of my bookmarks - Practical computer software for installing machines","text":"<p>Info</p> <p>Author: Team, posted on June 15, 2021, Reading time: about 3 minutes, WeChat official account article link: : fontawesome-solid-link:</p> <p>There are always some magical software that can meet all kinds of needs.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#general","title":"General","text":"","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#1-huorong","title":"1 Huorong","text":"<p>Although encountering computer viruses in 2021 is extremely rare. We still need a security software to meet daily needs such as junk cleaning and vulnerability installation. Completely pop-up-freehuorong will become your silent \"guardian deity\".</p> huorong","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#2-smallpdf","title":"2 Smallpdf","text":"<p>Smallpdf can meet all pdf-related needs, including pdf compression, Office (Word, Excel, PowerPoint) and pdf mutual conversion, pdf to image, pdf merge, pdf unlock and protection, etc. After trying many online pdf services, Smallpdf is far ahead in terms of service scope and conversion quality.</p> Smallpdf","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#windows","title":"Windows","text":"","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#1-everything","title":"1 Everything","text":"<p>Everything is a search engine on Windows that can quickly locate the location of files and folders based on file names. With Everything, Mom no longer has to worry about me not finding the file.</p> Everything","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#2-internet-download-manager","title":"2 Internet Download Manager","text":"<p>Internet Download Manager claims to be the fastest downloader. In addition to high speed, it can download all kinds of content on web pages, including pictures, videos, etc. Once, when Thunderbolt was indifferent, only Internet Download Manager helped me download the required pdf file.</p> Internet Download Manager","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#3-grammarly","title":"3 Grammarly","text":"<p>Grammarly can be regarded as my personal grammar teacher. It is an English writing polishing software, which provides clients, MS Office suite, Chrome/Edge browser, mobile phone/tablet and other scenarios. It can help you check spelling, grammar errors, modify sentence structure, and the paid version (Premium) will also combine the context analysis and suggest more suitable word choices for the context, etc. With this software teaching you grammar at all times, your English writing ability will be improved unconsciously.</p> Grammarly","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#mac","title":"Mac","text":"","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#1-spark","title":"1 Spark","text":"<p>Spark is my favorite mail client developed by Readdle. The free function can meet the needs of most users. Its main advantages include: clean user interface, reasonable functional layout, practical smart inbox, rich shortcuts, flexible inbox rules and search, fast multi-platform synchronization, support for various third-party plugins, and personal version is free, etc. This is a product that makes people want to use it at first sight. The only downside is that Netease blocks Spark and other third-party email clients, which is a bit troublesome when configuring, but this is not a drawback of Spark, but of Netease.</p> Spark","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#2-pdf-expert","title":"2 PDF Expert","text":"<p>PDF Expert on macOS is the only one of PDF software, also developed by Readdle. Read, annotate, edit PDF, add photos, fill in forms, sign contracts, etc., all the operations you can think of, PDF Expert gives you an extremely smooth experience, and it will not be wrong to choose it.</p> PDF Expert","tags":["app"]},{"location":"en/Dessert/Apps/2021-06-15-Hotapps/#3-vectornator","title":"3 Vectornator","text":"<p>BulletTech uses Vectornator to complete all graphic designs. Although this software is less professional than Adobe Illustrator, its functions are sufficient for non-professional designers. As a lightweight graphic design software, it may be used as an entry choice for learning and work until skills become proficient. Then use more professional software.</p> Vectornator","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-12-Paste/","title":"Paste - Clipboard Tool","text":"<p>Info</p> <p>Author: Vincent, published on 2021-07-12, reading time: about 6 minutes, WeChat public account article link: </p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-12-Paste/#usage-tips","title":"Usage tips","text":"<p>Please refer to the video in the WeChat public account directly .</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/","title":"2021 07 19 Copilot","text":"<p>Say goodbye to programming for Google, experience the Copilot test version</p> <p>Info</p> <p>Author: Jeremy, Published on July 29, 2021, Reading time: about 8 minutes, WeChat public account article link: </p> <p>Recently, OpenAI and GitHub jointly released a code generation tool called Copilot. This tool is developed based on the GPT-3 natural language processing model and uses billions of lines of code on GitHub as training data to automatically provide code suggestions when writing code.</p> <p>At present, the product has been launched in the Vscode extension. As a novice who has been programming for Google for a long time, I couldn't wait to try it out and fortunately got the opportunity to test it a week or two ago.</p> <p>After a week of experience, I think Copilot's functionality is more powerful and flexible compared to other code completion tools. Sometimes I even feel like Copilot can really understand my thoughts and code, and its implementation. This significantly improves coding efficiency.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/#1-gtp-3-behind-copilot","title":"1 GTP-3 behind Copilot","text":"<p>GPT-3 is not unfamiliar to everyone-it may be the most popular natural language processing model in 2020, with a training cost close to 5 million yuan and model parameters exceeding 175 billion. It is a self-regressive model, which means that it predicts the probability distribution of the next text based on the front part of a piece of input text. Since its birth, GTP-3 has developed into several large and small different applications, such as some creative writing (poetry, novels, etc.), writing front-end code (debuild.co), and so on.</p> <p>Lu Xun once said that XXX is the best language. Since GTP-3 is so talented in language, it should also achieve something in writing code. As expected, CodeX-a programming language version based on GTP-3 modification-appeared soon, and Copilot is the first commercial application of CodeX.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/#2-copilot-experience","title":"2 Copilot experience","text":"<p>Copilot Official Website lists four usage directions of Copilot: * Convert comments to code * Automatically fill in repetitive code * Automatically write tests * Provide multiple code schemes</p> <p>It can be said that if the above four points can really be achieved, it can greatly improve the efficiency of code writing. After obtaining the trial qualification, I tested and experienced it according to the above points. Can it achieve the magical effect mentioned on the official website?</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/#21-writing-programs-from-scratch","title":"2.1 Writing programs from scratch","text":"<p>First, I created a new project and happened to want to check the price of Bitcoin at that time. By the way, let Copilot write me a function! I defined the function I wanted in the comments to see if Copilot could understand my meaning?</p> <p>Check the video of WeChat public account: []</p> <p>The first time I ran it, I was really \"shocked\" by Copilot. It seemed to understand my comments and started to define the function, pushing the incoming arguments to me eagerly, followed by the complete function code. Although there are similar language-to-code generation tools before, in terms of smoothness and accuracy of generated code, personally I feel that Copilot is far ahead of other tools.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/#22-writing-code-on-an-existing-project","title":"2.2 Writing code on an existing project","text":"<p>More often, we need to add or modify existing code, including writing functions with similar formats. Sometimes I choose to directly copy and paste the function and then modify it, but if there are many variables to be modified, I often miss, which causes errors during testing. So, in a similar scenario, can Copilot provide us with a more suitable \"reference answer\"?</p> <p>I did a simple test with the following code. In the DeepaiImageApi module, I want to pass the image data and image url to the API interface provided by DeepAI through two different functions. After I defined the first function method, let's see if Copilot can directly generate the code I want based on my comments:</p> Fill in repetitive code <p>The result is amazing! It can be seen that Copilot not only provides function names, codes, and parameter calls that conform to the project code, but also corresponds to the changes in the function content (the \"files\" parameter passed to \"request.post\" changes from \"image\" to \"url\"). It shows that Copilot does use the code in the local file as the input value of the model, and \"understands\" the important features of the code well, such as format, norms, structure, etc.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-07-19-Copilot/#3-intuitive-feeling","title":"3 Intuitive feeling","text":"<p>Overall, although the code generated by Copilot still needs to be checked and adjusted in most cases, its revolutionary code generation effect still amazes me, and sometimes even if the program is already written, I will deliberately press Ctrl+Enter to see Copilot's different ideas and methods.</p> <p>Finally, I would like to express a little personal opinion. Some people question that Copilot may take away some programmers' jobs after becoming mature, or gradually reduce the ability of programmers to think independently. As a novice programmer, I don't think there is a need to worry about it at present. Copilot feels like a Google specially provided for programmers, or a set of well-organized and fully-indexed code answer libraries. In the face of similar problems encountered by most people, Copilot can improve programming efficiency and reduce the time spent searching for appropriate answers when programming for Google.</p> <p>On the other hand, GTP-3 is essentially a self-regressive model, and we cannot rely on it to provide us with more innovative algorithms or code solutions. When most programmers are freed from repetitive and boring code, perhaps more human wisdom will be used in innovative work, thereby accelerating the progress of the industry.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-23-PicGo/","title":"PicGo Image Hosting, Just Right","text":"<p>Info</p> <p>Author: Vincent, Posted on October 23, 2021, Reading Time: About 6 minutes, WeChat Public Account Article Link: </p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-23-PicGo/#1-introduction","title":"1 Introduction","text":"<p>Pictures are indispensable in the workflow of self-media. A good image hosting can conveniently manage and reference pictures. In the article \"How to write a beautiful WeChat article in the quickest way possible,\" we introduced how to build an effective workflow. However, for some reasons, the GitHub image hosting in mdnice is no longer available. Therefore, we introduce a new practical image hosting tool - PicGo in this article.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-23-PicGo/#2-install-picgo","title":"2 Install PicGo","text":"<p>PicGo supports Windows, macOS, and Linux platforms, and installation files for each platform can be downloaded from its GitHub official website.</p> Download PicGo <p>After installation, you can see the main interface of PicGo:</p> PicGo main interface <p>Different functions can be switched on the left-hand side. As shown in the figure, the upload area is the same as all the uploaded pictures in the album. The configuration area will be introduced in detail below.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-23-PicGo/#3-configure-github-image-hosting","title":"3 Configure GitHub Image Hosting","text":"<p>PicGo supports multiple image hosting, such as SMMS, Qiniu Image Hosting, Tencent Cloud COS, UpYun Image Hosting, GitHub Image Hosting, Alibaba Cloud OSS, Imgur Image Hosting, etc. This tutorial uses the free GitHub Image Hosting as an example to describe the configuration process.</p> <p>Firstly, a GitHub account is necessary, and basic GitHub operations need to be familiar with. You can refer to the article \u201cTeaches You to Use GitHub Without Writing a Line of Code\u201d for learning. After registering for GitHub, generate Personal Access Tokens in <code>Personal Access Tokens</code> -&gt; <code>Developer Settings</code>. Only check the box for the repo to generate the token. As it is only displayed once, please be sure to save the token for later use.</p> Personal access tokens <p>Then configure parameters as shown below:</p> Configure PicGo <p>Generally, selecting the main branch is sufficient, but please note that it is best to specify the storage path to a folder rather than all piled up in the root directory of the branch. At the same time, setting a custom domain name can speed up the loading of images. BulletTech uses <code>https://cdn.jsdelivr.net/gh/BulletTech2021/Pics</code>.</p> <p>After the configuration is complete, drag the picture to the upload area, and you can see that the picture will be uploaded to GitHub automatically. At the same time, the image reference link (<code>https://cdn.jsdelivr.net/gh/BulletTech2021/Pics/img/Pics_in_github.png</code>) is automatically copied to the clipboard. This link can be used on various platforms to display the image.</p> The image has been uploaded to GitHub","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-23-PicGo/#4-conclusion","title":"4 Conclusion","text":"<p>PicGo is open-source and free. It has stable and reliable software quality and the developer is still updating the software. You can also conduct secondary development based on its foundation. This practical tool can significantly improve the efficiency of self-media workers!</p> <p>I hope this sharing can be helpful to you. Welcome to leave a message in the comment section for discussion.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-29-iOS-Shortcuts/","title":"iOS Shortcuts - The Automation Artifact","text":"<p>Info</p> <p>Author: Vincent, published on July 12, 2021, reading time: about 6 minutes, WeChat article link: </p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-10-29-iOS-Shortcuts/#tips-for-using-shortcuts","title":"Tips for Using Shortcuts","text":"<p>Please check the shortcuts video on WeChat official account.</p> <ul> <li>Quickly open health code: </li> <li>Quickly delete screenshots: </li> <li>Automatically remind when the charging is completed: </li> </ul>","tags":["app"]},{"location":"en/Dessert/Apps/2021-11-26-APIintro/","title":"Interesting API Introduction","text":"<p>Info</p> <p>Author: Echo, published on November 26, 2021, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["app","python"]},{"location":"en/Dessert/Apps/2021-11-26-APIintro/#1-preface","title":"1 Preface","text":"<p>Friends, another beautiful weekend has arrived, did you have a happy week? Were you praised? Have you figured out what to do to enjoy the weekend? Today, let's start with these questions and talk about the romance and happiness that data science brings us.</p>","tags":["app","python"]},{"location":"en/Dessert/Apps/2021-11-26-APIintro/#2-two-silly-yet-interesting-apis","title":"2 Two Silly Yet Interesting APIs","text":"<p>Maybe you are tired after working/studying for a week; maybe it's winter and the cold and work make you unhappy; maybe you've been sitting for too long and eating too much, after all, every day is a cheating day, the soreness of your shoulders and the heaviness of your fat make you a little tired. So, let me introduce you to the first silly API, which can automatically generate funny and romantic sayings to make you happy. </p> Example of funny sayings <p>Every weekend, I always think about what to do. I don't know if you have the same problem. If so, the following boredAPI may be able to help you. Its API name is self-explanatory. Whenever you are bored, it can generate some activities for you to refer to. These include the content, type, number of participants, cost, link (if any), and feasibility. For example, I randomly generated some activities in the morning when I was bored, and now I'm doing the fifth thing it recommended to me :)</p> Example of recommended activities <p>Of course, you can also modify it according to your own preferences. Here is a reference to the activity parameters for boredAPI. The official documentation is also attached here. You can limit the type, the number of participants, the cost, and the feasibility according to your needs, making it more tailored to your needs. For example, on the day when I am determined to learn something, I limit the activities to education type, and the example is as follows. We are amazed to find that learning activities are really almost zero-cost, can be started at any time, and can be done alone. There is no excuse for not learning anymore...</p> Example of learning activities Reference to activity parameters","tags":["app","python"]},{"location":"en/Dessert/Apps/2021-11-26-APIintro/#3-code-implementation","title":"3 Code Implementation","text":"<p>API (Application Programming Interface) is an interface for applications. It allows us to implement various interesting functions with just a few simple lines of code without having to reinvent the wheel. In the following demo, we call two APIs to randomly generate funny sayings and recommended activities. All you need to do is run it again. The code is as follows:</p> <pre><code>import requests\nimport json\nimport random\nimport time\nimport pandas as pd\n\nuser_agents = [\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60',\n    'Opera/8.0 (Windows NT 5.1; U; en)',\n    'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',\n    'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n    'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 ',\n    'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36',\n    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14\",\n    \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)\"\n]\n\ndef getHeaders():\n    user_agent = user_agents[random.randint(0, len(user_agents)-1)]\n    headers = {\n        'User-Agent': user_agent\n    }\n    return headers\n\n# Feeling tired, listen to some sweet words of encouragement\nsweet_words = []\nurl1 = 'https://chp.shadiao.app/api.php'\nfor i in range(5):\n    time.sleep(random.uniform(0.1,1))\n    response1 = requests.get(url1, headers=getHeaders())\n    sweet_words.append(response1.text)\ntruth = pd.DataFrame(sweet_words,columns=['Words of Encouragement'])\ntruth\n\n# See what to do on the weekend\ntodo = []\n#generate random activity\nurl2 = 'http://www.boredapi.com/api/activity/'\n#generate a specific type of activity randomly. The following example is for education type.\n# url2 = 'http://www.boredapi.com/api/activity?type=education'\nfor i in range(5):\n    time.sleep(random.uniform(0.1,1))\n    response2 = requests.get(url2, headers=getHeaders())\n    item = json.loads(response2.text)\n    todo.append((item[\"activity\"],item[\"type\"],item[\"participants\"],item[\"price\"],item[\"link\"],item[\"accessibility\"]))\ntodo_list = pd.DataFrame(todo,columns=['Things to Do','Category','Number of Participants','Price (0-1)','Link','Feasibility (0-1)'])\ntodo_list['Feasibility (0-1)'] = 1-todo_list['Feasibility (0-1)']\ntodo_list\n</code></pre>","tags":["app","python"]},{"location":"en/Dessert/Apps/2021-11-26-APIintro/#4-conclusion","title":"4 Conclusion","text":"<p>The two APIs introduced today are very easy to use, as</p>","tags":["app","python"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/","title":"Introduction to Apache Projects","text":"<p>Info</p> <p>Author: Void, Published on December 25, 2021, Reading Time: About 6 Minutes, WeChat Official Account Article Link: </p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#1-preface","title":"1. Preface","text":"<p>The Apache Software Foundation is a non-profit organization that provides support for operating open-source software projects. From a community of developers exchanging technical information in the beginning, Apache has become the world's largest open-source software foundation. Its various open-source software has served various industries around the world and entered into our daily life.</p> <p>This article will briefly introduce some common Apache Top-level projects. The so-called top-level projects refer to graduating projects that have been incubated and meet certain quality requirements.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#2-airflow","title":"2. Airflow","text":"<p>Apache Airflow is a platform for scheduling and monitoring data pipeline workflows written in Python. It builds workflows through DAG (Directed Acyclic Graph). Through visualization on the web page, we can intuitively observe dependencies, monitor progress, and manage tasks.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#3-arrow","title":"3. Arrow","text":"<p>Apache Arrow is a cross-platform format for memory data processing and exchanges. It uses columnar storage and reduces communication overhead between systems because different platforms use the same memory format.</p> <p>Using Python to read large data files often takes a long time. We can use Pyarrow to greatly reduce this time-consuming process. Feather is a type of data format included in the Apache Arrow project, and we can store and read Dataframe as a feather file.</p> <pre><code>df.to_feather(path, compression, compression_level)\ndf = pd.read_feather('data.feather')\n</code></pre>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#4-avro","title":"4. Avro","text":"<p>Apache Avro is a serialization format that is independent of programming languages. It can be combined with the Hadoop ecosystem, and Hive table definitions can also be directly declared with Avro schema.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#5-flink","title":"5. Flink","text":"<p>Apache Flink is a stream processing framework. It executes arbitrary stream data programs in data parallelism and pipeline modes. It is worth mentioning that in 2019, Alibaba acquired Flink for US$100 million. This shows that Flink meets Alibaba's needs for complex real-time computing very well.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#6-hadoop","title":"6. Hadoop","text":"<p>Apache Hadoop is a distributed system infrastructure and is one of today's indispensable big data ecosystems. The core design of the Hadoop framework is HDFS (Hadoop Distributed FileSystem) and MapReduce. HDFS provides storage for massive data, and MapReduce provides computing for massive data.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#7-hive","title":"7. Hive","text":"<p>Apache Hive is a distributed data warehouse system based on Hadoop. It can translate SQL into MapReduce programs and send them to the calculation engine for computation. Hive is active in various Internet companies, and it is also an old friend that accompanies me every day.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#8-http-server","title":"8. HTTP Server","text":"<p>Apache HTTP Server is the most popular web server today. It does not need much introduction; the Apache Foundation also originated from this project.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#9-kafka","title":"9. Kafka","text":"<p>Apache Kafka is a high-throughput distributed publish-subscribe messaging system that can efficiently process action stream data.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#10-pig","title":"10. Pig","text":"<p>Apache Pig is also based on the Hadoop ecosystem, and it provides a class SQL language called Pig Latin, which will convert SQL-like data analysis requests into a series of optimized MapReduce operations.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#11-spark","title":"11. Spark","text":"<p>Apache Spark is another famous project. It provides a unified data processing platform. It has a general parallel framework similar to Hadoop MapReduce, but with some optimizations. It includes Spark Core, Spark SQL, Spark Streaming, MLlib, etc.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#12-tez","title":"12. Tez","text":"<p>Apache Tez constructs an application framework by allowing complex DAG tasks to run in projects such as Apache Hive and Apache Pig.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#13-zookeeper","title":"13. ZooKeeper","text":"<p>Apache ZooKeeper is an animal administrator for Hadoop (elephant), Hive (bee), and Pig (pig). It is a distributed, open-source program coordination service with main features including configuration management, name services, distributed locks, and cluster management.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2021-12-25-Apache/#14-conclusion","title":"14. Conclusion","text":"<p>It can be seen that the Apache Foundation has incubated many famous projects, and these projects are used in various software, serving all aspects of our lives. Thank you for the contribution of these open source giants!</p>","tags":["app"]},{"location":"en/Dessert/Apps/2022-01-04-Z-Library/","title":"Z-Library, a high-quality platform for downloading scientific e-books","text":"<p>Info</p> <p>Author: Vincent, published on January 4th, 2022, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["app"]},{"location":"en/Dessert/Apps/2022-01-04-Z-Library/#1-introduction","title":"1 Introduction","text":"<p>When I was in college and graduate school, the library had a rich collection of books, and I always found the books I wanted to read. It was a fortunate event. After starting work, I read more e-books for convenience. Therefore, having a good place to find e-books saved me a lot of time and energy, so today I would like to share a free e-book download platform with friends who enjoy reading e-books: Z-Library.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2022-01-04-Z-Library/#2-z-library","title":"2 Z-Library","text":"<p>The URL of Z-Library is: https://zh.u1lib.org. As of January 4th, 2022, the site has recorded <code>9,354,602</code> books and <code>84,837,646</code> articles. After entering the homepage, you can search using keywords such as book title, author, ISBN, publisher, and MD5.</p> <p>Tip</p> <p>Due to various complex reasons, it is currently somewhat difficult to use Z-Library. You can use the following alternative links instead:</p> <ul> <li>clibrary</li> <li>Anna's Archive</li> </ul> Z-Library homepage <p>After completing the search, click on the book that interests you. On the results page, you can directly download the book, preview it online, or send it to your Kindle or email (login required):</p> Download, preview, and send books to your personal devices <p>After testing it, I found that commonly used Chinese and English books can be found, but the online preview speed is relatively slow, so it is recommended to download or send it directly to your device. My usual method is to download it directly on my iOS mobile device and open it in the Books app, which will automatically sync the book to all of my Apple devices, which is very satisfying!</p> Download and read books directly on your mobile phone","tags":["app"]},{"location":"en/Dessert/Apps/2022-01-04-Z-Library/#3-using-the-ipfs-network","title":"3 Using the IPFS network","text":"<p>By visiting https://zlib.knat.network and searching for a book, you can obtain the latest available IPFS gateway. Two recommended websites to obtain the IPFS gateway are:</p> <ul> <li>https://ipfs.github.io/public-gateway-checker</li> <li>https://ipfs-checker.1kbtool.com/</li> </ul> <p>Here is an example:</p> <ol> <li>search \"Intellectuals and Society\" by \"Thomas Sowell\" on https://zlib.knat.network and get the corresponding IPFS CID: <code>bafk2bzacean2aoojxovgmf7557mtrdyufo3t4bidc6haghxcbtbxznmwaaij2</code></li> <li>using https://ipfs.github.io/public-gateway-checker to get the IPFS gateway provided by Cloudflare: https://cloudflare-ipfs.com/ipfs/bafybeifx7yeb55armcsxwwitkymga5xf53dxiarykms3ygqic223w5sk3m#x-ipfs-companion-no-redirect</li> </ol> <p>Replace the example IPFS CID with the corresponding IPFS CID obtained from the previous step:</p> <p>https://cloudflare-ipfs.com/ipfs/bafk2bzacean2aoojxovgmf7557mtrdyufo3t4bidc6haghxcbtbxznmwaaij2</p> <p>Now you can access the link to download the book.</p>","tags":["app"]},{"location":"en/Dessert/Apps/2022-01-04-Z-Library/#4-conclusion","title":"4 Conclusion","text":"<p>Z-Library is a free e-book download platform with such a smooth user experience. I hope this share will be helpful to you. Enjoy and cherish it! </p>","tags":["app"]},{"location":"en/Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/","title":"Free Experiment Platform - Amazon SageMaker Studio Lab","text":"<p>Info</p> <p>Author: Vincent, published on 2021-06-06, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["app","python"]},{"location":"en/Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/#1-sagemaker-studio-lab","title":"1 SageMaker Studio Lab","text":"<p>I have always been a loyal user of Google Colab, and its free GPUs are very useful computing resources for data science researchers. However, the basic free version of Colab can only use one runtime at a time and must have scientific internet access to access the product. Recently, Amazon launched the SageMaker Studio Lab, which can be seen as a similar product to Google Colab. Amazon also generously provides free computing power (with CPU and GPU options). ==After registering an account, experiments can be conducted anytime on the web without needing scientific internet access! ==</p> Amazon SageMaker Studio Lab <p>Note: I occasionally encountered a prompt saying \"there are too many users currently using the CPU and GPU projects concurrently, and they cannot be launched\" during the use of CPU and GPU projects, and the resources of the GPU are more scarce compared with Google Colab. If this situation occurs, you can wait a few minutes. If it still cannot be launched, you can only use another environment for experiments. I have never encountered this situation in Google Colab, and I am not sure if it will be improved in the future.</p> <p>After entering the project, the software interface is very similar to the native JupyterLab, and if you have similar experience, you can start using it immediately. At the same time, this also means that users can run multiple code files at the same time, which is an advantage of Amazon SageMaker Studio Lab compared to Google Colab.</p> Jupyter user interface <p>Files will still be stored in the system after the project is closed, which makes it convenient to continue using them next time. Overall, the experience of Amazon SageMaker Studio Lab is basically the same as the native JupyterLab.</p>","tags":["app","python"]},{"location":"en/Dessert/Apps/2022-05-28-SageMaker-Studio-Lab/#2-other-related-learning-resources","title":"2 Other related learning resources","text":"<p>Amazon SageMaker Studio Lab displays some reference projects on the project homepage, such as <code>Dive into Deep Learning (D2L)</code>, <code>Hugging Face</code>, etc. These are all excellent learning resources. You can click to copy the project to your own file system and practice.</p> <p>Among them, <code>Dive into Deep Learning (D2L)</code> is led by Amazon's <code>Sr. Principal Scientist Li Mu</code> (also known as Mu Li), and Mu Li offers free courses on deep learning on multiple platforms:</p> <ul> <li>The e-book \"Dive into Deep Learning\": https://d2l.ai/</li> <li>Bilibili @Learning AI with Li Mu: https://space.bilibili.com/1567748478/channel/seriesdetail?sid=358497</li> </ul> <p>If you are interested, you can go to the corresponding platform to learn and practice! I hope this sharing is helpful to you, and I welcome you to discuss it in the comments section!</p>","tags":["app","python"]},{"location":"en/Dessert/Hardware/2020-03-14-MX-Keys/","title":"Working from Home with a Different Posture - Logitech MX Keys + M720 Subjective Review","text":"<p>Info</p> <p>Author: Vincent, posted on March 14, 2020, reading time: about 9 minutes, WeChat public account article link: </p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-03-14-MX-Keys/#changes-in-working-environment-need-for-keyboard-and-mouse-devices","title":"Changes in Working Environment, Need for Keyboard and Mouse Devices","text":"<p>I work in the field of data science, and my company uses a desktop computer with dual monitors, equipped with a conventional HP keyboard and mouse. At home, I use a 2015 13-inch MacBook Pro, and I have been accustomed to using the keyboard and touchpad that come with it, so I don't have any additional keyboard or mouse. Usually, I don't spend much time using my computer at home, so I never thought about upgrading my computer and accessories. Recently, the company arranged for us to work from home, and the amount of time spent using my computer each day has increased significantly compared to before. When I write code using my laptop, I unconsciously lean my head forward, and over time, my neck becomes sore. Therefore, I purchased a stand to elevate my computer, which ensures that my torso stays as upright as possible. However, after setting up the stand, I found that using the touchpad and keyboard that come with my computer for prolonged periods of time causes pain in my wrists due to the unnatural position of my wrists. Therefore, reluctantly, I started looking for a keyboard and mouse:)</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-03-14-MX-Keys/#device-requirements","title":"Device Requirements","text":"<p>Compared to many programmers, I am not very interested in mechanical keyboards, but there are several important requirements that the device must meet:</p> <ul> <li>Keyboard layout is friendly to macOS</li> <li>Wireless</li> <li>Convenient for multi-device switching, as I prefer to complete lightweight work on my iPad</li> <li>Good-looking</li> </ul> <p>Of course, I haven't spent too much time researching keyboards that meet my requirements, and mainly because this is for work, so I basically chose from Logitech's keyboards. Logitech's keyboards are indeed diverse, with prices ranging from a little over 100 to over 1,000, which can meet the needs of most people. Because I won't upgrade my keyboard for a long time in the future, I plan to get it right the first time, so I just looked at the prices in reverse order. Two candidates stood out:</p> <ul> <li>Logitech Craft</li> <li>Logitech MX Keys</li> </ul> <p>The price difference between these two keyboards in Logitech's self-operated store on JD.com is between 100 and 200. At first, I was inclined to choose the Craft, which was priced at</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/","title":"2020 04 05 iPad Pro","text":"","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#-hardware","title":"- hardware","text":"","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#2020129ipad-pro-","title":"\u521d\u8bc62020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u672a\u6765\u53ef\u671f","text":"<p>Info</p> <p>Author:\uff1aVincent\uff0cPosted on 2020-04-05\uff0cReading time: 15 mins\uff0cWeChat Post Link:\uff1a</p> <p>2020\u5e743\u6708\uff0cApple\u5728\u5b98\u7f51\u6084\u7136\u4e0a\u7ebf\u4e86\u65b0\u6b3eiPad Pro\uff0c\u8ba9\u4f17\u591a\u7b49\u5f85\u5df2\u4e45\u7684\u7c89\u4e1d\u5174\u594b\u4e0d\u5df2\uff0c\u56e0\u4e3a\u8ddd\u79bb\u4e0a\u4e00\u6b21iPad Pro\u7684\u66f4\u65b0\uff0c\u5df2\u6709\u4e00\u5e74\u534a\u65f6\u95f4\u4e86\u3002\u5de7\u7684\u662f\uff0c\u8fd9\u4e5f\u662fiPad\u4ea7\u54c1\u7ebf\u7684\u7b2c\u5341\u4e2a\u5e74\u5934\u3002</p> <p>\u65b0\u54c1\u52a0\u91cf\u8fd8\u964d\u4ef7\uff0c\u57fa\u7840\u5b58\u50a8\u5bb9\u91cf\u6269\u5c55\u5230128Gb\uff0c\u5168\u7cfb\u6807\u914d6G\u8fd0\u5b58\uff0c\u786c\u4ef6\u65b9\u9762\u6700\u5927\u7684\u4eae\u70b9\u65e0\u7591\u662f\u5728Apple\u4ea7\u54c1\u7ebf\u4e0a\u9996\u6b21\u642d\u8f7d\u7684LiDAR\u6fc0\u5149\u4f20\u611f\u5668\uff0c\u4e3a\u672a\u6765AR\u5e94\u7528\u7684\u53d1\u5c55\u63d0\u4f9b\u4e86\u5f3a\u608d\u7684\u786c\u4ef6\u57fa\u7840\u3002\u800c\u66f4\u8ba9\u4eba\u671f\u5f85\u7684\u662f\uff0c\u968f\u65b0iPad Pro\u4e00\u540c\u7684iPadOS 13.4 \u9996\u6b21\u5bf9\u9f20\u6807/\u89e6\u63a7\u677f\u63d0\u4f9b\u4e86\u7cfb\u7edf\u7ea7\u7684\u652f\u6301\u3002\u8fd9\u4e00\u5207\u90fd\u6697\u793a\u4e86Apple\u7684\u613f\u666f\uff0c\u6216\u8bb8\u672a\u6765\u771f\u7684\u5c31\u50cf\u5ba3\u4f20\u6807\u8bed\u6240\u8bf4\u7684\u90a3\u6837\uff0ciPad\u53ef\u80fd\u4f1a\u6210\u4e3a\u5f88\u591a\u4eba\u7684\u4e0b\u4e00\u53f0\u201c\u7535\u8111\u201d\u3002</p> <p>\u5728\u8ba2\u8d2d\u65b0iPad Pro\u524d\uff0c\u672c\u4eba\u62e5\u6709\u7684\u4e00\u53f0\u975e\u5e38\u7ecf\u5178\u7684iPad Air 2\uff0c2G\u7684\u8fd0\u5b58\u52a0\u4e0a\u5f53\u65f6\u6700\u5f3a\u7684\u79fb\u52a8\u8bbe\u5907\u82af\u7247\uff0c\u8ba9\u642d\u8f7diPadOS\u7684\u5b83\u5230\u4eca\u5929\u4e3a\u6b62\uff0c\u5728\u7edd\u5927\u591a\u6570\u4efb\u52a1\u4e0a\u90fd\u8868\u73b0\u5f97\u5341\u5206\u6d41\u7545\u3002\u4f46\u76f8\u8f83\u4e8e\u65b0\u6b3eiPad Pro\u800c\u8a00\uff0c\u8f83\u5c0f\u7684\u5c4f\u5e55\u548c\u76f8\u5bf9\u8f83\u5f31\u7684\u6027\u80fd\u4f7f\u5f97\u5b83\u4f3c\u4e4e\u6709\u4e9b\u548c\u4e00\u76f4\u88ab\u70ed\u8bae\u7684iPad\u751f\u4ea7\u529b\u6e10\u884c\u6e10\u8fdc\u4e86\u3002\u56e0\u4e3a\u5e73\u65e5\u5de5\u4f5c\u4e5f\u5e38\u5728iPad\u4e0a\u770b\u6587\u732e\u3001\u5199\u90ae\u4ef6\u3001\u4e66\u5199\u7b14\u8bb0\uff0c\u5bf9\u4e8e\u4f7f\u7528\u4e86\u591a\u5e74\u8001\u8bbe\u5907\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u4e00\u6b21\u7684\u5347\u7ea7\u8db3\u591f\u6709\u8bda\u610f\uff0c\u6240\u4ee5\u770b\u5230\u65b0\u54c1\u53d1\u5e03\u6beb\u4e0d\u72b9\u8c6b\u4e0b\u5355\u4e86\u3002</p> 2020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u6df1\u7a7a\u7070\u8272","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#1-hardware-experience","title":"1 hardware experience","text":"<p>In the days of waiting for the receipt, I watched many accessories and peripherals that can be used with iPad Pro. The keyboard mouse bought it before the iPad was released. Choose Logitech's MX Keys and M720. For detailed experience, please refer to the link:</p> <p>The remaining peripherals include:</p> <ul> <li>Bellkin USB-C hub (model F4U092)</li> <li>Anker 60W dual Type-C PD fast charging head</li> <li>Microsoft Xbox wireless handle</li> <li>ESR protective shell and the containing tempered film</li> <li>Apple Pencil 2</li> </ul> <p>After all the peripherals arrived, the iPad arrived, and the company couldn't wait to remove the packaging. The design of the full screen was very stunning. It was too shocking for a person who was used to the silly black and thick border.</p>  iPad Pro packaging box   12.9 -inch iPad Pro front   12.9 -inch iPad Pro back  <p>The only difference between the 11 -inch and 12.9 -inch version is only the screen size. I went to the Apple Store to experience it before buying. I personally feel that the 12.9 -inch version is more friendly for users with text input requirements.The content of the screen display can be seen clearly.The capacity selection is 128GB because I will timely transfer multimedia files to the external hard disk, and I also subscribe to the iCloud space. If everyone feels troublesome, you can also put a large capacity.</p>  Sudden programmer stickers  <p>From the perspective of parameters, the quality of this screen is basically the same as that of the 2018 iPad Pro, which is still the best display on the mobile device.For non -PRO -level iPad, the most obvious difference is the silky experience brought by the Promotion technology. Whether it is a finger or a Pencil_ mouse_ touchpad, you can give you significantly better than other iPad experiences.The iPad Pro equipped with four speakers has great advantages in entertainment experiences such as watching movies and playing games.</p>  iPad Pro screen technology, picture source: Apple official website  <p>In daily use, Faceid brings a lot of convenience. When unlocking machines, purchasing applications, selecting key series passwords, etc., you can hardly feel its existence, because it is too fast, ** and almost use it almost normallyVarious angles can quickly unlock **, which is much more convenient than Touchid.If you use the external keyboard and mouse/touchpad at the same time, the experience of experience brought by Faceid will be more obvious, because your hand does not need to frequently touch the screen to complete the verification, everything is done inadvertently, I look forward to this very much, I am looking forward to this very much. I look forward to this very much. I look forward to this very much.One technology is applied to MAC as soon as possible!</p>  2020 iPad Pro rear camera module   Apple Measure Application  <p>At present, the most intuitive improvement brought by LIDAR in AR applications is the improvement of accuracy and recognition speed. I use the Measure application of the Measure application of the MEASURE application to measure the size of the object. The response is very rapid.The measurement data can be displayed on the screen.In the IKEA Place AR application of IKEA, after selecting the furniture, the software can quickly measure the space data of the room and then render the display. The performance is very stunning.This new hardware can undoubtedly bring more possibilities to the iPad in the future.</p> <p>In terms of taking pictures, the quality of iPad's camera is not as good as the iPhone, and I won't go into details here. After all, few people take a half -pound large board to take pictures outside.Essence</p> <p>The battery life continues the outstanding performance of the iPad. It is no problem for normal study and work, but it is recommended that you buy a PD fast charging head to speed up the charging speed.** Names ** Output power is about 30W.Full electricity starts. It may still be 40-50%of the electricity left in the morning to noon in the morning. Put the power supply and charge before cooking and eating at noon. The basic electricity is full after eating, and it will not be delayed.</p> <p>Overall, ** hardware parameters have not significantly improved compared to the 2018 Pro, but compared to other iPads that are not equipped with Faceid, if there is an upgrade demand, 2020 iPad Pro will never disappoint you.</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#2-software-experience","title":"2 Software Experience","text":"<p>In recent years, I have more and more like to watch WWDC. On the one hand, because of the iOS, iPados and MacOS released in recent years, they have really brought the functions and characteristics of many users who want to see, such as the dark mode on iOS and iPados., Support for mouse/touchpad, dark mode on MacOS, Suihang and other functions.On the other hand, the latest operating systems bought by the equipment I bought in previous years also rarely stuck, but they can also experience the most advanced functions as the latest equipment.The compatriots are extremely friendly :)</p> <p>Although it's a joke, I have to say that for iPad, the launch of iPados has more potential, and iPados 13.4 makes these more realistic.The biggest highlight of iPados 13.4 is undoubtedly system -level support for the mouse and touch version.Used on the official website [Many space] (https://www.apple.com.cn/ipados/) Let's introduce this latest feature:</p>  iPad supports touchpad  <p>All in all, ** touchpads are better than the mouse experience. Because many touchpad gesture mouse cannot be easily realized, this principle is the same as using touchpads and mouse on MAC.</p>  iPados allows the function of custom mouse buttons  <p>At present, the functional location of the custom third -party mouse is somewhat secret. You need to find \"touch control\" in the auxiliary function. After clicking, you can have a custom setting function at the bottom. You can define the function of the button under the sub -menu:</p>  iPados allows personalized settings for the mouse buttons  <p>It is not all the keys on the mouse that supports customs, but personally I think it is not easy to do this in the first version. After customizing it according to your own habits, it has a good experience.Great progress, because your hand no longer needs to leave the keyboard/mouse to touch the touch screen.</p> <p>This is actually a huge change, because the operation method of ** is very similar to using traditional computers.At the same time, Apple has designed a adaptive form for the cursor. When it is suspended on different content, the cursor can make corresponding changes.Praise.However, please note that many softwares have not yet adapted the cursor, and it will be slightly discounted in the experience of third -party software.</p>  iPados cursor hovering on the text, automatically change the form  <p>Why is the introduction of cursor is a big thing for iPad?Because many tasks need to be accurate control, this feeling is like when iPad supports Apple Pencil for the first time, because ** it increases the dimension and accuracy of interaction.It's more convenient than using your fingers.</p> <p>Taking the cursor as an example, I often use OneNote to record the content of the work on iPad. When you use your fingers to choose and move in many texts, everyone feels the same.Already working.But with the cursor, the efficiency of the mouse click+keyboard operation is almost the same as the desktop operating system.After counting it, the following tasks have been more accustomed to ** on the iPad:</p> <p>** Work &amp; Learning: **</p> <ul> <li>Reply to the email (read attachments and reference materials, write content, insert attachment)</li> <li>Open a network meeting (do speaking, draw schematic diagrams on the whiteboard, and record the meeting of the meeting)</li> <li>Modify the manuscript that is done on the desktop (Office documents can be simply edited on the iPad. Note: The 12.9 -inch iPad cannot enjoy the Office kit for free.</li> <li>Peer Code Review &amp; modify code (depending on your working environment and infrastructure)</li> <li>Temporary records of ideas or writing drafts</li> <li>Read professional books and literature, read teaching videos</li> </ul> <p>** Leisure: **</p> <ul> <li>Watching movies (screens and microphones are better than many Macs)</li> <li>Photos, editing videos, drawing</li> <li>write an essay</li> <li>Lightweight game (Note: At present, the game of iPad supports the handle is limited)</li> <li>Reading (Note: 12.9 -inch models can practice Kirin arm for a long time)</li> </ul> <p>The above tasks can be carried out at the same time in many cases, and I usually open several applications at the same time.Under normal circumstances, the contents of the 12.9 -inch models are still easy to see clearly on the left and right screens. If the size of the font is not appropriate, you can drag the control bar in the middle to adjust the window size.Occasionally, a suspension window (as shown below) will be temporarily added. After processing, you only need to move the cursor to the right side of the screen to hide the suspension window.** The multi -tasking processing experience brought by large screen+high performance is very good. The application switching is very smooth. At the same time, 6G storage can ensure that most of the applications can be retained in the background.</p>  Left and Right Screen + Suspension screen","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#3-peripheral","title":"3 peripheral","text":"","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#31-apple-pencil","title":"3.1 Apple Pencil","text":"<p>For a person who writes code, he uses it more to record notes and write drafts.For the rest of the scene, this pen is not as useful, not a necessary accessories.However, I usually like photography and also have a certain basis for sketching, so I bought the Apple Pencil auxiliary operation, such as using a pen to repair, sketch, or make some labels.Bar.</p>  Sketch Pro hand -painted work   AFFINITY Photo trimming   Apple Pencil subjective evaluation","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#32-xbox-one-handle","title":"3.2 Xbox One handle","text":"<p>I was a handle I bought in the Apple Store. The corporate discount was 10 % off, which was about the same price as the Internet.The handle in the Apple Store is only black. I experience some games in the store. The handle has a low delay and a good feel.</p>  Xbox One Handle  <p>I play less games, mainly because I want to relax when the work pressure is very strong.I asked the clerk in the store. At present, there are not many games that support the handle in the App Store. I downloaded some games by myself and found that the games that support the handle are relatively limited.EssenceThe game I am playing currently includes:</p> <ul> <li>Alto odyssey</li> <li>Wild drag racing 9</li> <li>NBA 2k20</li> </ul> <p>If you want to play the game with the iPad, the current software adaptation may disappoint you.</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2020-04-05-iPad-Pro/#4-summary","title":"4 Summary","text":"<p>As a data science practitioner, roughly estimate that, except for the concentrated time to write code, about 80%of the remaining work can be efficiently completed with iPados iPad (screenshot display, please forgive me)The cursor.In fact, you can see that the above tasks have contained many types of work tasks. If developers can develop more professional software on iPados, it is estimated that many people will further improve the productivity of iPad.</p> <p>Ten years ago, Mr. Qiao put the iPad between the iPhone and Mac. In the past ten years, because of the restrictions on the operating system, the iPad is actually closer to the iPhone, but today, ten years later, ** iPados let the iPad leave the iPad away from the iPados away from the iPados away from the iPados.Mac is closer than ever. Maybe they will become more and more similar in the future. Perhaps the productivity before buying. After buying iQiyi, it will become the past after buying, but it is certain that iPados is enough to make people the future of the iPad.Full of expectations.</p>  iPad Pro + iPados ~ = Productivity","tags":["hardware"]},{"location":"en/Dessert/Hardware/2021-01-02-Apple-Watch-S5/","title":"One Year's Use of Apple Watch S5 - No Regrets!","text":"<p>Info</p> <p>Author: Vincent, published on 2021-01-02, reading time: about 10 minutes. Link to the article on WeChat official account: </p> <p>I have been hesitating for a year to write this article. I must admit that I had a lot of hesitation when I bought my Apple Watch, because it is not a necessary electronic product. Since its release in April 2015, it has been considered by the public for a long time as a flashy but not practical product, and I, including myself, have always been skeptical about it. However, when the Apple Watch S5 was released in October 2019, the addition of an always-on screen function made it more acceptable to ordinary users, so I bought my first Apple Watch with a try -out mentality.</p> <p>After more than a year of use, looking back in early 2021, I want to share my feelings from the perspective of an ordinary user about the changes brought about by this unusual watch.</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2021-01-02-Apple-Watch-S5/#1-appearance","title":"1 Appearance","text":"<p>Since its release, the appearance of the Apple Watch has hardly changed.</p>","tags":["hardware"]},{"location":"en/Dessert/Hardware/2021-06-03-Mac-mini/","title":"Half-year Experience of M1 Mac mini - The New Future of Mac","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-06-03, Read time: about 12 minutes, WeChat article link: [](https://mp.weixin.qq.com/s?__biz=MzI4Mjk3NzgxOQ==&amp;mid=2247483932&amp;idx=1&amp;sn=533ebbb843dac745675da8657ffeaf</p>","tags":["hardware"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/","title":"How to Write a Beautiful Article at the Fastest Speed","text":"<p>Info</p> <p>Author: Vincent, published on July 2, 2021, reading time: about 4 minutes, WeChat Official Account article link: </p>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#1-introduction","title":"1 Introduction","text":"<p>For a team that needs to quickly publish text content on multiple platforms, it is crucial to improve the efficiency of writing and formatting. In order to find the most efficient method, we have researched many materials and tested many tools. Finally, we have established an effective and time-saving workflow for publishing articles at BulletTech. This article will introduce the details of this workflow to help you understand how to write a beautiful article at the fastest speed and synchronize it to various platforms.</p>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#2-workflow","title":"2 Workflow","text":"<p>In short, there are the following steps:</p> <ul> <li>Brainstorm topics and schedule writing tasks</li> <li>Create a Markdown text without any formatting</li> <li>Render the Markdown text and publish the article</li> <li>Track reading data and gradually optimize</li> </ul>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#21-brainstorm-topics-and-schedule-writing-tasks","title":"2.1 Brainstorm Topics and Schedule Writing Tasks","text":"<p>Currently, all BulletTech articles are original, so every week team members need to have a meeting to discuss writing topics. Team members determine writing topics based on channel positioning, their own knowledge reserves, and user reading feedback, and then use Notion to schedule writing tasks. For tips on using Notion, please refer to Void's excellent work: Powerful and Beautiful Personal Note-Taking Application - Notion.</p> Scheduling writing tasks using Notion","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#21-create-a-markdown-text-without-any-formatting","title":"2.1 Create a Markdown Text Without any Formatting","text":"<p>Because different platforms have varied formats, the simplest way is to create plain text at first, and then use the \"Format Paintbrush\" to create beautiful styles. Therefore, Markdown becomes the ideal choice as it uses specific identifiers to mark styles that can be easily converted into beautiful HTML for viewing by users on mobile devices and computers. For example, the writing format for a small heading is:</p> <pre><code>- Title-1\n- Title-2\n</code></pre> <p>After rendering, it will be easily readable:</p> <ul> <li>Title-1</li> <li>Title-2</li> </ul> <p>Therefore, there is no need to worry about format chaos when writing an article. After writing the text, it is easy to apply pre-set styles to the Markdown file.</p>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#23-render-the-markdown-text-and-publish-the-article","title":"2.3 Render the Markdown Text and Publish the Article","text":"<p>We recommend using the free web client, mdnice, for rendering article styles. Simply copy and paste the Markdown text into the mdnice editor, select an appropriate theme, and the style can be rendered. You can also use CSS to adjust the style to build your own exclusive style. Mdnice supports configuring GitHub image hosting, where uploaded images generate a universal link that allows each platform to correctly access the image without repeated uploads.</p> <p>Moreover, mdnice supports exporting article styles for WeChat and Zhihu. The export effect is excellent, and minor adjustments can achieve the publishing state. Using the WeChat export style also adapts well to Toutiao and CSDN. Efficiency is extremely high when publishing on multiple platforms.</p> mdnice Web Editor","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#24-track-reading-data-and-gradually-optimize","title":"2.4 Track Reading Data and Gradually Optimize","text":"<p>As WeChat Official Account is the main battlefield, we mainly optimize articles' reading data: number of readings, number of shares, number of people who follow after reading, reading channels, etc. The evaluation criteria for each channel are different and are not detailed here. We recommend using WeChat's Subscription Assistant app, which can manage Official Accounts conveniently: add content, reply to comments, check data, etc. By using this tool, you can keep in close contact with users anytime, anywhere.</p>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-07-02-Posting-Workflow/#3-conclusion","title":"3 Conclusion","text":"<p>The above is a brief introduction to the BulletTech workflow. Such an efficient method can help us quickly turn ideas into articles and share them with everyone. I hope this article can help you, and welcome your feedback in the comments!</p>","tags":["experience"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/","title":"\"Year-end\" Article Review and New Menu Release","text":"<p>Info</p> <p>Author: Void, Published on 2021-11-17, Reading Time: About 4 minutes, Link to the WeChat article: </p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#1-introduction","title":"1 Introduction","text":"<p>Although it is not yet the end of the lunar year, the gradually colder weather and the upcoming year-end review seem to add some correctness to the act of doing a \"year-end review\".</p> <p>Our project started at the end of May, and as an important component, the WeChat official account is a place for us to record knowledge related to data science. It can motivate us to learn new knowledge, and it is also convenient to look back on in the future and review what we have learned. If it can also provide value for readers, that would be even better.</p> <p>Therefore, our choice of articles is always a bit arbitrary, and over time, it may seem a bit messy. Taking this opportunity, we have reorganized the classification of articles and released a new menu. More importantly, we also want to take this opportunity to review the articles we have published and do a \"year-end summary\".</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#2-main-course-of-technology","title":"2 Main Course of Technology","text":"<p>The main course of technology focuses on hardcore programming and AI content, and is also the most output part of our content. It is divided into three sub-parts: artificial intelligence, programming essences, and analysis tools.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#21-artificial-intelligence","title":"2.1 Artificial Intelligence","text":"<p>The artificial intelligence section focuses on algorithms and applications related to machine learning, AI (Artificial Intelligence), including the following four points:</p> <ul> <li>Experience sharing</li> <li>Deep learning</li> <li>Algorithms</li> <li>Competitions</li> </ul> <p>In the experience sharing section, we mainly share tricks based on our own experience (troubleshooting experience) and high-quality resources such as \"Rules of Machine Learning\", \"A Recipe for Training Neural Networks\", and Kaggle forum during the entire process of applying machine learning modeling.</p> <p>For us, these experiences are all valuable, cannot be directly looked up, and could only be learned by spending a lot of time and efforts.</p> <p>The deep learning section mainly introduces the machine learning framework Tensorflow, including how to install it on Apple Silicon Macs, various callbacks, how to customize models, and how to build a model to recognize flower images with biased applications. If you want to learn Tensorflow better, why not check out our deep learning topic?</p> <p>The algorithm part includes recursion, search, sorting in data structures and algorithms, decision trees in machine learning, multi-task algorithms, and double difference models that can be used in strategies.</p> <p>The competition section is about the competitions we have participated in or interpretations of open source solutions with high scores. Learning from the experts always yields a lot.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#22-programming-essences","title":"2.2 Programming Essences","text":"<p>Programming essences involve the programming languages and related applications we often use, including the following three points:</p> <ul> <li>Python</li> <li>SQL</li> <li>Applications</li> </ul> <p>We use Python and SQL the most. In the Python section, we introduce common data structures including dictionaries, lists, and tuples, as well as the useful PySpark package for processing big data.</p> <p>In the SQL section, we first introduce common data warehouses. Then, we focus on introducing the popular data warehouse SnowFlake and its architecture, permission, and practical guidelines in the usage process. Finally, we introduce the Python package that can parse SQL statements: sqlparse.</p> <p>The application section includes various fun applications. Technology is not only cool but also practical. We introduce how to use Python to build a Taobao grabbing robot, reserve tennis courts, crawl job information and PDF files, build a forum, and intelligent ordering on 12306. We also introduce A/B testing, which is a very useful analysis methodology in both work and life.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#23-analysis-tools","title":"2.3 Analysis Tools","text":"<p>Analysis tools introduce the basic infrastructure that are indispensable in the program development process:</p> <ul> <li>Git</li> <li>Containers</li> </ul> <p>Git mainly provides version control and work management functions. We introduce how to use GitHub and common commands. GitHub can also be fun. We introduce some cool features of GitHub, such as GitHub Action and using GitHub to make an online resume.</p> <p>Docker allows developers to package applications and dependencies into containers, making development easier. We introduce what Docker is and how to run Docker on Windows systems step by step.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#3-technology-desserts","title":"3 Technology Desserts","text":"<p>So much hardcore knowledge may overwhelm some of our readers. We also provide technology desserts to let everyone relax and have some fun. It focuses on the experience sharing in software and hardware and is divided into four parts: experience sharing, product experience, apps, and iOS.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#31-experience-sharing","title":"3.1 Experience Sharing","text":"<p>Experience sharing includes our original story and how to write WeChat articles scientifically.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#32-product-experience","title":"3.2 Product Experience","text":"<p>Product experience mainly shares our experience in using hardware, including M1 Mac mini, Apple Watch S5, iPad Pro, and Logitech mouse. We do not carry any goods or have any advertising fees, so this is our most authentic evaluation.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#33-apps","title":"3.3 Apps","text":"<p>The Apps section includes some useful software, including the good-looking personal note-taking application Notion, PicGo image bed for uploading images, code generation tool Copilot, code hosting platform GitHub, practical computer software, and Google Analytics for analyzing website traffic.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#34-ios","title":"3.4 iOS","text":"<p>We have senior Apple fans in our team, so we introduce some useful tools in the iOS usage process. With these tools, we believe that the user experience can be greatly improved.</p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2021-11-17-Articles-Review/#4-conclusion","title":"4 Conclusion","text":"<p>It has been almost half a year since our project Kickoff. Although we do not have many fans, we continue to tirelessly output knowledge related to data science and enjoy doing so. </p> <p>This \"year-end summary\" introduces our newly organized new menu, hoping that everyone will have the interest to take a look. We also reviewed the more than 50 articles and videos we released. If 1% of the content is useful to you, then we have achieved our goal.</p> <p>Finally, thank you for accompanying us, our readers! </p>","tags":["bullettech"]},{"location":"en/Dessert/Tactics/2023-03-04-US-enterance/","title":"Memo for L Visa Holders to Enter the United States","text":"<p>Info</p> <p>Author: Yuan Zidantiqifei, published on June 6, 2021, reading time: about 6 minutes, WeChat Public Account Article Link: </p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-04-US-enterance/#1-overview","title":"1 Overview","text":"<p>This article is a concise guide to the essential materials and considerations for L visa holders to enter the United States.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-04-US-enterance/#2-required-entry-materials","title":"2 Required Entry Materials","text":"<p>L1 visa holders</p> <ul> <li> Latest I-94</li> <li> Visa stamp</li> <li> Form I-129S with the approval stamp</li> <li> Fully vaccinated proof </li> <li> Covid negative proof in the last 2 days</li> </ul> <p>Spouses and children of L1 visa holders</p> <ul> <li> Latest I-94</li> <li> L-2 Visa stamp</li> <li> Fully vaccinated proof </li> <li> Covid negative proof in the last 2 days</li> </ul> <p>For Chinese citizens entering the United States for the first time, if their I-94 is blank, there is no need to carry it. Those who have previously entered the United States can download and print the latest I-94 from the I-94 official website.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-04-US-enterance/#2-considerations","title":"2 Considerations","text":"<p>In addition to the required documents listed above, it is recommended to keep and carry the materials that were prepared for the visa interview in case they are needed:</p> <ul> <li>Support letter</li> <li>Educational documents</li> </ul> <p>Warning</p> <p>Do not carry more than $5,000 in cash. Essential funds can be transferred to a US account through bank remittance.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-04-US-enterance/#3-reference-links","title":"3 Reference Links","text":"<ul> <li>FAQs for I-94 After Entering the United States</li> <li>Download Official Proof of Vaccination: Use the <code>International Version of Health Code</code> mini program in WeChat to download.</li> <li>Negative Covid Test or Recovery Certificates Required for Entry to the United States</li> </ul> <p>We hope this sharing will be helpful to you. Please feel free to leave a comment in the comment section for discussion!</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/","title":"A Simplified Guide to Obtaining a US Driver's License","text":"<p>Info</p> <p>Author: Yuanzidanqifei, published on June 6th, 2021, Reading Time: Approximately 6 minutes, WeChat Public Account Article Link:  : fontawesome - solid-link: </p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/#1-introduction","title":"1 Introduction","text":"<p>In many parts of the United States, driving is necessary for transportation. While using a Chinese driver's license, you may be able to drive for a limited time in many states. However, if you plan on living in the United States for an extended period of time, it is recommended that you obtain a US driver's license as soon as possible for easy transportation in the future. This article briefly introduces the examination process and practical reference materials, using Illinois as an example. It should be noted that the experiences shared in this article are only applicable to those who already have a Chinese driver's license. For those who have no driving experience, it is recommended to learn driving skills according to local laws and regulations before participating in the examination.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/#2-examination-process","title":"2 Examination Process","text":"<p>If you hold a Chinese driver's license, you can rent a car in Illinois and go to the nearest Department of Motor Vehicles (DMV) for the examination. Before departure, make an appointment on the DMV website or go directly to a testing center that does not accept appointments. Make sure to bring the necessary documents to prove your identity and residency, which can be found in the Illinois Secretary of State Document Requirements to obtain a Driver\u02bcs License/State ID Card. In summary, the required information and corresponding documents are as follows:</p> <ul> <li>Written Signature: Passport</li> <li>Social Security Number: Social security card</li> <li>Date of Birth: I-94 or U.S. visa</li> <li>Residency: Official Electronic Statement</li> </ul> <p>Note</p> <p>There is no need to wait for a certain period of time before taking the examination in Illinois. If you have documents proving your residency in Illinois (the fourth item above) you can take the examination immediately.</p> <p>The examination process includes:</p> <ul> <li>A visual test</li> <li>A written test (a total of 35 questions, 27 of which must be answered correctly to pass)</li> <li>A driving test (you can use a rental car for the examination, carrying a rental contract or vehicle insurance card)</li> </ul> <p>The driving test is different from that in China. The driver first sits inside the car, and the examiner issues instructions to check the condition of the car (such as whether the lights and horn are working properly). After confirming that the vehicle is in good condition, The examiner gets into the car and gives instructions on how to operate the vehicle. The driver follows the instructions and completes the driving test. Once all parts of the examination are completed successfully, a temporary driver's license will be issued on the same day. It has the same legal effect as an official driver's license, which will be mailed to your mailing address within three weeks.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/#3-reference-materials","title":"3 Reference Materials","text":"<p>There are many reference materials online, but for those who have sufficient driving experience, it is recommended to directly review the following websites or links to learn about the important experiences for both the written and driving tests.</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/#31-written-test","title":"3.1 Written Test","text":"<ul> <li>Written Test Simulation Questions</li> </ul>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-05-US-DL/#32-driving-test","title":"3.2 Driving Test","text":"<ul> <li>2022 How To Pass Your Driving Test/Driving Class for Beginners</li> <li>Top 10 Most Common Mistakes to Avoid on Your Driver's Test</li> <li>Top 10 Reasons Automatic Fail Driving Test</li> </ul> <p>For those who plan to study or work in the United States, it is hoped that this article will be helpful for you!</p>","tags":["usa"]},{"location":"en/Dessert/Tactics/2023-03-26-US-Svc/","title":"Guide to Essential Documents and Services for Living in the US","text":"<p>Info</p> <p>Author: Yuan Zi, published on March 26, 2023, reading time: approximately 6 minutes. WeChat article link: </p>"},{"location":"en/Dessert/Tactics/2023-03-26-US-Svc/#1-overview","title":"1 Overview","text":"<p>There are many essential documents and services to apply for when living and working in the United States. This article briefly introduces the methods that Chinese citizens can use to obtain or apply for these documents and services.</p>"},{"location":"en/Dessert/Tactics/2023-03-26-US-Svc/#2-social-security-card","title":"2 Social Security Card","text":"<p>After arriving in the United States, it is important to apply for a Social Security Card and remember your Social Security Number (SSN), as it is required for many aspects of life and work. For Chinese citizens, you can find the closest Social Security Administration office to you on Google Maps and bring the following documents as <code>originals</code>:</p> <p>Note</p> <p>Many Social Security Administration offices do not accept appointments. After preparing your documents, go to the office on the day of and queue up to handle your business.</p> <ul> <li> Passport</li> <li> I-94: US entry and exit record, which can be printed from the US government website</li> <li> If you are an F-1 or M-1 student, bring your I-20 (Certificate of Eligibility for Nonimmigrant Student Status)</li> <li> If you are a J-1 or J-2 visiting scholar, bring your DS-2019 (Certificate of Eligibility for Exchange Visitor Status)</li> </ul> <p>At the same time, provide proof of your address (such as a lease agreement, utility bills, etc.).</p> <p>Tip</p> <p>Before applying for your Social Security Card, you can fill out the application form on the SSA official website, and after completing it, print out the form and record the application number. You can show the application form directly to the Social Security Administration when you go, or you can fill it out on-site if you haven't done so online.</p>"},{"location":"en/Dessert/Tactics/2023-03-26-US-Svc/#3-debit-card-credit-card","title":"3 Debit Card &amp; Credit Card","text":"<p>In the US, a debit card corresponds to a checking account, and a savings account has a certain interest rate. You can first open a checking account and the bank will give you a corresponding debit card. For Chinese citizens, the following original documents are required to apply for a debit card:</p> <ul> <li> Passport or US driver's license</li> <li> Social Security Card (Note: Not all banks require an SSN to open a checking account)</li> <li> Proof of address (such as a lease agreement, utility bills, etc. Not all banks require an SSN to open a checking account)</li> </ul> <p>After the application is approved, the bank will mail the card to your home address. Some banks allow you to link the card to an e-wallet (such as Apple Pay) for easier use. Refer to each bank's policy for specific details.</p> <p>Tip</p> <p>The required documents for applying for a credit card are similar, but the bank will review your credit history and there is a chance that your application will be denied. For Chinese citizens who have just arrived in the US, you can apply for Secured Credit Cards, which involves locking a portion of your deposit in the credit card and using that as your credit limit. Using this type of credit card and making timely payments can help build a good credit history.</p> <p>This article will continue to be updated. We hope that this information is helpful to you and welcome you to leave a comment for discussion!</p>"},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/","title":"How to Use GitHub without Writing a Single Line of Code","text":"<p>Info</p> <p>Author: Vincent, published on June 23, 2021, reading time: about 5 minutes, WeChat article link: </p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#1-what-is-github","title":"1 What is GitHub?","text":"<p>Many people think of GitHub as a tool mainly used by programmers for coding. In fact, the main feature of GitHub is version control and collaboration, which means that not only programmers but also non-technical people can use it to work more efficiently. Therefore, this article will teach you how to use GitHub from scratch, and help you get to know this powerful productivity tool. First, let's get familiar with some common GitHub terms:</p> <ul> <li>Repository: can be considered as a folder for storing code and files. When you are the repository owner, you can set access permissions.</li> <li>Remote Repository: a copy of the repository, usually used to make changes, which will be later added to the repository main branch.</li> <li>Main/Branch: the current status of the project.</li> <li>Branch: a copy of the main branch, used to temporarily store modified states, usually for updating the main branch.</li> <li>Push: submit modifications to the repository.</li> <li>Pull: synchronize updates from the repository to the current work state.</li> <li>Pull Request: used to merge modifications on the branch to the main branch.</li> <li>Merged: updates on the branch have been merged to the main branch, and the repository is updated.</li> </ul> Diagram of common GitHub terms <p>Next, we will mainly use the GitHub Desktop client (which can be downloaded for free from the official website) to introduce the functions, which allows you to use most of GitHub's core functions.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#2-what-can-github-do","title":"2 What Can GitHub Do?","text":"<p>GitHub is an excellent tool for version control and collaboration.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#21-version-control","title":"2.1 Version Control","text":"<p>Specifically, version management can help save the modified history of files, so that it can be easily checked and rolled back when needed.</p> GitHub Desktop view of version history <p>In the example, BulletTech's repository saves the change history, and you can click on the change to see the modified files and the corresponding updates.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#22-collaboration","title":"2.2 Collaboration","text":"<p>These changes were made by members of the BulletTech team. When multiple people collaborate, it is recommended to work on different branches. After completing the updates, you can merge the updates on your branch to the main branch through a pull request (\u2318/Ctrl + R). At this time, the software will automatically guide you to the web page to create a request. Members of the team can review the changes. If they meet the requirements, the update can be merged to the main branch.</p> Merge request <p>It is recommended to set the merge request template. Filling in the update information clearly will save a lot of communication time and make it easier to trace back in the future. You can find the corresponding template in our repository and modify it according to your needs for use in your own project.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#23-build-a-blog","title":"2.3 Build a Blog","text":"<p>GitHub provides free server hosting for simple blogs. BulletTech's own blog is built on GitHub. You just need to enable the GitHub Pages feature in the repository settings, and the blog will be generated automatically. GitHub provides many templates to choose from, or you can write your own from scratch. We won't go into detail here. If you are interested, please visit our repository to view the source code and learn.</p> BulletTech blog","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#3-how-to-use-github","title":"3 How to Use GitHub","text":"","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#31-create-a-repository","title":"3.1 Create a Repository","text":"<p>After registering for GitHub, on your homepage, click the most prominent green button (New) to create a new repository. Clicking into the repository and clicking the green button (Code) will open GitHub Desktop and download the files to your computer. You can now start your project!</p> Create a repository Open the repository with GitHub Desktop","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-06-23-Github-Intro/#32-basic-functions-of-github-desktop","title":"3.2 Basic Functions of GitHub Desktop","text":"<p>Basic operations are shown in the figure below. Please note that sometimes there may be conflicts when synchronizing (pulling) the repository. Most of the time it is because the local update has not been synchronized to the branch, but other people have updated the branch. In this case, you need to stash or discard your updates before synchronizing, which can be found in the top menu under Branch.</p> Basic operations of GitHub Desktop <p>In summary, after mastering these basic knowledge and skills, you can use GitHub smoothly for file management, collaborative work, and create your own blog, and so far, without writing a single line of code. Of course, using code can also operate GitHub conveniently. Next time we will use command operations to explore GitHub. Stay tuned!</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/","title":"A List of Common Git Commands","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-07-15, Reading Time: about 5 minutes, Article link on WeChat Official Account: </p> <p>In the article Teach You to Use GitHub with Zero Code where we introduced how to use GitHub Desktop to operate GitHub, the graphical interface is very friendly for friends who are not familiar with commands. However, sometimes it is more convenient to directly run Git commands in a code editor or terminal, so this article will introduce some commonly used commands to help you level up your Git skills.</p> Using Git in the terminal","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#1-configuring-git","title":"1 Configuring Git","text":"<p>First, you need to let Git know who you are, so set your username:</p> <pre><code>git config \u2013-global user.name\n</code></pre> <p>Set your email:</p> <pre><code>git config --global user.email\n</code></pre>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#2-setting-up-git-repository","title":"2 Setting up Git repository","text":"<p>Create a new blank repository:</p> <pre><code>git init\n</code></pre> <p>Clone a repository to the current folder:</p> <pre><code>git clone &lt;repo URL&gt;\n</code></pre> <p>Display the list of remote repositories:</p> <pre><code>git remote -v\n</code></pre> <p>Delete a remote repository:</p> <pre><code>git remote rm &lt;remote repository name&gt;\n</code></pre> <p>Fetch the latest changes from the server, but do not merge them into the current working document:</p> <pre><code>git fetch\n</code></pre> <p>Fetch and merge the latest changes from the server into the current working document:</p> <pre><code>git pull\n</code></pre>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#3-managing-changes-to-files","title":"3 Managing changes to files","text":"<p>Add all changes to the cache:</p> <pre><code>git add &lt;file name&gt;\n</code></pre> <p>Remove a file and do not keep its modification history:</p> <pre><code>git rm &lt;file name&gt;\n</code></pre> <p>Recover a deleted file and prepare it for update submission:</p> <pre><code>git checkout &lt;deleted file name&gt;\n</code></pre> <p>Display the status of modified files:</p> <pre><code>git status\n</code></pre> <p>Some files are ignored by version control because they are unnecessary for the project, such as some cache and log files. Use this command to view the list of ignored files:</p> <pre><code>git ls-files \u2013other \u2013ignored \u2013exclude-standard\n</code></pre> <p>Display the changes of all files in the current directory:</p> <pre><code>git diff\n</code></pre>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#4-git-commands-related-to-submitting-changes","title":"4 Git commands related to submitting changes","text":"<p>Submit the changes and comment the content:</p> <pre><code>git commit -m \"&lt;commit content&gt;\"\n</code></pre> <p>Switch to the state of a certain submission:</p> <pre><code>git checkout &lt;commit&gt;\n</code></pre> <p>Undo all changes made in a certain submission:</p> <pre><code>git reset \u2013hard &lt;commit&gt;\n</code></pre> <p>Undo changes in the current working folder:</p> <pre><code>git reset \u2013hard Head\n</code></pre> <p>Display modification history:</p> <pre><code>git log\n</code></pre> <p>Stash current changes and use later:</p> <pre><code>git stash\n</code></pre> <p>Retrieve previously stashed files:</p> <pre><code>git stash pop\n</code></pre> <p>Clear stashed files:</p> <pre><code>git stash drop\n</code></pre> <p>Create a tag to mark the current file version:</p> <pre><code>git tag &lt;tag version&gt;\n</code></pre> <p>Push changes to origin:</p> <pre><code>git push\n</code></pre> <p>Push changes to another branch:</p> <pre><code>git push &lt;current branch&gt;:&lt;branch to push to&gt;\n</code></pre>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#5-git-branch-operations","title":"5 Git branch operations","text":"<p>Display all branches:</p> <pre><code>git branch\n</code></pre> <p>Create a new branch and switch to the new branch:</p> <pre><code>git checkout -b &lt;branch name&gt;\n</code></pre> <p>Switch to a new branch:</p> <pre><code>git checkout &lt;branch name&gt;\n</code></pre> <p>Delete a branch:</p> <pre><code>git branch -d &lt;branch name&gt;\n</code></pre> <p>Merge another branch into the current branch:</p> <pre><code>git merge &lt;branch name&gt;\n</code></pre> <p>Fetch a branch from a remote repository:</p> <pre><code>git fetch remote &lt;branch name&gt;\n</code></pre> <p>Check the differences between two branches:</p> <pre><code>git diff &lt;source branch&gt; &lt;destination branch&gt;\n</code></pre>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-15-Git-Commands/#6-git-tips","title":"6 Git Tips","text":"<p>Are the myriad of commands making you dizzy? Try it out in your code editor and terminal! Finally, summarize some tips for using Git in your daily life to help you reduce errors and improve efficiency:</p> <ul> <li>Before you start work, check the current status of origin first. Your teammates may have updated the files, make sure you work on the latest files.</li> <li>Make sure to complete sufficient testing before submitting updates to ensure your updates are valid.</li> <li>Submit updates in a timely manner to allow your teammates to synchronize their progress.</li> <li>Clearly describe the comments in the changes and submissions, describe the difficult parts in detail.</li> <li>Make full use of branching to make changes. It is not recommended to make changes directly on the master branch to avoid unexpected errors.</li> </ul>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/","title":"Discussing Google Analytics","text":"<p>Info</p> <p>Author: Vincent, Published on 31 July 2021, Reading Time: About 6 Minutes, WeChat Article Link: </p>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#1-introduction","title":"1. Introduction","text":"<p>Many products and strategic decisions on the internet today are driven by data. For example, at BulletTech, when operating WeChat official accounts, we monitor important indicators such as traffic sources, replication, and follow-up after reading through backend data for each article. This data can help us analyze reader preferences, traffic channels, and make flexible adjustments to article themes and promotional strategies. For platforms that already have a good data analysis infrastructure, ready-made solutions can save decision makers a lot of time. But if you have built a product from scratch, how do you construct the infrastructure and strategy for data analysis? This article will take BulletTech's blog as an example to introduce how to use Google Analytics (GA) to analyze website performance.</p>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#2-the-role-of-google-analytics","title":"2. The Role of Google Analytics","text":"<p>GA is a free tool released by Google for website and mobile app analysis. After GA is configured on a website, it can capture user behavior data on the website to help optimize it. GA plays an important role in the following areas of analysis:</p> <ul> <li>Marketing: GA can clearly show the behavior and conversion rates of users from each channel on the website, helping to optimize inferior channels.</li> <li>Search Engine Optimization (SEO): GA has multiple dimensions for traffic acquisition, allowing you to see which content helps get more clicks.</li> <li>Site content: Information such as which pages users stay on longest, which pages are viewed the most, which pages have the highest conversion rates, site performance, etc. can be seen in GA and are key information for optimizing content.</li> </ul>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#3-tips-for-using-google-analytics","title":"3. Tips for Using Google Analytics","text":"<p>Firstly, you need to configure GA for your website. Google provides a detailed tutorial, so it will not be repeated here. With a few simple steps, you can deploy a tracking ID or tracking code on your website and GA can help collect data. This data is a precious resource for analysis and decision making in the future.</p> <p>GA provides many dimensions of data for users to build their own analysis reports. The GA sidebar is classified by data type:</p> <ul> <li>Home: Important indicators preset by Google.</li> <li>Custom: User-defined reports.</li> <li>Real-time: Real-time data on the site.</li> <li>Audience: User profile data.</li> <li>Acquisition: Traffic profile data.</li> <li>Behavior: User behavior data on the site.</li> <li>Conversion: Conversion data for goals and e-commerce.</li> </ul> <p>Basically, in each type, there is an overview and a detailed presentation of specific data details in subcategories.</p>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#31-home","title":"3.1 Home","text":"<p>Home contains important indicators preset by Google for a quick overview of the site's overall performance, such as user volume, performance of various traffic sources, user geographic distribution, browsing time, most clicked pages, device type, etc. Google also provides an analysis intelligent module that can adaptively summarize insights.</p> Home GA Intelligent Analysis","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#32-audience","title":"3.2 Audience","text":"<p>This module is mainly used to describe user profiles, such as new and old users, geographic distribution, session performance, device type, operating system type, etc. This information helps you understand the overall situation of site users. There is even finer-grained information for viewing and analysis in the side tags.</p> Audience Profile","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#33-acquisition","title":"3.3 Acquisition","text":"<p>This section mainly introduces traffic sources such as organic traffic, social media drainage, direct clicks to enter, and referral traffic. It also includes traffic performance for each channel. This information helps to measure the traffic conversion effect of each channel and formulate promotion and traffic acquisition strategies. For example, BulletTech's blog is deployed on GitHub, and the search engine optimization of GitHub Pages is not favorable, so it does not have an advantage in natural traffic acquisition. The main source of traffic is clicking the original article link on various social media platforms to jump to the webpage.</p> Acquisition","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#34-user-behavior","title":"3.4 User Behavior","text":"<p>The click-through rate of users on each page, the time they spend on each page, the page's incoming and outgoing links, bounce rate, and other information can be viewed in this module. These pieces of information can help you analyze user preferences for content, allowing for content to be more targeted.</p> User Behavior","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#35-custom-reports","title":"3.5 Custom Reports","text":"<p>The above reports provide insight into different dimensions, and GA also provides options to build your own data indicator system more flexibly. By customizing reports, you can select various basic data and put them together into a special report suitable for your project. GA also offers a community to share data dashboards created by others, making it easier to refer to excellent report templates shared by others.</p>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-07-31-GA-Intro/#conclusion","title":"Conclusion","text":"<p>GA is like a beacon of light in the dark of the website, helping site builders better understand users and support decision-making. Google also provides a series of courses and analytics qualifications certification to help you learn GA more systematically. GA also supports analyzing mobile applications, making it a powerful multi-faceted tool!</p> <p>I hope this share is helpful to you! Welcome to discuss in the comments!</p>","tags":["analytics"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/","title":"Overview of SnowFlake Architecture","text":"<p>Info</p> <p>Author: Vincent, published on June 6, 2021, reading time: about 6 minutes, WeChat public account article link: </p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#1-introduction","title":"1 Introduction","text":"<p>SnowFlake, as a highly popular data warehousing application in recent years, has gained the favor of many users and investors. In my daily work, I also often use SnowFlake for analysis, so I have done some research on its underlying operation mechanism. Today, I will talk to you about the main architecture and working principles of SnowFlake.</p> SnowFlake stock price","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#2-main-features-of-snowflake","title":"2 Main Features of SnowFlake","text":"<ul> <li>Security and Data Protection: SnowFlake supports multiple authentication methods, such as Multi-Factor Authentication (MFA), Federal Authentication, Single Sign-on (SSO), and OAuth. Communication between clients and servers is protected by TLS.</li> <li>Support Standard SQL and Many Extended SQL Features: SnowFlake supports most SQL data definition language (Data Definition Language) and data manipulation language (Data Manipulation Language), so there is no need to worry about finding corresponding operations when doing data analysis.</li> <li>SnowFlake supports software clients for connection, and also provides interfaces for various programming languages such as Python connector, Spark connector, Node.js driver, .NET driver, etc.</li> <li>Convenient Sharing Functionality: Users can easily share data and query statements with other users.</li> </ul>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#3-snowflake-architecture","title":"3 SnowFlake Architecture","text":"<p>The SnowFlake architecture combines the advantages of Shared-Disk architecture and Shared-Nothing architecture, and consists of three different layers: the Storage Layer, the Compute Layer, and the Cloud Services Layer. The architecture diagrams of these two types are shown below:</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#31-shared-disk-architecture-diagram","title":"3.1 Shared-Disk Architecture Diagram","text":"<p>This is commonly used in traditional databases. It has a storage layer that all nodes in the cluster can access, and the computing nodes in the cluster do not have their own storage. They all access the central storage layer to retrieve data and perform processing. The cluster control software is used to monitor and manage data processing. All nodes obtain the same data, so it is absolutely forbidden for two or more nodes to update the same data at the same time.</p> <p>This architecture is not conducive to performance, and lacks scalability. Applications that require frequent data updates are not suitable for this type of architecture because the Shared-Disk lock mechanism will impede them.</p> Shared-Disk Architecture","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#32-shared-nothing-architecture-diagram","title":"3.2 Shared-Nothing Architecture Diagram","text":"<p>As the name suggests, in the Shared-Nothing architecture, each node in the cluster has its own separate computing resources and storage space, and data can be stored in various nodes by partition. When processing user requests, the router assigns the request to the appropriate node for calculation. When a calculation error occurs, the processing process can be taken over by another node to ensure stable and correct processing of user requests. This architecture is very suitable for applications with a large amount of data reads, such as data warehouses.</p> Shared-Nothing Architecture","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#33-snowflake-architecture-diagram","title":"3.3 SnowFlake Architecture Diagram","text":"<p>SnowFlake uses three different layers to build the application: the storage layer, the compute layer, and the cloud services layer. The diagram is shown below:</p> SnowFlake Architecture <p>The Storage Layer is responsible for optimizing, compressing, and storing data in multiple tiny fragments. Data is stored in row column format and managed in a manner similar to Shared-Disk. Compute nodes retrieve and process data by connecting to the Storage Layer, which is independent of other resources. SnowFlake is deployed in the cloud, so its super large distributed storage system can ensure high performance, stability, availability, capacity, and scalability.</p> <p>The Compute Layer uses virtual warehouses (based on virtual machines) to run query statements. The Compute Layer and the Storage Layer are designed to be separate, and SnowFlake implements intelligent caching mechanisms between them to optimize resource utilization and reduce unnecessary interaction between the Compute Layer and the Storage Layer. Virtual warehouses come in different sizes and can be used to process requests with different performance requirements. Each virtual warehouse is independent of each other, so compute resources are not shared. The advantages of this design are:</p> <ul> <li>Virtual warehouses can be created or deleted at any time. It is also easy to expand the computing resources of virtual warehouses without affecting the calculation of query statements.</li> <li>Virtual warehouses can be easily stopped or restarted, suitable for long periods of time without queries or need to participate in queries after a period of dormancy.</li> <li>Virtual warehouse cluster size can be automatically changed very easily.</li> </ul> <p>The Cloud Services Layer is responsible for user information authentication, cluster management, security and encryption, metadata management of data, optimization of query statements, etc. These tasks are all completed by the Compute Layer. Common processing content examples include:</p> <ul> <li>User login</li> <li>After the query statement is submitted, it will first go through the optimizer of the Cloud Services Layer, and then be passed to the Compute Layer for processing</li> <li>Metadata required for optimizing queries and filtering data is also stored at this level</li> </ul> <p>The three-layer architecture of SnowFlake can be independently expanded, but SnowFlake only charges for the Storage Layer and the Compute Layer, as the Cloud Services Layer is processed in the Compute Node. The advantage of independent expansion is obvious. If more data is needed, the Storage Layer can be individually expanded. If stronger computing performance is required, the Compute Layer can be individually expanded. Refer to the official SnowFlake Architecture Guide for more details.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-09-11-SF-Archi-Intro/#4-conclusion","title":"4 Conclusion","text":"<p>After understanding the SnowFlake architecture, I believe you can better understand why so many companies choose SnowFlake. Its cloud-based architecture provides efficient, secure, stable, and cost-effective solutions for many enterprises. As a data analyst, I have personally experienced that SnowFlake is indeed easier to use than many traditional data warehouses.</p> <p>For practical experience with SQL, please check out the previous SQL Tips: [Data Warehouse N Brothers](https://mp.weixin.qq.com/s?__biz=MzI4Mjk3NzgxOQ==&amp;mid=2247484458&amp;idx=1&amp;sn=b103c9b9d205e0d6a4589b68687e9c95&amp;chksm=eb90f75edce77e480d76a140289f4217c8f8de8cb6b5</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/","title":"SnowFlake Permission Overview","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-06-06, Read time: about 6 minutes, WeChat official account article link: </p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#1-introduction","title":"1 Introduction","text":"<p>Properly managing permissions for objects (such as databases and tables) in a database is very important but often overlooked. When it comes to permission issues and problems, people will regret not taking permission management seriously. Therefore, this article will take the very popular SnowFlake data warehouse as an example, succinctly explaining important concepts and commonly used commands for permission management. It is recommended to like and bookmark for later review and use!</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#2-snowflake-permission-control-framework","title":"2 SnowFlake Permission Control Framework","text":"<p>SnowFlake has two permission control models:</p> <ul> <li>Discretionary Access Control (DAC): Each object has an owner who can grant different permissions to others.</li> <li>Role-based Access Control (RBAC): Access permissions are controlled by roles, which can be assigned to different users.</li> </ul> <p>In SnowFlake, there are some important concepts that help understand permission control:</p> <ul> <li>Securable object: An entity that can be granted specific permissions. If you do not have permission, access to the object will be denied.</li> <li>Role: An entity that can receive permissions, which can be assigned to users or other roles to form different role hierarchies.</li> <li>Privilege: The level of access control for objects. By setting different privileges, the granularity of access control can be controlled.</li> <li>User: An identity that can be recognized by SnowFlake and can be a person or a program.</li> </ul> <p>In SnowFlake, the permission control of securable objects is shown in the figure below. Access to securable objects can be granted by assigning permissions to roles, which means that permissions are assigned to other roles or objects. In addition, each securable object has an owner who can grant permissions to other roles.</p> SnowFlake Permission Control Diagram","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#3-common-commands","title":"3 Common Commands","text":"<p>After a basic understanding of how SnowFlake manages permissions, using commands to operate and view permissions will be more convenient.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#31-granting-permissions","title":"3.1 Granting Permissions","text":"<pre><code>GRANT {  { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT\n| { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { USER | RESOURCE MONITOR | WAREHOUSE | DATABASE | INTEGRATION } &lt;object_name&gt;\n| { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA &lt;schema_name&gt; | ALL SCHEMAS IN DATABASE &lt;db_name&gt; }\n| { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE &lt;db_name&gt; }\n| { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON { &lt;object_type&gt; &lt;object_name&gt; | ALL &lt;object_type_plural&gt; IN { DATABASE &lt;db_name&gt; | SCHEMA &lt;schema_name&gt; } }\n| { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE &lt;object_type_plural&gt; IN { DATABASE &lt;db_name&gt; | SCHEMA &lt;schema_name&gt; }\n}\nTO [ ROLE ] &lt;role_name&gt; [ WITH GRANT OPTION ]\n</code></pre> <p>Where:</p> <pre><code>globalPrivileges ::=\n{ { CREATE { ROLE | USER | WAREHOUSE | DATABASE | INTEGRATION } } | APPLY MASKING POLICY | APPLY ROW ACCESS POLICY | APPLY TAG | EXECUTE TASK | MANAGE GRANTS | MONITOR { EXECUTION | USAGE }  } [ , ... ]\n\naccountObjectPrivileges ::=\n-- For USER\n{ MONITOR } [ , ... ]\n-- For RESOURCE MONITOR\n{ MODIFY | MONITOR } [ , ... ]\n-- For WAREHOUSE\n{ MODIFY | MONITOR | USAGE | OPERATE } [ , ... ]\n-- For DATABASE\n{ MODIFY | MONITOR | USAGE | CREATE SCHEMA | IMPORTED PRIVILEGES } [ , ... ]\n-- For INTEGRATION\n{ USAGE | USE_ANY_ROLE } [ , ... ]\n\nschemaPrivileges ::=\n{ MODIFY | MONITOR | USAGE | CREATE { TABLE | EXTERNAL TABLE | VIEW | MATERIALIZED VIEW | MASKING POLICY | ROW ACCESS POLICY | TAG | SEQUENCE | FUNCTION | PROCEDURE | FILE FORMAT | STAGE | PIPE | STREAM | TASK } } [ , ... ]\n\nschemaObjectPrivileges ::=\n-- For TABLE\n{ SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES } [ , ... ]\n-- For VIEW\n{ SELECT | REFERENCES } [ , ... ]\n-- For MATERIALIZED VIEW\nSELECT\n-- For SEQUENCE, FUNCTION (UDF or external function), PROCEDURE, or FILE FORMAT\nUSAGE\n-- For internal STAGE\nREAD [ , WRITE ]\n-- For external STAGE\nUSAGE\n-- For PIPE\n{ MONITOR | OPERATE } [ , ... ]\n-- For STREAM\nSELECT\n-- For TASK\n{ MONITOR | OPERATE } [ , ... ]\n-- For MASKING POLICY\nAPPLY\n-- For ROW ACCESS POLICY\nAPPLY\n-- For TAG\nAPPLY\n</code></pre> <p>The full list of all permissions can be found in SnowFlake's API documentation.</p> <p>The required parameters are <code>object_name</code>, <code>object_type</code>, <code>object_type_plural</code>, and <code>role_name</code>, which are self-explanatory. Optional parameters include:</p> <ul> <li><code>ON FUTURE</code>: Specifies that the permission is granted to tables or views in a new database or schema, not existing objects.</li> <li><code>WITH GRANT OPTION</code>: Specifies whether the recipient role is allowed to grant permissions to other roles.</li> </ul> <p>Examples are as follows:</p> <pre><code># Specify that the role can continue to grant permissions with grant option\ngrant operate on warehouse report_wh to role analyst with grant option;\n\n# Grant select permission on all tables in schema mydb.myschema to role analyst\ngrant select on all tables in schema mydb.myschema to role analyst;\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#32-viewing-permissions","title":"3.2 Viewing Permissions","text":"<p>You can view object permissions using the <code>SHOW GRANTS</code> command, as shown below:</p> <pre><code>SHOW GRANTS ON ACCOUNT\n\nSHOW GRANTS ON &lt;object_type&gt; &lt;object_name&gt;\n\nSHOW GRANTS TO { ROLE &lt;role_name&gt; | USER &lt;user_name&gt; | SHARE &lt;share_name&gt; }\n\nSHOW GRANTS OF ROLE &lt;role_name&gt;\n\nSHOW GRANTS OF SHARE &lt;share_name&gt;\n\nSHOW FUTURE GRANTS IN SCHEMA { &lt;schema_name&gt; }\n\nSHOW FUTURE GRANTS IN DATABASE { &lt;database_name&gt; }\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-11-SF-Access-Intro/#33-revoking-permissions","title":"3.3 Revoking Permissions","text":"<p>The command to revoke permissions uses the <code>REVOKE</code> keyword:</p> <p>``` REVOKE [ GRANT OPTION FOR ]     {        { globalPrivileges         | ALL [ PRIVILEGES ] } ON ACCOUNT      | { accountObjectPrivileges  | ALL [ PRIVILEGES ] } ON { RESOURCE MONITOR | WAREHOUSE | DATABASE | INTEGRATION }       | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { SCHEMA  | ALL SCHEMAS IN DATABASE  }      | { schemaPrivileges         | ALL [ PRIVILEGES ] } ON { FUTURE SCHEMAS IN DATABASE  }      | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON {   | ALL  IN SCHEMA  }      | { schemaObjectPrivileges   | ALL [ PRIVILEGES ] } ON FUTURE  IN { DATABASE  | SCHEMA  }     }   FROM [","tags":["analytics","database"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/","title":"Explore GitHub","text":"<p>Info</p> <p>Author: Void, published on 2021-10-14, reading time: about 5 minutes, WeChat official account article link: </p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#1-introduction","title":"1 Introduction","text":"<p>GitHub's main function is to manage and collaborate on code versions. In the article \"Learn how to use GitHub without writing a single line of code,\" we detailed what GitHub can do and how to use it.  In fact, GitHub can also be very interesting. From a different perspective, this article will talk about the fun features of GitHub.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#2-action","title":"2 Action","text":"<p>GitHub Action provides a set of services for automating script commands. Our team uses GitHub Pages to build our blog. When we update our articles on GitHub, naturally, we want this change to be automatically updated in our blog.  Without this automated deployment service, we may need to manually run some scripts every time to deploy the articles to the blog.  Now we just need to create a ci.yml file in this path (BulletTech/.github/workflows) and write the commands we need into it. When changes are pushed to the main branch, GitHub Action can automatically run the set script for us.</p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: python ./docs/Scripts/Update_reading_time.py\n      - run: pip install mkdocs-material\n      - run: pip install --upgrade mkdocs-material\n      - run: pip install mkdocs-redirects\n      - run: pip install mkdocs-minify-plugin\n      - run: pip install mkdocs-macros-plugin\n      - run: pip install mkdocs-git-revision-date-localized-plugin\n      - run: git pull\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>In addition to the workflows we create ourselves, GitHub also has a rich workflow community where you can choose different workflows to meet your various needs.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#3-projects","title":"3 Projects","text":"<p>GitHub comes with project management functionality.  First, we click on the Projects tab to see the projects we've created.</p> <p>Clicking on a project, we can see the board-like structure, with To do, In progress, Done, and other columns, and of course, we can create new ones.</p> <p>We can create notes by clicking the plus sign in a column. In the illustration, we can see that the note in the To do column is an issue. How is this achieved?  During the issue creation process, we can notice a Projects item in the right hand sidebar. If we select the corresponding column, we can insert this issue as a card into this column.</p> <p>We can also add issues directly to the board with the add card function.  With project board functionality, we can more easily manage projects and collaborate with teams.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#4-wiki","title":"4 Wiki","text":"<p>GitHub's Wiki allows us to build a wiki for this repo in markdown text, allowing users to better understand the repo content beyond README documents. Excellent examples include Pytorch's Wiki.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#5-security","title":"5 Security","text":"<p>GitHub Security provides tools for code security. </p> <p>For example, we can use Security.md to alert users to certain potential issues in the code, as TensorFlow Repo's Security file shows.  We can also set up a code security scan workflow with GitHub Action. It can automatically scan code for syntax errors, insecure input (user input displayed), etc. in branches and pull requests.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#6-insights","title":"6 Insights","text":"<p>GitHub Insights provides repo-wide and individual commit, pull request, and other behavior information in intuitive chart form.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-10-14-play-with-github/#7-summary","title":"7 Summary","text":"<p>GitHub can also be very interesting. In addition to the provided regular features, GitHub provides many interesting and useful features. They not only greatly improve productivity, but also enrich GitHub's content.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/","title":"Creating a Beautiful Online Resume using GitHub","text":"<p>Info</p> <p>Author: Vincent, Published on Nov 1, 2021, Reading time: approximately 6 minutes, WeChat Official Account Link:</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#1-introduction","title":"1 Introduction","text":"<p>We have previously introduced many cool features of GitHub. To better understand the content of this article, it is recommended to read previous articles to review the basic knowledge of GitHub operations:</p> <ul> <li>Teaching You to Use GitHub without Writing a Single Line of Code</li> <li>Git Commonly Used Commands</li> <li>Playing with GitHub</li> </ul> <p>In this article, we will introduce how to use GitHub to create an online resume and build a website that everyone can access to showcase oneself.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#2-creating-an-online-resume","title":"2 Creating an Online Resume","text":"","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#21-downloading-example-code","title":"2.1 Downloading Example Code","text":"<p>This example uses a Bootstrap template, please go to BulletTech's official GitHub account and find the Resume repository to download the example code.</p> BulletTech's Resume Repository <p>The code that needs to be modified exists in <code>/home/index.html</code>:</p> Homepage Source Code","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#22-modifying-example-code","title":"2.2 Modifying Example Code","text":"<p>After downloading the source code, double-click <code>index.html</code> to preview it in real-time. Use <code>ctrl/command+F</code> to find and modify the corresponding elements in comparison with the webpage content. The webpage will display the latest content after refreshing. You can also modify the CSS (<code>home/css/styles.css</code>) and other components for deep customization.</p> Previewing the Resume on Local Machine","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#23-publishing-the-resume","title":"2.3 Publishing the Resume","text":"<p>Create your own GitHub repository and submit the modified code to your repository. Check the website to ensure that the complete code is uploaded. Then activate the GitHub Pages feature. By default, select root under the master/main branch. Click on the corresponding URL to access your own resume.</p> Setting Up GitHub Pages","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-01-GitHub-Resume/#3-conclusion","title":"3 Conclusion","text":"<p>We have added another little trick to the use of GitHub. You are welcome to use the above steps to create your own online resume. BulletTech's example resume can be accessed at <code>https://bullettech2021.github.io/Resume/home/</code>.</p> <p>Hope this sharing is helpful to you. Welcome to leave a message in the comments area for discussion!</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/","title":"First Experience with Docker","text":"<p>Info</p> <p>Author: Tina, Published on November 5th, 2021, Reading time: about 6 minutes, WeChat Official Account Article Link: </p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#1-introduction","title":"1. Introduction","text":"<p>As the author did not have much experience in product development and deployment, it did take some time to learn the concepts and applications of Docker. Today, I will share with you how to open the door to Docker from scratch.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#2-basic-concepts-of-docker","title":"2. Basic Concepts of Docker","text":"<p>Docker is an open-source software that programmers can use Python, Java, and other object-oriented languages to design products. Why do we need to use it? This is because we need many specific packages and configuration files to build an environment when we are developing. If users want to call it in different system environments, it is a very time-consuming and laborious task. This is where Docker comes in handy. Docker can help package the dependency packages and environment that our product needs, so that users can more directly and easily use our products.</p> <p>Talking about Docker, we naturally cannot do without the concepts of image, container, and image repository. Here, I will use a metaphor that is close to reality to help you understand these three concepts more vividly.</p> <p>Think of our product as a car. If a consumer likes the model of this car, without Docker, he may need to replicate the production process of this car from scratch.</p> <p>The image is like the prototype of this car, which is the initial appearance of the car, including basic components such as tires, engines, and steering wheels. The image here determines the car model.</p> <p>A container is the different versions designed to suit different tastes in the market, such as luxury, simple, etc., and even decorated according to the buyer's preferences after purchase. In other words, containers are application instances based on images. Containers are independent of each other but may come from the same image. Through commands, we can create, run, stop, and delete containers.</p> <p>The image repository is like a parking lot that stores all kinds of cars. This is easier to understand. This repository concept is very similar to Github Repo, where all images are stored.</p> <p>One of the most common ways to build images is to create a Dockerfile. In the example above, it is equivalent to designing a blueprint for a car. The Dockerfile needs to be placed in the root directory along with the main function of the program to facilitate finding all the files you need at runtime.</p> Dockerfile Storage Rules","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#3-deployment-process-of-docker","title":"3. Deployment Process of Docker","text":"","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#31-create-dockerfile","title":"3.1 Create Dockerfile","text":"<p>A brief introduction to the components of the Dockerfile: <pre><code>FROM           &lt;code_version&gt;    # specify the base image\nMAINTAINER     &lt;name&gt;            # indicate the creator of the image\n# specify the local path and add files (adding local files, COPY is recommended by the official website)\nCOPY           &lt;/local/path/filename&gt;  RUN            &lt;command&gt;         # command to create the image\n# add files by specifying the path (ADD can not only decompress the local tar file, but also copy files from the URL)\nADD            &lt;/path/filename&gt;  WORKDIR        &lt;absolute path dir&gt;   # specify the working directory of the image\nEXPOSE         &lt;port&gt;            # specify the interaction port    \nCMD            &lt;e.g. python run main.py&gt;    # command to start the image\n</code></pre></p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#32-create-an-image","title":"3.2 Create an Image","text":"<p>Here are three common ways to create an image:</p> <pre><code># 1. Create based on the Dockerfile in the current path\ndocker build .  # 2. Create based on the Dockerfile found by github URL path\ndocker build github.com/creack/docker-firefox\n\n# 3. Create based on the local Dockerfile\ndocker build -t /path/to/Dockerfile .\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#33-running-the-container","title":"3.3 Running the Container","text":"<p>The container is the running image, and you can start the container by selecting the image you want to run by checking the image.</p> <ul> <li> <p>Run in the background <code>-d</code>: <pre><code>docker run --name mycontainer -d myimage:latest  </code></pre> Use the docker image myimage:latest to run the container in the background mode and name it mycontainer.</p> </li> <li> <p>Run by specifying the port <code>-p</code>: <pre><code>docker run -p 127.0.0.1:80:8000/tcp ubuntu bash\n</code></pre> Bind the container port 8080 and map it to port 80 of 127.0.0.1 on the local machine. tcp represents the port protocol, and enter the ubuntu system to run the container using the bash command.</p> </li> <li> <p>Assign a virtual terminal <code>-it</code>: <pre><code>docker run --name mycontainer -it myimage:latest\n</code></pre> <code>-it</code> means to allocate a virtual terminal for the container to run.</p> </li> </ul> <p>If you want to learn more about Docker run in detail, please refer to the official documentation.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#34-other-common-commands-of-docker","title":"3.4 Other Common Commands of Docker","text":"<p>Finally, some basic operations are listed below to help you operate and push the created image service quickly.</p> <pre><code>docker pull &lt;regsitry_path&gt; # Pull the image from the private or public repository\ndocker images # View the image\ndocker ps # List the current running container\ndocker ps -a | grep &lt;test&gt; # View the test container information\ndocker stats # View the running resources being used\ndocker container logs &lt;container_id&gt; # View the log\ndocker stop &lt;container_id&gt; # Stop the container\ndocker start &lt;container_id&gt; # Restart the stopped container\ndocker rm &lt;container_id&gt; # Delete the container\ndocker push &lt;registry_path&gt;[image_version] # Push the image to the remote repository\ndocker image prune  # Delete the suspended image\ndocker container prune # Clean up stopped containers\ndocker container prune --filter \"container id\" # Do not clean up specific container IDs\ndocker rm -v $(docker ps -aq -f status=exited) # Delete all exited containers\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-05-Docker-Sharing/#4-conclusion","title":"4. Conclusion","text":"<p>These concepts seem very abstract, especially for those who have never touched this knowledge before (such as the author herself). But when you read and think repeatedly and practice by yourself, you will find that this thing is not that complicated. It is just a tool to help you deploy web pages and other products. Next time, we will discuss how to manage data in containers in a persistent manner.</p> <p>I hope this sharing can help you explore Docker, and welcome everyone to leave a message for discussion.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/","title":"Teaching You to Successfully Run Docker on Win10 System","text":"<p>Info</p> <p>Author: Tina, Published on 2021-11-13, Reading time: about 5 minutes, WeChat article link: </p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#1-introduction","title":"1 Introduction","text":"<p>In the previous article, First Experience with Docker, we introduced some basic concepts and common commands of Docker. However, because Docker creates resource isolation mechanisms on Linux systems, it cannot be directly run on Windows systems. This time, we will take 4 minutes to introduce how to run Docker on Win10 system.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#2-download-docker","title":"2 Download Docker","text":"<p>Users can choose Mac or Windows on the Docker official website according to their own system. Because Docker can be directly run after installation on the Mac system, we will not go into details here.</p> <p>After installing Docker and registering a personal account, double-click to start it, and you will find that it is not as smooth as you thought. The error message is shown in the figure below:</p>  Failed to start Docker  <p>This is because Docker cannot be directly run on Windows systems, and a Linux virtual machine (VM) in the Windows system needs to be created to build the underlying dependencies for Docker's normal operation. Although the official document provides two solutions, hyper-V and WSL2, WSL2 is an upgraded version of WSL1 based on hpyer-V. Its functions and installation methods are simple and convenient. Therefore, the author chooses the WSL2 backend method to run Docker.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#3-install-wsl2","title":"3 Install WSL2","text":"<p>WSL, Windows Subsystem for Linux, means the Linux subsystem under Windows system. You can install WSL2 for Docker in just three steps in the system. Please note that WSL2 currently supports Windows10 2004 and above.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#31-enable-wsl2","title":"3.1 Enable WSL2","text":"<p>First, open the <code>Powershell</code> command prompt and run the command to view all subsystems on the Internet, then select the system you want to install. Here we will choose Ubuntu for installation.</p> <pre><code>## View the list\nwsl --list --online\n## Install Linux distribution\nwsl --install -d Ubuntu\n</code></pre>  View WSL list  <p>After the installation is successful, the result will prompt you to create a UNIX username and password:</p>  Create a username and password  <p>You will notice that the logo in the upper left corner of the command prompt has changed to Ubuntu.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#32-install-update-package","title":"3.2 Install update package","text":"<p>After successful installation, you also need to download the Linux installation update package. The specific operation needs to refer to the Microsoft official document and select the appropriate update package according to your system version.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#33-set-the-default-version","title":"3.3 Set the default version","text":"<p>Open the command prompt and set WSL2 as the default version of the Linux distribution:</p> <pre><code>wsl --set-default-version 2\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#34-set-wsl-configuration-file","title":"3.4 Set WSL configuration file","text":"<p>Because the default configuration of WSL will occupy up to 80% of the computer's memory space, to avoid this situation, it is better to set the configuration file.</p> <p>Press <code>Windows + R</code>, search for <code>%UserProfile%</code> to open the user's resource management file path, create and customize the <code>.wslconfig</code> document. Open it with Notepad and enter relevant parameters for configuration:</p> <pre><code>[wsl2]\n# Set the memory to 2G, mainly for service docker\nmemory=2GB\n# The maximum number of CPUs used\nprocessors=2\n# Do not set the swap space allocated by the WSL2 virtual machine\nswap=0\n# Allow forwarding of WSL2 ports to the host\nlocalhostForwarding=true\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#4-check-docker-settings","title":"4 Check Docker settings","text":"<p>After successfully installing the Linux distribution, you also need to set some basic parameters about WSL2 in Docker desktop to ensure the successful operation of Docker.</p> <p>First, you need to select the engine based on WSL2 in the general settings, as shown below:</p>  Based on WSL2 engine  <p>Secondly, you need to set up the integration of WSL in the resources. This operation helps you integrate and compose parts when you have multiple WSLs.</p>  Set WSL integrated resources  <p>Finally, restart Docker desktop, and you will see the successfully started interface.</p>  Successful interface","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-Docker-Windows/#5-conclusion","title":"5 Conclusion","text":"<p>For some software to run successfully in the system, some prerequisites are indeed needed. Whether you are referring to specific official documents or searching for some experience posts to avoid thunder, after successfully installing and using them, you will find that the construction of these environments is a once-and-for-all thing. Try running Docker in your Windows system now! We will continue to share our learning experience with Docker, so stay tuned.</p> <p>I hope this sharing can help you. Welcome to leave a message for discussion.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/","title":"GitHub Action Overview","text":"<p>Info</p> <p>Author: Vincent\uff0cPublished on 2021-11-13\uff0cReading time: about 6 minutes\uff0cWeChat official account article link: </p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#1-introduction","title":"1 Introduction","text":"<p>We have introduced many cool features of GitHub before. To better understand the content of this article, it is recommended to review the basic GitHub operation knowledge in the previous articles:</p> <ul> <li>Teach You How to Use GitHub without Writing Any Code</li> <li>Git Commonly Used Commands</li> <li>Play with GitHub</li> <li>Create a Beautiful Online Resume Using GitHub</li> </ul> <p>In this article, we will introduce how to use GitHub Actions to simplify repeated mechanical tasks and greatly improve efficiency and save time.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#2-github-action-overview","title":"2 GitHub Action Overview","text":"<p>GitHub Action can automatically execute custom scripts to complete preset work. Users need to set the triggering conditions (events) and the commands to be executed when the conditions are met. GitHub can automatically complete the preset operations, for example, when a update is merged to the master/main branch, automatically execute the test script to check for errors. The following figure shows the components when GitHub Action is executed:</p> GitHub Action components, source: GitHub <p>When an event occurs, GitHub automatically triggers the workflow. Then the program executes step by step.</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#3-create-action","title":"3 Create Action","text":"<p>GitHub Action uses YAML to define the triggered events, work, and steps. The workflow file needs to be stored in a specific location in the code repository: <code>.github/workflows</code>.</p> <p>Take the continuous integration workflow of the BulletTech blog as an example:</p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: python ./docs/Scripts/Update_reading_time.py\n      - run: pip install mkdocs-material\n      - run: pip install mkdocs-redirects\n      - run: pip install mkdocs-minify-plugin\n      - run: pip install mkdocs-macros-plugin\n      - run: pip install mkdocs-git-revision-date-localized-plugin\n      - run: pip install --upgrade mkdocs-material\n      - run: pip install --upgrade mkdocs-redirects\n      - run: pip install --upgrade mkdocs-minify-plugin\n      - run: pip install --upgrade mkdocs-macros-plugin\n      - run: pip install --upgrade mkdocs-git-revision-date-localized-plugin   \n      - run: git pull\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>Key points are as follows:</p> <ul> <li><code>name</code> defines the name of the workflow, in this case, continuous integration (CI).</li> <li><code>on</code> is the event that triggers the workflow. Here, it is defined that the command needs to be executed when a push is updated to the main branch.</li> <li><code>jobs</code> defines the work tasks. <code>deploy</code> is the name of the work. It runs a series of steps on GitHub's Ubuntu Linux virtual machine.</li> <li><code>uses</code> is followed by an action in GitHub Action Marketplace. Here, actions are used to check out the repository and download the code to the server that runs the code, and configure the Python runtime environment.</li> <li><code>run</code> is followed by the command to be executed. Here, some Python packages required by the blog are installed and the deployment command is run.</li> </ul>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#4-check-action-status","title":"4 Check Action Status","text":"<p>In the Actions tab of the GitHub repository, you can see the running status of the action:</p> GitHub Action status <p>You can see the <code>ci</code> workflow used by BulletTech, and click on <code>runs</code> to view the running status of each step of the action.</p> Action running status","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-13-GitHub-Action/#5-conclusion","title":"5 Conclusion","text":"<p>Using GitHub Action automates many repetitive and mechanical labor tasks, saving time that can be used for more meaningful things. For more information, please refer to the following reference materials to customize your own workflow.</p> <p>I hope this sharing can help you. Feel free to leave a comment in the comment section for discussion!</p>","tags":["git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/","title":"Automatically Build and Push Docker Image with GitHub Action","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-11-20, Read time: About 6 minutes, WeChat Official Account Article Link: </p>","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#1-introduction","title":"1 Introduction","text":"<p>In this article, we will introduce how to use GitHub Action to automatically push Docker images to a registry, greatly simplifying the tedious process of building and pushing images! We have introduced many cool features of GitHub before. To facilitate the understanding of the content of this article, we recommend reviewing the basic GitHub operation knowledge in the previous article, especially GitHub Action:</p> <ul> <li>Teaching You to Use GitHub with One Line of Code</li> <li>Git Common Commands Overview</li> <li>Playing with GitHub</li> <li>Create a Beautiful Online Resume with GitHub</li> <li>Overview of GitHub Action</li> </ul> <p>At the same time, if you need to understand Docker knowledge, you can check out Tina's masterpiece:</p> <ul> <li>Teaching You to Run Docker Successfully on Win10 System</li> <li>Experience Docker for the First Time</li> </ul>","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#2-configure-the-image-registry","title":"2 Configure the Image Registry","text":"<p>Here we take Aliyun's image registry as an example for demonstration. The principles of other image registries are similar and can be applied by analogy. First, log in to the Aliyun image registry, and perform the following operations:</p> <ul> <li>Create a namespace as a collection of image repositories, named after the company or organization. We use <code>bullettech_services</code>.</li> <li>Create an image repository as a collection of images that can store different versions of images in the repository.</li> </ul> Image Registry","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#3-configure-the-github-action","title":"3 Configure the GitHub Action","text":"","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#31-configure-the-password","title":"3.1 Configure the Password","text":"<p>Set a password in the GitHub repository for logging in to the image registry. You can find the password in the repository settings and then store the login name and password of the image registry service.</p> Store the login name and password of the image registry service","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#32-create-the-workflow","title":"3.2 Create the Workflow","text":"<p>First, create a workflow in the <code>.github/workflows</code> directory, such as <code>ci.yml</code>, and understand the commands based on the comments, and modify them according to the project situation.</p> <pre><code>name: actions\n\non: [push, pull_request] # Trigger Event\n\njobs:\n  bt-product-release:\n    if: ${{ github.ref == 'refs/heads/main' }}  # Check if the main branch is updated\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2 # pull the code to the running server\n    - name: Login to Aliyun Container Registry (ACR)\n      uses: aliyun/acr-login@v1 # Use the Aliyun Image Service Action\n      with:\n        login-server: registry.cn-shanghai.aliyuncs.com # Be sure to correctly fill in the login address of the image registry service\n        region-id: cn-shanghai\n        username: \"${{ secrets.REGISTRY_USERNAME }}\" # Reference the username of the image registry service set in GitHub repo\n        password: \"${{ secrets.REGISTRY_PASSWORD }}\" # Reference the password of the image registry service set in GitHub repo\n    - name: Build and Push Docker Image\n      env:\n        IMAGE_TAG: ${{ github.sha }} # Used to mark the container version number\n      run: |\n        docker build -t registry.cn-shanghai.aliyuncs.com/bullettech_services/app:$IMAGE_TAG .\n        docker push registry.cn-shanghai.aliyuncs.com/bullettech_services/app:$IMAGE_TAG\n</code></pre> <p>This way, every time the main branch is updated, GitHub will build the image based on the updated code, and push the image to the designated image repository (pay attention to the version):</p> Image","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-20-GitHub-Docker/#4-conclusion","title":"4 Conclusion","text":"<p>This efficient workflow saves a lot of time and avoids many errors that are prone to occur during manual operations. GitHub Action is so awesome!</p> <p>I hope this sharing will help you, and welcome to leave a message in the comments to discuss!</p>","tags":["docker","git"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/","title":"Persisting Data in Docker","text":"<p>Info</p> <p>Author: Tina, Published on 2021-11-25, Reading time: about 6 minutes, WeChat article link: </p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#1-introduction","title":"1 Introduction","text":"<p>In the article First Experience with Docker, we introduced the basic concept of Docker. Later, we shared how to successfully run Docker in Win10 and use GitHub Action to automatically build and push Docker images. Friends who have tried it should be able to create images for their program code in Docker, run containers, or use Docker in GitHub Action. Today, we will talk about how to persistently manage data in Docker\u2014the use of data volumes.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#2-the-necessity-of-data-management","title":"2 The Necessity of Data Management","text":"<p>People who first experience Docker may find that whenever we restart the container, the previous data will be lost, or feel that the data is difficult to transfer. This is because Docker's default settings will create all files in a readable container layer in a container. In other words, a container's data is independent and cannot be shared. To achieve data sharing and data migration, we need to use some methods to persistently manage data.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#3-about-volumes","title":"3 About Volumes","text":"","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#31-advantages","title":"3.1 Advantages","text":"<p>Volumes are a data management mechanism created and maintained by Docker. As shown in the figure below, its biggest feature is that it stores files in the Docker host, which is not accessible by other programs, and has high security when sharing data between different containers; and data backup and migration can be directly performed by Docker commands. In addition, Volumes performs better in Docker Desktop than other methods, which is also the recommended method by Docker official documents.</p> From: Docker official documentation","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#32-common-operations-on-volumes","title":"3.2 Common Operations on Volumes","text":"<p>Referencing to the official documentation, we introduce several use cases of Volumes under different circumstances.</p> <ol> <li> <p>We can create and manage Volumes using the following basic commands: <pre><code># Create a Volume and name it my-vol\ndocker volume create my-vol\n\n# List all Volumes\ndocker volume ls\n\n# View Volume properties\ndocker volume inspect my-vol\n\n# Remove a Volume\ndocker volume rm my-vol\n\n# Remove all Volumes\ndocker volume prune\n</code></pre></p> </li> <li> <p>Volumes can be specified when starting a container: <pre><code>## Run devtest container\n## And attach the container myvol2 to the /app directory\ndocker run -d \\\n--name devtest \\\n-v myvol2:/app \\\nnginx:latest\n</code></pre></p> </li> <li> <p>When building multi-container services, developers often choose <code>docker compose</code> as a multi-container management tool and write the <code>docker-compose.yml</code> file. On the one hand, this file can help us merge all container configuration parameters in a file for unified management. On the other hand, it can help the fast startup or termination of the multi-container service. Here we do not elaborate on each parameter of the <code>yml</code> file, but focus on how to define Volumes in this file.</p> </li> </ol> <p><pre><code>version: \"3.9\"\nservices:\n  frontend:\n    image: node:lts\n    volumes:\n      - myapp:/home/node/app\nvolumes:\n  myapp:\n    external: true\n</code></pre> The two volumes settings here, the first one sets the volumes of services, named <code>myapp</code>, and the path is stored in <code>/home/node/app</code>. The second top-level Volumes setting is to enable the sharing of multiple containers, such as setting <code>myapp</code> to be shared by all containers.</p> <ol> <li>Use container data that already exists to create Volumes for a new container. The new container is named <code>nginxtest</code>, the new Volume is named <code>nginx-vol</code>, and the data source path is <code>/usr/share/nginx/html</code>.</li> </ol> <pre><code> docker run -d \\\n--name=nginxtest \\\n-v nginx-vol:/usr/share/nginx/html \\\nnginx:latest\n</code></pre> <p>On this basis, you can also add <code>ro</code> to set read-only permission, which can prevent others from accidentally deleting or other mistakes when sharing container data.</p> <pre><code> docker run -d \\\n--name=nginxtest \\\n-v nginx-vol:/usr/share/nginx/html:ro \\\nnginx:latest\n</code></pre> <ol> <li>Volumes can also be used in scenarios such as data backup and migration.</li> </ol> <p>First, we create a container named <code>dbstore</code> with the Volumes <code>dbdata</code>: <pre><code>docker run -v /dbdata --name dbstore ubuntu /bin/bash\n</code></pre></p> <p>Secondly, backup the Volumes of this container. Use <code>--volumes-from</code> to specify the source of the container and specify <code>dbdata</code> to be backed up to the <code>backup.tar</code> file under the path <code>/backup</code>.</p> <pre><code>docker run --rm --volumes-from dbstore -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata\n</code></pre> <p>Next, migrate the container data that has been backed up. Create a new container <code>dbstore2</code>:</p> <pre><code>docker run -v /dbdata --name dbstore2 ubuntu /bin/bash\n</code></pre> <p>Finally, transfer the data from the <code>backup.tar</code> file to the new container:</p> <pre><code> docker run --rm --volumes-from dbstore2 -v $(pwd):/backup ubuntu bash -c \"cd /dbdata &amp;&amp; tar xvf /backup/backup.tar --strip 1\"\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-11-25-Docker-Volumes/#4-conclusion","title":"4 Conclusion","text":"<p>When deploying services, developing functions is one aspect, and persistent management of data is also an essential part. This article hopes to help you choose the appropriate commands to manage the container's data when using Docker Volume.</p> <p>Welcome everyone to leave a message for discussion!</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/","title":"Notes on Docker Pitfalls","text":"<p>Info</p> <p>Author: Void, published on December 9, 2021, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#1-introduction","title":"1. Introduction","text":"<p>We often use Docker to run some services, but we only use a small part of its functionalities. Docker itself has many functions and commands. As a non-professional developer, I would like to record the pitfalls I have encountered in Docker in this article.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#2-pitfalls","title":"2. Pitfalls","text":"","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#21-starting-containers","title":"2.1 Starting Containers","text":"<p>Docker containers run in the background and must have a persistent foreground process. Otherwise, the container will automatically exit.</p> <p>A common practice is to use CMD or ENTRYPOINT in the Dockerfile to declare the command we want to run, or to declare the command after Docker run. However, sometimes our command may not be easy to write here.</p> <p>In this case, we can start the container as a daemon process.</p> <pre><code>docker run -itd image id\n</code></pre> <p>With the following command, we can enter the container.</p> <pre><code>docker exec -it container id /bin/bash\n</code></pre> <p>In the container, we can freely execute our commands.</p> <p>Finally, we use Ctrl+P+Q to exit the container without closing it.</p>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#22-text-editor","title":"2.2 Text Editor","text":"<p>The native Linux environment may not have a text editor. We can use cat &gt; file to paste the content into the text, but this method is not very user-friendly.</p> <p>Vim is a commonly used text editor under Linux. We can install Vim with the following command.</p> <pre><code>apt-get update\napt-get install vim\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#23-checking-container-status","title":"2.3 Checking Container Status","text":"<p>Check the processes running in the container.</p> <pre><code>docker top container id\n</code></pre> <p>For unwanted processes, we can use the following command to kill them.</p> <pre><code>kill -9 PID\n</code></pre> <p>View the log of processes running in the container.</p> <pre><code>docker logs -f -t --tail 20 container id\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#24-cleaning-up-unused-volumes","title":"2.4 Cleaning Up Unused Volumes","text":"<p>We often use Docker to create and delete containers. Over time, the data volumes mounted by the container can produce some zombie files (unbound containers, etc.).</p> <p>We can use the following command to find zombie files.</p> <pre><code>docker volume ls -qf dangling=true\n</code></pre> <p>And delete these zombie files.</p> <pre><code>docker volume rm $(docker volume ls -qf dangling=true)\n</code></pre>","tags":["docker"]},{"location":"en/Main_Course/Analytics_Tools/2021-12-09-Docker2/#3-conclusion","title":"3. Conclusion","text":"<p>These are just the pitfalls and knowledge the author has learned while using Docker, and are not comprehensive. There is still much room for exploration in Docker.</p> <p>I hope the readers can avoid some pitfalls and bugs.</p>","tags":["docker"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/","title":"Useful Python Packages","text":"<p>Info</p> <p>Author: Void, Published on 2021-08-03, Read time: about 10 minutes, WeChat article link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#1-introduction","title":"1 Introduction","text":"<p>A large part of why Python is so popular is that it can easily call packages that implement various functions. For example, Pandas and Numpy are commonly used objects for data science practitioners. In addition to these, based on my actual experience, this article will introduce some obscure and useful Python packages, giving you a boost in using Python.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#2-useful-python-packages","title":"2 Useful Python Packages","text":"","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#21-tqdm","title":"2.1 tqdm","text":"<p>tqdm is a small tool that displays a loop progress bar. Have you ever experienced writing a complex loop, clicking \"run\" with joy, yet all you see is that the program is running and you will never know how long this loop takes to run? You may not even know if it is running or if the kernel has crashed. </p> <p>With tqdm, all you need to do is add it to the iterator of the loop, and you can see the progress bar, the time for each loop, and the estimated total time.</p> <pre><code>for i in tqdm(range(100)):\n    sleep(0.01)\n</code></pre> <p>It is worth mentioning that tqdm can also be applied to DataFrame <code>apply(groupby)</code>.</p> <pre><code>import numpy as np\nimport pandas as pd\nfrom tqdm.auto import tqdm\ndf = pd.DataFrame(np.random.randint(0, 100, (100000, 6)))\ntqdm.pandas(desc=\"my bar!\")\ndf.progress_apply(lambda x: x**2)\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#22-dateutil","title":"2.2 dateutil","text":"<p>When it comes to time format processing, I really like to use the <code>parse</code> method in the dateutil package. It can give a standardized time output based on different formats of time input in a smart way.</p> <pre><code>from dateutil.parser import parse\nIn: parse('22nd,July,2009')\nOut: datetime.datetime(2009, 7, 22, 0, 0)\n\nIn: parse('2018-04-20')\nOut: datetime.datetime(2018, 4, 20, 0, 0)\n\nIn: parse('20180420')\nOut: datetime.datetime(2018,4,20,0,0)\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#23-line_profiler-and-memory_profiler","title":"2.3 line_profiler and memory_profiler","text":"<p>line_profiler and memory_profiler are analyzers used to monitor code execution time and memory consumption, respectively. They can display, in a straightforward way, which lines or functions are taking up too much time or memory, thus facilitating code optimization.</p> <p>Their use is relatively simple, just add a decorator around the code to be examined.</p> <p>For memory_profiler:</p> <p>Create <code>example.py</code>.</p> <pre><code>@profile\ndef my_func():\n    a = [1] * (10 ** 6)\n    b = [2] * (2 * 10 ** 7)\n    del b\n    return a\n\nif __name__ == '__main__':\n    my_func()\n</code></pre> <p>Then run it in the command line:</p> <pre><code>python -m memory_profiler example.py\n</code></pre> <p>The output is as follows:</p> <pre><code>Line #    Mem usage    Increment  Occurrences   Line Contents\n============================================================\n     3   38.816 MiB   38.816 MiB           1   @profile\n     4                                         def my_func():\n     5   46.492 MiB    7.676 MiB           1       a = [1] * (10 ** 6)\n     6  199.117 MiB  152.625 MiB           1       b = [2] * (2 * 10 ** 7)\n     7   46.629 MiB -152.488 MiB           1       del b\n     8   46.629 MiB    0.000 MiB           1       return a\n</code></pre> <p>For line_profiler:</p> <p>Create a script:</p> <pre><code>@profile\ndef slow_function(a, b, c):\n    ...\n</code></pre> <p>Then run it in the command line:</p> <pre><code>python -m line_profiler script_to_profile.py.lprof\n</code></pre> <p>The output is as follows:</p> <pre><code>Pystone(1.1) time for 50000 passes = 2.48\nThis machine benchmarks at 20161.3 pystones/second\nWrote profile results to pystone.py.lprof\nTimer unit: 1e-06 s\n\nFile: pystone.py\nFunction: Proc2 at line 149\nTotal time: 0.606656 s\n\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n   149                                           @profile\n   150                                           def Proc2(IntParIO):\n   151     50000        82003      1.6     13.5      IntLoc = IntParIO + 10\n   152     50000        63162      1.3     10.4      while 1:\n   153     50000        69065      1.4     11.4          if Char1Glob == 'A':\n   154     50000        66354      1.3     10.9              IntLoc = IntLoc - 1\n   155     50000        67263      1.3     11.1              IntParIO = IntLoc - IntGlob\n   156     50000        65494      1.3     10.8              EnumLoc = Ident1\n   157     50000        68001      1.4     11.2          if EnumLoc == Ident1:\n   158     50000        63739      1.3     10.5              break\n   159     50000        61575      1.2     10.1      return IntParIO\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#24-plotly","title":"2.4 plotly","text":"<p>There are many Python plot packages, such as matplotlib, seaborn, and plotly. Plotly stands out for its interactivity. You can easily zoom in and out on a specific area or select a curve that interests you. Its use is also very simple:</p> <pre><code>import plotly.express as px \ndf = px.data.gapminder().query(\"country=='Canada'\") \nfig = px.line(df, x=\"year\", y=\"lifeExp\", title='Life expectancy in Canada') \nfig.show()\n</code></pre> <p>With it, you can analyze data more finely and often gain insights that are not visible in static charts.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#25-itertools","title":"2.5 itertools","text":"<p>itertools is a package with low usage frequency but can \"rescue you from a fire\" in certain situations. It primarily provides various iterative operations, such as cumulative addition, Cartesian product, and connecting multiple lists. Without it, we may need to write a piece of code using loops. With it, we only need one sentence.</p> <pre><code># Cumulative addition\n&gt;&gt;&gt; import itertools\n&gt;&gt;&gt; x = itertools.accumulate(range(10))\n&gt;&gt;&gt; print(list(x))\n[0, 1, 3, 6, 10, 15, 21, 28, 36, 45]\n\n# All non-repeating combinations\n&gt;&gt;&gt; x = itertools.combinations(range(4), 3)\n&gt;&gt;&gt; print(list(x))\n[(0, 1, 2), (0, 1, 3), (0, 2, 3), (1, 2, 3)]\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-03-useful-python-packages/#3-conclusion","title":"3 Conclusion","text":"<p>It is because there are so many useful packages and an active</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/","title":"Tips for Common Operations with Python Tuples","text":"<p>Info</p> <p>Author: Vincent, published on August 7, 2021, Read time: about 6 minutes, WeChat article link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#1-introduction","title":"1 Introduction","text":"<p>Python, as a popular programming language, has attracted a lot of attention in the fields of data science and artificial intelligence. Many people are learning it. However, on the road to excellence, we must not neglect the basics, such as common data structures, syntax specifications, and best practices for programming thinking. By mastering these most fundamental things, we can easily handle the work based on them.</p> <p>Let's first review and summarize the commonly used operations in Python data structures: The common data structures in Python can be collectively referred to as containers. Sequences (such as lists and tuples), mappings (such as dictionaries), and sets are the three main types of containers. Flat sequences such as str, bytes, bytearray, memoryview, and array.array are not within the scope of this article.</p> <p>Here, we will start with tuples.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#2-tuples-are-not-just-immutable-lists","title":"2 Tuples are not just immutable lists","text":"","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#21-record-function-of-tuples","title":"2.1 Record Function of Tuples","text":"<p>One of the significant differences between a tuple and a list is that it cannot be modified, but it has another function as a record for which there are no field names. As the latter is often ignored, let's first look at the role of tuples as records.</p> <p>A tuple can be defined using parentheses. Each element in the tuple stores the data of a field in the record, plus the position of this field. It is precisely this positional information that gives the data meaning. In the example below, the tuple is used as a record:</p> <pre><code># Latitude and longitude of Los Angeles International Airport, recorded in a tuple\nlax_coordinates = (33.9425, -118.408056)\n\n# Information for Tokyo: city name, year, population (in millions), population change (in percentage), and area (in square kilometers), recorded in a tuple\ncity, year, pop, chg, area = ('Tokyo', 2003, 32450, 0.66, 8014)\n\n# A list of tuples in the form (country_code, passport_number)\ntraveler_ids = [('USA', '31195855'), ('BRA', 'CE342567'),('ESP', 'XDA205856')]\n\n# During iteration, the passport variable is bound to each tuple. The % format operator can be matched to the corresponding tuple element.\nfor passport in sorted(traveler_ids):\n  print('%s/%s' % passport)\n</code></pre> <p>The output is:</p> <pre><code>BRA/CE342567\nESP/XDA205856\nUSA/31195855\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#22-tuple-unpacking","title":"2.2 Tuple Unpacking","text":"<p>The operation in the above for loop extracts the elements in the tuple, also known as tuple unpacking. Parallel assignment is an excellent application of unpacking tuples, as shown in the example below:</p> <pre><code># Latitude and longitude of Los Angeles International Airport, recorded in a tuple\nlax_coordinates = (33.9425, -118.408056)\n# Unpack tuple and assign each element in the tuple to the corresponding variable\nlatitude, longitude = lax_coordinates\n</code></pre> <p>Another classic and elegant application is to swap the values of variables:</p> <pre><code>a, b = b, a\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#23-tuples-as-function-parameters","title":"2.3 Tuples as Function Parameters","text":"<p>Use the <code>*</code> operator to unpack an iterable object as a function parameter. For example, Python's built-in function divmod takes two numeric arguments and returns the quotient and remainder. The following example uses <code>*</code> to pass the tuple to the function.</p> <pre><code>t = (20, 8)\nquotient, remainder = divmod(*t)\nprint(quotient, remainder)\n</code></pre> <p>The output is:</p> <pre><code>2 4\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#24-tuples-as-function-return-values","title":"2.4 Tuples as Function Return Values","text":"<p>Some functions have multiple return values, and when they are assigned to a variable, the variable type is a tuple:</p> <pre><code>import numpy as np\narr = np.random.randint(10, size=8)\n\ndef count_sum(arr):\n   count = len(arr)\n   sum = arr.sum()\n   return count, sum\n\nresult = count_sum(arr)\nprint(result)\n</code></pre> <p>The output is:</p> <pre><code>(8, 40)\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#25-zip-function","title":"2.5 zip Function","text":"<p>Zip is a built-in function in Python that can take two or more sequences and form a list of tuples. In Python 3, it returns an iterator, as shown below:</p> <pre><code>list_a = [1,2,3]\nlist_b = ['a','b','c']\n\nfor i in zip(list_a, list_b):\n    print(i)\n</code></pre> <p>The output is:</p> <pre><code>(1, 'a')\n(2, 'b')\n(3, 'c')\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#26-other-common-operations","title":"2.6 Other Common Operations","text":"<p>Tuples also support some common operations, such as for the tuple <code>a = (1, 'y', 5, 5, 'x')</code>:</p> <ul> <li>Indexing, such as <code>a.index('x')</code></li> <li>Slicing, such as <code>a[1:4]</code></li> <li>Counting, such as <code>a.count(5)</code></li> <li>Sorting, such as <code>a.sort()</code></li> <li>Merging tuples, such as <code>c = a + a</code></li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-07-Python-Tuple/#3-summary","title":"3 Summary","text":"<p>The above content not only covers the basic operations of tuples but also combines other functions, operators, and so on that are often used in practical work. When reviewing this knowledge, I mainly referred to two classic Python programming books: \"Fluent Python\" and \"Think Python: How to Think Like a Computer Scientist,\" and interested friends can read them in-depth!</p> <p>I hope this article is helpful to you, and next time, I will summarize the tips for using Python lists. </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/","title":"Tips for Common Operations on Python Lists","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-08-14, Reading Time: about 6 minutes, Wechat Official Account Article Link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#1-preface","title":"1. Preface","text":"<p>In the previous article, we reviewed the common operations on Python tuples, in this article, let's talk about another common data type in Python: lists.</p> <p>Like tuples, lists are also sequences created by square brackets <code>[]</code>. The values in the list are commonly referred to as elements, and the data type of the elements can be different. For example, <code>test_list = [0,1,1,'a','b']</code> can successfully create a list.</p> <p>Unlike tuples, lists are mutable sequences, so the operations available for sequences will be more flexible. Next, we will review the most commonly used operations on lists.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#2-common-operations-on-lists","title":"2. Common operations on lists","text":"","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#21-traversal","title":"2.1 Traversal","text":"<p>Taking the list <code>people = ['Adam','Nick','Tony']</code> as an example, we can use a for loop to traverse:</p> <pre><code>for i in people:\n  print(i)\n</code></pre> <p>When updating the list, using an index to traverse will be more convenient:</p> <pre><code>for i in range(len(people)):\n  people[i] += '_suffix'\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#22-slicing","title":"2.2 Slicing","text":"<p>Like tuples, you can get the elements of a list by slicing (the index in Python starts from 0):</p> <pre><code>print(people[:2])\n</code></pre> <p>Output:</p> <pre><code>['Adam','Nick']\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#23-deleting-elements","title":"2.3 Deleting Elements","text":"<p>a. The <code>pop</code> method can return the value to be deleted, and you can use an index to delete or delete the last element: <code>a = people.pop(2)</code> or <code>a = people.pop()</code>, the value of <code>a</code> will be <code>'Tony'</code>, and the original list will delete the corresponding element.</p> <p>b. If you don't need the deleted value, <code>del</code> is a good method: <code>del people[0]</code>, then the list <code>people</code> will become <code>['Nick','Tony']</code>.</p> <p>c. The <code>remove</code> method will delete the first required element in the list. For example, after the <code>test_list.remove(1)</code> operation, the list will become <code>test_list = [0,1,'a','b']</code>. Note that the <code>remove</code> method does not return any value.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#24-interaction-between-lists-and-strings","title":"2.4 Interaction between Lists and Strings","text":"<p>Lists and strings can be flexibly converted. For example, convert a string to a list:</p> <pre><code># Convert string to list\nname = 'Adam is very cool'\nname_list_1 = list(name)\nprint(name_list_1)\n\n# The split method can split the string using a delimiter\nname_list_2 = name.split()\nprint(name_list_2)\n</code></pre> <p>Output:</p> <pre><code>['A', 'd', 'a', 'm', ' ', 'i', 's', ' ', 'v', 'e', 'r', 'y', ' ', 'c', 'o', 'o', 'l']\n\n['Adam', 'is', 'very', 'cool']\n</code></pre> <p>Sometimes you need to merge a list into a string, the <code>join</code> method is very useful:</p> <pre><code># Join the elements in the list with spaces into a new string\nprint(' '.join(['Adam', 'is', 'very', 'cool']))\n</code></pre> <p>Output:</p> <pre><code>'Adam is very cool'\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#25-aliases-of-lists","title":"2.5 Aliases of Lists","text":"<p>This is a point that is easy to make a mistake. In the following code, two variables are exactly the same, changing one will also change the value of the other:</p> <pre><code># alias is an alias for the list name\nname = ['Adam', 'is', 'very', 'cool']\nalias = name\nalias.pop()\nprint(name)\n</code></pre> <p>Output:</p> <pre><code>['Adam', 'is', 'very']\n</code></pre> <p>Therefore, when you want to use two independent lists, try to use separate assignment statements or shallow copies:</p> <pre><code>name = ['Adam', 'is', 'very', 'cool']\n\n# Create a list with the same values\nname_2 = ['Adam', 'is', 'very', 'cool']\n# Shallow copy\nname_3 = name[:]\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#26-list-arguments","title":"2.6 List Arguments","text":"<p>Tuples can be passed into functions as parameters using the <code>*</code> operator, and lists can also be passed as parameters to functions. At this time, the function will get a reference to the list, which means that if the function modifies the list, the original list will also be modified. The following example demonstrates this:</p> <pre><code># Define a function to delete the first element of a list\ndef del_head(t):\n  del t[0]\n\nname = ['Adam', 'is', 'very', 'cool']\ndel_head(name)\nprint(name)\n</code></pre> <p>Output:</p> <pre><code>['is', 'very', 'cool']\n</code></pre> <p>Parameter <code>t</code> and the variable <code>name</code> refer to the same list, so when <code>t</code> changes, <code>name</code> also changes. This knowledge point is very important. When writing functions, be very careful about whether the operation will create a new list or make changes to the original list.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#27-mapping-and-list-comprehensions","title":"2.7 Mapping and List Comprehensions","text":"<p>If you want to operate on a list with a function, mapping and list comprehensions are good choices. The built-in function map provided by Python takes two parameters - a mapping function and an iterable object, and returns an iterable object. The following example demonstrates this:</p> <pre><code># Return the square of the element\ndef square(n):\n    return n*n\n\ntest_list = [1,2,4,5]\nresult = map(square, test_list)\nprint(result)\nprint(list(result))\n</code></pre> <p>Output:</p> <pre><code>&lt;map object at 0x1101b9400&gt;\n[1, 4, 16, 25]\n</code></pre> <p>You can also use list comprehensions to perform the same operation:</p> <pre><code>test_list = [1,2,4,5]\nresult = [i*i for i in test_list]\nprint(result)\n</code></pre> <p>Output:</p> <pre><code>[1, 4, 16, 25]\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-14-Python-list/#3-summary","title":"3. Summary","text":"<p>The above knowledge basically summarizes the common operations on lists. Here are some brief experiences:</p> <ul> <li>Most list methods modify the parameter</li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/","title":"Tips for Common Operations on Python Dictionaries","text":"<p>Info</p> <p>Author: Vincent\uff0cPublished on 2021-08-21, Reading time: about 6 minutes\uff0cWeChat official account article link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#1-introduction","title":"1 Introduction","text":"<p>In the previous article, we reviewed common operations on Python lists. As a commonly used data type, lists play a very important role in daily work. In this article, we will continue to talk about another commonly used data type in Python - dictionaries (Dict).</p> <p>Dictionaries can be defined using the <code>dict()</code> method or using curly braces, such as <code>name2code = {'Tony':1, 'Kevin':2, 'Luis':3}</code>. If you want to add elements, you can use the key-value assignment pattern: <code>name2code['Nick'] = 0</code>. It is easy to see that, unlike lists, dictionaries do not use integers as subscripts. Let's take a look at the commonly used methods of dictionaries.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#2-common-dictionary-methods","title":"2 Common Dictionary Methods","text":"","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#21-indexing","title":"2.1 Indexing","text":"<p>Since dictionaries are in the form of key-value pairs, you can use the key to index the value you need. For example:</p> <pre><code>print(name2code['Nick'] )\n</code></pre> <p>Output:</p> <pre><code>0\n</code></pre> <p>Similarly to lists, you can use the <code>in</code> operator to check whether the dictionary contains the key you want to find. It is worth noting that the implementation of the <code>in</code> operator in lists and dictionaries is different. Lists use a search algorithm, so when the list becomes longer, the search time will also become longer. But dictionaries use a hash table algorithm, so regardless of how many key-value pairs there are in the dictionary, the <code>in</code> operator takes almost the same amount of time.</p> <pre><code>print('Nick' in name2code)\n</code></pre> <p>Output:</p> <pre><code>True\n</code></pre> <p>If you want to see whether a value is in the dictionary, you can use the <code>values()</code> method to extract the values from the dictionary and use the <code>in</code> operator to check:</p> <pre><code>values = name2code.values()\nprint(0 in values)\n</code></pre> <p>Output:</p> <pre><code>True\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#22-deleting-elements","title":"2.2 Deleting Elements","text":"<p>The method for deleting elements from a dictionary is similar to that for a list:</p> <ul> <li>To clear a dictionary: <code>name2code.clear()</code>, note that the <code>clear()</code> method has no return value</li> <li>Remove the key-value pair associated with the key k and return the corresponding value: <code>name2code.pop(k, [default])</code></li> <li>Return the last key-value pair added and remove it: <code>name2code.popitem()</code></li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#23-looping","title":"2.3 Looping","text":"<p>You can use a for loop to iterate through the keys of a dictionary. Please note that because the keys are hashable, their appearance does not follow a specific order. The following code may have a different output order on your computer (Note: Python 3.6 and later versions retain the order in which the key-value pairs were added, so the result is determined):</p> <pre><code>for i in name2code:\n    print(i, name2code[i])\n</code></pre> <p>Output:</p> <pre><code>Tony 1\nKevin 2\nLuis 3\nNick 0\n</code></pre> <p>If you want to iterate through both the key and value, you can use the <code>items()</code> method:</p> <pre><code>for k,v in name2code.items():\n    print(k,v)\n</code></pre> <p>Output:</p> <pre><code>Tony 1\nKevin 2\nLuis 3\nNick 0\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#24-reverse-lookup","title":"2.4 Reverse Lookup","text":"<p>For a dictionary, the operation of using a key to find a value has been introduced above. If you want to use a value to find its associated key, then you need to perform a reverse lookup. Note that a <code>raise</code> statement is used here to throw an exception, which is used to display the value of the parameter being searched.</p> <pre><code>def reversed_lookup(d, v):\n    for i in d:\n        if d[i] == v:\n            return i\n    raise ValueError(\"The value being searched for is not in the dictionary\")\n\nreversed_lookup(name2code,5)\n</code></pre> <p>Output:</p> <pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-33-832e824fe6b4&gt; in &lt;module&gt;\n----&gt; 1 reversed_lookup(name2code,5)\n\n&lt;ipython-input-32-be75152f6e58&gt; in reversed_lookup(d, v)\n      4             return i\n      5\n----&gt; 6     raise ValueError(\"The value being searched for is not in the dictionary\")\n\nValueError: The value being searched for is not in the dictionary\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#25-dictionary-comprehension","title":"2.5 Dictionary Comprehension","text":"<p>Starting from Python 2.7, list comprehension and generator expressions have also been ported to dictionaries. For example:</p> <pre><code>code2name = {code:name for name,code in name2code.items() if code &lt; 2}\nprint(code2name)\n</code></pre> <p>Output:</p> <pre><code>{1: 'Tony', 0: 'Nick'}\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#3-variants-of-dictionaries","title":"3 Variants of Dictionaries","text":"<p>In addition to <code>dict</code>, there are several other mapping types in the <code>collections</code> module of the Python standard library:</p> <ul> <li><code>collections.OrderedDict</code>: This type keeps the order of keys when they are added, so the iteration order of keys remains consistent. Please note that if you define an ordered dictionary and do not insert any data after that, the original key-value pairs are still unordered, just like a regular dictionary.</li> <li><code>collections.ChainMap</code>: This type can hold multiple different mapping objects. When a key lookup operation is performed, these objects are searched one by one until the corresponding key is found. This is commonly used for managing dictionaries that represent different scopes and contexts.</li> <li><code>collections.Counter</code>: As the name suggests, this is a counter. When a key is updated, the counter is also updated. It is commonly used to count elements in a hash table or as a multiset (a set where elements occur multiple times).</li> <li><code>colllections.UserDict</code>: This class is mainly used for inheritance by users. Inheriting from this class is more convenient than inheriting from <code>dict</code> because the methods of built-in types like <code>dict</code> usually ignore user-overridden methods, causing unexpected troubles, as detailed in Chapter 12 of Fluent Python.</li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-08-21-Python-dict/#4-summary","title":"4 Summary","text":"<p>The above knowledge points are very useful in daily work. The following content also covers the summaries of many years of practical experience of Python programmers. Let's review:</p> <ul> <li>The keys of a dict must be hashable, which means that its hash value cannot change during its lifetime and the object must implement the <code>__hash__</code> method to support testing for equality using the <code>__eq__</code> method.</li> <li>Dictionaries consume a lot of memory. Because dictionaries use hash tables, and hash tables must be sparse, the space utilization rate is low. If the amount of data is huge, it is recommended to use tuples or lists instead.</li> <li>Key lookup in dictionary is very efficient. As long as the dictionary can fit into memory, the key lookup speed does not slow down with the increase of data volume, but the fast speed comes at the cost of greater space usage.</li> <li>Adding a new key to a dict may change the order of existing keys. The specific reason depends on the implementation of the dict. It is recommended not to iterate and modify the dict at the same time, but to split it into two steps: iterate to find the content that needs to be modified and record it, and</li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-09-21-Python-Closure/","title":"Understanding Python Closures","text":"<p>Info</p> <p>Author: Vincent, published on 2021-09-21, Reading time: about 6 minutes, WeChat Official Account article link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-09-21-Python-Closure/#1-introduction","title":"1 Introduction","text":"<p>When working with Python in daily work, you may have encountered code like this:</p> <pre><code>def make_counter():\n    # Outer closure function\n    count = 0\n    def counter():\n      # Nested function\n        nonlocal count\n        count += 1\n        return count\n\n    return counter\n</code></pre> <p>Why define functions like this - with one function inside another, and the outer function returning the inner function as its output? What are the benefits of this approach? In this article, we will uncover the mysterious veil of closures.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-09-21-Python-Closure/#2-key-points-of-closures","title":"2 Key points of closures","text":"<p>A closure is a function that extends the scope of a function, referring to a non-global variable (such as count in the example above) that is not defined in the function. By adding nonlocal, the variable is marked as a free variable (nonlocal keyword was added in Python 3), allowing the nested function to modify the immutable variable outside the scope.</p> <p>When we call make_counter, it returns a counter function object. Each time we call the counter, it updates count, as shown below:</p> <pre><code># Run the closure function\ncounter = make_counter()\nprint(counter())\nprint(counter())\n</code></pre> <p>Output:</p> <pre><code>1\n2\n</code></pre> <p>In this example, one thing that needs to be expanded is the storage location of the historical value of count. Count is a local variable in the make_counter function, and its initial value is 0. However, when counter is called, the make_counter function has already been returned, and the local scope should no longer exist.</p> <p>In the counter function, count is a free variable, and the counter function implements the binding of this variable. We can check the names of stored local variables and free variables using the code attribute (which represents the compiled function definition body) in Python. For example:</p> <pre><code># View free variables\ncounter.__code__.co_freevars\n</code></pre> <p>Output:</p> <pre><code>('count',)\n</code></pre> <p>The binding of count is in the closure attribute of the returned counter function, where each element of closure corresponds to a name in <code>counter.__code__.co_freevars</code>. These elements are cell objects, and their stored values can be accessed through the cell_contents attribute, as shown below:</p> <pre><code>counter.__closure__[0].cell_contents\n</code></pre> <p>Output:</p> <pre><code>2\n</code></pre> <p>Closures can solve lightweight problems very concisely and intuitively. If we were to use a <code>class</code> to implement the functionality above, it would look like this:</p> <pre><code># Define a counter using a class, starting from 0\nclass Counter:\n    def __init__(self):\n        self.count = 0\n\n    def __call__(self):\n        self.count += 1\n        return self.count\n\ncounter = Counter()\nprint(counter())\nprint(counter())\n</code></pre> <p>Output:</p> <pre><code>1\n2\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-09-21-Python-Closure/#3-summary","title":"3 Summary","text":"<p>A closure is a function that retains the binding of free variables that were present when the function was defined, so even if the scope no longer exists after the function is returned, the bindings can still be used. Closures can easily implement simple class functionality, and there are many Python \"magic\" functions that can be implemented based on this, such as decorators, which we will explore next time!</p> <p>I hope this article has been helpful to you, and feel free to discuss in the comments!</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/","title":"SQL Parsing Tool: sqlparse","text":"<p>Info</p> <p>Author: Jeremy, Posted on October 20, 2021, Reading time: about 10 minutes, WeChat Official Account Article Link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#1-introduction","title":"1. Introduction","text":"<p>A data analysis team often accumulates a large amount of SQL-based code for daily reports, model data extraction, business decisions, etc. Sometimes, as the company develops and technology changes, the company's data warehouse may be migrated or restructured, and SQL code containing these tables needs to be rewritten accordingly. Manually rewriting segments of business code, especially modifications to fields or table names, is often repetitive and prone to omissions.</p> <p>Laziness is the first productivity of programmers. Since it is repetitive work, is there any tool that can help us automate this process?</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#2-python-open-source-tool-sqlparse","title":"2. Python Open Source Tool: sqlparse","text":"","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#21-introduction","title":"2.1 Introduction","text":"<p>To rewrite SQL code, a key step is to parse the SQL. sqlparse is an unverified parser based on Python. It provides a simple <code>parse()</code> function to return a parsing structure similar to a syntax tree. Let's use the <code>_pprint_tree()</code> function to print the parsed SQL statement:</p> <pre><code>import sqlparse\nquery = 'Select a, col_2 as b from Table_A;'\nsqlparse.parse(query)[0]._pprint_tree()\n</code></pre> <p>The output is:</p> <pre><code>|- 0 DML 'Select'\n|- 1 Whitespace ' '\n|- 2 IdentifierList 'col_1,...'\n|  |- 0 Identifier 'col_1'\n|  |  `- 0 Name 'col_1'\n|  |- 1 Punctuation ','\n|  |- 2 Whitespace ' '\n|  `- 3 Identifier 'col_2 ...'\n|     |- 0 Name 'col_2'\n|     |- 1 Whitespace ' '\n|     |- 2 Keyword 'as'\n|     |- 3 Whitespace ' '\n|     `- 4 Identifier 'b'\n|        `- 0 Name 'b'\n|- 3 Whitespace ' '\n|- 4 Keyword 'from'\n|- 5 Whitespace ' '\n|- 6 Identifier 'Table_A'\n|  `- 0 Name 'Table_A'\n`- 7 Punctuation ';'\n</code></pre> <p>We can see that sqlparse can accurately identify the keywords in the query statement, and the fields and table names are identified as Identifier types. Combining the keywords in the preceding and following tokens can further determine whether they are fields or table names. Before that, you need to understand the various methods contained in each type.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#22-type-definition","title":"2.2 Type definition","text":"<p>The basic type of sqlparse is Token, which has two commonly used attributes: ttype and value. In addition, like the nodes of a tree structure, it can be associated with the previous token by the parent attribute. Its commonly used methods mainly access and judge the attributes of the token:</p> <p>class sqlparse.sql.Token(ttype, value):</p> <ul> <li> <p>flatten(): Resolve subgroups.</p> </li> <li> <p>has_ancestor(other): Returns True if other is in this tokens ancestry.</p> </li> <li> <p>is_child_of(other): Returns True if this token is a direct child of other.</p> </li> <li> <p>match(ttype, values, regex=False): checks whether the token matches the given arguments.</p> </li> <li> <p>within(group_cls): Returns True if this token is within group_cls.</p> </li> </ul> <p>TokenList is an inheritance of the Token type and is defined as a collection of tokens. Access is done by token.tokens. For example, 'col_2 as b' in the example was judged as IdentifierTypeTokenList. In addition to inheriting and partially rewriting the methods of the Token type, it also defines methods for obtaining the position, name, and matching search of child tokens:</p> <p>class sqlparse.sql.TokenList(tokens=None):</p> <ul> <li> <p>flatten(): Generator yielding ungrouped tokens. This method is recursively called for all child tokens. (overrides the flatten method)</p> </li> <li> <p>get_alias(): Returns the alias for this identifier or None.</p> </li> <li> <p>get_name(): Returns the name of this identifier.</p> </li> <li> <p>group_tokens(grp_cls, start, end, include_end=True, extend=False): Replace tokens by an instance of grp_cls.</p> </li> <li> <p>has_alias(): Returns True if an alias is present.</p> </li> <li> <p>token_first(skip_ws=True, skip_cm=False): Returns the first child token.</p> </li> <li> <p>token_index(token, start=0): Return list index of token.</p> </li> <li> <p>token_prev(idx, skip_ws=True, skip_cm=False): Returns the previous token relative to idx.*</p> </li> </ul>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#23-lexical-analysis","title":"2.3 Lexical analysis","text":"<p>For DDL(Data Definition Language) / DML(Data Manipulation Language) and other keywords in SQL, sqlparse mainly recognizes them through regular expressions. All regular expressions and token type correspondences are stored in the <code>SQL_REGEX</code> variable in keywords.py. You can modify the regular expression to adapt to different data warehouse syntax and functions if necessary.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#3-case-extracting-table-name-from-query","title":"3. Case: Extracting Table Name from Query","text":"<p>The sqlparse author provides an example of extracting table names in the source code, mainly by extracting the subsequent <code>tokenList</code> when encountering keywords from or join during the parsing process.</p> <pre><code>ALL_JOIN_TYPE = ('LEFT JOIN', 'RIGHT JOIN', 'INNER JOIN', 'FULL JOIN', 'LEFT OUTER JOIN', 'FULL OUTER JOIN')\n\n\ndef is_subselect(parsed):\n\"\"\"\n    Whether sub-query\n    :param parsed: T.Token\n    \"\"\"\n    if not parsed.is_group:\n        return False\n    for item in parsed.tokens:\n        if item.ttype is DML and item.value.upper() == 'SELECT':\n            return True\n    return False\n\n\ndef extract_from_part(parsed):\n\"\"\"\n    Extract module after from\n    \"\"\"\n    from_seen = False\n    for item in parsed.tokens:\n        if from_seen:\n            if is_subselect(item):\n                for x in extract_from_part(item):\n                    yield x\n            elif item.ttype is Keyword:\n                from_seen = False\n                continue\n            else:\n                yield item\n        elif item.ttype is Keyword and item.value.upper() == 'FROM':\n            from_seen = True\n\n\ndef extract_join_part(parsed):\n\"\"\"\n    Extract module after join\n    \"\"\"\n    flag = False\n    for item in parsed.tokens:\n        if flag:\n            if item.ttype is Keyword:\n                flag = False\n                continue\n            else:\n                yield item\n        if item.ttype is Keyword and item.value.upper() in ALL_JOIN_TYPE:\n            flag = True\n\n\ndef extract_table_identifiers(token_stream):\n    for item in token_stream:\n        if isinstance(item, IdentifierList):\n            for identifier in item.get_identifiers():\n                yield identifier.get_name()\n        elif isinstance(item, Identifier):\n            yield item.get_name()\n        elif item.ttype is Keyword:\n            yield item.value\n\n\ndef extract_tables(sql):\n\"\"\"\n    Extract table name from sql (select statement)\n    \"\"\"\n    from_stream = extract_from_part(sqlparse.parse(sql)[0])\n    join_stream = extract_join_part(sqlparse.parse(sql)[0])\n    return list(extract_table_identifiers(from_stream)) + list(extract_table_identifiers(join_stream))\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-10-16-Python-package-sqlparse/#4-conclusion","title":"4. Conclusion","text":"<p>sqlparse is a relatively powerful SQL parsing tool based on the Python language. The open source library has received 2.6k stars and 522 forks on GitHub. Its code is concise and efficient, and the structure is clear. Interested students should read it carefully.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/","title":"Introduction to Python argparse module","text":"<p>Info</p> <p>Author: Jeremy, published on 2021-11-22, reading time: about 7 minutes, WeChat official account article link: </p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/#1-introduction","title":"1 Introduction","text":"<p>As a scripting language, Python can be easily launched on the command line, but sometimes we often need to pass some parameters to the same set of programs to solve more types of tasks. For example, in the 12306 intelligent booking project, the script has three different running modes based on the different parameters passed in the command line, such as:</p> <ul> <li>python run.py -r: run the ticket grabbing program</li> <li>python run.py -c: filter CDN</li> <li>python run.py -t: test email and server sauce</li> </ul> <p>Doesn't it look like our habit of using shell scripts? Today, I want to introduce to you the module that supports command line interaction (CLI) behind Python - argparse.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/#2-introduction-to-argparse","title":"2 Introduction to argparse","text":"<p>The argparse module allows people to easily write user-friendly command-line interfaces, which can typically be seen in a project's CLI.py file.</p> <p>The use of argparse mainly consists of three steps:</p> <ol> <li>Instantiate an object</li> <li>Use the add_argument () method to define the parameters that can be passed</li> <li>Use the parse_args () method to pass the parameter object to the program</li> </ol>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/#21-passing-positional-parameters","title":"2.1 Passing Positional Parameters","text":"<p>Positional parameters are parameters that must be carried when the script is inaugurated on the command line. When defined in the add_argument () method, the parameter name prefix does not have \"-\" or \"--\". If a positional argument is defined, the argument is essential on the command line.</p> <p>Let's take a look at a simple example:</p> <pre><code>import argparse\n\ndef compute_square(d):\n'''Calculate the square'''\n    return d ** 2\n\ndef create_parser():\n    # Instantiate the parser object\n    parser = argparse.ArgumentParser()\n    # Add parameters\n    parser.add_argument(\"d\", type=int, help=\"return the square of the input numebr\")\n    # Return the parser object\n    return parser\n\nif __name__ == \"__main__\":\n    # Create the parser object\n    parser = create_parser()\n    # Parse the command line arguments\n    args = parser.parse_args()\n    # Call the function\n    print(\"return value: \",compute_square(args.number))\n</code></pre> <p>We set the filename to <code>ap.py</code>. When we start the file in the terminal and pass in an integer, the program will print the square of the integer:</p> <pre><code>$ python ap.py 4\nreturn value: 16\n</code></pre> <p>Note that in the <code>add_argument</code> method, we defined the type of the incoming parameter as an integer. If the input parameter type cannot be converted to an integer, an error will be reported.</p> <pre><code>$ python ap.py four\nusage: ap.py [-h] number\nap.py: error: argument number: invalid int value: 'four'\n</code></pre>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/#22-passing-optional-parameters","title":"2.2 Passing Optional Parameters","text":"<p>Optional parameters have a prefix containing \"-\", \"--\". \"-\" usually comes after an abbreviation, such as \"-h\", and \"--\" generally comes after a full name, such as \"--help\". Optional parameters can generally be combined with the conditional logic in Python scripts, such as:</p> <pre><code>import argparse\n\n\ndef compute_area(d, objshape=\"square\", return_int=False):\n'''Calculate the area of \u200b\u200ba square or circle'''\n    if objshape == \"square\":\n        result = d**2\n    elif objshape == \"circle\":\n        result = 3.14*(d/2)**2\n    else:\n        return \"Error: invalid shape\"\n\n    return f\"Area: {int(result) if return_int else result}\"\n\n\ndef create_parser():\n    # Instantiate the parser object\n    parser = argparse.ArgumentParser()\n    # Add parameters\n    parser.add_argument(\"d\",\n                        type=int,\n                        help=\"return the square of the input numebr\")\n\n    parser.add_argument(\"-s\", \"--shape\",\n                        type=str,\n                        dest=\"objshape\",  # The name of the parameter object in the Namespace returned by parse_args (), if not added, defaults to \"shape\"\n                        choices=['square','circle'],\n                        help=\"return the area of the shape\")\n\n    parser.add_argument(\"-i\", \"--int\",\n                        action=\"store_true\",\n                        dest=\"return_int\",\n                        help=\"return the area as an integer\")\n    # Return the parser object\n    return parser\n\n\nif __name__ == \"__main__\":\n    # Create the parser object\n    parser = create_parser()\n    # Parse the command line arguments\n    args = parser.parse_args()\n    # Get the parameter dictionary\n    print('args dict:', vars(args))\n    # Call the function\n    print(compute_area(**vars(args)))\n</code></pre> <p>Note that we used some commonly used parameters in the add_argument () method to achieve more standardized and fluent parameter passing:</p> <ul> <li>dest: specify the parameter object name in the Namespace passed in, if not added, defaults to the name of the parameter in add_argument ()</li> <li>choices: limits the range of optional input for the parameter</li> <li>action: handles parameters, here the parameter is set to boolean.</li> </ul> <p>We try to calculate the area of \u200b\u200ba circle and take it as an integer:</p> <pre><code>$ python ap.py 4 -s circle -i\nargs dict: {'d': 4, 'objshape': 'circle', 'return_int': True}\nArea: 12\n</code></pre> <p>In this way, we can elegantly control important parameters in the terminal without changing the code in the script, improving the effectiveness of the code.</p>","tags":["python"]},{"location":"en/Main_Course/Coding/2021-11-21-Python-argparse/#3-summary","title":"3. Summary","text":"<p>In addition to the commonly used methods, the argparse module also includes methods such as:</p> <ul> <li>add_argument_group (): add parameter groups</li> <li>add_subparsers (): add subcommands</li> <li>add_mutually_exclusive_group (): create an exclusive group</li> </ul> <p>And other methods that implement relatively complex parameter passing logic. Understanding and appropriately using these methods can save a lot of time in setting rules.</p> <p>Frequent code modifications are inevitably prone to accidents that crash the code. If you don't want to try on the dangerous edge anymore and want to retain a certain degree of flexibility, why not try argparse!</p>","tags":["python"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/","title":"Build a Taobao Robotic Purchasing Tool in Two Minutes","text":"<p>Info</p> <p>Author: Vincent\u3001Void; Published on 2021-06-08; Read time: about 4 minutes; WeChat Public Account Article Link: </p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#1-pain-points","title":"1 Pain Points","text":"<p>Major eCommerce websites offer promotional activities on specific days, such as 618 and Singles' Day. Sometimes, you need to be alert to snap up limited-release products. However, is your success rate high? Do you often encounter situations where the app is always loading, and after refreshing, you find that a product has been snapped up before you? The fact is that many of your competitors who compete for the same products are faster and more accurate than you because they can execute commands precisely with a <code>robot</code>.</p> <p>Are you frustrated? It doesn't matter. This article will teach you how to build a robot of your own from scratch. It will automatically place orders at the set time, and you will no longer worry about missing your favorite products!</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#2-preparation","title":"2 Preparation","text":"<p>Before building a robot, please make sure you have the following tools:</p> <ul> <li>A computer: it doesn't need to be fast or new, just anything that works.</li> <li>Chrome browser: the robot will complete the automatic purchasing process on Chrome.</li> <li>Python programming environment: Don't worry; you don't need to know how to code because the code has been written for you. However, you need to install software that can run it, so you need to configure the Python programming environment. Windows and Mac users should configure it according to their corresponding methods.</li> </ul> <p>Configure the Python Programming Environment</p> Configure Python on Windows <p>The following steps apply to Windows systems.</p> <p>Anaconda is an open-source Python distribution that integrates Python and numerous scientific packages.</p> <ul> <li>Step 1: Download the Windows version of Anaconda's 64-Bit Graphical Installer</li> <li>Step 2: Install Anaconda</li> <li>Step 3: Open Anaconda Navigator and click <code>Launch Notebook</code> or <code>JupyterLab</code>.</li> </ul> <p>Then you'll see this screen:</p> <p> Jupyter Lab </p> <p>In the Notebook area on the right, add a Notebook and use the code below to build a robot!</p> Configure Python on Mac <p>The following steps apply to Intel Mac and M1 Mac.</p> <ul> <li> <p>Step 1: Open Terminal (command + space activate Spotlight, and enter Terminal)  Terminal </p> </li> <li> <p>Step 2: Enter <code>pip3 install jupyter</code></p> </li> <li>Step 3: Enter <code>pip3 install jupyter-lab</code></li> <li>Step 4: Enter <code>jupyter lab</code></li> </ul> <p>Then you'll see this screen:</p> <p> Jupyter Lab </p> <p>In the Notebook area on the right, add a Notebook and use the code below to build a robot!</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#3-code","title":"3 Code","text":"<p>Tip</p> <p>Run the following code in the Notebook you created.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#31-download-the-required-packages","title":"3.1 Download the Required Packages","text":"<pre><code># Selenium is commonly used for Web testing automation. Here we will use it to automate the Taobao purchasing process.\n!pip install selenium\n</code></pre> <pre><code>!which python\n</code></pre> <p>The above code returns <code>/opt/anaconda3/bin/python</code>. We will use this address in the following steps.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#32-download-the-auxiliary-program","title":"3.2 Download the Auxiliary Program","text":"<ul> <li>Check the version of your Chrome browser (you can see the software version by entering \"About Chrome\").</li> <li>Go to the official download site of ChromeDriver and download the version that matches your Chrome browser. Then, place the file in the <code>/opt/anaconda3/bin</code> folder.</li> </ul> <pre><code>from selenium import webdriver\nimport datetime\nimport time\n</code></pre> <p>Quick Tip: you can use the following time code to quickly set the purchasing time</p> <pre><code>now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')\nprint(now)\n</code></pre> <p>Output: 2021-06-18 00:00:00.000000</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#33-parts-of-the-robot","title":"3.3 Parts of the Robot","text":"<pre><code>def login():\n    # Open the Taobao homepage and log in via QR code\n    browser.get(\"https://www.taobao.com\")\n    if browser.find_element_by_link_text(\"\u4eb2\uff0c\u8bf7\u767b\u5f55\"):\n        browser.find_element_by_link_text(\"\u4eb2\uff0c\u8bf7\u767b\u5f55\").click()\n        print(\"Please log in quickly via QR code\")\n    time.sleep(10)\n\ndef picking():\n    # Open the shopping cart list page\n    browser.get(\"https://cart.taobao.com/cart.htm\")\n    time.sleep(3)\n\n    # method = 0 selects all items in the shopping cart\n    method = 0\n    if method == 0:\n        while True:\n            try:\n                if browser.find_element_by_id(\"J_SelectAll1\"):\n                    browser.find_element_by_id(\"J_SelectAll1\").click()\n                    break\n            except:\n                print(\"Could not find the purchase button.\")\n    # method = 1 manually selects items\n    else:\n        print(\"Please manually select the items you want to purchase\")\n        time.sleep(5)\n\n#Wait for the purchasing time and initiate automatic purchasing. Here we define a buy function\ndef buy(order_time, browser):\n    print(order_time)\n\n    order_placed_status = False\n    while order_placed_status != True:\n        now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S.%f')\n        # Check the time and click \"checkout\" when the time arrives\n        if now &gt;= order_time:\n            browser.refresh()\n            picking(browser)\n\n            # Click \"checkout\"\n            while True:\n                clear_element = WebDriverWait(browser, 10).until(\n                            EC.element_to_be_clickable((By.LINK_TEXT, \"\u7ed3 \u7b97\"))\n                        )\n                try:\n                    if browser.find_element_by_link_text(\"\u7ed3 \u7b97\").is_enabled():\n                        browser.find_element_by_link_text(\"\u7ed3 \u7b97\").click()\n                        clear_element.click()\n                        print(\"Checkout was successful. Preparing to submit the order\")\n                        break\n                except:\n                    pass\n\n            order_element = WebDriverWait(browser, 20).until(\n                            EC.element_to_be_clickable((By.LINK_TEXT, \"\u63d0\u4ea4\u8ba2\u5355\")))\n            # Click \"submit order\"\n            order_element.click()\n            order_placed_status = True\n\n            time.sleep(0.01)\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#34-launch-the-robot","title":"3.4 Launch the Robot","text":"<pre><code>browser = webdriver.Chrome()\nlogin()\npicking()\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#35-schedule-automatic-purchasing","title":"3.5 Schedule Automatic Purchasing","text":"<pre><code>order_time = input(\"Please enter the purchasing time (format: 2021-06-08 19:30:00.000000):\")\n</code></pre> <p>e.g., Please enter the purchasing time (format: 2021-06-08 19:30:00.000000):2021-06-08 19:55:00.000000</p> <pre><code>buy(order_time, browser)\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-08-Taobao-Auto-Order-Script/#4-final-effect","title":"4 Final Effect","text":"<p>Please refer to the WeChat public account article for a video demonstrating the tool's functionality: </p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-14-Wechat-Crawler/","title":"WeChat Mini Program Spider","text":"<p>Info</p> <p>Author: Void, Published on 2021-06-14, Read-Time: About 6 minutes, WeChat Official Account Article Link: </p> <p>Big brother is the tennis prince of our company, and he always uses a WeChat mini program to reserve tennis courts. However, the courts during peak hours always seem to be fully booked in an instant.</p> <p>Don't</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/","title":"Introduction to Difference-in-Differences","text":"<p>Info</p> <p>Author: Void, posted on 2021-06-24, reading time: about 5 minutes, WeChat public account article link: </p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#1-introduction","title":"1 Introduction","text":"<p>As the name suggests, Difference-in-Differences (DID) involves taking the difference twice. So, what is the relationship between DID and Little Doraemon? Moreover, why take difference twice? Don't worry, let us explain it slowly.</p> <p>The DID model is a common econometric model that examines the impact of an experiment or event and is a bit similar to an AB test. Unlike linear regression, which simply characterizes the correlation relationship, DID is a compact and practical model for causal inference. To understand the origin of this model, we need to start with the assumptions of linear regression.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#2-assumptions-of-linear-regression","title":"2 Assumptions of linear regression","text":"<p>We all know linear regression, but we may still not know much about it. It is this \"simple\" formula:</p> \\[ Y = \\beta X + \\varepsilon \\] <p>While we enjoy using linear regression, we often ignore the four assumptions of the model:</p> <ul> <li> <p>Linearity</p> </li> <li> <p>Strict exogeneity</p> \\[E(\\varepsilon_{t}|X)=E(\\varepsilon_{t}|X_{1},X_{2}\\cdots X_{n})=0\\] </li> <li> <p>No perfect multicollinearity</p> </li> <li> <p>Homoscedasticity</p> \\[E(\\varepsilon_{t}^{2}|X)=\\sigma^{2}\\] \\[E(\\varepsilon_{t}\\varepsilon_{s}|X)=0\\] </li> </ul> <p>In layman's terms, Y and X must satisfy a linear relationship (no kidding...). The residual (the difference between the actual and estimated values) is not related to X and has the properties of homoscedasticity and no autocorrelation. There cannot be an X that is the father (represented linearly) of other Xs. Okay, we smart people are ready to ignore these assumptions. But wait, if the assumptions are not met, the estimate could be inaccurate.</p> <p>Among them, strict exogeneity is a rather haughty and easily unsatisfied condition. In this case, we often refer to this model as having an endogeneity problem. Let's use primary school math to review what is strict exogeneity.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#3-strict-exogeneity","title":"3 Strict exogeneity","text":"\\[E(\\varepsilon_{t}|X)=E(\\varepsilon_{t}|X_{1},X_{2}\\cdots X_{n})=0\\] \\[t=1,2\\cdots n\\] <p>According to the law of iterated expectation, \\(E(Y|X)=E[E(Y|X,Z)|X]\\), we have</p> \\[E(\\varepsilon_{t}|X_{t})=E[E(\\varepsilon_{t}|X)|X_{t}]=0\\] \\[E(\\varepsilon_{t})=E[E(\\varepsilon_{t}|X)]=0\\] <p>Hence,</p> \\[E(X_{s}\\varepsilon_{t})=E[E(X_{s}\\varepsilon_{t}|X)]=0\\] <p>Therefore, \\(cov(X_{s},\\varepsilon_{t})=0\\), which assumes that the disturbance term \\(\\varepsilon_{t}\\) and explanatory variables are not linearly correlated.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#4-common-forms-of-endogeneity-problems","title":"4 Common forms of endogeneity problems","text":"<p>Okay, we have finally (not really) understood the academic term \"strict exogeneity.\" So, in actual data, how does endogeneity appear?</p> <ul> <li> <p>Omitted variable bias (there are other Xs that can effectively estimate Y)</p> </li> <li> <p>X and Y are mutually causal (such as X being education level and Y being income, education level can affect income, while income can also affect education level, such as getting an MBA)</p> </li> </ul>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#5-solutions","title":"5 Solutions","text":"<ul> <li> <p>Instrumental variable\\     Find an external variable that is related to the endogenous explanatory variable but uncorrelated with the random disturbance term. Regress together with other existing exogenous variables to obtain an estimate of the endogenous variable, use it as the IV and include it in the original regression equation.     Example: Y is the probability of a civil war outbreak, X is economic growth, and IV is rainfall. The probability of a civil war outbreak and economic growth are mutually causal (there is an endogeneity problem). Rainfall is related to economic growth (in agricultural countries) and can only unidirectionally affect the probability of a civil war outbreak by influencing economic growth.</p> </li> <li> <p>Difference-in-Differences method (DID)\\     If there is an external shock that affects some samples but not others and we want to know the net effect of this shock, DID is used to study it. Because the shock is generally exogenous relative to the research sample, there is no reverse causality problem.  </p> </li> </ul> <p>Finally, our superstar DID model appears.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#6-the-difference-in-differences-did-model","title":"6 The Difference-in-Differences (DID) model","text":"<p>The DID model is relatively simple and essentially a linear regression. </p> \\[Y_{it}=\\beta_{0}+\\beta_{1}D+\\beta_{2}T+\\beta_{3}(D\\times T)+\\varepsilon_{it}\\] <p>D is the group dummy variable. When studying the impact of an event or policy, if an individual i is affected by the shock, i belongs to the experimental group, and \\(D=1\\). Otherwise, i belongs to the control group, and \\(D=0\\). T is the dummy variable for time (the event or policy has a starting point). \\(T=0\\) before the shock and \\(T=1\\) after the shock. \\(D\\times T\\) is the interaction term between the group dummy variable and the time dummy variable (multiplied together), and its coefficient \\(\\beta_{3}\\) reflects the net effect of the shock.</p> <p>Wow, it looks so simple. In this model, we can add other control variables. At the same time, the DID model has its own assumptions: the experimental and control groups have parallel trends before the shock, which is similar to an AB test.</p> <p>In summary, the DID model can help you evaluate the impact of an event or policy scientifically. You no longer have to worry about your boss asking you, \"So, what is the impact of this?\"</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-24-DID/#7-takeaways","title":"7 Takeaways","text":"<ul> <li>Pay attention to the model assumptions.</li> <li>Machine learning based on causal inference (instant sublimation)</li> </ul>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-28-AB-Testing/","title":"A/B Test Practical Case Sharing, Facing Examiner's Questions with Confidence","text":"<p>Info</p> <p>Author: Jeremy, publish date: 2021-06-28, reading time: about 10 minutes, WeChat Official Account Article Link: </p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-28-AB-Testing/#introduction","title":"Introduction","text":"<p>A/B testing is a data-driven product optimization method commonly used in growth hacking and precision operation theories. Many students have more or less understanding of the theory and statistical methods behind A/B testing, but they have no chance to participate in actual projects and accumulate practical experience. I have also encountered similar difficulties in the learning process. Today, I want to recommend to everyone a practical project that can complement the project experience gap, and can more calmly respond to A/B testing related issues when facing examiners: A/B testing by Google on Udacity (Udacity is an online course platform with many high-quality computer, artificial intelligence, and business analysis-related courses).</p> <p>Course link: https://www.udacity.com/course/ab-testing--ud257</p> <p></p> <p>This course will explain in detail the project background and experimental design in real cases, and at the same time, it will open up and encourage you to explain and analyze the experimental results. For students who want to accumulate experience, it is recommended to complete the course by yourself, and you will find many practical problems that you will encounter in practice. For students who want to watch or quickly go through the A/B testing process, you can refer to this summary test report.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-06-28-AB-Testing/#1-experimental-background-and-introduction","title":"1. Experimental Background and Introduction","text":"<p>Udacity is an online education website that makes profits by students enrolling in paid courses. Udacity regards the completion rate of courses by enrolled students as a very important operating indicator to improve user satisfaction, obtain good course feedback and reputation. In order to improve this indicator, Udacity plans to make some changes to</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/","title":"Crawl and download PDF files with unchanged URLs","text":"<p>Info</p> <p>Author: Void, published on 2021-07-01, reading time: about 4 minutes, WeChat official account article link: </p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#1-introduction","title":"1 Introduction","text":"<p>To better sell insurance (as required by my mentor), we need to download PDF files disclosed by insurance companies on the official website of China Insurance Industry Association. There are many insurance companies, and each has many annual PDF disclosures. At the same time, miraculously, no matter how you click on the page, the URL of the webpage remains unchanged. In order to refuse to be a manual crawler, we once again try to use Python to help us efficiently and automatically download these PDF files.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#2-specific-steps","title":"2 Specific steps","text":"<p>We open the website of the China Insurance Industry Association and click on different subjects, such as the annual information disclosure of insurance companies, and we find that the URL of the page has not changed. At this time, please don't doubt your own eyes or smash the computer. We should reasonably suspect that the page has adopted some asynchronous request (Ajax ) approach.  At this time, we need to find the page that sends the real request. We open the developer tools, check ALL in Network, clear it, and then click on the subject we want to select, such as related party transactions combined disclosure. Miraculously, a new URL is marked in the red box, is this the OnePiece we really want to find?</p> <pre><code>http://icid.iachina.cn/ICID/front/leafColComType.do?columnid=2016072012158397\n</code></pre> Real URL <p>We enter this URL. Oops, this is just a website that looks similar to the previous one but is uglier. </p> Enter URL <p>We give up and click on the first insurance company: China Life Asset Management Co., Ltd. Similarly, we found that the URL did not change. We \"give up\" and observe its XHR by the same operation. We found that the URL has changed again:</p> <pre><code>http://icid.iachina.cn/ICID/front/getCompanyInfos.do?columnid=2016072012158397&amp;comCode=GSZC&amp;attr=01\n</code></pre> <p>It seems that things have turned around. We found that we only need to assign the abbreviations of all insurance companies to comCode.  The next step is to get the abbreviations of all insurance companies. We use \"select an element\" in the previous page, that is</p> <pre><code>http://icid.iachina.cn/ICID/front/leafColComType.do?columnid=2016072012158397\n</code></pre> <p>to inspect the name of each insurance company and found that its abbreviation is stored in the id of control \"a\". Therefore, we can get the abbreviations of all insurance companies by traversing, and bring them into comCode.  Taking China Life Asset (GSZC) as an example, we enter the new website:</p> Example <p>Each PDF is the result we want to get in the end. We click on an announcement and check its XHR in the same way.</p> <pre><code>http://icid.iachina.cn/front/infoDetail.do?informationno=2020012109398975\n</code></pre> <p>The next step is to get informationno, which is located in the id of control \"a\" on this page. We enter this URL.  The last step is to get the PDF of China Life Asset for this annual announcement. After clicking on the announcement, we can see that the URL is</p> <pre><code>http://icid.iachina.cn/ICID/files/piluxinxi/pdf/viewer.html?file=8f993c5a-1c1c-4f91-a8a5-7fad85a14616.PDF\n</code></pre> <p>The file name also exists in the id of control \"a\" on the previous page. It should be noted that this is a viewer mode, we only need the original PDF, so change to the following URL.</p> <pre><code>http://icid.iachina.cn/ICID/files/piluxinxi/pdf/8f993c5a-1c1c-4f91-a8a5-7fad85a14616.PDF\n</code></pre> <p>We successfully obtained the final PDF like opening a nest of dolls. The next step is to download it with Python. We only need to write a few simple loops, click to run the program, and then open Dota2, during which time Python has downloaded nearly 1 GB of PDF files for us.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#3-summary","title":"3 Summary","text":"<p>We often encounter requests that need mechanical and repetitive operations. At this time, implementing with a program is often an efficient and labor-saving choice. In this example, we successfully downloaded a large number of PDF files we needed using Python. Due to the different structures of different websites, the website of China Insurance Industry Association uses an asynchronous loading method, which causes the URL of the page to remain unchanged. We successfully found the real request sent through the developer tools.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-01-pdf-Crawler/#4-code","title":"4 Code","text":"<p>The final code is organized as follows:</p> <pre><code>from bs4 import BeautifulSoup\nimport requests\nimport time\nfrom tqdm import tqdm\nimport os\nheader={\"User-Agent\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\"}\n\nurl=\"http://icid.iachina.cn/front/leafColComType.do?columnid=2016072012158397\"\nresponse=requests.get(url,headers=header)\nresponse.encoding='GBK'\nsoup=BeautifulSoup(response.text,'lxml')\ndata=soup.select('a')\nn=[]\nfor i in data:\n    try:\n        n.append(i.attrs['id'])\n    except:\n        continue\nfor z in tqdm(n):\n\n    url=\"http://icid.iachina.cn/front/getCompanyInfos.do?columnid=2016072012158397&amp;comCode={}&amp;attr=01#\".format(z)\n    response=requests.get(url,headers=header)\n    response.encoding='GBK'\n    soup=BeautifulSoup(response.text,'lxml')\n    data=soup.select('a')\n    l=[]\n    name=[]\n    for i in data:\n        try:\n            l.append(i.attrs['id'])\n            name.append(i.text)\n        except:\n            continue\n    l=l[:-1]\n    name=name[:-1]\n    for j in range(len(l)):\n        url=\"http://icid.iachina.cn/front/infoDetail.do?informationno={}\".format(l[j])\n        response=requests.get(url,headers=header)\n        response.encoding='GBK'\n        soup=BeautifulSoup(response.text,'lxml')\n        data=soup.select('a')\n        link=data[1].attrs['id']\n\n        url=\"http://icid.iachina.cn/files/piluxinxi/pdf/{}\".format(link)\n        response=requests.get(url,headers=header)\n        pdf = response.content\n        #write pdf\n        c=0\n        with open(r\"C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf\".format(name[j]),'wb') as f:\n            f.write(pdf)\n        while os.path.getsize(r'C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf'.format(name[j]))==0:\n            time.sleep(3)\n            url=\"http://icid.iachina.cn/files/piluxinxi/pdf/{}\".format(link)\n            response=requests.get(url,headers=header)\n            pdf = response.content\n            with open(r\"C:\\Users\\admin\\Desktop\\\u5173\u8054\\auto\\{}.pdf\".format(name[j]),'wb') as f:\n                f.write(pdf)  \n            c+=1\n            if c&gt;=5:\n                break\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/","title":"Python Web Scraping Application - Scraping PayPal Job Positions","text":"<p>Info</p> <p>Author: Vincent, Published: 2021-07-18, Reading Time: About 6 minutes, WeChat public account article link: </p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#1-introduction","title":"1 Introduction","text":"<p>Not long after the traditional job-hunting season (around March/April in China), the autumn job-hunting season is approaching. In this busy and stressful period of time, I once dreamed of being able to grab all the job positions of my target companies with one click, and then conquer them one by one based on my strengths and job-seeking desires, and get a basketful of offers. In fact, we can easily accomplish the first step of this goal using Python. This article will take the official website of PayPal, a well-known financial technology company, as an example to demonstrate the small technique of automatically scraping job positions with Python, and help you take a faster step on the job-hunting path!</p> <p>Warning</p> <p>Note: This article is for learning and researching Python programming techniques only. If any infringement is found, it will be deleted immediately.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#2-preparation","title":"2 Preparation","text":"PayPal recruitment website <p>First of all, check the structure of the PayPal job search website. The released job positions are displayed in the form of a list, and clicking on a position in the list will take us to its corresponding details page. At the same time, some job positions in certain countries and regions are relatively large in quantity and are displayed on multiple pages, with URLs distinguished by their corresponding page numbers, such as <code>https://jobsearch.paypal-corp.com/en-US/search?facetcitystate=san%20jose,ca&amp;pagenumber=2</code>. Therefore, we can roughly crawl the details of each job position by performing the following steps:</p> <ul> <li>Locate the list of job positions and find the URL corresponding to each job position</li> <li>Traverse all pages and repeat the above operation to store all job positions URLs</li> <li>Access the job position description through the URL of the job position, locate the position of the details, and save the job position description</li> </ul> PayPal job position description","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#3-building-the-web-scraper-with-python-code","title":"3 Building the Web Scraper with Python Code","text":"<p>Please refer to the previous article Two-minute Taobao Order Grab Robot for Python environment configuration.</p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#31-importing-dependent-packages","title":"3.1 Importing Dependent Packages","text":"<pre><code># Parsing web pages\nimport requests\nfrom bs4 import BeautifulSoup\n\n# Table operation\nimport numpy as np\nimport pandas as pd\n\n# Common\nimport re\nimport os\nimport unicodedata\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#32-accessing-the-job-position-list","title":"3.2 Accessing the Job Position List","text":"<pre><code># Request the URL and get the returned result\ndef url_request(url):\n    header = {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36'}\n    r = requests.get(url, headers=header)\n    print('Connection status:', r.status_code, '\\n')\n    return r.text\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#33-parsing-job-position-categories","title":"3.3 Parsing Job Position Categories","text":"<pre><code># Find the elements needed in the page and store the job position list information\ndef job_parser(html):\n    header,desc,link = [[] for i in range(3)]\n    soup = BeautifulSoup(html, 'html.parser')\n    # Right-click to open the browser inspector, check the page source code, and you can see that the name of the job position category is \"primary-text-color job-result-title\", which is an a tag\n    job_header = soup.find_all('a', attrs={'class': 'primary-text-color job-result-title'})\n    # Element lookup method is the same as before\n    job_link = soup.find_all('a', attrs={'class': 'primary-text-color job-result-title'}, href=True)\n\n    header = [i.contents[0] for i in job_header]\n    link = ['https://jobsearch.paypal-corp.com/'+i['href'] for i in job_link]\n\n    # Save the result\n    return pd.DataFrame({'Title':header, 'Link':link})\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#34-traverse-all-pages","title":"3.4 Traverse All Pages","text":"<pre><code># Create a dataframe to store the result\ndf = pd.DataFrame(columns=['Title','Link'])\n# Create a URL template and add different page numbers to match different pages\njob_url_header = 'https://jobsearch.paypal-corp.com/en-US/search?facetcountry=cn&amp;facetcity=shanghai&amp;pagenumber='\n\n# Traverse all pages and store the results\nfor i in range(2):\n  job_url = job_url_header + str(i+1)\n  print('URL: {}'.format(job_url))\n  job_html = url_request(job_url)\n  # Store the results of each page\n  df = df.append(job_parser(job_html))\n</code></pre>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-07-18-PayPal-Job-Crawler/#35-scraping-job-position-details","title":"3.5 Scraping Job Position Details","text":"<pre><code>def get_jd(url):\n  jd_html = url_request(url)\n  soup = BeautifulSoup(jd_html, 'html.parser')\n  jd_desc = soup.find('div', attrs={'class': 'jdp-job-description-card content-card'})\n  # JD formats are different, here are just demonstrations\n  if jd_desc:\n    if jd_desc.findAll('ul')[:]:\n      desc = [i.text + '\\n{}'.format(j.text) for i,j in zip(jd_desc.findAll('p')[:], jd_desc.findAll('ul')[:])]\n    else:\n      desc = [i.text  for i in jd_desc.findAll('p')[:]]\n\n    return unicodedata.normalize('NFKD', '\\n'.join(i for i in desc))\n\n# Use the detail scraping function on previously stored content, and save detail information.\ndf['JD'] = df['Link'].apply(get_jd)\n\n# Print the result\ndf.tail(2)\n</code></pre> Title Link JD Manager, APAC Portfolio Management https://jobsearch.paypal-corp.com//en-US/job/manager-apac-portfolio-management/J3N1SM76FQPVMX4VFZG As the Shanghai Team Manager of PayPal APAC Portfolio Management team in GSR Enterprise Seller Risk Ops, you will manage a team of underwriters, and drive a risk management strategy and framework leveraging your strong business and financial acumen, logical reasoning and communication skills. This role will be covering the markets such as Hong Kong, Taiwan, Korea and Japan, based out of Shanghai. FBO Accountant https://jobsearch.paypal-corp.com//en-US/job/fbo-accoutant/J3W8C0677G8FLJQQZDL Responsibilities    Timely and effective reconciliation of all assigned General Ledger accounts, including timely and accurate clearing of reconciling items in accordance with Company Policy.   Ensure accurate posting of general ledger... <p>We can see that we have successfully scraped job position information (with some text truncated). There is other information on the web page, and you can add more information according to your needs. If you have any questions, feel free to contact us via the BulletTech WeChat customer service! </p>","tags":["python","automation"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/","title":"SQL tips","text":"<p>Info</p> <p>Author: Void, published on 2021-07-20, reading time: about 10 minutes, WeChat official account article link: </p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/#1-introduction","title":"1 Introduction","text":"<p>SQL is the language used to interact with databases. As data scientists, writing SQL may be one of the daily tasks we do just like having meals. SQL is not complicated, but there are still some details and experiences worth sharing. This article records some useful experiences and knowledge in every day of dealing with databases.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/#2-mysql-sql-server-oracle","title":"2 MySQL, SQL Server, Oracle","text":"<p>These three databases are the most well-known and easy-to-learn databases, which are also suitable for individuals and small data storage. They are suitable for personal exploration, storing interesting data, and writing queries to get the feel of them.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/#3-teradata-snowflake","title":"3 Teradata, Snowflake","text":"<p>These two databases are commonly encountered in work. One of the major characteristics of Teradata is parallelism, which is different from the Master-Slave structure of Hadoop. It is based on a massively parallel processing (MPP) architecture and can allocate loads and segregate tasks.  </p> <p>Teradata SQL syntax is not too different, there is no limit, only top can be used. In addition, the execution order of each clause is: </p> <pre><code>where-&gt;join-&gt;group by-&gt;qualify-&gt;select\n</code></pre> <p>Unlike Hive, which does multi-table join before where and loads the left table into memory, so we need to filter each table before join to optimize the query. To optimize Teradata, what we need to do is minimizing I/O and ensuring that each step filters as much data as possible.   </p> <p>Snowflake is a relatively new database. The aforementioned databases all have decades of history, but it's characteristics are its cloud database. In today's era of everything going to the cloud, moving to the cloud has become a must.  In addition to its novel technical architecture, Snowflake has the following advantages in terms of user experience:</p> <ul> <li>A variety of functions (such as EDA charts), beautiful UI.</li> <li>Powerful query language, such as supporting qualify, etc., or no defects and hard hurts.</li> </ul>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/#4-hadoop","title":"4 Hadoop","text":"<p>In the Hadoop ecosystem, Hive and Spark are mostly used. Hive is a data warehousing tool based on Hadoop, which can execute MapReduce operations using Hive SQL. At present, large-scale data storage (domestic and foreign internet) still seems to be dominated by Hadoop. I have also used Hive for some time at work, here is a summary of the pitfalls I have encountered.</p> <ul> <li>Subqueries in Hive must have aliases.</li> </ul> <pre><code>select * from\n(select * from table) a\n</code></pre> <ul> <li>Hive's limit will limit after all logical operations are completed. The following settings can be used for optimization (sampling will be carried out on the data source):</li> </ul> <pre><code>set hive.limit.optimize.enable=true;\n</code></pre> <ul> <li>Passing parameters in Hive:</li> </ul> <pre><code>set hivevar:var=1;\nselect ${var}\nWhere, if the parameter itself is a string, quotes need to be added, such as date_sub('${timestamp}',7)\n</code></pre> <ul> <li>Data skew (such as overly concentrated values in certain fields) will make the execution time of a small number of reduce subtasks too long, which will greatly affect query efficiency.</li> <li>Filter data for each subtable as much as possible.</li> <li>Merge too many small files:</li> </ul> <pre><code>set hive.execution.engine=tez;\nset hive.merge.tezfiles=true; -- for namespace issue\nset tez.output.compression.type=BLOCK;\nset hive.merge.size.per.task=256000000;\nset hive.merge.smallfiles.avgsize=256000000;\nset hive.exec.compress.output=true;\n</code></pre> <ul> <li>Updating and deleting data in Hive is somewhat complicated, and requires changing settings.</li> <li>Task progress can be viewed through YARN, such as:</li> </ul> <pre><code>yarn application -list\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-18-Sql-tips/#5-conclusion","title":"5 Conclusion","text":"<p>The author is not a professional data warehousing developer, and the above experience is based on personal actual usage. In addition to being busy with queries every day, it is also interesting to understand the differences and characteristics of different databases. </p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/","title":"Using Recursive Thinking to Process Semi-Structured Data","text":"<p>Info</p> <p>Author: Jermey, Posted on August 22, 2021, Reading time: about 6 minutes, WeChat official account article link: </p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/#1-background","title":"1 Background","text":"<p>In daily data analysis work, the raw data we collect is sometimes not in neat tabular form. For example, when fetching data from web pages or APIs, the results are often returned in XML or JSON (similar to Python dictionaries) format and are nested. Just like this JSON format:</p> <pre><code>[{\n    'state': 'Florida',\n    'shortname': 'FL',\n    'info': {\n        'governor': 'Rick Scott'\n    },\n    'counties': [\n        {'name': 'Dade', 'population': 12345},\n        {'name': 'Broward', 'population': 40000},\n        {'name': 'Palm Beach', 'population': 60000}\n    ]},\n    {\n    'state': 'Ohio',\n    'shortname': 'OH',\n    'info': {\n        'governor': 'John Kasich'\n    },\n    'counties': [\n        {'name': 'Summit', 'population': 1234},\n        {'name': 'Cuyahoga', 'population': 1337}]\n    }]\n</code></pre> <p>If this nested data is very complex, it really is not suitable for humans to read. If we want to further clean or analyze the data, the first step we need to do is to \"open\" the nested data and convert it to a table format like the following:</p> name population state shortname info.governor Dade 12345 Florida FL Rick Scott Broward 40000 Florida FL Rick Scott Palm Beach 60000 Florida FL Rick Scott Summit 1234 Ohio OH John Kasich Cuyahoga 1337 Ohio OH John Kasich <p>We hope that each record in the table is county-level. But how can we convert it? Let's try pandas:</p> <pre><code># Try to convert directly to DataFrame\ndf = pd.DataFrame(data)\nprint(df)\n</code></pre> <p>The output is:</p> name shortname info counties name\" Florida FL {'governor': 'Rick Scott'} [{'name': 'Dade', 'population': 12345}, {'name... NaN NaN OH {'governor': 'John Kasich'} [{'name': 'Summit', 'population': 1234}, {'nam... Ohio <p>It is found that pandas only parses the first level state-level records, and the data at the county-level is still shown in nested form. After a little searching, it was discovered that pandas comes with a function called json_normalize which can achieve our needs:</p> <pre><code># Use json_normalize():\npd.json_normalize(\n    data,\n    record_path = 'counties',  # Define the data granularity\n    meta = ['state', 'shortname',['info', 'governor']] # Define the column names stored in the result table\n    )\n</code></pre> <p>The output is:</p> name population state shortname info.governor Dade 12345 Florida FL Rick Scott Broward 40000 Florida FL Rick Scott Palm Beach 60000 Florida FL Rick Scott Summit 1234 Ohio OH John Kasich Cuyahoga 1337 Ohio OH John Kasich <p>This is the same as our expected result. But how was this process implemented? In fact, this is one of the examples of the application of recursive thinking.</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-08-20-practical-recursion-for-data-cleaning/#2-what-is-recursion","title":"2 What is Recursion?","text":"<p>Want to know what recursion is? First, understand what recursion is.</p> <p>Yes, the essence of recursion is \"echoing\". In computer programming, recursion is through calling the function itself to transform the problem into solving a similar but smaller problem, until the boundary condition, which is the smallest problem size, is reached. A complete recursive function generally has the following three elements:</p> <ul> <li>Termination condition</li> <li>Function running state, and each run is gradually approaching the termination condition</li> <li>Calling the function itself</li> </ul> <p>Taking the Fibonacci sequence as an example of using recursive algorithm:</p> <pre><code>def Fibonacci(n):\n    def _recurse(n):\n        if n == 0: # Boundary condition\n            return 0\n        elif n == 1: # Boundary condition\n            return 1\n        else:\n            return _recurse(n-1) + _recurse(n-2) # Call itself to reduce the problem scale\n    return _recurse(n)\n</code></pre> <p>To find the nth Fibonacci number f(n), we only need to calculate the values of f(n-1) and f(n-2), which is equivalent to reducing the problem scale. This problem can be traced back to calculating f(2) = f(1) + f(0). And because the values of f(1) and f(0) are our known boundary conditions, we can derive the value of f(2), gradually reaching f(n).</p> <p>Similarly, when parsing nested JSON data, we can design a function f() to parse the dictionary at the current level. When the type of a value (value) in the dictionary is a dictionary or a dictionary list, the same function f(n) is called, until the value contains no dictionary, which is the</p>","tags":["analytics"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/","title":"SQL Tips","text":"<p>Info</p> <p>Author: Jeremy, Published on 2021-08-27, Reading time: about 10 minutes, WeChat official account article link: </p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#1-introduction","title":"1 Introduction","text":"<p>Last time, my colleague Void mainly talked about his experience and evaluation of the data warehouse he has used. Unlike Void, I mainly work with Snowflake and connect Snowflake to write SQL in different platforms. I also have some tips for beginners in data analysis to avoid common mistakes. I hope this can help everyone.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#2-sql-structure","title":"2 SQL Structure","text":"","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#21-choosing-the-right-driver-table","title":"2.1 Choosing the Right Driver Table","text":"<p>When joining two or more tables, generally both the requirements and performance need to be considered:</p> <ul> <li>On the business side: choose a table with the same granularity as the result table as the driver table. For example, if the result table is a behavior indicator of a group of target users on a certain day, a snapshot of a user table is generally selected as the driver table for filtering, and then relevant user behavior tables are left joined.</li> <li>On performance: choose a small table as the driver table to join a large table and create an index on the large table. If there is a large difference in the number of records between the two tables that need to be joined, the small table is generally placed first. In table join, only the index in the right connection table will be effective, and the efficiency of the index will be more obvious in the large table.</li> </ul>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#22-deduplication-before-joining","title":"2.2 Deduplication Before Joining","text":"<p>When joining tables, if the two tables are not deduplicated, a large number of duplicate records will appear due to the Cartesian product. Generally, there are several ways to deduplicate before joining:</p> <ul> <li>deduplication with distinct</li> <li>deduplication with group by</li> <li>deduplication with window function row_number () (note that window function can only be used in MySQL 8.0 or above)</li> </ul> <p>Suppose we currently have two tables, an employee table <code>dept_emp</code>, with the following data:</p> emp_no dept_no from_date to_date 10001 d001 1986-06-26 9999-01-01 10002 d001 1996-08-03 2000-01-01 10002 d001 2001-08-03 9999-01-01 10003 d002 1995-12-03 9999-01-01 <p>Another table <code>manager</code> has the following data:</p> dept_no emp_no from_date to_date d001 10001 1996-08-03 9999-01-01 d002 10003 1990-08-05 9999-01-01 <p>We want to find all employees corresponding to managers. If the employee is already a manager, it will not be displayed. In the above example, it is as follows:</p> emp_no manager 10002 10001 <p>Note that emp_no in the first table is duplicated. If connected directly without deduplication, two records will appear:</p> emp_no manager 10002 10001 10002 10001 <p>All three deduplication methods can achieve deduplication:</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#deduplication-with-distinct","title":"Deduplication with distinct","text":"<pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect distinct emp_no,dept_no\nFrom dept_emp\n) dept\nLeft Join\n(\nSelect distinct emp_no,dept_no\nFrom dept_manager\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#deduplication-with-group-by","title":"Deduplication with group by","text":"<pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect emp_no,dept_no\nFrom dept_emp\ngroup by 1\n) dept\nLeft Join\n(\nSelect emp_no,dept_no\nFrom dept_manager\ngroup by 1\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#deduplication-with-window-function","title":"Deduplication with window function","text":"<p>Although the above two deduplication methods can achieve the effect, the selection of duplicate records is actually random. We are not sure which duplicate record will be selected in the final query. In actual business, it is often necessary to ensure the consistency of the running result. At this time, you can use window functions to sort with additional fields, then take the first one (such as taking the record with the newest time field <code>from_date</code>) to deduplicate. The corresponding SQL is:</p> <pre><code>Select dept.emp_no,mgn.emp_no\nFrom\n(\nSelect emp_no,dept_no,\nrow_number() over(partition by emp_no,dept_no order by from_date desc) as rec_rank\nFrom dept_emp\ngroup by 1\nwhere rec_rank = 1\n) dept\nLeft Join\n(\nSelect emp_no,dept_no\nFrom dept_manager\ngroup by 1\n) mgn\non dept.dept_no = mgn.dept_no\nWhere dept.emp_no != mgn.emp_no\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#23-using-common-table-expressions-cte-wisely","title":"2.3 Using Common Table Expressions (CTE) Wisely","text":"<p>Common Table Expressions (CTE) is similar to functions in programming languages and can be used to extract subquery statements that would otherwise appear multiple times, effectively reducing the number of lines of code.</p> <p>In addition to making the query statement more concise and neat, CTE can also achieve \"advanced\" query functions such as recursion. According to the three elements of recursion:</p> <ul> <li>Termination condition</li> <li>Function running state, which gradually approaches the termination condition with each run</li> <li>Function calls itself</li> </ul> <p>In CTE, two queries need to be included. The first is a fixed-point query, which returns a regular query of a valid table, and then superimposes a recursive query that calls itself through union all. Unlike functions, recursive queries do not have an explicit termination condition and will stop recursion when the result of the second recursive query is empty.</p> <p>The common form of recursion is as follows:</p> <pre><code>WITH CTE AS (\nSELECT column1,column2... FROM tablename WHERE conditions\nUNION ALL\nSELECT column1,column2... FROM tablename\nINNER JOIN CTE ON conditions\n)\n\nSELECT *\nFROM CTE\n</code></pre>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-08-27-SQL-tips-2/#3-summary","title":"3 Summary","text":"<p>The above is a super incomplete summary of SQL knowledge points, but in practical business, we often do not need very fancy code. Understanding and applying deduplication, connection, subqueries, window functions, and CTE can cover the vast majority of business scenarios, and more need to improve the readability and execution performance of the code. If you are interested in small tips on SQL in business or interviews, I recommend the following two readings:</p> <ul> <li>SQL for Mere Mortals (basic)</li> <li>SQL Antipatterns: Avoiding the Pitfalls of Database Programming (advanced)</li> </ul> <p>If you want to see more SQL or experience sharing topics similar to this, please feel free to leave us a message and comment.</p>","tags":["analytics","database"]},{"location":"en/Main_Course/Data_Analytics/2021-09-20-pyspark_intro/","title":"Introduction to PySpark","text":"<p>Info</p> <p>Author: Void, published on September 20, 2021, reading time: about 10 minutes, WeChat official account article link: </p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#1-introduction","title":"1 Introduction","text":"<p>The Hadoop ecosystem is still a popular solution for storing data in many companies. Tools for operating this data include Hive (mainly for writing SQL), Pig (processing underlying data files directly, reading, filtering, concatenating, storing, etc.), and Spark.  Spark is said to be faster and provides many libraries, such as SQL queries, streaming calculations, and machine learning.  The appearance of PySpark allows us to run Spark tasks directly using Python API. With it, we can even abandon Pig, which has somewhat limited functionality. And we don't need to store the data as Hive tables before executing Hive SQL. This article will introduce related features and syntax from the PySpark documentation.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#2-introduction-to-pyspark","title":"2 Introduction to PySpark","text":"<p>PySpark installation requires adaptation to the Hadoop version. After installation, we can start the Spark process with the following code.</p> <pre><code>from pyspark.sql import SparkSession\nspark = SparkSession.builder.getOrCreate()\n</code></pre> <p>Tabular data exists in PySpark in the form of a Spark DataFrame. We can directly create a DataFrame as follows.</p> <pre><code>from datetime import datetime, date\nimport pandas as pd\nfrom pyspark.sql import Row\n\ndf = spark.createDataFrame([\n    Row(a=1, b=2., c='string1', d=date(2000, 1, 1), e=datetime(2000, 1, 1, 12, 0)),\n    Row(a=2, b=3., c='string2', d=date(2000, 2, 1), e=datetime(2000, 1, 2, 12, 0)),\n    Row(a=4, b=5., c='string3', d=date(2000, 3, 1), e=datetime(2000, 1, 3, 12, 0))\n])\n</code></pre> <p>We can also directly read the underlying data as a Spark DataFrame (commonly used).  After obtaining the DataFrame, we can use <code>df.show()</code> to display the data.</p> <pre><code>df.show(1)\n</code></pre> <p>The basic operations of Spark DataFrame include:</p> <ul> <li>Select columns: df.select(df.c)</li> <li>Add columns: df.withColumn('upper_c', upper(df.c))</li> <li>Filter rows: df.filter(df.a == 1)</li> <li>Aggregation: df.groupby('color').avg()</li> <li>User-defined functions (UDF), etc.</li> </ul> <p>We can also convert Spark DataFrame to Python DataFrame using <code>df.toPandas()</code>, which allows us to use related methods directly.  We can also convert Python DataFrame to Spark DataFrame.</p> <pre><code>df = pd.DataFrame([[\"jack\",23], [\"tony\", 34]], columns = [\"name\", \"age\"])\ndf_values = df.values.tolist()\ndf_columns = list(df.columns)\nspark_df = spark.createDataFrame(df_values, df_columns)\n</code></pre> <p>As Spark DataFrame and Spark SQL share the same execution engine, we can register Spark DataFrame as a table and use SQL for logical operations.</p> <pre><code>df.createOrReplaceTempView(\"tableA\")\ndf2 = spark.sql(\"SELECT count(*) from tableA\")\n#store the calculation results\ndf2.write.csv('data.csv', header=True)\ndf2.show()\n</code></pre> <p>With it, we can join data using SQL (replacing Pig join functionality) and perform complex SQL logic (similar to Hive SQL) and store the final calculation results in different data formats (csv, parquet, etc.). It can be said that Spark provides us with a more complete and easy-to-use framework.</p> <p>Spark DataFrame has many other APIs, but I don't have much contact with them at work, so I won't go into too much detail here. When needed, it is recommended to check the official documentation.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-09-20-pyspark_intro/#3-summary","title":"3 Summary","text":"<p>In the Hadoop ecosystem, Spark and PySpark provide us with a very powerful set of tools. We don't need to worry about how MapReduce is actually executed at the low level. We only need to use simple PySpark syntax or even common SQL language to flexibly and freely operate underlying data.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/","title":"A Brief Discussion on Data Search and Sorting","text":"<p>Info</p> <p>Author: Tina, Published on 2021-10-28, Read Time: about 6 minutes, WeChat article link: </p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#1-introduction","title":"1 Introduction","text":"<p>As a data analyst, we can't do without the important concepts of search and sorting in data structures.</p> <p>Knowing various sorting and searching algorithms can help us choose the sorting and searching methods in our work, not only considering the characteristics of the data, but also considering the computing resources. Next, we will briefly introduce several data search and data sorting methods using Python code.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#2-implementation-of-python-code","title":"2 Implementation of Python Code","text":"","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#21-data-search","title":"2.1 Data Search","text":"","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#211-sequential-search","title":"2.1.1 Sequential Search","text":"<p>One of the characteristics of Python lists is that each element has its own position, and the position of a data item is its subscript. Because subscripts are ordered, each element can be accessed in order, just like <code>Sequential Search</code>. As the name suggests, sequential search will start at the beginning of the list and look at each one in order until it finds the target element or completes the list.</p> <pre><code>## This function accepts a list and a target element as parameters, and returns a Boolean value representing whether the target element exists.\ndef sequential_Search(alist, item):\n    pos = 0\n    found = False\n    while pos &lt; len(alist) and not found:\n        if alist[pos] == item:\n            found = True\n        else:\n            pos = pos + 1\n    return found\n</code></pre> <p>In fact, before the computer analyzes the search algorithm, it needs to define the basic unit of calculation. Each comparison has only two results, which are found or not found. We made an assumption here that the arrangement of the elements is disordered, in other words, the possibility of the target element being in each position is equal. If it is in an ordered arrangement, the computing resources will change with the position of the target element in the list.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#212-binary-search","title":"2.1.2 Binary Search","text":"<p>Unlike sequential search, <code>Binary Search</code> does not search the list from the first position, but starts from the middle element. If this element is the target element, the search stops immediately; if not, it can use the ordered feature of the list to exclude half of the elements.</p> <p>Repeat the binary search process for the right (left) half. Starting from the middle element, compare it with the target element. Similarly, either directly find the target element, or split the right (left) half according to the comparison result and further narrow down the search scope.</p> <pre><code>## Binary search of an ordered list\ndef binary_Search(alist,item):\n    first = 0\n    last = len(alist) - 1\n    found = False\n\n    while first &lt;= last and not found:\n        midpoint = (first + last) //2\n        if alist[midpoint] == item:\n            found = True\n        else:\n            if item &lt; alist[midpoint]:\n                last = midpoint - 1\n            else:\n                first = midpoint + 1\n     return found\n</code></pre>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#22-data-sorting","title":"2.2 Data Sorting","text":"","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#221-bubble-sort","title":"2.2.1 Bubble Sort","text":"<p>Bubble sort traverses the list multiple times. It compares neighboring elements, swaps those that are out of order, and sorts them in order from left to right. Each round of traversal will place the next maximum value in its correct position. Essentially, each element finds its own position through \"bubbling\".</p> <p>During the first round of traversal, the first two elements are compared continuously. If there are n elements, n-1 comparisons will be made. Note that, in each comparison, the larger one will keep moving to the left until the traversal is completed.</p> <p>The second round of traversal begins with the largest value already in its correct position. There are still n-1 elements to be sorted, which means n-2 pairs need to be compared. Since each round places the next maximum value in its correct position, the number of rounds to be traversed is n-1.</p> <pre><code>def bubble_Sort(alist):\n    for passnum in range(len(alist)-1, 0, -1):\n        for i in range(passnum):\n            if alist[i] &gt; alist[i+1]:\n                temp = alist[i]\n                alist[i] = alist[i+1]\n                alist[i+1] = temp\n</code></pre>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#222-selection-sort","title":"2.2.2 Selection Sort","text":"<p><code>Selection Sort</code> improves on bubble sort by making only one swap during each traversal of the list. This requires that the sorting algorithm only looks for the maximum value during each traversal, and places it in its correct position after the traversal.</p> <pre><code>def select_Sort(alist):\n    for s in range(len(alist)-1, 0, -1):\n        max_p = 0\n        for p in range(1, s + 1):\n            if alist[p] &gt; alist[max_p]:\n                max_p = p\n\n        temp = alist[s]\n        alist[s] = alist[max_p]\n        alist[max_p] = temp\n</code></pre>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-10-26-Data-Search-and-Sort/#223-insertion-sort","title":"2.2.3 Insertion Sort","text":"<p><code>Insertion Sort</code> maintains an ordered sublist on the smaller end of the list and inserts each new element one by one into this ordered sublist.</p> <p>First, assume that the element at position 0 is a sorted sublist containing only one element. From element 1 to element n-1, each element is compared with the</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/","title":"Efficacy Analysis - Selection of Minimum Sample Size n","text":"<p>Info</p> <p>Author: Echo, Published on 2021-12-11, Reading Time: Approximately 6 Minutes, WeChat Public Account Article Link: </p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#1-introduction","title":"1 Introduction","text":"<p>When reading Principles of Economics by Mankiw, the most memorable sentence for me is: People face trade-offs, the cost of something is what you give up to get it. In simple terms, everything has a cost, and every choice involves trade-offs. This sentence is particularly suitable in a production environment. When developing new drugs, analyzing strategies for financial institutions, and judging whether a new feature in a system is effective, in all places where hypothesis testing is required, the choice of sample size for the test is important, as the credibility of the test is not high with a small sample size, and the cost is too high if the sample size is too large. In this case, how to choose the minimum sample size that represents the sample and makes the test effective becomes particularly important.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#2-process-introduction","title":"2 Process Introduction","text":"<p>Before we start, let's review the basic concepts of hypothesis testing. Similar to a reductio ad absurdum argument, we usually set the hypothesis we want to reject (such as no difference between the experimental group and the control group) as the null hypothesis (H0), and the hypothesis we want to prove (two-sided: significant difference between the experimental group and the control group; one-sided: the experimental group is significantly better/worse than the control group) as the alternative hypothesis (H1). The purpose of the experiment is to reject the null hypothesis.</p> <p>The probability of making a Type I error (rejecting a true null hypothesis) is \u03b1, also known as the significance level; the probability of making a Type II error (accepting a false null hypothesis) is \u03b2. The power of the test is 1-\u03b2, which is the probability of correctly rejecting the null hypothesis when it is false.</p> <p>In addition, the effect size is a measure of the magnitude of the effect and can be used to reflect whether statistically significant differences have practical significance or importance. It is usually the difference or standardized difference of the group mean, the ratio difference of the group mean or ratio (RR, HR), OR, or correlation and regression coefficient. Since the effect size is a posterior concept, and the selection of the minimum sample size is a prior concept, the required effect size can usually be obtained through historical data or expected results of the current experiment.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#21-determine-the-research-object","title":"2.1 Determine the Research Object","text":"<p>Before considering what test method to use, the first thing to clarify is our research object. The thinking process is as follows:</p> <ul> <li>Are we comparing means or variances? (affecting the choice of test methods);</li> <li>If we are comparing means, are they absolute values (clicks) or ratios (click-through rates)? (affecting how the standard deviation is calculated);</li> <li>Are we using random sampling with or without replacement? (affecting how the standard deviation is calculated);</li> <li>Are the samples independent or not? (affecting how the standard deviation is calculated);</li> <li>Is the variance known or unknown? (affecting the choice of distribution);</li> <li>Is it a single-sample or a two-sample test? (affecting how the standard deviation is calculated);</li> <li>Is it a one-sided test or a two-sided test? (affecting the choice of \u03b1 or \u03b1/2 when referring to the statistical distribution table);</li> <li>And so on.</li> </ul> <p>Considering that the testing of multiple samples can be elaborated on separately in an analysis of variance (ANOVA) article (including F tests and ANOVA), here we focus on hypothesis testing of single/two-sample means/ratios.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#22-determine-the-test-method","title":"2.2 Determine the Test Method","text":"<p>After clarifying the research object, we can choose the appropriate test method. If the object is mean, the Z-test/t-test is commonly used; if it is a ratio, the chi-square test can be considered. Once the test method is determined, we can write out the formula for the test statistic, and reverse the calculation to obtain the formula for the minimum sample size n. There are many formulas for the test statistic, and we will not elaborate on them here. An example of a mean formula is shown in the figure below. Note that if it is a two-sided test, change \u03b1 to \u03b1/2.</p> Selection of mean test method","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#23-example-of-click-through-rate-test","title":"2.3 Example of Click-Through Rate Test","text":"<p>AB testing is frequently mentioned in the production environment, for example, when the current user in the app is shown an A-type ad, we want to know if the click-through rate will be better than A if it is changed to a B-type ad. Considering that clicks or no-clicks follow the Bernoulli distribution with a discrete distribution of (0,1), this problem is actually a chi-square test of two samples of proportions, which is equivalent to a two-sample z-test. Assuming that the click-through rate for A-type ad is 30%, we hope that the click-through rate for B-type ad can be increased by 10% to 30%*1.1=33%. When the sample sizes and variances of the two groups are similar, Cohen's d can be used to calculate the standard deviation and measure the effect size. Substituting the minimum sample size n calculation formula into the formula, we get that the n for each group is 1881, and therefore the total sample size is 3762. The calculation is implemented in the code in the next section.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2021-12-15-min_n_choice/#24-implementation-of-code","title":"2.4 Implementation of Code","text":"<p>There are many ways to implement the minimum sample size calculation. One commonly used method is the statsmodels package in Python.</p> <pre><code>from statsmodels.stats.power import GofChisquarePower\nfrom statsmodels.stats.power import zt_ind_solve_power\n\nfrom statsmodels.stats.proportion import proportion_effectsize as es\n\n#Chi-Square Test\n#Set the significance level to 0.05, the test power to 0.8, and the effect size to the standard deviation calculation method. The (expected) rates of the control group and experimental group are 30% and 33% respectively. The number of samples in the experimental group is equal to that in the control group. The test is a two-sided one.\nGofChisquarePower().solve_power(effect_size=es(prop1=0.33, prop2=0.30, method= 'normal'), alpha=0.05, power=0.8,n_bins=2)\n\n#Z-Test\n#Set the significance level to 0.05, the test power to 0.8, and the effect size to the standard deviation calculation method. The (expected) rates of the control group and experimental group are 30% and 33% respectively. The number of samples in the experimental group is equal to that in the control group. The test is a two-sided one.\nzt_ind_solve_power(effect_size=es(prop1=0.33, prop2=0.30, method= 'normal'), alpha=0.05, power=0.8, ratio=1.0, alternative=\"two-sided\")\n</code></pre> <p>The results are shown below.</p> Minimum Sample Size Calculation Results <p>Note that the excess approximation is used here, and the minimum sample size shown in the chi-square test is the sample size per group, while the minimum sample size shown in the z-test is the total sample size of the experiment. The minimum sample size for each group is 1881, and the total sample size is 3762.</p> <p>In addition: \u03b1 is commonly set to 0.05, and \u03b2 is commonly set to 0.2. From this, we can also see people's preferences. People tend to strictly control the probability of rejective truths, even</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2022-01-03-ANOVA/","title":"Analysis of Variance (ANOVA)","text":"<p>Info</p> <p>Author: Echo, Published on January 3, 2022, Reading time: about 6 minutes, WeChat Official Account Article Link: </p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2022-01-03-ANOVA/#1-introduction","title":"1 Introduction","text":"<p>Last time, I talked about choosing the minimum sample size which focuses more on testing the mean and ratio of single or two samples. For the mean test of multiple samples, we can use ANOVA (Analysis of Variance) to analyze it separately. The new year starts with picking up last year's goals, so I'm here to fill in the gap!</p> <p>Before we start, let's consider a question: since we already have the universal and useful AB test, why do we still need ANOVA? The answer is simple. In a production environment, the dependent variables we are interested in are usually influenced by many factors. For example, the effectiveness of a new drug is influenced by conditions such as indications, dosage, route and method of administration, and daily frequency of administration. Similarly, the sales of a product are influenced by factors such as advertising, product price, seasonal changes, etc. In addition, each influencing factor may have multiple observation levels. For example, the UI design of a webpage may have multiple versions, labeled as ABCDEFG (after all, black does not necessarily mean the same black). When the boss asks you whether these factors have an impact on the dependent variable and whether there are significant differences in the observation values of each level of the factor, relying solely on the two levels of the single factor AB test will be insufficient. Unless we combine every possible combination and test all of them, however, multiple tests will increase the probability of making Type I errors and it is impossible to consider all samples simultaneously. This is where ANOVA comes in to save the day.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2022-01-03-ANOVA/#2-principle-introduction","title":"2 Principle Introduction","text":"<p>In the case of a single factor, ANOVA is actually used to compare whether the means of multiple sample sets are the same/whether multiple sample sets have the same distribution. So why call it \"Analysis of Variance\"? Simply put, it comes from the decomposition of errors. We use the sum of squares of deviations of samples to measure the total error of the population, where the total error SST (Sum of Square for Total) = random error in the group SSE (Sum of Square for Error) + error between the groups SSA (Sum of Square for factor A). The statistical quantities are shown below. SSE divided by its degrees of freedom is equivalent to the variance of each group, and SSA divided by its degrees of freedom is equivalent to the variance of each group relative to the total population. When the sample follows a normal distribution, the sum of squares of deviations follows a chi-square distribution, so this statistical quantity is equivalent to the ratio of two chi-square distributions, which is a distribution of F. When the F-statistic is larger, it indicates that the denominator is small, the within-group variance is small, and they are tightly concentrated; the numerator is large, the between-group variance is large, the groups are far apart, and it tends to reject the null hypothesis of the equal means/distributions of multiple samples.</p> Formula of F-statistic <p>ANOVA has many variations and can be divided into one-way ANOVA and multi-factor ANOVA according to the number of factors. When related to experimental design DOE (Design of Experiment), there are many forms like completely random design, randomized block design, Latin square design, orthogonal design, etc. But great wisdom is simple, and different paths lead to the same destination. As long as you master the basic logic of ANOVA, you can easily handle all kinds of variations. Here we mainly classify according to the number of factors.</p>","tags":["analytics","python"]},{"location":"en/Main_Course/Data_Analytics/2022-01-03-ANOVA/#21-one-way-anova","title":"2.1 One-Way ANOVA","text":"<p>One-way ANOVA only concerns one factor but may have multiple observation levels. For example, the impact of UI design on traffic for three different versions of ABC, where the UI design is one factor, and the three versions of ABC are three observation levels of this factor. The specific testing process is as follows.</p> <ul> <li>Establish the null hypothesis and alternative hypothesis for the test: the null hypothesis is usually that the means of each group are the same, and the alternative hypothesis is that there is at least one difference.</li> <li>Calculate the F-statistic: calculate the sample means, the total mean, the sum of squares of errors and the degrees of freedom for each, and then calculate the value of the F-statistic.</li> <li>Draw the testing conclusion: compare the F-statistic with the critical value obtained from the table. If the statistic is greater than the critical value, the null hypothesis can be rejected, and it can be concluded that there is a significant difference in the population means. The p-value of the hypothesis test can also be calculated and compared with the predetermined significance level \u03b1. If the p-value is less than \u03b1, the null hypothesis can be rejected.</li> <li>Post-hoc analysis: it means pairwise comparisons analysis. When the null hypothesis is rejected in the previous step, it shows that the means of</li> </ul>","tags":["analytics","python"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/","title":"Introduction to various Keras Callbacks","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-06-06, Reading time: about 6 minutes, WeChat Official Account Article Link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#1-introduction","title":"1 Introduction","text":"<p>In tensorflow.keras, callbacks can run along with the model's life cycle during <code>fit</code>, <code>evaluate</code> and <code>predict</code> processes. At present, tensorflow.keras has built many types of callbacks available for users to prevent overfitting, visualize the training process, debug, save model checkpoints, and generate TensorBoard, etc. Through this article, we will learn how to use various callbacks in tensorflow.keras and how to customize callbacks.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#2-using-callbacks","title":"2 Using Callbacks","text":"<p>Using callbacks is very simple. First, define the callbacks, then pass the defined callbacks to the <code>callbacks</code> parameter in <code>model.fit()</code>, <code>model.evaluate()</code>, and <code>model.predict()</code>.</p> <p>Take the most common <code>ModelCheckpoint</code> as an example. The usage process is as follows:</p> <pre><code>...\nmodel_checkpoint_callback = tf.keras.callbacks.ModelCheckpoint(\n    filepath=filePath,\n    save_weights_only=True,\n    monitor='val_accuracy',\n    mode='max')\n\nmodel.fit(x, y, callbacks=model_checkpoint_callback)\n</code></pre> <p>In this way, when the model is trained, the model checkpoints will be stored in the corresponding position for later use. In addition to ModelCheckpoint, there are many other types of callbacks available for use in TensorFlow 2.0. Let's explore them.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#21-earlystopping","title":"2.1 EarlyStopping","text":"<p>This callback can monitor the specified evaluation metric. During the training process, when the evaluation metric stops increasing, the training will end early to prevent overfitting. Its default parameters are as follows:</p> <pre><code>tf.keras.callbacks.EarlyStopping(monitor='val_loss',\n        min_delta=0,\n        patience=0,\n        verbose=0,\n        mode='auto',\n        baseline=None,\n        restore_best_weights=False)\n</code></pre> <p>The parameters are as follows:</p> <ul> <li>monitor: the evaluation metric monitored by callbacks.</li> <li>min_delta: the smallest metric improvement that will be counted.</li> <li>patience: the number of epochs to wait before stopping training when the evaluation metric stops improving.</li> <li>verbose: whether to print logs.</li> <li>mode: the mode of monitoring metrics, such as whether to monitor if the metric is decreasing, increasing, or automatically inferred based on the metric name.</li> <li>baseline: the baseline of the monitored metric. When the result of the model training is below the standard line, the training will stop.</li> <li>restore_best_weights: whether to restore the model from the epoch with the best training effect. If set to False, the model weights will be restored from the last step.</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#22-learningratescheduler","title":"2.2 LearningRateScheduler","text":"<p>This callback can adjust the learning rate during the model training process. Generally, the learning rate can be appropriately reduced as the number of training increases to help the model converge to the global optimum. Therefore, this callback needs to be used together with a learning rate scheduler. At the beginning of each epoch, the schedule function will obtain the latest learning rate and use it in the current epoch:</p> <pre><code>tf.keras.callbacks.LearningRateScheduler(\n    schedule, verbose=0\n)\n\n# The scheduling function calls the initial learning rate before 10 epochs, and then the learning rate decreases exponentially\ndef scheduler(epoch, lr):\n  if epoch &lt; 10:\n    return lr\n  else:\n    return lr * tf.math.exp(-0.1)\n\nmodel = tf.keras.models.Sequential([tf.keras.layers.Dense(10)])\nmodel.compile(tf.keras.optimizers.SGD(), loss='mse')\ncallback = tf.keras.callbacks.LearningRateScheduler(scheduler)\nhistory = model.fit(np.arange(100).reshape(5, 20), np.zeros(5),\n                    epochs=15, callbacks=[callback], verbose=0)\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#23-reducelronplateau","title":"2.3 ReduceLROnPlateau","text":"<p>Compared with LearningRateScheduler, ReduceLROnPlateau does not adjust the learning rate according to the pre-set schedule. It reduces the learning rate when the evaluation metric stops improving.</p> <pre><code>tf.keras.callbacks.ReduceLROnPlateau(\n    monitor='val_loss', factor=0.1, patience=10, verbose=0,\n    mode='auto', min_delta=0.0001, cooldown=0, min_lr=0, **kwargs\n)\n</code></pre> <p>Important parameters are:</p> <ul> <li>factor: the degree of learning rate reduction, new_lr = lr * factor.</li> <li>cooldown: the number of epochs to wait before monitoring the evaluation metric again.</li> <li>min_lr: the minimum allowed learning rate.</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#24-tensorboard","title":"2.4 TensorBoard","text":"<p>TensorBoard can conveniently display the model architecture and the training process. This callback can generate TensorBoard logs, and you can view the visualization results in TensorBoard after the training is completed.</p> <pre><code>tf.keras.callbacks.TensorBoard(\n    log_dir='logs', histogram_freq=0, write_graph=True,\n    write_images=False, write_steps_per_second=False, update_freq='epoch',\n    profile_batch=2, embeddings_freq=0, embeddings_metadata=None, **kwargs\n)\n</code></pre> <p>Important parameters are:</p> <ul> <li>log_dir: the path to the log output.</li> <li>histogram_freq: the frequency of calculating the activation function and weight histograms. If set to 0, the histograms will not be calculated.</li> <li>write_graph: whether to visualize the graph in TensorBoard.</li> <li>update_freq: a string that can be 'batch', 'epoch', or an integer. Loss and evaluation metrics will be written to TensorBoard after the specified processing completes. If set to an integer, it means that the loss and evaluation metrics will be written to TensorBoard after the specified number of samples have been trained.</li> <li>write_images: whether to write weight histograms and other variables as images.</li> <li>write_steps_per_second: whether to write the number of steps per second during processing.</li> <li>profile_batch: the batch for profiling. The default value is 2, and -1 means that all batches will be profiled.</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#25-csvlogger","title":"2.5 CSVLogger","text":"<p>As the name suggests, this callback can write the training process to a CSV file.</p> <pre><code>tf.keras.callbacks.CSVLogger(\n    filename, separator=',', append=False\n)\n</code></pre> <p>Important parameters:</p> <ul> <li>append: whether to continue writing logs to existing files.</li> </ul>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#26-terminateonnan","title":"2.6 TerminateOnNaN","text":"<p>Stop training when the loss becomes NaN.</p> <pre><code>tf.keras.callbacks.TerminateOnNaN()\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#27-custom-callback","title":"2.7 Custom Callback","text":"<p>In addition to the above callbacks, there are other callbacks available on the TensorFlow official website. When using multiple callbacks, you can pass multiple callbacks into a list, or use tf.keras.callbacks.CallbackList. In addition, you can also customize callbacks, which requires inheriting <code>keras.callbacks.Callback</code> and then overriding methods at different training stages.</p> <pre><code>training_finished = False\n\nclass MyCallback(tf.keras.callbacks.Callback):\n  def on_train_end(self, logs=None):\n    global training_finished\n    training_finished = True\n\nmodel = tf.keras.Sequential([tf.keras.layers.Dense(1, input_shape=(1,))])\nmodel.compile(loss='mean_squared_error')\nmodel.fit(tf.constant([[1.0]]), tf.constant([[1.0]]),\n          callbacks=[MyCallback()])\n\nassert training_finished == True\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-02-TF-Callbacks/#3-conclusion","title":"3 Conclusion","text":"<p>This article summarizes some commonly used tf.keras.callbacks. In actual work, please use them as needed and check the official documentation of tf.keras.callbacks to confirm the parameter values.</p> <p>Hope this sharing is helpful to you, and welcome to leave a comment in the comment section to discuss!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/","title":"Customizing Models with tf.keras","text":"<p>Info</p> <p>Author: Vincent, Published: June 6th, 2021, Read Time: About 6 minutes, WeChat official account article link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#1-introduction","title":"1 Introduction","text":"<p>tf.keras provides many convenient APIs for building deep learning models. However, some situations require custom layers and models. In this article, we will focus on customizing models and use the customization methods in TensorFlow 2.x to provide more flexibility for the solution.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#2-custom-layers","title":"2 Custom Layers","text":"","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#21-creating-layers-without-weights","title":"2.1 Creating Layers without Weights","text":"<p>When custom layers do not require weights, <code>tf.keras.layers.Lambda</code> can be very convenient, as shown below:</p> <pre><code>exponential_layer = keras.layers.Lambda(lambda x: tf.exp(x))\n</code></pre> <p>Then this custom layer can be used in the Sequential API and Functional API like other layers to build models. It can even be called like calling a Python function:</p> <pre><code>print(exponential_layer(2.0).numpy())\n</code></pre> <p>Output:</p> <pre><code>7.389056\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#22-creating-layers-with-weights","title":"2.2 Creating Layers with Weights","text":"<p>If you need to create layers with weights, it is usually to inherit the <code>tf.keras.layers.Layer</code> class and override the <code>__init__</code>, <code>build</code>, and <code>call</code> methods, as shown below:</p> <pre><code>class Linear(keras.layers.Layer):\n    def __init__(self, units=32):\n        super(Linear, self).__init__()\n        self.units = units\n\n    def build(self, input_shape):\n        self.w = self.add_weight(\n            shape=(input_shape[-1], self.units),\n            initializer=\"random_normal\",\n            trainable=True,\n        )\n        self.b = self.add_weight(\n            shape=(self.units,), initializer=\"random_normal\", trainable=True\n        )\n\n    def call(self, inputs):\n        return tf.matmul(inputs, self.w) + self.b\n</code></pre> <p>The custom layer can be called like the built-in layers in tf.keras:</p> <pre><code>input_ = Input((1,))\noutput = Linear(units=1)(input_)\nmodel = Model(input_, output)\nmodel.compile(optimizer='Adam', loss=\"mse\")\nmodel.summary()\n</code></pre> <p>Output:</p> <pre><code>Model: \"model_1\"\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_2 (InputLayer)         [(None, 1)]               0         \n_________________________________________________________________\nlinear_1 (Linear)            (None, 1)                 2         \n=================================================================\nTotal params: 2\nTrainable params: 2\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>Please note that if you want to serialize the custom layer as part of the Functional API model, you need to implement the <code>get_config()</code> method. The <code>__init__()</code> method of the base Layer class accepts some keyword arguments, especially <code>name</code> and <code>dtype</code>. It is best to pass these arguments to the parent class in <code>__init__()</code> and include them in the layer's configuration, as shown below:</p> <pre><code>class Linear(keras.layers.Layer):\n    def __init__(self, units=32, **kwargs):\n        super(Linear, self).__init__(**kwargs)\n        self.units = units\n\n    def build(self, input_shape):\n        self.w = self.add_weight(\n            shape=(input_shape[-1], self.units),\n            initializer=\"random_normal\",\n            trainable=True,\n        )\n        self.b = self.add_weight(\n            shape=(self.units,), initializer=\"random_normal\", trainable=True\n        )\n\n    def call(self, inputs):\n        return tf.matmul(inputs, self.w) + self.b\n\n    def get_config(self):\n        config = super(Linear, self).get_config()\n        config.update({\"units\": self.units})\n        return config\n</code></pre> <p>If the behavior of the custom layer is different during training and inference, such as with Dropout or BatchNormalization layers, <code>training</code> parameters need to be added to the <code>call</code> function to distinguish the behavior of the model under different running states, as shown below:</p> <pre><code>class CustomDropout(keras.layers.Layer):\n    def __init__(self, rate, **kwargs):\n        super(CustomDropout, self).__init__(**kwargs)\n        self.rate = rate\n\n    def call(self, inputs, training=None):\n        if training:\n            return tf.nn.dropout(inputs, rate=self.rate)\n        return inputs\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#23-customizing-losses-and-metrics","title":"2.3 Customizing Losses and Metrics","text":"<p>When customizing losses, use labels and predicted values as parameters, and then use TensorFlow operators to calculate the loss for each instance.</p> <pre><code>def huber_fn(y_true,y_pred):\n  error=y_true-y_pred\n  is_small_error=tf.abs(error)&lt;1\n  squared_loss=tf.square(error)/2\n  linear_loss=tf.abs(error)-0.5\n\nreturn tf.where(is_small_error,squared_loss,linear_loss)\n</code></pre> <p>When customizing evaluation metrics, you can inherit the <code>tf.keras.metrics.Metric</code> class and override the <code>__init__</code>, <code>update_state</code>, and <code>result</code> methods, as shown in the example:</p> <pre><code>class SparseCategoricalAccuracy(tf.keras.metrics.Metric):\n    def __init__(self):\n        super().__init__()\n        self.total = self.add_weight(name='total', dtype=tf.int32, initializer=tf.zeros_initializer())\n        self.count = self.add_weight(name='count', dtype=tf.int32, initializer=tf.zeros_initializer())\n\n    def update_state(self, y_true, y_pred, sample_weight=None):\n        values = tf.cast(tf.equal(y_true, tf.argmax(y_pred, axis=-1, output_type=tf.int32)), tf.int32)\n        self.total.assign_add(tf.shape(y_true)[0])\n        self.count.assign_add(tf.reduce_sum(values))\n\n    def result(self):\n        return self.count / self.total\n</code></pre> <p>The <code>update_state()</code> method works when the instance of the custom evaluation metric class is called, receiving labels, predicted values, and other custom parameters in a batch to update defined variables. The <code>result()</code> method calculates and returns the final result, which is executed after the <code>update_state()</code> method.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-04-Keras-Custom-Model/#3-conclusion","title":"3 Conclusion","text":"<p>The above examples introduce how to customize keras models, which can add flexibility to daily workflows. In practical work, you need to repeatedly scrutinize and ensure that there are no errors.</p> <p>I hope this sharing will help you. Welcome to leave a message in the comment area for discussion!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/","title":"Installing TensorFlow on Apple Silicon Macs","text":"<p>Info</p> <p>Author: Vincent, Published on Jun 6, 2021, Read time: about 6 minutes, WeChat article link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#1-introduction","title":"1 Introduction","text":"<p>Although Apple Silicon Macs have shown outstanding performance, compatibility issues still cannot be ignored for ordinary users. Installing TensorFlow on Apple Silicon is not as simple as typing <code>pip install tensorflow</code> on Intel Macs. However, numerous developers and Apple itself are working tirelessly to optimize Apple Silicon Macs. Now, installing TensorFlow on Apple Silicon has become much easier. This article will share the recommended method for installing TensorFlow on Apple Silicon Macs. We recommend bookmarking this article for future use!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#2-confirm-the-machine-type","title":"2 Confirm the Machine Type","text":"<p>This tutorial is suitable for Apple Silicon Macs. You can confirm the machine type by clicking the Apple logo on the top navigation bar and selecting \u201cAbout This Mac\u201d. Be sure to identify the Apple Silicon Mac.</p> Please confirm that it is Apple Silicon Macs","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#3-install-tensorflow","title":"3 Install TensorFlow","text":"","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#31-install-conda","title":"3.1 Install Conda","text":"<p>First, download Conda: https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh</p> <p>The downloaded file will appear in the download folder by default (<code>~/Downloads/</code>). Open the terminal and run the following command:</p> Terminal on Mac <pre><code>chmod +x ~/Downloads/Miniforge3-MacOSX-arm64.sh\nsh ~/Downloads/Miniforge3-MacOSX-arm64.sh\n</code></pre> <p>Follow the prompts to install, and then activate the Conda environment:</p> <pre><code>source ~/miniforge3/bin/activate\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#32-install-tensorflow-dependencies","title":"3.2 Install TensorFlow Dependencies","text":"<p>After activating the Conda environment, you can install the dependencies required by TensorFlow. The command is as follows:</p> <pre><code>conda install -c apple tensorflow-deps\n</code></pre> <p>When installing a new version of TensorFlow, Apple recommends doing the following first:</p> <pre><code># Uninstall the existing tensorflow-macos and tensorflow-metal\npython -m pip uninstall tensorflow-macos\npython -m pip uninstall tensorflow-metal\n# Upgrade tensorflow-deps\nconda install -c apple tensorflow-deps --force-reinstall\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#33-install-tensorflow","title":"3.3 Install TensorFlow","text":"<p>Continue to run the following command in the terminal:</p> <pre><code>python -m pip install tensorflow-macos\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#4-use-tensorflow","title":"4 Use TensorFlow","text":"<p>You can first install Jupyter Notebook, the command is as follows:</p> <pre><code>conda install notebook -y\n</code></pre> <p>Then, start Jupyter Notebook to test whether TensorFlow has been successfully installed, and run the following command:</p> <pre><code>jupyter notebook\n</code></pre> <p>Create a new notebook and import TensorFlow for inspection:</p> TensorFlow on Apple Silicon Macs","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-TF-on-M1-Mac/#5-conclusion","title":"5 Conclusion","text":"<p>The above tutorial has been tested and is very easy to install. Do you have another reason to change to a new computer? It is said that the new Apple Silicon Mac will meet with us before November 2021. Let's go together!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/","title":"The Multi-Family in Algorithms","text":"<p>Info</p> <p>Author: Void, posted on 2021-10-10, Reading time: about 6 minutes, WeChat public account article link: </p>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/#1-introduction","title":"1 Introduction","text":"<p>In machine learning, there are some tasks of multi-X, such as multi-class, multi-label, multi-task, etc. Today, we will study the multi-family together.</p>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/#2-multi-class-task","title":"2 Multi-Class Task","text":"<p>Multi-class task refers to each data having a label, but the label has multiple categories (more than 2). Compared with binary classification tasks, there is not much difference in multi-class tasks. It should be noted that the loss function changes from binary cross-entropy calculated by the sigmoid function in binary classification problems to multi-cross-entropy calculated by the softmax function.</p> \\[ J=-\\sum_{i=1}^{K} y_{i} \\log \\left(p_{i}\\right) \\] <p>The evaluation metrics of multi-class tasks are also different. The evaluation metrics of common binary classification problems are: Precision, Recall, and F1-score based on a 2-dimensional confusion matrix. For multi-class problems, these three evaluation metrics exist in two categories: micro and macro. In sklearn.metrics.f1_score, the average has the following parameters: {'micro', 'macro', 'samples', 'weighted', 'binary'} or None. For macro, we calculate the precision, recall, and F1-score of each category separately, and then take the average to obtain the final evaluation metric. To consider the imbalance of categories, we can add weights when averaging. For micro, we calculate the overall confusion matrix and then calculate the final evaluation metric.</p>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/#3-multi-label-task","title":"3 Multi-Label Task","text":"<p>Multi-label task means that each data has multiple labels. For example, predicting whether a patient has multiple diseases. The simplest processing method is to treat it as multiple binary classification tasks. However, this is time-consuming and laborious, and there are often correlation relationships between multiple labels. The common practice is to still train in the same model (one loss). The processing method is to apply the sigmoid function to the output of the final classification layer (n nodes represent n labels), and then calculate binary cross-entropy separately and take the average. A more advanced method is to use sequence models or graph models, which can consider the dependency relationships between different labels.</p>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/#4-multi-task-task","title":"4 Multi-Task Task","text":"<p>Multi-task learning means learning multiple tasks at the same time (there are multiple losses), such as predicting whether a user clicks and shares. Generally, multiple tasks are learned synchronously. Of course, asynchronous mode can also be used (more like pre-training, fine-tuning with task B based on task A). </p> <p>The common model structure of multi-task learning is shown in Figure (a), where the bottom layer parameters are completely shared, and the top layer parameters vary with different tasks. This method requires that the input variables of different tasks need to be consistent, which is often difficult to achieve (different tasks have their own unique features). Therefore, the structure of MMOE (Multi-gate Mixture-of-Experts) in \u00a9 appears. It allows us to have both shared and unique parts, and their weights are determined by the gate through learning. </p> <p>The benefits of multi-task learning may include the following:</p> <ul> <li>Alleviate the cold start problem, such as small amount of data for new tasks.</li> <li>Improve the robustness of the model. Different tasks often have different noises.</li> </ul>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-10-10-multi-algo/#5-conclusion","title":"5 Conclusion","text":"<p>This article summarized the multi-family that often appears in machine learning tasks. Clarifying their concepts is beneficial to both physical and mental health, and can help you flexibly use different tasks to solve practical problems.</p>","tags":["deep learning"]},{"location":"en/Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/","title":"Deep Learning 101 - Building ResNet for Flower Image Recognition","text":"<p>Info</p> <p>Author: Jeremy, Posted on Nov. 7, 2021, Reading Time: about 6 minutes, WeChat Official Account Article Link: </p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#1-introduction","title":"1 Introduction","text":"<p>ResNet is a classic model in the field of image recognition. In 2015, ResNet ranked first in multiple image recognition competitions and significantly improved performance over the second place. In this article, we will build a neural network based on ResNet to recognize flower images (Oxford 102 Flowers).</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#2-introduction-to-resnet","title":"2 Introduction to ResNet","text":"<p>Before ResNet, there were problems with vanishing gradient and exploding gradient in neural networks. The deeper the neural network, the more difficult it was to train, and the accuracy of deep networks decreased.</p> <p>ResNet introduces residual blocks. It adds a[l] to the second ReLU process and directly establishes a contact layer between a[l] and a[l+2]. The expression is as follows:</p> \\[ \\begin{gathered} z^{[l+1]}=W^{[l+1]} a^{[l]}+b^{[l+1]} \\\\ a^{[l+1]}=g\\left(z^{[l+1]}\\right) \\\\ z^{[l+2]}=W^{[l+2]} a^{[l+1]}+b^{[l+2]} \\\\ a^{[l+2]}=g\\left(z^{[l+2]}+a^{[l]}\\right) \\end{gathered} \\] <p>The authors of the paper speculated that the model's optimization of residuals would be easier than random weight fitting (because the baseline is the identity mapping). Therefore, in extreme situations, the middle layer of residual blocks is not activated, W \u2248 0, b \u2248 0, and it can be simplified as:</p> \\[ \\begin{aligned} a^{[l+2]} &amp;=g\\left(z^{[l+2]}+a^{[l]}\\right) \\\\ &amp;=g\\left(W^{[l+2]} a^{[l+1]}+b^{[l+2]}+a^{[l]}\\right) \\\\ &amp;=g\\left(a^{[l]}\\right) \\\\ &amp;=\\operatorname{ReLU}\\left(a^{[l]}\\right) \\\\ &amp;=a^{[l]} \\end{aligned} \\] <p>Therefore, this construction method ensures that deep networks contain at least the same (identity) image information as shallow networks. Multiple residual blocks pushed together forms a residual network.</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#3-constructing-a-classification-model-with-resnet","title":"3 Constructing a Classification Model with ResNet","text":"<p>In the following demo, we use the pre-trained ResNet50 model provided by Keras to construct a multi-classification task model for 10 kinds of flower images in the Oxford 102 Flowers dataset. In terms of engineering, we only need to modify the fully connected layer of ResNet50 and perform data enhancement such as cutting, rotating, and enlarging the input image data to train all model parameters. The code is as follows:</p> <pre><code>import os\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.models import Model, load_model\nfrom keras.applications import ResNet50\nfrom keras.optimizers import Adam\nfrom keras.layers import Flatten, Dense, Dropout, Input\nfrom keras.callbacks import EarlyStopping, ModelCheckpoint\nimport numpy as np\nimport math\n\ndef fc_block(X,units,dropout,stage):\n    fc_name = 'fc' + str(stage)\n    X = Dense(units,activation ='elu',name = fc_name)(X)\n    X = Dropout(dropout)(X)\n    return X\n\ndef ResNet50_transfer():\n\n    #call base_model\n    base_model = ResNet50(\n        include_top=False,\n        weights=\"imagenet\",\n        input_tensor= Input(shape=img_size + (3,))\n    )\n\n    # freeze resnet layers' params\n    for layer in base_model.layers:\n        layer.trainable = False\n\n    # top architecture\n    X = base_model.output\n    X = Flatten()(X)\n    X = Dropout(0.4)(X)\n    X = fc_block(X,fc_layer_units[0],dropout = 0.4,stage = 1)\n    X = fc_block(X,fc_layer_units[1],dropout = 0.4,stage = 2)\n\n    # output layer\n    X = Dense(len(classes),activation='softmax',name = 'fc3_output')(X)\n\n    # create model\n    model = Model(inputs = base_model.input,outputs = X, name = 'ResNet50_transfer')\n\n    return model\n\ndef generate_data(train_path,valid_path):\n    # generate &amp; augment training data\n    train_datagen = ImageDataGenerator(rotation_range=30., shear_range=0.2, zoom_range=0.2, horizontal_flip=True)\n    train_datagen.mean = np.array([123.675, 116.28 , 103.53], dtype=np.float32).reshape((3, 1, 1))\n    train_data = train_datagen.flow_from_directory(train_path, target_size=img_size, classes=None)\n    # generate training data\n    valid_datagen = ImageDataGenerator()\n    valid_datagen.mean = np.array([123.675, 116.28 , 103.53], dtype=np.float32).reshape((3, 1, 1))\n    valid_data = train_datagen.flow_from_directory(valid_path, target_size=img_size, classes=None)\n    return train_data, valid_data\n\ndef call_back():\n    early_stopping = EarlyStopping(verbose=1, patience=10, monitor='val_loss')\n    model_checkpoint = ModelCheckpoint(filepath='102flowersmodel.h5', verbose=1, save_best_only=True, monitor='val_loss')\n    callbacks = [early_stopping, model_checkpoint]\n    return callbacks\n\n# path_to_img: 'dataset/flower_data_10/train/1//image_06734.jpg'\ntrain_path = 'dataset/flower_data_10/train'\nvalid_path = 'dataset/flower_data_10/valid'\n\nnb_epoch = 20\nbatch_size = 32\nimg_size = (224,224)\n\n# output classes\nclasses = list(map(str,[1,2,3,4,5,6,7,8,9,10]))\nrgb_mean = [123.68, 116.779, 103.939]\nfc_layer_units = [512,64]\n\nmodel = ResNet50_transfer()\nmodel.compile(loss='categorical_crossentropy', optimizer=Adam(lr=1e-5), metrics=['accuracy'])\ntrain_data, valid_data = generate_data(train_path,valid_path)\ncallbacks = call_back()\nmodel.fit_generator(train_data, steps_per_epoch= math.ceil(train_data.samples / batch_size), epochs=nb_epoch,\n                    validation_data=valid_data, validation_steps=math.ceil(valid_data.samples / batch_size),\n                    callbacks=callbacks)\n</code></pre> <p>After 20 epochs of training, the accuracy on the validation set has reached 0.8837.</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2021-11-04-Deep-Learning-101-ResNet/#4-conclusion","title":"4 Conclusion","text":"<p>This article briefly introduces the characteristics of ResNet and provides a code template for building image classification models. Students with high GPU configuration can try building ResNet networks of different sizes to observe the impact of network depth on model performance. Students interested in image recognition models are recommended to read the ResNet paper, \"Deep Residual Learning for Image Recognition.\"</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/","title":"Reading \"30 Days to Eat TensorFlow2\"","text":"<p>Info</p> <p>Author: Void, published on 2021-12-01, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#1-introduction","title":"1 Introduction","text":"<p>In work, TensorFlow is needed to build models (due to the need for fancy effects and good models). To solve problems, searching for other people's answers or TensorFlow's official documents is an efficient method. However, programming toward search engines inevitably leads to knowledge that is fragmented.</p> <p>In order to build a more complete knowledge system of TensorFlow, and not to fall into the official documents at first sight, the author found \"30 Days to Eat TensorFlow2\", an open-source toolbook about TensorFlow, which not only provides documentation but also provides an environment that can directly run examples. In fact, readers with some foundation may not need 30 days to complete the reading. If you have a certain foundation and want to quickly build a TensorFlow knowledge system, you may want to have a look.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#2-modeling-process","title":"2 Modeling Process","text":"<p>This book first gives the modeling process of common tasks using TensorFlow, including structured data, images, text, and time series data. The specific technical details can be ignored for now, such as LSTM, CNN, and so on. This part is just to show that TensorFlow has a wide range of usage scenarios and can be applied to different mainstream tasks.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#3-core-concepts","title":"3 Core Concepts","text":"<p>This part introduces the core components of TensorFlow: tensors, computation graphs, and automatic differentiation.</p> <p>Tensors can be understood as multidimensional arrays, which are the basic data structures in TensorFlow.</p> <p>The computation graph is the overall computing relationship. TensorFlow 1.0 used a static computation graph. After creating the computation graph, you need to start a session to execute it explicitly. After entering TensorFlow 2.0, for ease of debugging, TensorFlow adopted a dynamic computation graph. Since the efficiency of the dynamic computation graph will be lower, TensorFlow allows us to use the @tf.function decorator to build a static computation graph, which is also called Autograph.</p> <p>When updating the weights in a neural network, a very important step is to solve the gradient. TensorFlow provides tf.GradientTape, which enables us to easily solve the gradient and update the network.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#4-hierarchical-structure","title":"4 Hierarchical Structure","text":"<p>The third part introduces the hierarchical structure of TensorFlow, mainly low-, medium-, and high-level API examples.</p> <p>Low-level APIs directly manipulate tensors, computation graphs, and automatic differentiation. Although they may seem more complex and primitive, they are essential tools for us to leave the novice village and customize models.</p> <p>For example, defining a model:</p> <pre><code>w = tf.Variable(tf.random.normal(w0.shape))\nb = tf.Variable(tf.zeros_like(b0,dtype = tf.float32))\n\n# Define a model\nclass LinearRegression:     \n    # Forward propagation\n    def __call__(self,x):\n        return x@w + b\n\n    # Loss function\n    def loss_func(self,y_true,y_pred):  \n        return tf.reduce_mean((y_true - y_pred)**2/2)\n\nmodel = LinearRegression()\n</code></pre> <p>The medium-level API provides a higher level of encapsulation, such as loss functions, optimizers, and other components.</p> <pre><code>model = layers.Dense(units = 1)\nmodel.build(input_shape = (2,)) # use the build method to create variables\nmodel.loss_func = losses.mean_squared_error\nmodel.optimizer = optimizers.SGD(learning_rate=0.001)\n</code></pre> <p>We only need to choose the optimizer we want and adjust the learning rate. We do not need to care about how the optimizer itself is implemented. These small components provide us with a lot of convenience for modeling.</p> <p>The high-level API mainly consists of the model class interface. It mainly includes the following three points:</p> <ul> <li>Serialization model     <pre><code>model = models.Sequential()\nmodel.add(layers.Dense(1,input_shape =(2,)))\nmodel.summary()\n</code></pre></li> <li>Functional API     <pre><code>input_tensor = Input(shape=(64, ))\nz = layers.Dense(32, activation='relu')(input_tensor)\nz = layers.Dense(32, activation='relu')(z)\ny = layers.Dense(10, activation='softmax')(z)\nfrom keras.models import Model\nmodel = Model(input_tensor, y)\n</code></pre></li> <li>Inheriting the Model base class and customizing the model     <pre><code>class DNNModel(models.Model):\n    def __init__(self):\n        super(DNNModel, self).__init__()\n\n    def build(self,input_shape):\n        self.dense1 = layers.Dense(4,activation = \"relu\",name = \"dense1\")\n        self.dense2 = layers.Dense(8,activation = \"relu\",name = \"dense2\")\n        self.dense3 = layers.Dense(1,activation = \"sigmoid\",name = \"dense3\")\n        super(DNNModel,self).build(input_shape)\n\n    # Forward propagation\n    @tf.function(input_signature=[tf.TensorSpec(shape = [None,2], dtype = tf.float32)])  \n    def call(self,x):\n        x = self.dense1(x)\n        x = self.dense2(x)\n        y = self.dense3(x)\n        return y\n\nmodel = DNNModel()\nmodel.build(input_shape =(None,2))\n\nmodel.summary()\n</code></pre></li> </ul>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#5-api","title":"5 API","text":"<p>Finally, there is a specific introduction of low-, medium-, and high-level APIs. Interested readers can read it on their own. There are examples and Chinese, and it feels easy and pleasant to read.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-01-Tensorflow-Doc/#6-conclusion","title":"6 Conclusion","text":"<p>\"30 Days to Eat TensorFlow2\" can quickly establish a knowledge framework for TensorFlow for us. The content is not too much, but the depth is enough. Suitable for readers with some foundation and who want to further understand TensorFlow.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/","title":"TensorFlow Recommender System (Part 1)","text":"<p>Info</p> <p>Author: Tina, Posted on December 10, 2021, Read Time: About 6 Minutes, WeChat Official Account Article Link: </p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#1-introduction","title":"1 Introduction","text":"<p>We often see a \"For You\" feature on various platforms, such as YouTube recommending videos you might like or music apps suggesting music you might enjoy. The principle behind this function is actually an artificial intelligence recommendation system. Today we will introduce the TensorFlow Recommenders (TFRS) library, which is used for building recommendation models.</p> <p>For friends who are interested in TensorFlow, you can also review our related articles:</p> <ul> <li>Introduction to Various Keras Callbacks</li> <li>Custom Models with TensorFlow-Keras</li> <li>Installing TensorFlow on Apple Silicon Macs</li> <li>Reading \"30 Days to Learn TensorFlow 2.0\"</li> </ul>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-10-Tensorflow-Recommender/#2-recommendation-principle","title":"2 Recommendation Principle","text":"<p>We will use an example of a movie recommendation system to explain the principle of recommendation systems.</p> <p>For the existing four users and five movies with different genres, we first need to create a user profile and define the movie categories. This step is to distinguish the data and convert real-world features into computable variables. For existing user and movie data, how do we recommend movies to user D that she might like?</p> <p>As shown in the figure below, we create a two-dimensional matrix for each of the user and movie variables. For users, we will define whether they prefer children's movies (-1 means they like children's movies very much, and 1 means the opposite) and whether they prefer action movies (1 means they like action movies very much, and -1 means the opposite). For movies, we define whether they are children's movies (-1 means that they are children's movies, and 1 means the opposite) and whether they are action movies (1 means they are action movies, and -1 means the opposite).</p> <p>It can be seen that User A likes to watch children's and action-packed movies, which is based on two dimensions of User Embedding; and \"Shrek\" is defined as a children's and action-packed movie, which is the process of Movie Embedding. It is worth mentioning that the dimensions of Embedding are not only two-dimensional, but often use multidimensional matrix to represent variables.</p> <p>Next, we use matrix decomposition to perform collaborative filtering to calculate the feedback matrix of prediction. As shown in the figure below, U represents the user matrix, and V represents the matrix of candidate movie items. The computed A value is the predicted feedback value. Therefore, collaborative filtering is to recommend based on the similarity between users and candidate items.</p> <p>When using matrix decomposition to perform collaborative filtering, in order to reduce the prediction error of the objective function, two methods are used: stochastic gradient descent (SGD) or weighted alternating least squares (WALS).</p> <p>It is worth mentioning that WALS is a new algorithm created specifically to solve recommendation systems, the idea of which is different from the former. During each iteration, WALS fixes the value of U to determine V and then fixes the value of V to determine U. Each method has its advantages and disadvantages, which we will not cover in detail here</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-18-Tabnet/","title":"Introduction to TabNet","text":"<p>Info</p> <p>Author: Who is Void, published on December 18, 2021, reading time: approximately 6 minutes, WeChat official account article link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-18-Tabnet/#1-introduction","title":"1 Introduction","text":"<p>For tabular data, tree models (LightGBM, XGBoost) often perform well. Possible reasons are:</p> <ul> <li>Easy to construct or already have rich feature libraries.</li> <li>The decision manifolds of tree models are hyperplane boundaries (which can be understood as cut out one by one), which perform well for such problems.</li> </ul> <p>As for some tasks, the performance of NN models may only be passable, and we need NN models to participate in the final model ensemble. Smart researchers have designed NN models similar to tree models. The model we will introduce in this article is such a model: TabNet.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-18-Tabnet/#2-constructing-decision-trees-with-nns","title":"2 Constructing decision trees with NNs","text":"<p>We may be familiar with decision trees, and the decision boundaries can be seen in the following simple example:</p> <p>Two features x1 and x2 are respectively divided into four parts by thresholds a and d. So how can NN simulate this process?</p> <p>It can be seen that the input of the model is also two features x1 and x2, which are first filtered separately by the Mask layer because the tree model also independently selects the feature with the largest splitting gain at each step in the construction process. Then, the two features are each connected to a fully connected layer with designed weights and bias, and the output is activated by RELU activation function. Since RELU(x) is x when x&gt;0, and 0 when x&lt;0. So for x1, when x1&gt;a, the final output is [c1x1-c1a,0,0,0], if x1&lt;a, the output is [0,-c1x1+c1a,0,0]. It can be seen here that this is equivalent to dividing by a threshold value a. The two -1 dimensions here are actually used to align and fill dimensions.  </p> <p>Finally, we add the outputs of different features, act on softmax, and get the output vector, such as [0.1,0.5,0.3,0.3]. Each dimension represents the weight of the influence of a certain condition on the final decision. For example, 0.1 represents that the weight of the influence of x1&gt;a on the final decision is only 10%. It is worth mentioning that the updating of model parameters still uses backpropagation, and does not involve the calculation of gain.  </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-18-Tabnet/#3-tabnet-structure","title":"3 TabNet structure","text":"<p>TabNet has made improvements to the above simple structure.</p> <p>Features first pass through a BN (batch normalization) layer, and then through the Feature transformer layer. The function of this layer is similar to the fully connected layer mentioned earlier, and its structure is as follows:</p> <p>It has two parts, the part that is shared by all steps and the decision part that each step has independently. The small structures inside are all residual connections composed of fully connected layers (FC), BN layers, and GLU (Gated Linear Unit) used to perform feature selection. After splitting (selecting some features), feature selection is performed through attentive transformer (mainly by using sparsemax to set some features to 0). Intuitively, features selected by multiple steps before should not be chosen by the model. Finally, the Mask matrix used in the next step is generated.    </p> <p>The feature attribute in the lower right corner represents the global importance of the variables.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-18-Tabnet/#4-conclusion","title":"4 Conclusion","text":"<p>The above is the basic structure of TabNet, which realizes instance-wise feature selection through additive models and attention mechanisms, taking into account the advantages of tree models and NNs. When encountering problems with tabular data, you can try it and see how effective it is. For those who don't fully understand the theoretical understanding of TabNet, you can also read the original paper or articles by Zhihu experts.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/","title":"TensorFlow Recommendation System (2)","text":"<p>Info</p> <p>Author: Tina, published on 2021-12-10, Reading time: about 6 minutes, WeChat public account article link: </p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#1-introduction","title":"1 Introduction","text":"<p>Readers who have read TensorFlow Recommendation System (1) should still have an impression. Last time we introduced the retrieval model, and there is another task model in the recommendation system, which is information ranking. In the ranking stage, the main task is to adjust the entries produced by the retrieval model to select the movie entries that are most likely to be liked and selected by users. </p> <p>Today, we will introduce in detail the principles and calling examples of the ranking model.</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#2-source-code-analysis","title":"2 Source Code Analysis","text":"<ul> <li>Prepare data, obtain and split the dataset. </li> <li>Build the ranking model. </li> <li>Fit and evaluate the model.</li> </ul>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#21-data-preparation","title":"2.1 Data Preparation","text":"<pre><code>import os\nimport pprint\nimport tempfile\n\nfrom typing import Dict, Text\n\nimport numpy as np\nimport tensorflow as tf\n## TensorFlow Dataset Resource\nimport tensorflow_datasets as tfds\n\n## TensorFlow Recommendation System\nimport tensorflow_recommenders as tfrs\n</code></pre> <p>Import the <code>movielens</code> movie dataset from <code>TensorFlow Dataset</code> as the information retrieval model, and retain only the following three variables: <pre><code>ratings = tfds.load(\"movielens/100k-ratings\", split=\"train\")\n\nratings = ratings.map(lambda x: {\n    \"movie_title\": x[\"movie_title\"],\n    \"user_id\": x[\"user_id\"],\n    \"user_rating\": x[\"user_rating\"]\n})\n</code></pre></p> <p>Randomly shuffle the data, and take 80% as the training dataset and the remaining 20% as the test dataset: <pre><code>tf.random.set_seed(42)\nshuffled = ratings.shuffle(100_000, seed=42, reshuffle_each_iteration=False)\n\ntrain = shuffled.take(80_000)\ntest = shuffled.skip(80_000).take(20_000)\n</code></pre></p> <p>In order to embed categorical variables, here use continuous integers to match each numerical value of movie titles and user IDs: <pre><code>movie_titles = ratings.batch(1_000_000).map(lambda x: x[\"movie_title\"])\nuser_ids = ratings.batch(1_000_000).map(lambda x: x[\"user_id\"])\n\nunique_movie_titles = np.unique(np.concatenate(list(movie_titles)))\nunique_user_ids = np.unique(np.concatenate(list(user_ids)))\n</code></pre></p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#22-build-the-ranking-model","title":"2.2 Build the Ranking Model","text":"<p>In the text model, you need to do word embedding (Embeddings) for users and movies first. Simply put, it is the process of converting text type data into computable numeric vector. Here, the embedding vectors of each dimension are 32. The second step is to build a sequential model. The model calls the fully connected layer of <code>Keras Dense</code>, and the activation function is <code>relu</code> rectified linear unit function, which has the characteristic that when returning with default values, it returns <code>max(x,0)</code> element by element. Finally, use the <code>call()</code> function to input the input and return the ranking result.</p> <p><pre><code>class RankingModel(tf.keras.Model):\n\n  def __init__(self):\n    super().__init__()\n    ## The embedding dimension is 32\n    embedding_dimension = 32\n\n    ## Compute embeddings for users.\n    self.user_embeddings = tf.keras.Sequential([\n      tf.keras.layers.StringLookup(\n        vocabulary=unique_user_ids, mask_token=None),\n      tf.keras.layers.Embedding(len(unique_user_ids) + 1, embedding_dimension)\n    ])\n\n    # Compute embeddings for movies.\n    self.movie_embeddings = tf.keras.Sequential([\n      tf.keras.layers.StringLookup(\n        vocabulary=unique_movie_titles, mask_token=None),\n      tf.keras.layers.Embedding(len(unique_movie_titles) + 1, embedding_dimension)\n    ])\n\n    # Compute predictions.\n    self.ratings = tf.keras.Sequential([\n      # Learn multiple dense layers.\n      tf.keras.layers.Dense(256, activation=\"relu\"),\n      ## The output dimension is 256\n      tf.keras.layers.Dense(64, activation=\"relu\"),\n      ## The output dimension of the output layer is 64\n      # Make rating predictions in the final layer.\n      tf.keras.layers.Dense(1)\n  ])\n\n  def call(self, inputs):\n    ## The user ID and movie title are the input values of the model\n    user_id, movie_title = inputs\n\n    user_embedding = self.user_embeddings(user_id)\n    movie_embedding = self.movie_embeddings(movie_title)\n\n    return self.ratings(tf.concat([user_embedding, movie_embedding], axis=1))\n</code></pre> As shown in the figure below, using an untrained model, recommend the movie \"One Flew Over the Cuckoo's Nest (1975)\" to user 9, and the predicted probability is 0.016:</p> <p>In order to obtain an evaluation value during training, the mean square error (MSE) loss function and root mean square error (RMSE) evaluation function are added to the original model task:</p> <pre><code>task = tfrs.tasks.Ranking(\n  loss = tf.keras.losses.MeanSquaredError(),\n  metrics=[tf.keras.metrics.RootMeanSquaredError()]\n)\n</code></pre> <p>Package the ranking model and the above function into a new movie model, and prepare the <code>call ()</code> function and <code>compute_loss ()</code> function to fit and evaluate the model's performance:</p> <pre><code>class MovielensModel(tfrs.models.Model):\n\n  def __init__(self):\n    super().__init__()\n    self.ranking_model: tf.keras.Model = RankingModel()\n    self.task: tf.keras.layers.Layer = tfrs.tasks.Ranking(\n      loss = tf.keras.losses.MeanSquaredError(),\n      metrics=[tf.keras.metrics.RootMeanSquaredError()]\n    )\n\n  def call(self, features: Dict[str, tf.Tensor]) -&gt; tf.Tensor:\n    return self.ranking_model(\n        (features[\"user_id\"], features[\"movie_title\"]))\n\n  def compute_loss(self, features: Dict[Text, tf.Tensor], training=False) -&gt; tf.Tensor:\n    labels = features.pop(\"user_rating\")\n\n    rating_predictions = self(features)\n\n    # The task computes the loss and the metrics.\n    return self.task(labels=labels, predictions=rating_predictions)\n</code></pre>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#23-fit-and-evaluate-the-model","title":"2.3 Fit and Evaluate the Model","text":"<p>Call the model to compile the <code>compile()</code> method and use the Adagrad optimizer to specify a learning rate of 0.1:</p> <pre><code>model = MovielensModel()\nmodel.compile(optimizer=tf.keras.optimizers.Adagrad(learning_rate=0.1))\n</code></pre> <p>During data fitting, shuffle the training set, batch processing, and data caching, for a total of three epochs:</p> <pre><code>cached_train = train.shuffle(100_000).batch(8192).cache()\ncached_test = test.batch(4096).cache()\n\nmodel.fit(cached_train, epochs=3)\n</code></pre> <pre><code>model.evaluate(cached_test, return_dict=True)\n\n## output:\n#{'root_mean_squared_error': 1.1102582216262817,\n# 'loss': 1.2078243494033813,\n# 'regularization_loss': 0,\n# 'total_loss': 1.2078243494033813}\n</code></pre> <p>Finally, three movies recommended for user 9 are recommended with the model's predicted ranking results:</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2021-12-27-TensorFlow-Recommender2/#3-summary","title":"3 Summary","text":"<p>In TensorFlow's movie recommendation system, the first step is to obtain movie entries that users may like from the data set, and the second step is to predict and rank these movie entries, in order to recommend the movie that users are most likely interested in and click on with limited information. In real life, you are the user. Therefore, I teach you a small trick to solve the problem of watching too few movies: instead of random browsing, search for some movies that you have watched and liked. The movies similar to what you like are in the \"recommended for you\" column. Why not give it a try!</p> <p>I hope this article can help you, welcome everyone to leave a message for discussion.</p>","tags":["deep learning","tensorflow","recommendation"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/","title":"2022 04 16 TF Text Classification","text":"<ul> <li>deep learning</li> <li>tensorflow</li> <li>nlp</li> </ul>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#tensorflow","title":"\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b","text":"<p>Info</p> <p>Author:\uff1aVincent\uff0cPosted on 2021-06-06\uff0cReading time: 6 mins\uff0cWeChat Post Link:\uff1a</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#1-introduction","title":"1 Introduction","text":"<p>In natural language processing, text classification is a very common application. This article will introduce the use of TensorFlow to develop text classification models based on embedded. Because the API of TensorFlow has changed rapidly and compatible, this article is used in this article to 4 4 of 2022 4On the 16th, the latest version of TensorFlow (TF) and related libraries mainly includes: <code>tensorflow (v2.8.0)</code>, <code>tensorflow datasets (TFDS v4.0.1)</code> and <code>tensorFlow text (tf_text v2.8.1)</code> `BUG, first check the version of the TensorFlow related library.The main APIs used in this workflow are:</p> <ul> <li>tf.strings</li> <li>tfds</li> <li>tf_text</li> <li>tf.data.Dataset</li> <li>tf.keras (Sequential &amp; Functional API)</li> </ul>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#2-get-data","title":"2 Get data","text":"<p>TensorFlow DataSets (TFDS) contains a lot [Example data] (https://www.tensorflow.org/datasets 'tensorflow datasets data set') is used for research trials. This article uses classic movie review data to conduct research on emotional dual -class tasks.First use the TFDS API to load the data directly. As a result, there will be a [tf.data.dataSet] (https://www.tersorflow.org/api_docs/python/data/dataSet 'tf.data.dataSet') In the object.</p> <pre><code>import collections\nimport pathlib\n\n\nimport tensorflow as tf\nfrom tensorflow.keras import layers\nfrom tensorflow.keras import losses\nfrom tensorflow.keras import utils\nfrom tensorflow.keras.layers import TextVectorization\n\n\nimport tensorflow_datasets as tfds\nimport tensorflow_text as tf_text\n\n\nimport plotly.express as px\nimport matplotlib.pyplot as plt\n\n\n\n\n# Training set.\ntrain_ds = tfds.load(\n'imdb_reviews',\nsplit='train[:80%]',\nshuffle_files=True,\nas_supervised=True)\n\n\n# Validation set - a tf.data.Dataset object\nval_ds = tfds.load(\n'imdb_reviews',\nsplit='train[80%:]',\nshuffle_files=True,\nas_supervised=True)\n\n\n\n\n# Check the count of records\nprint(train_ds.cardinality().numpy())\nprint(val_ds.cardinality().numpy())\n</code></pre> <p>The return value is:</p> <pre><code>20000\n5000\n</code></pre> <p>Use the following method to view a sample data:</p> <pre><code>for data, label in  train_ds.take(1):\nprint(type(data))\nprint('Text:', data.numpy())\nprint('Label:', label.numpy())\n</code></pre> <p>The return value is:</p> <pre><code>&lt;class 'tensorflow.python.framework.ops.EagerTensor'&gt;\nText: b\"This was an absolutely terrible movie. Don't be lured in by Christopher Walken or Michael Ironside. Both are great actors, but this must simply be their worst role in history. Even their great acting could not redeem this movie's ridiculous storyline. This movie is an early nineties US propaganda piece. The most pathetic scenes were those when the Columbian rebels were making their cases for revolutions. Maria Conchita Alonso appeared phony, and her pseudo-love affair with Walken was nothing but a pathetic emotional plug in a movie that was devoid of any real meaning. I am disappointed that there are movies like this, ruining actor's like Christopher Walken's good name. I could barely sit through it.\"\nLabel: 0\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#3-text-pre-processing","title":"3 Text Pre -processing","text":"<p>This section uses the API of TF_TEXT and TF.STINGS processing text to process the data. TF.Data.DataSet can easily map the corresponding functions into the data, recommended learning and use.</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#31-conversion-text","title":"3.1 Conversion text","text":"<p>The characters in the classification task have not contributed to the model prediction of the model. Therefore, using the <code>map</code> operation to the DataSet to turn all the characters into a lowercase, be sure to pay attention to the data format in tf.data.dataSet.</p> <pre><code>train_ds = train_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\nval_ds = val_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#32-text-format","title":"3.2 Text Format","text":"<p>This step is formatted by the regular expression of the text, such as adding spaces before and after the punctuation, which is conducive to subsequent steps to use spaces.</p> <pre><code>str_regex_pattern = [(\"[^A-Za-z0-9(),!?\\'\\`]\", \" \"),(\"\\'s\", \" \\'s\",) ,(\"\\'ve\", \" \\'ve\"),(\"n\\'t\", \" n\\'t\"),(\"\\'re\", \" \\'re\"),(\"\\'d\", \" \\'d\")\n,(\"\\'ll\", \" \\'ll\"),(\",\", \" , \"),(\"!\", \" ! \"),(\"\\(\", \" \\( \"),(\"\\)\", \" \\) \"),(\"\\?\", \" \\? \"),(\"\\s{2,}\", \" \")]\n\n\nfor pattern, rewrite in str_regex_pattern:\ntrain_ds = train_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\nval_ds = val_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#33-build-a-watch-table","title":"3.3 Build a watch table","text":"<p>Use the training set constructor (be careful not to use the verification or test set, which will lead to information leakage). This step is to map the character to the corresponding index, which is conducive to the transformation of the data into a model for the model that can be trained and predictable.</p> <pre><code># Do not use validation set as that will lead to data leak\ntrain_text = train_ds.map(lambda text, label: text)\n\n\ntokenizer = tf_text.WhitespaceTokenizer()\n\n\nunique_tokens = collections.defaultdict(lambda: 0)\nsentence_length =  []\nfor text in train_text.as_numpy_iterator():\ntokens = tokenizer.tokenize(text).numpy()\nsentence_length.append(len(tokens))\nfor token in tokens:\nunique_tokens[token] += 1\n\n\n# check out the average sentence length -&gt; ~250 tokens\nprint(sum(sentence_length)/len(sentence_length))\n\n\n# print 10 most used tokens - token, frequency\nd_view = [ (v,k) for k,v in unique_tokens.items()]\nd_view.sort(reverse=True)\nfor v,k in d_view[:10]:\nprint(\"%s: %d\" % (k,v))\n</code></pre> <p>The return value shows that the words used in high -frequency are common characters in English:</p> <pre><code>b'the': 269406\nb',': 221098\nb'and': 131502\nb'a': 130309\nb'of': 116695\nb'to': 108605\nb'is': 88351\nb'br': 81558\nb'it': 77094\nb'in': 75177\n</code></pre> <p>You can also use the chart to visually display the frequency of each word, which is conducive to helping the size of the choice.</p> <pre><code>fig = px.scatter(x=range(len(d_view)), y=[cnt for cnt, word in d_view])\nfig.show()\n</code></pre>  Frequency distribution of words  <p>As can be seen from the figure, among more than 70,000 characters, many characters appear very low, so the choice of vocabulary is 20,000.</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#34-construction-of-word-map","title":"3.4 Construction of Word Map","text":"<p>Use TensorFlow's <code>tf.lookup.StaticVocabularTable</code> to map the characters, which can map characters to the corresponding index and test with a simple sample.</p> <pre><code>keys = [token for cnt, token in d_view][:vocab_size]\nvalues = range(2, len(keys) + 2)  # Reserve `0` for padding, `1` for OOV tokens.\n\n\nnum_oov_buckets =1\n\n\n# Note: must assign the key_dtype and value_dtype when the keys and values are Python arrays\ninit = tf.lookup.KeyValueTensorInitializer(\nkeys= keys,\nvalues= values,\nkey_dtype=tf.string, value_dtype=tf.int64)\n\n\ntable = tf.lookup.StaticVocabularyTable(\ninit,\nnum_oov_buckets=num_oov_buckets)\n\n\n# Test the look up table with sample input\ninput_tensor = tf.constant([\"emerson\", \"lake\", \"palmer\", \"king\"])\nprint(table[input_tensor].numpy())\n</code></pre> <p>The output is:</p> <pre><code>array([20000,  2065, 14207,   618])\n</code></pre> <p>Next, you can map the text to the index, construct a function for transformation, and use it to the data set:</p> <pre><code>def text_index_lookup(text, label):\ntokenized = tokenizer.tokenize(text)\nvectorized = table.lookup(tokenized)\nreturn vectorized, label\n\n\ntrain_ds = train_ds.map(text_index_lookup)\nval_ds = val_ds.map(text_index_lookup)\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#35-configuration-data-set","title":"3.5 Configuration Data set","text":"<p>With the help of TF.Data.DataSet's <code>Cache</code> and<code>PreFETCH</code>api, it can effectively improve performance. The <code>Cache</code> method loads data in memory to quickly read and write, while<code>prefetch</code> can process data synchronously when model predictions, Improve time utilization.</p> <pre><code>AUTOTUNE = tf.data.AUTOTUNE\n\n\ndef configure_dataset(dataset):\nreturn dataset.cache().prefetch(buffer_size=AUTOTUNE)\n\n\ntrain_ds = configure_dataset(train_ds)\nval_ds = configure_dataset(val_ds)\n</code></pre> <p>The text is different, but the neural network needs to enter the data with a fixed dimension. Therefore, the padding of the data ensures that the length is consistent and in batches.</p> <pre><code>BATCH_SIZE = 32\ntrain_ds = train_ds.padded_batch(BATCH_SIZE  )\nval_ds = val_ds.padded_batch(BATCH_SIZE  )\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#36-treatment-test-set","title":"3.6 Treatment Test set","text":"<p>The test set used to verify the performance of the model can also be processed in the same way to ensure that the model can be predicted normally:</p> <pre><code># Test set.\ntest_ds = tfds.load(\n'imdb_reviews',\nsplit='test',\n# batch_size=BATCH_SIZE,\nshuffle_files=True,\nas_supervised=True)\n\n\ntest_ds = test_ds.map(lambda text, label: (tf_text.case_fold_utf8(text), label))\n\n\nfor pattern, rewrite in str_regex_pattern:\ntest_ds = test_ds.map(lambda text, label: (tf.strings.regex_replace(text, pattern=pattern, rewrite=rewrite), label))\n\n\ntest_ds = test_ds.map(text_index_lookup)\ntest_ds = configure_dataset(test_ds)\ntest_ds = test_ds.padded_batch(BATCH_SIZE  )\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#4-establish-a-model","title":"4 Establish a model","text":"","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#41-use-sequential-api-to-build-convolutional-neural-networks","title":"4.1 Use Sequential API to build convolutional neural networks","text":"<pre><code>vocab_size += 2 # 0 for padding and 1 for oov token\n\n\ndef create_model(vocab_size, num_labels, dropout_rate):\nmodel = tf.keras.Sequential([\ntf.keras.layers.Embedding(vocab_size, 128, mask_zero=True),\n\n\ntf.keras.layers.Conv1D(32, 3, padding=\"valid\", activation=\"relu\", strides=1),\ntf.keras.layers.MaxPooling1D(pool_size=2),\n\n\ntf.keras.layers.Conv1D(64, 4, padding=\"valid\", activation=\"relu\", strides=1),\ntf.keras.layers.MaxPooling1D(pool_size=2),\n\n\ntf.keras.layers.Conv1D(128, 5, padding=\"valid\", activation=\"relu\", strides=1),\ntf.keras.layers.GlobalMaxPooling1D( ),\n\n\ntf.keras.layers.Dropout(dropout_rate),\n\n\ntf.keras.layers.Dense(num_labels)\n])\nreturn model\n\n\ntf.keras.backend.clear_session()\nmodel = create_model(vocab_size=vocab_size, num_labels=2, dropout_rate=0.5)\n\n\n#Momentum in SGD will significantly increase the convergence speed\nloss = losses.SparseCategoricalCrossentropy(from_logits=True)\noptimizer = tf.keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n\n\nmodel.compile(loss=loss, optimizer=optimizer, metrics='accuracy')\n\n\nprint(model.summary())\n</code></pre> <p>The output is:</p> <pre><code>Model: \"sequential\"\n_________________________________________________________________\nLayer (type)                Output Shape              Param #\n=================================================================\nembedding (Embedding)       (None, None, 128)         2560256\n\n\nconv1d (Conv1D)             (None, None, 32)          12320\n\n\nmax_pooling1d (MaxPooling1D  (None, None, 32)         0\n)\n\n\nconv1d_1 (Conv1D)           (None, None, 64)          8256\n\n\nmax_pooling1d_1 (MaxPooling  (None, None, 64)         0\n1D)\n\n\nconv1d_2 (Conv1D)           (None, None, 128)         41088\n\n\nglobalmaxpooling1d (Global (None, 128) 0\nMaxPooling1D)\n\n\ndropout (Dropout)           (None, 128)               0\n\n\ndense (Dense)               (None, 2)                 258\n\n\n=================================================================\nTotal params: 2,622,178\nTrainable params: 2,622,178\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>Next, you can train and evaluate the model:</p> <pre><code># early stopping reduces the risk of overfitting\nearly_stopping = tf.keras.callbacks.EarlyStopping(patience=10)\nepochs = 100\nhistory = model.fit(x=train_ds, validation_data=val_ds,epochs=epochs, callbacks=[early_stopping])\n\n\nloss, accuracy = model.evaluate(test_ds)\n\n\nprint(\"Loss: \", loss)\nprint(\"Accuracy: {:2.2%}\".format(accuracy))\n</code></pre> <p>Considering that the model structure is simple, the effect is acceptable:</p> <pre><code>782/782 [==============================] - 57s 72ms/step - loss: 0.4583 - accuracy: 0.8678\nLoss:  0.45827823877334595\nAccuracy: 86.78%\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#42-use-functional-api-to-build-a-two-way-lstm","title":"4.2 Use Functional API to build a two -way LSTM","text":"<p>Steps are similar to using Sequential API, but Functional API is more flexible.</p> <pre><code>input = tf.keras.layers.Input([None] )\nx = tf.keras.layers.Embedding(\ninput_dim=vocab_size,\noutput_dim=128,\n# Use masking to handle the variable sequence lengths\nmask_zero=True)(input)\n\n\nx = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(64))(x)\nx = tf.keras.layers.Dense(64, activation='relu')(x)\nx = tf.keras.layers.Dropout(dropout_rate)(x)\noutput = tf.keras.layers.Dense(num_labels)(x)\n\n\nlstm_model = tf.keras.Model(inputs=input, outputs=output, name=\"text_lstm_model\")\n\n\nloss = losses.SparseCategoricalCrossentropy(from_logits=True)\noptimizer = tf.keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n\n\nlstm_model.compile(loss=loss, optimizer=optimizer, metrics='accuracy')\n\n\nlstm_model.summary()\n</code></pre> <p>The output is:</p> <pre><code>Model: \"text_lstm_model\"\n_________________________________________________________________\nLayer (type)                Output Shape              Param #\n=================================================================\ninput_5 (InputLayer)        [(None, None)]            0\n\n\nembedding_5 (Embedding)     (None, None, 128)         2560256\n\n\nbidirectional_4 (Bidirectio  (None, 128)              98816\nnal)\n\n\ndense_4 (Dense)             (None, 64)                8256\n\n\ndropout_2 (Dropout)         (None, 64)                0\n\n\ndense_5 (Dense)             (None, 2)                 130\n\n\n=================================================================\nTotal params: 2,667,458\nTrainable params: 2,667,458\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre> <p>Similarly, train and predict the model:</p> <pre><code>history_2 = lstm_model.fit(x=train_ds, validation_data=val_ds, epochs=epochs, callbacks=[early_stopping])\n\n\nloss, accuracy = lstm_model.evaluate(test_ds)\n\n\nprint(\"Loss: \", loss)\nprint(\"Accuracy: {:2.2%}\".format(accuracy))\n</code></pre> <p>Considering that the model structure is simple, the effect is acceptable:</p> <pre><code>782/782 [==============================] - 84s 106ms/step - loss: 0.4105 - accuracy: 0.8160\nLoss:  0.4105057716369629\nAccuracy: 81.60%\n</code></pre>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-16-TF-Text-Classification/#5-summary","title":"5 Summary","text":"<p>Regarding text classification, there are many new technologies to try. There are also many decisions in the above workflow to test (alchemy). This article aims to use the latest TensorFlow API to pass the important knowledge points and commonly used API in text classification tasks and commonly used APIs in text classification tasks.There are still many places that can be optimized in actual work.I hope this sharing will help you, please leave a message in the comment area!</p>","tags":["deep learning","tensorflow","nlp"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/","title":"Building Tree Models with TensorFlow Decision Forests","text":"<p>Info</p> <p>Author: Vincent, Published: 2021-06-06, Time: About 6 minutes read, WeChat article link: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#1-introduction","title":"1 Introduction","text":"<p>Both deep learning and traditional machine learning have excellent frameworks in their respective fields. For example, when building neural networks, TensorFlow and PyTorch are the common choices. The traditional tree model still performs very well in dealing with tabular data in real work. However, for a long time, deep learning frameworks did not have APIs to build tree models, until the emergence of <code>TensorFlow Decision Forests</code>.</p> <p><code>TensorFlow Decision Forests</code> provides a series of APIs to build tree-based models, such as Classification and Regression Trees (CART), Random Forest, Gradient Boosted Trees, etc. With <code>TensorFlow Decision Forests</code>, we can construct tree models using a paradigm similar to building neural networks. This article will explore it!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#2-obtain-data","title":"2 Obtain Data","text":"<p>As usual, import dependencies and download data. We use a tabular dataset to predict the species of penguins.</p> <pre><code>import tensorflow_decision_forests as tfdf\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nimport math\n\n# Download the dataset\n!wget -q https://storage.googleapis.com/download.tensorflow.org/data/palmer_penguins/penguins.csv -O /tmp/penguins.csv\n\n# Load a dataset into a Pandas Dataframe.\ndataset_df = pd.read_csv(\"/tmp/penguins.csv\")\n\n# Display the first 3 examples.\ndataset_df.head(3)\n</code></pre> species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex year Adelie Torgersen 39.1 18.7 181.0 3750.0 male 2007 Adelie Torgersen 39.5 17.4 186.0 3800.0 female 2007 Adelie Torgersen 40.3 18.0 195.0 3250.0 female 2007 <p>Specify the label field and convert the label category to integer data.</p> <pre><code>label = \"species\"\n\nclasses = dataset_df[label].unique().tolist()\nprint(f\"Label classes: {classes}\")\n\ndataset_df[label] = dataset_df[label].map(classes.index)\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#3-split-and-process-data","title":"3 Split and Process Data","text":"<p>Split the data into training set and test set:</p> <pre><code>def split_dataset(dataset, test_ratio=0.30):\n\"\"\"Splits a panda dataframe in two.\"\"\"\n  test_indices = np.random.rand(len(dataset)) &lt; test_ratio\n  return dataset[~test_indices], dataset[test_indices]\n\n\ntrain_ds_pd, test_ds_pd = split_dataset(dataset_df)\nprint(\"{} examples in training, {} examples for testing.\".format(\n    len(train_ds_pd), len(test_ds_pd)))\n</code></pre> <p>Then convert the <code>Pandas DataFrame</code> to the <code>TensorFlow Dataset</code>, which makes it easier to simplify the subsequent program and improve efficiency.</p> <pre><code>train_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_ds_pd, label=label)\ntest_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test_ds_pd, label=label)\n</code></pre> <p>Then data can be injected into the model for training. Unlike traditional machine learning frameworks, <code>TensorFlow Decision Forests</code> has the following advantages in implementing tree models:</p> <ul> <li>Automatically handles numeric and categorical variables, eliminating the need to encode categorical variables and normalize numeric variables. The algorithm can also handle missing data well!</li> <li>Hyperparameters are basically similar to those in other frameworks and default parameters give decent results in most cases.</li> <li>Before training, there is no need to compile the model, and there is no need for a validation set during training. The validation set is only used to display performance metrics.</li> </ul> <p>Note that this does not mean that using <code>TensorFlow Decision Forests</code> can eliminate all feature engineering, but it does save a lot of time.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#4-modeling","title":"4 Modeling","text":"<p>Construction of a random forest:</p> <pre><code># \u6784\u5efa\u968f\u673a\u68ee\u6797\nmodel = tfdf.keras.RandomForestModel()\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel.fit(x=train_ds)\n\n# \u8bc4\u4f30\u6a21\u578b\nmodel.compile(metrics=[\"accuracy\"])\nevaluation = model.evaluate(test_ds, return_dict=True)\nprint()\n\nfor name, value in evaluation.items():\n  print(f\"{name}: {value:.4f}\")\n</code></pre> <p>Output:</p> <pre><code>1/1 [==============================] - 1s 706ms/step - loss: 0.0000e+00 - accuracy: 0.9608\n\nloss: 0.0000\naccuracy: 0.9608\n</code></pre>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#5-visualize-tree-model","title":"5 Visualize Tree Model","text":"<p><code>TensorFlow Decision Forests</code> provides a native API for visualizing trees. Here we select a tree from the forest for display.</p> <pre><code>with open(\"plot.html\", \"w\") as f:\n  f.write(tfdf.model_plotter.plot_model(model, tree_idx=0, max_depth=3))\n\nfrom IPython.display import IFrame\nIFrame(src='./plot.html', width=700, height=600)\n</code></pre> Visualized Tree <p>There's also a lot of useful information in <code>model.summary()</code>, such as input features, feature importance, node information, etc. (limited space, not elaborating one by one). During the training process, the accuracy and loss can also be visualized:</p> <pre><code>import matplotlib.pyplot as plt\n\nlogs = model.make_inspector().training_logs()\n\nplt.figure(figsize=(12, 4))\n\nplt.subplot(1, 2, 1)\nplt.plot([log.num_trees for log in logs], [log.evaluation.accuracy for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Accuracy (out-of-bag)\")\n\nplt.subplot(1, 2, 2)\nplt.plot([log.num_trees for log in logs], [log.evaluation.loss for log in logs])\nplt.xlabel(\"Number of trees\")\nplt.ylabel(\"Logloss (out-of-bag)\")\n\nplt.show()\n</code></pre> Training Logs","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-04-24-TensorFlow-Decision-Forest/#6-conclusion","title":"6 Conclusion","text":"<p><code>TensorFlow Decision Forests</code> strengthens the TensorFlow ecosystem and provides new ideas for data scientists to model tabular data. It is still in its early stages (v0.2.3), but it already has many available high-quality APIs. More functionalities can be found in the documentations. Hope this sharing will help you in your work. Welcome to leave a comment for discussion!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-05-07-TF-Playground/","title":"Introduction to TensorFlow Playground","text":"<p>Info</p> <p>Author: Vincent, published on 2021-06-06, reading time: about 6 minutes, article link on WeChat Official Account: </p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-05-07-TF-Playground/#1-introduction","title":"1. Introduction","text":"<p>When I was learning deep learning, I deeply felt the benefits of visualization: if you have an intuitive understanding of data, model structure, and model output, it will be easier to identify any errors that may occur, which is helpful for optimizing the model, and your understanding of related knowledge will also be deeper. Regarding the TensorFlow framework, Google has developed a very interesting application for displaying how neural networks work - TensorFlow Playground.</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-05-07-TF-Playground/#2-product-features","title":"2. Product Features","text":"<p>This is the homepage of TensorFlow Playground, which provides basic functions for online training of neural networks (limited to multilayer perceptrons).</p> The homepage of TensorFlow Playground <p>The product offers many parameters for debugging. After setting the parameters, you can train a neural network by clicking \"start\"! This provides many optimization solutions for deep learning developers, such as:</p> <ul> <li><code>Task Type</code>: Classification or regression.</li> <li><code>Input Data</code>: The distribution of data, the proportion of data set splitting, noise in the data, and batch size.</li> <li><code>Features</code>: Feature transformation.</li> <li><code>Model Architecture</code>: The number of hidden layers, the number of neurons in the hidden layers, the type of neuron activation function, regularization parameters, output dimensions, etc.</li> <li><code>Model Prediction Results</code>: The decision boundary of the model.</li> </ul> <p>These influencing factors do not cover all aspects of actual work, but they provide many good entry points and an experimental platform. This is very helpful for understanding the principles, because you can easily verify your ideas through testing!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-05-07-TF-Playground/#3-conclusion","title":"3. Conclusion","text":"<p>TensorFlow Playground is a very good experimental product for beginners. Try adjusting those parameters and check whether the model effect is the same as your expectations. If the result is not ideal, try to improve the performance of the model by adjusting those parameters. Actually, this is the workflow you need to face in actual work, and TensorFlow Playground is a very good start! I hope this sharing can help you, and feel free to leave a message in the comment section for discussion!</p>","tags":["deep learning","tensorflow"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/","title":"Univariate Time Series Prediction with TensorFlow","text":"<p>Info</p> <p>Author: Vincent\uff0cPublished on 2021-06-06, Read time: about 6 minutes, WeChat Public Account Article Link: </p>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#1-introduction","title":"1 Introduction","text":"<p>This article will use TensorFlow to solve time series prediction problems. There is a very detailed but lengthy tutorial on the TensorFlow official website, so this article will focus on the core content of univariate time series prediction in an easy-to-understand way.</p>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#2-bitcoin-price-dataset","title":"2 Bitcoin Price Dataset","text":"","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#21-get-data","title":"2.1 Get Data","text":"<p>This article uses Bitcoin historical price data (from October 2013 to May 2021) for prediction. Please note that this article does not constitute investment advice!</p> <pre><code>!wget https://raw.githubusercontent.com/mrdbourke/tensorflow-deep-learning/main/extras/BTC_USD_2013-10-01_2021-05-18-CoinDesk.csv\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\nimport tensorflow as tf\nfrom tensorflow.keras as layers\n\ndf = pd.read_csv(\"/content/BTC_USD_2013-10-01_2021-05-18-CoinDesk.csv\",\n                 parse_dates=[\"Date\"],\n                 index_col=[\"Date\"]) # Parse the date column\n\ndf.tail()\n</code></pre> <p>Returns:</p> Date Currency Closing Price (USD) 24h Open (USD) 24h High (USD) 24h Low (USD) 2021-05-14 BTC 49764.132082 49596.778891 51448.798576 46294.720180 2021-05-15 BTC 50032.693137 49717.354353 51578.312545 48944.346536 2021-05-16 BTC 47885.625255 49926.035067 50690.802950 47005.102292 2021-05-17 BTC 45604.615754 46805.537852 49670.414174 43868.638969 2021-05-18 BTC 43144.471291 46439.336570 46622.853437 42102.346430 <p>Take the closing price for prediction:</p> <pre><code>bitcoin_prices = pd.DataFrame(df[\"Closing Price (USD)\"]).rename({\"Closing Price (USD)\":\"Price\"},axis=1)\nbitcoin_prices.head()\n</code></pre> Date Price 2013-10-01 123.65499 2013-10-02 125.45500 2013-10-03 108.58483 2013-10-04 118.67466 2013-10-05 121.33866 <p>View the bitcoin price trend with a chart:</p> <pre><code>plt.plot(bitcoin_prices[\"Price\"])\nplt.ylabel(\"Bitcoin price\")\nplt.xlabel(\"Date\")\n</code></pre> Bitcoin price trend","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#22-create-time-windows","title":"2.2 Create Time Windows","text":"<p>The expected data format is <code>[0,1,2,3,4,5,6] -&gt; [7]</code>, that is, use the prices from the past seven days to predict the price for the next day. Here, use the window division provided by TensorFlow, timeseries_dataset_from_array.</p> <pre><code>timesteps = bitcoin_prices.index.to_numpy()\nprices = bitcoin_prices[\"Price\"].to_numpy()\n\nHORIZON  = 1 # Predict the price for the next day\nWINDOW_SIZE = 7 # Use prices from the previous 7 days\n\ninput_data = prices[:-HORIZON]\ntargets = prices[WINDOW_SIZE:]\ndataset = tf.keras.preprocessing.timeseries_dataset_from_array(\n    input_data, targets, sequence_length=WINDOW_SIZE)\nfor batch in dataset:\n  inputs, targets = batch\n  assert np.array_equal(inputs[0], prices[:WINDOW_SIZE])   \n  assert np.array_equal(targets[0], prices[WINDOW_SIZE])  \n\n  print(f\"First Input:{inputs[0]}, Target:{targets[0]}\")\n  print(f\"Second Input:{inputs[1]}, Target:{targets[1]}\")\n\n  break\n</code></pre> <p>Returns as follows, the data has been correctly transformed as expected.</p> <pre><code>First Input:[123.65499 125.455   108.58483 118.67466 121.33866 120.65533 121.795  ], Target:123.033\nSecond Input:[125.455   108.58483 118.67466 121.33866 120.65533 121.795   123.033  ], Target:124.049\n</code></pre>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#23-split-data","title":"2.3 Split Data","text":"<p>Use time to split the training set and validation set. No test set is included as examples only. In actual use, one can operate according to needs.</p> <pre><code># Because tf.keras.preprocessing.timeseries_dataset_from_array returns a batched dataset, unbatch first for easy data splitting\ndataset = dataset.unbatch()\n\ntest_split = 0.2\nsplit_index = int(len(list(dataset)) * (1-test_split))\n\n# After splitting, split the batch again, add one dimension, otherwise it does not meet the data dimension requirements of the model\ntrain_dataset = dataset.take(split_index).batch(batch_size=32)\ntest_dataset = dataset.skip(split_index).batch(batch_size=32)\n</code></pre>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#3-modeling","title":"3 Modeling","text":"<p>Since this article does not pursue the ultimate prediction accuracy, only a fully connected layer is used to build the model, the code is as follows:</p> <pre><code>tf.random.set_seed(42)\ntf.keras.backend.clear_session()\n\n# 1. Build the model\nmodel = tf.keras.models.Sequential(\n[\n layers.Input(WINDOW_SIZE),\n layers.Dense(128, activation=\"relu\"),\n layers.Dense(HORIZON, activation=\"linear\")\n]\n, name=\"model_dense_base\")\n\n# 2. Compile the model\nmodel.compile(loss='mae',\n                optimizer=tf.keras.optimizers.Adam(),\n                metrics=['mae'])\n\n\n# Create callback to save the best performing model checkpoint\ndef create_model_checkpoint(model_name, save_path=\"model_checkpoint\"):\n  return tf.keras.callbacks.ModelCheckpoint(filepath=os.path.join(save_path, model_name),\n                                            verbose=0,\n                                            save_best_only=True)\n\n# 3. Train the model\nmodel.fit( train_dataset,\n            epochs=100,\n            verbose=0,\n            validation_data=test_dataset,\n            callbacks=[create_model_checkpoint(model_name=model.name)]\n            )\n</code></pre> <p>Load the best performing model back for evaluation:</p> <pre><code>model = tf.keras.models.load_model(\"model_checkpoint/model_dense_base\")\nmodel.evaluate(test_dataset)\n</code></pre> <p>The result shows the average absolute error (MAE), indicating that the predicted price is more than 700 US dollars different from the real price on average.</p> <pre><code>18/18 [==============================] - 1s 6ms/step - loss: 759.4327 - mae: 759.4327\n[759.4326782226562, 759.4326782226562]\n</code></pre> <p>Considering that the model structure is very simple, there is room for improvement in the results, and it can be predicted more accurately by optimizing according to this process.</p>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#4-summary","title":"4 Summary","text":"<p>This article did a benchmark for univariate time series prediction tasks, in which the TensorFlow <code>tf.keras.preprocessing.timeseries_dataset_from_array</code> API simplified a lot of work on processing time windows. In the future, we will continue to discuss TensorFlow's prediction of time series tasks.</p>","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-14-TF-Time-Series-Univariate/#5-related-reading-materials","title":"5 Related Reading Materials","text":"<ul> <li>Forecasting: Principles and Practice</li> </ul> &lt;img src=\"https://cdn.jsdelivr.net/gh/BulletTech2021/Pics/2021-","tags":["deep learning","tensorflow","time series"]},{"location":"en/Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/","title":"Introduction to Convolutional Neural Network Explainer","text":"<p>Info</p> <p>Author: Vincent, Published on June 6, 2021, Reading time: about 6 minutes, WeChat Public Account Article link: [: fontawesome-solid-link:] (https://mp.weixin.qq.com/s?__biz=MzI4Mjk3NzgxOQ==&amp;mid=2247485314&amp;idx=1&amp;sn=02d6f35c358ab4a596f3aaabc2704547&amp;chksm=eb90f4f6dce77de0553c383583e4347835b15c44cf1d142fb028ed450f70e0e65e0528e314d4&amp;token=762444875&amp;lang=zh_CN #rd)</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#1-introduction","title":"1 Introduction","text":"<p>In the article [Introduction to TensorFlow Playground] (https://mp.weixin.qq.com/s?__biz=MzI4Mjk3NzgxOQ==&amp;mid= 2247485294 &amp; idx = 1 &amp; sn = deef8a34853332612aa43bff8de23bf0 &amp; chksm = eb90f41adce77d0c78b4c510645f1a04ba7644f7ed53e039b09e91e900f04cfae88a28a2d1e3 &amp; token = 1726922856 &amp; lang = zh_CN #rd), the author introduced a product that uses visualization to understand neural networks (CNNs). This article will share a similar website - <code>CNN Explainer</code>, which focuses on explaining <code>Convolutional Neural Networks</code> in a visual way. The product shows convolutional neural networks and related knowledge points in a very intuitive way. The CNN Explainer website address is: https://poloclub.github.io/cnn-explainer/.</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#2-product-features","title":"2 Product Features","text":"<p>The header of the CNN Explainer website is a convolutional neural network used for image classification. The input is the three channels of the image (red, green, and blue), and the style of the image after each layer of calculation in the network is also displayed. Hover over the mouse to see the input of each convolution kernel.</p> CNN Interpreter <p>Clicking on a convolutional layer displays the convolution operation, and the convolution kernel scans the input image step by step to form the output:</p> Convolution operation <p>Clicking on the exclamation mark will take you to the corresponding documentation and examples. For example, for the convolution operation, you can experience its working principle by adjusting the parameters of the input and convolution kernel. The animation will change according to the input, and it also comes with detailed document instructions and reference links. The developers of the product are really attentive!</p> Interactive understanding of convolution operation <p>The operation diagram and formula of the ReLU activation function commonly used in convolutional layers can also be displayed by clicking on the corresponding layer:</p> ReLU activation function diagram <p>Similarly, the diagram and formula of the MaxPooling layer are also displayed in an imageable way, and the maximum value in the input is taken out as the output:</p> Max Pooling diagram <p>Finally, the output layer uses a different degree of highlight to display the predicted category of the model.</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-20-CNN-Explainer/#3-summary","title":"3 Summary","text":"<p>The CNN Explainer shows the important technical principles such as convolution operation, ReLU function, Softmax function, pooling, and flattening layer in a very vivid way. You can also upload your own images for the model to make predictions, so please try it out for yourself! I hope this share is helpful to you and welcome to leave a message in the comment section for discussion!</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/","title":"Image Classification with TensorFlow","text":"<p>Info</p> <p>Author: Vincent, Published: June 6, 2021, Read Time: about 6 minutes, WeChat Official Account link: </p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#1-introduction","title":"1 Introduction","text":"<p>In this article, we will discuss the task of multi-category image classification using TensorFlow, including image data loading, data enhancement, model training, transfer learning and the use of TensorBoard. All the APIs are based on TensorFlow v2.8.0. The following code is executed in Google Colab since Google provides free GPUs that can significantly accelerate the training process.</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Deep_Learning/2022-05-23-TF-Img-Classification/#2-image-processing","title":"2 Image Processing","text":"<p>Load the original image data containing 10 categories of targets.</p> <pre><code>import zipfile\nimport os\nimport matplotlib.pyplot as plt\nimport datetime\n\n\nimport tensorflow as tf\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.python.ops.gen_array_ops import shape\nfrom tensorflow.keras import layers\n\n\n!wget https://storage.googleapis.com/ztm_tf_course/food_vision/10_food_classes_all_data.zip\n\n# Unzip the downloaded file\nzip_ref = zipfile.ZipFile(\"10_food_classes_all_data.zip\", \"r\")\nzip_ref.extractall()\nzip_ref.close()\n\n# Function to process the image\ndef load_and_process_image(file_name, img_shape=224):\n\"\"\"\n  Read an image and process it, reshape it to (img_shape, img_shape, color_channels)\n  \"\"\"\n  # read the image\n  img = tf.io.read_file(file_name)\n\n  # decode the read file into a tensor\n  img = tf.image.decode_image(img)\n\n  # resize the image\n  img = tf.image.resize(img, size=[img_shape, img_shape])\n\n  # scale the image\n  img = img/255.\n\n  return img\n\n# Display files\ndef list_files(startpath):\n    for root, dirs, files in os.walk(startpath):\n        level = root.replace(startpath, '').count(os.sep)\n        indent = ' ' * 4 * (level)\n        print('{}{}/'.format(indent, os.path.basename(root)))\n        subindent = ' ' * 4 * (level + 1)\n        for f in files:\n            print('{}{}'.format(subindent, f))\n\n# Walk through 10_food_classes directory and list number of files\nfor dirpath, dirnames, filenames in os.walk(\"10_food_classes_all_data\"):\n  print(f\"There are {len(dirnames)} directories and {len(filenames)} images in '{dirpath}'.\")\n</code></pre> <p>It can be seen from the output that the data contains images of ice cream, steak, pizza, etc.</p> <p>```py There are 2 directories and 0 images in '10_food_classes_all_data'. There are 10 directories and 0 images in '10_food_classes_all_data/test'. There are 0 directories and 250 images in '10_food_classes_all_data/test/chicken_wings'. There are 0 directories and 250 images in '10_food_classes_all_data/test/pizza'. There are 0 directories and 250 images in '10_food_classes_all_data/test/grilled_salmon'. There are 0 directories and 250 images in '10_food_classes_all_data/test/sushi'. There are 0 directories and 250 images in '10_food_classes_all_data/test/fried_rice'. There are 0 directories and 250 images in '10_food_classes_all_data/test/ice_cream'. There are 0 directories and 250 images in '10_food_classes_all_data/test/chicken_curry'. There are 0 directories and 250 images in '10_food_classes_all_data/test/hamburger'. There are 0 directories and</p>","tags":["deep learning","tensorflow","cnn"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/","title":"Introduction to Graph Databases","text":"<p>Info</p> <p>Author: Dragond41, Published on December 13, 2021, Read time: about 2 minutes, WeChat public account article link: </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#1-introduction","title":"1 Introduction","text":"<p>Have you heard of \"Graph Databases\" before? Is it a database used to store images or a database that stores data in images? (Mistaken) If you've been duped by these two sentences, then read on for today's article~</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#2-nodes-and-relationships","title":"2 Nodes and Relationships","text":"<p>Unlike traditional relational databases, graph databases consist of nodes and relationships (relationships between nodes). As shown below:</p> Nodes and Relationships","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#21-nodes","title":"2.1 Nodes","text":"<p>A node represents an entity. A node is similar to a record in a relational database. The circular patterns in the above figure are all nodes. The orange nodes represent movie entities, and the blue nodes represent specific people.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#22-relationships","title":"2.2 Relationships","text":"<p>The relationship between two nodes is called a relationship. Three types of \"person-movie\" relationships appeared in the figure above:</p> <ul> <li><code>ACTED_IN</code>-Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, and Hugo Weaving participated in the movie</li> <li><code>DIRECTED</code>-The Wachowski sisters directed it</li> <li><code>PRODUCED</code>-Produced by Joel Silver</li> </ul>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#23-direction-of-relationships","title":"2.3 Direction of Relationships","text":"<p>In Neo4J, relationships must have directions. For a node, a relationship can have two directions. The relationship pointing to it and the relationship pointing to other nodes from it. In the above figure, all relationships are from people to movies.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#24-labels","title":"2.4 Labels","text":"<p>A label is the type of a node or relationship. In the above figure, when defining blue nodes, their label is \"Person\", and when defining orange nodes, their label is \"Movie\". The role of a label is that when you make a query, only specific types of nodes are returned. For example, only Person nodes are queried.</p> Labels","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#25-properties","title":"2.5 Properties","text":"<p>Both nodes and relationships can have properties. Properties are added in the form of name-value pairs. For example, return the name and born properties of all Person in the picture above. Attributes make the information in the graph database richer, and these attributes can also be used when querying, such as querying people born after 1970.</p> Properties","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2021-12-13-Graph_Database_Introduction/#3-why-graph-databases","title":"3 Why Graph Databases","text":"<p>After reading the general introduction to graph databases, you may find this technology very cool. What value can graph databases bring to business that relational databases cannot? The following two aspects can be used as a reference.</p> <ul> <li>Efficiently query the relationship between data, especially when the relationship is complex</li> <li>Conveniently visualize the relationship between data</li> </ul> <p>When you see the following query results, isn't it pleasing to the eye? The relationship between movies and people is clear at a glance. Of course, this is only a small part of the data query results.</p> Visualization of Results - 1 <p>When there is more data, the visualization results are like this...</p> Visualization of Results - 2 <p>Of course, no one can get valuable information from such visualization results. So, how should graph databases be applied in business? Please stay tuned for the upcoming series of graph database tutorials, which will definitely give you a more specific understanding of this new and trendy technology! I hope this sharing has helped you, and please feel free to leave a message in the comments section for discussion!</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/","title":"Neo4J Graph Database Anti-Fraud Analysis Practice (Part 1) - Building Analysis Environment","text":"<p>Info</p> <p>Author: Vincent, Published on 2022-01-29, Reading Time: About 6 minutes, WeChat Official Account Article Link: </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#1-introduction","title":"1 Introduction","text":"<p>In the article An Introduction to Graph Databases, we introduced the basic components of a graph, such as nodes, properties, and relationships, and also briefly described the advantages of graph databases over traditional relational databases. Starting from this article, we will use anti-fraud analysis as an example to practice using graph databases in real-world applications!</p> <p>In a fraud scenario, bad actors typically obtain real customer identity information through channels such as phishing, malware, and the dark web. With this information, they can take over accounts by tampering with verification information or directly using this information for fraudulent transactions. Moreover, bad actors usually have a certain number of devices, identity cards, emails, phone numbers, and other pieces of information to pass service provider verification checks. Therefore, there is a certain degree of connection between the hijacked account and the information of these bad actors. This practical series focuses on using graph databases to mine potential connections behind fraud, and this article will introduce the basic knowledge of the analysis environment and graph database queries.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#2-neo4j-graph-database","title":"2 Neo4J Graph Database","text":"<p>Neo4J is a graph database solution provider, and its official website provides a series of tutorials and research environments for readers to learn. This practical exercise uses the sample data and computing resources provided by its Sandbox, which provides free instances for researchers to experiment with.</p> Neo4J Sandbox <p>To get started, click \"Free Use\" to create a database, and find <code>Fraud Detection</code> to start exploring (remember the password)!</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#3-cypher-query-language","title":"3 Cypher Query Language","text":"<p>Just as SQL (Structured Query Language) is used to query relational databases, Neo4J Graph Database also has its own query language - Cypher. In Cypher, parentheses () are used to query nodes, such as <code>(p:Person)</code>, where <code>p</code> is a variable and <code>Person</code> is the type of the node.</p> <p>Square brackets should be used to query relationships, such as <code>[w:WORKS_FOR]</code>, where <code>w</code> is a variable and <code>WORKS_FOR</code> is the type of relationship. The combination of the two can query the graph that meets the conditions, such as querying the actors who appear in a movie:</p> <pre><code>MATCH (p:Person)-[relatedTo]-(m:Movie {title: \"Cloud Atlas\"})\nRETURN p, m, relatedTo\n</code></pre> <p>Here, <code>MATCH</code> defines the matching rules, and <code>RETURN</code> defines what to return. Properties are defined using curly braces {}, such as querying people who have acted in movies with Tom Hanks:</p> <pre><code>MATCH (tom:Person {name: 'Tom Hanks'})-[a:ACTED_IN]-&gt;(m:Movie)&lt;-[rel:ACTED_IN]-(p:Person)\nreturn p, a, rel, m, tom\n</code></pre> <p>Cypher does not require table joins, so its query statements are as smooth as natural language. Neo4J provides a complete Cypher operation manual, which is also a good reference.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-01-29-Neo4J-Fraud-s1/#4-using-graph-databases","title":"4 Using Graph Databases","text":"Neo4J Operation Interface <p>After understanding the basics above, you can officially enter the graph database. Click on the <code>Fraud Detection</code> graph database and open it in the browser to see the operation interface. The sidebar displays information about the database, and the main interface on the right is the area where queries are constructed. The anti-fraud practical exercise can now officially begin!</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/","title":"Neo4J Graph Database Anti-Fraud Analysis in Practice (Part 2) - Prepare Data","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-06-06, Read time: about 6 minutes, WeChat public account article link: </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#1-introduction","title":"1 Introduction","text":"<p>In the previous article Neo4J Graph Database Anti-Fraud Analysis in Practice (Part 1) - Setup Analysis Environment, we introduced the Neo4J analysis platform and some basic operations of graph databases. In this article, we will officially start the exploration of the anti-fraud theme. The primary task is to clarify the goal, obtain and sort the data. The example provided by Neo4J focuses on fraudsters using the same entity information to control a large number of accounts to conduct fraudulent transactions. Therefore, the goal is to find the connections between these accounts and expose the criminal gangs. However, the example did not introduce the source and preparation of the data, which is actually vital in real work. Therefore, this article will focus on the data preparation part.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#2-obtain-data","title":"2 Obtain Data","text":"<p>Neo4J provides various methods to connect to the data repository:</p> <ul> <li>Manually define the data</li> <li>Import CSV file</li> <li>Use API to import data</li> <li>Import data from a relational database</li> <li>Use an application-driven connection to import data (supporting multiple programming languages such as .Net, Java, JavaScript, Go, and Python, etc.)</li> </ul> <p>Personally, I prefer to use Python driver to import data because usually, we can first obtain the raw data in the relational database through Python, process it, and then use the Neo4J interface to connect multiple platforms to complete the data transfer work. In the face of large-scale data sets, using PySpark can further improve computing performance. Neo4J also provides PySpark interface, with very fast read and write speed. Here is an example PySpark code. Note that you need to download the corresponding Neo4j Connector for Apache Spark Jar file before using it.</p> Neo4J Connection Information <pre><code># Read data from Neo4J\n# Replace the account name and password with your own settings\ndf = spark.read.format(\"org.neo4j.spark.DataSource\")\\\n     .option(\"url\", \"bolt+s://63d2d43273493b399454b26961152ed9.neo4jsandbox.com:7687\")\\\n     .option(\"authentication.type\", \"basic\")\\\n     .option(\"authentication.basic.username\", \"neo4j\")\\\n     .option(\"authentication.basic.password\", \"password\")\\\n     .option(\"labels\", \"Person\")\\\n     .load()\n\ndisplay(df)\n\n# Write data to Neo4J\ndf2 = spark.createDataFrame( [(1, \"John\"),(2, \"Thomas\")],\n [\"id\", \"name\"]\n)\n\ndf2.write.format(\"org.neo4j.spark.DataSource\")\\\n     .option(\"url\", \"bolt+s://63d2d43273493b399454b26961152ed9.neo4jsandbox.com:7687\")\\\n     .option(\"authentication.type\", \"basic\")\\\n     .option(\"authentication.basic.username\", \"neo4j\")\\\n     .option(\"authentication.basic.password\", \"password\")\\\n     .option(\"labels\", \":Person\")\\\n     .option(\"node.keys\", \"id\")\\\n     .mode(\"Overwrite\")\\\n     .save()\n</code></pre> <p>Remember to define an index before loading the data. This operation will significantly improve the program running speed.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#3-define-nodes-and-relationships","title":"3 Define Nodes and Relationships","text":"Nodes and Relationships <p>As shown in the figure, the colored circles represent nodes, and the lines between nodes are their relationships. Intuitively, the raw data is a table, which contains some fields related to the target, and each field corresponds to an entity (node).</p> Mule Phone Email John 888888888 demo@gmail.com Tim 777777777 demo2@gmail.com <p>Nodes can be written into Neo4J using the above code, and the relationships between entities that are useful for the goal can be defined using Cypher. For example, the fact that John has his own email can be defined as follows:</p> <pre><code>MATCH\n(a:Mule),\n(b:Email)\nWHERE a.Email = b.Email\nCREATE (a)-[r:HAS_EMAIL]-&gt;(b)\nRETURN type(r)\n</code></pre> <p>By analogy, relationships useful for the target can be defined in such a way.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#4-data-overview","title":"4 Data Overview","text":"<p>The first part of the anti-fraud example described the descriptive analysis of the data, such as the number of nodes and relationships, etc. This is helpful for understanding the data, checking data completeness, and ensuring that the data you need is stored in Neo4J according to the set goal. This module's content is relatively intuitive and will not be elaborated further.</p> Descriptive Analysis","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-02-26-Neo4J-Fraud-s2/#5-conclusion","title":"5 Conclusion","text":"<p>This article solved many of the initial doubts of graph database beginners, how to import data (usually tables) into Neo4J, and define nodes and relationships that serve the goal. Undoubtedly, this is the foundation of subsequent analysis work, and we can officially analyze the data for anti-fraud. I hope that this sharing will be helpful to you, and welcome to leave a message for discussion in the comments!</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/","title":"Neo4J Graph Database Anti-Fraud Analysis Practice (III) - Identifying Criminal Groups","text":"<p>Info</p> <p>Author: Vincent, published on June 6, 2021, reading time: about 6 minutes, WeChat official account article link: </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#1-introduction","title":"1 Introduction","text":"<p>In the Neo4J Graph Database Anti-Fraud Analysis Practice (II) - Preparing Data section, I introduced how to import data into the Neo4J analysis platform and performed some simple descriptive analysis of customer and transaction information. Next, we need to look for fraudsters selectively, and their identity information (such as phone numbers, ID numbers, etc.) is intertwined with many other accounts, and therefore clues can be found through these shared information.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#2-shared-identity-information","title":"2 Shared Identity Information","text":"<p>In the previous section, the relationship between clients and entities has been defined, such as a client having an email, phone number, SSN, etc. If multiple clients use the same information, these contacts can ensure that they are connected together, which greatly helps us deconstruct complex relationships. However, in order to run specific graph algorithms, these relationships need to be processed, because different graph structures are suitable for different graph algorithms, some algorithms are suitable for <code>homogeneous</code> graphs, that is, all node types in the graph are the same, only one type of relationship. Some algorithms are suitable for <code>heterogeneous</code> graphs, which contain multiple types of nodes and relationships.</p> <p>The example provided by Neo4J uses the Weakly Connected Components algorithm to find connected nodes in an undirected graph, which is suitable for a homogeneous graph, so a new relationship - <code>SHARED_IDENTIFIERS</code> needs to be created to calculate the number of shared entity information among each client, such as if the email, phone number, and SSN of clients A and B are the same, then the attribute count of SHARED_IDENTIFIERS is 3.</p> <pre><code>// Create the SHARED_IDENTIFIERS relationship\nMATCH (c1:Client)-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-&gt;(info)\n&lt;-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-(c2:Client)\nWHERE c1.id&lt;&gt;c2.id\nWITH c1, c2, count(*) as cnt\nMERGE (c1) - [:SHARED_IDENTIFIERS {count: cnt}] - (c2);\n</code></pre> <p>The <code>WITH</code> keyword can chain the query statements together, making it easy for variables in the previous step to be reused in the next step. The <code>MERGE</code> keyword is very versatile. In summary, it can make a pattern exist in the graph. If the pattern does not exist, it creates the pattern. It is used here to create a relationship. Please note that the example has a small amount of data and only has 300,000 nodes. If the number of nodes is large, it is recommended to use the APOC method provided by Neo4J to run in batches.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#3-create-the-graph","title":"3 Create the Graph","text":"<p>Before running any algorithms, you must first create the graph. You can use the <code>SHARED_IDENTIFIERS</code> relationship created earlier to build the graph and map it to memory. Therefore, Neo4J recommends estimating memory before building the graph or running the algorithm to ensure that the computing resources can meet the requirements:</p> <pre><code>CALL gds.graph.create.cypher.estimate(\n'MATCH (c:Client) RETURN id(c) AS id',\n'MATCH (c1:Client)-[r:SHARED_IDENTIFIERS]-(c2:Client)\nWHERE c1.id&lt;&gt;c2.id\nRETURN id(c1) AS source,id(c2) AS target,r.count AS weight')\nYIELD requiredMemory,nodeCount,relationshipCount;\n</code></pre> <p>The output is:</p> requiredMemory nodeCount relationshipCount \"8804 KiB\" 2433 1517 <p>After ensuring that sufficient memory is available, you can formally create the graph:</p> <pre><code>CALL gds.graph.create('WCC', 'Client',\n{\nSHARED_IDENTIFIERS:{\ntype: 'SHARED_IDENTIFIERS',\nproperties: {\ncount: {\nproperty: 'count'\n}\n}\n}\n}\n) YIELD graphName,nodeCount,relationshipCount,createMillis;\n</code></pre> <p>If it runs normally, you can use the <code>CALL gds.graph.list();</code> command to view the graph created.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#4-execute-the-wcc-algorithm-for-clustering","title":"4 Execute the WCC Algorithm for Clustering","text":"<p>Similarly, before running the algorithm, it is recommended to estimate memory resources. But I won't repeat it here. Run WCC using the following command. The <code>SET</code> instruction can assign a value to a new property, which is to label the cluster to which the client belongs. You can see that the code has excluded the situation where there is only one client in the cluster, because those people have no relationship with others.</p> <pre><code>CALL gds.wcc.stream('WCC')\nYIELD componentId,nodeId\nWITH componentId AS cluster,gds.util.asNode(nodeId) AS client\nWITH cluster, collect(client.id) AS clients --collect merges a sequence\nWITH *,size(clients) AS clusterSize\nWHERE clusterSize&gt;1\nUNWIND clients AS client --UNWIND expands a sequence\nMATCH(c:Client)\nWHERE c.id=client\nSET c.firstPartyFraudGroup=cluster;\n</code></pre> <p>The WCC algorithm helps to identify the population that needs attention, and subsequent algorithms can continue to be calculated based on the clustering results.</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-03-06-Neo4J-Fraud-s3/#5-conclusion","title":"5 Conclusion","text":"<p>This section completes the reintegration of the population relationship and identifies groups with similar characteristics, which is convenient for subsequent analysis. At the same time, the commonly used technical points are introduced, such as WITH, MERGE, SET, APOC, memory estimation, creating a graph, running graph algorithms, etc. In the next section, we will explain how to score dangerous populations and effectively identify fraudsters. </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/","title":"Neo4J Graph Database Anti-Fraud Analysis Practice (Part 4) - Risk Scoring","text":"<p>Info</p> <p>Author: Vincent, published on 2021-06-06, Reading Time: about 6 minutes, WeChat Official Account Article Link: </p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#1-preface","title":"1 Preface","text":"<p>In the Neo4J graph database anti-fraud series, we have identified risky users. This article will explain how to score the risk of each customer. If you need to review the previous articles, you can directly jump to the links:</p> <ul> <li>Introduction to Graph Database</li> <li>Neo4j Graph Database Anti-Fraud Analysis Practice (Part 1) - Build Analysis Environment</li> <li>Neo4j Graph Database Anti-Fraud Analysis Practice (Part 2) - Data Preparation</li> <li>Neo4j Graph Database Anti-Fraud Analysis Practice (Part 3) - Identify Criminal Organizations</li> </ul>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#2-finding-similar-nodes","title":"2 Finding Similar Nodes","text":"<p>Last time, we used the Weakly Connected Components algorithm to cluster the data. Next, we can look for similar customers in each cluster.</p> WCC clustering results <p>This step uses node similarity (Jaccard coefficient) to judge. The node similarity algorithm requires two types of nodes in the graph structure, so we create the <code>Similarity</code> graph, which contains two types of nodes: <code>Client</code> and <code>Entity</code> information nodes, and their corresponding relationships.</p> <pre><code>CALL gds.graph.project.cypher('Similarity',\n'MATCH(c:Client)\n    WHERE exists(c.firstPartyFraudGroup)\n    RETURN id(c) AS id,labels(c) AS labels\nUNION\nMATCH(n)\n    WHERE n:Email OR n:Phone OR n:SSN\n    RETURN id(n) AS id,labels(n) AS labels',\n'MATCH(c:Client)\n-[:HAS_EMAIL|:HAS_PHONE|:HAS_SSN]-&gt;(ids)\nWHERE exists(c.firstPartyFraudGroup)\nRETURN id(c) AS source,id(ids) AS target')\nYIELD graphName,nodeCount,relationshipCount;\n</code></pre> <p>After creating the graph, we can run the node similarity algorithm (note: the algorithm supports weighting, see the documentation for details\uff09\uff1a</p> <pre><code>CALL gds.nodeSimilarity.stream('Similarity',{topK:15})\nYIELD node1,node2,similarity\nRETURN gds.util.asNode(node1).id AS client1,\ngds.util.asNode(node2).id AS client2,similarity\nORDER BY similarity;\n</code></pre> <p>Use the <code>Mutate</code> mode to write the results to the graph in memory, creating a new relationship <code>SIMILAR_TO</code>. At this point, the similarity between the pairs of similar nodes can be measured using the jaccardScore:</p> <pre><code>CALL gds.nodeSimilarity.mutate('Similarity',{topK:15,\nmutateProperty:'jaccardScore', mutateRelationshipType:'SIMILAR_TO'});\n\n-- Write the results from the in-memory graph to the database\nCALL gds.graph.writeRelationship('Similarity','SIMILAR_TO','jaccardScore');\n</code></pre>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#3-creating-risk-scores","title":"3 Creating Risk Scores","text":"<p>Next, we use the Node Centrality algorithm combined with the similarity indicator generated above to generate a <code>firstPartyFraudScore</code>. The higher the <code>firstPartyFraudScore</code>, the more similar the entity information of the client with many customers in a cluster, indicating that it is more dangerous. </p> <pre><code>CALL gds.degree.write('Similarity',{nodeLabels:['Client'],\nrelationshipTypes:['SIMILAR_TO'],\nrelationshipWeightProperty:'jaccardScore',\nwriteProperty:'firstPartyFraudScore'});\n</code></pre> Risk score distribution <p>Finally, we select the 80th percentile as the threshold to mark dangerous clients. In actual applications, you can also use <code>firstPartyFraudScore</code> as a separate feature and integrate it into an anti-fraud strategy or model.</p> <pre><code>MATCH(c:Client)\nWHERE exists(c.firstPartyFraudScore)\nWITH percentileCont(c.firstPartyFraudScore, 0.8)\nAS firstPartyFraudThreshold\nMATCH(c:Client)\nWHERE c.firstPartyFraudScore&gt;firstPartyFraudThreshold\nSET c:FirstPartyFraudster;\n</code></pre>","tags":["knowledge graph"]},{"location":"en/Main_Course/Graph_Database/2022-04-09-Neo4J-Fraud-s4/#4-summary","title":"4 Summary","text":"<p>The Neo4J Graph Database Anti-Fraud Analysis Practical Series has come to an end. Through this series of articles, we have learned and consolidated the following knowledge points:</p> <ul> <li>Basics of graph structure</li> <li>Neo4J graph database query language Cypher common commands</li> <li>Common algorithms in anti-fraud applications</li> </ul> <p>Hope that this practical series of sharing will be helpful to you. Feel free to leave a message in the comment area for discussion!</p>","tags":["knowledge graph"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/","title":"Time Series Anomaly Detection","text":"<p>Info</p> <p>Author: Void, Published on 2021-07-20, Reading time: about 10 minutes, WeChat official account article link: </p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#1-introduction","title":"1 Introduction","text":"<p>The reason for this is that a friend told me about the KDD Cup 2021 competition recently. To join in the excitement and gain some experience, we decided to participate (as cannon fodder) together. There are three questions: time series anomaly detection, graph-related questions, and smart cities. The most common time series anomaly detection was therefore our choice.</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#2-requirements","title":"2 Requirements","text":"<p>The competition requires us to detect outlier points in time series data. Each time series has only one outlier point. The problem provides the interval where the outlier point is located and asks us to identify the position of the outlier point.</p> Example <p>During evaluation, we are required to examine whether the range of 100 points before and after the position we provide contains the true outlier point. The length of the sequence ranges from a few thousand to several hundreds of thousands of observation points. The source of the data may be electrocardiograms, sensor data, and other data with obvious periodicity. The goal is to find effective algorithms to monitor such data on a large scale automatically.</p> <p>The competition is divided into two phases. Phase I has 25 time series for algorithm debugging. Phase II has 250 sequences for evaluating competition results.</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#3-data-analysis","title":"3 Data Analysis","text":"<p>Let\u2019s look at a time series.</p> timeseries <p>It can be seen that this sequence has a strong periodicity. At the same time, the problem tells us that the anomaly point is located after the 2500th point. Through artificial intelligence (human eye) recognition, we can find that the data around the 5500th point seems to be a bit strange. So, how can we identify it through an algorithm?</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#4-initial-attempts","title":"4 Initial Attempts","text":"<p>Most people may know that extreme values can be identified by mean+-several times standard deviation. However, this method has several drawbacks: - Can identify a bunch of extreme values, unable to determine which one is the outlier - Extreme values may not be outliers, please see:</p> outliers <p>Through human eyes, we can see that the outlier is located near the 6000th observation value. However, there are no extreme values in that area. Therefore, for time series with strong periodicity like this, extreme values may also be part of the periodicity. What we need to identify is a small interval that is different from other periods.</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#5-matrixprofile-algorithm","title":"5 Matrixprofile Algorithm","text":"<p>So, how can we identify the interval of outlier on a periodical level? We may think about determining an interval first, and then see if this interval is different from other intervals of the same length. The problem kindly provided us with such a package: matrixprofile.</p> <p>The matrixprofile algorithm was proposed by researchers at the University of California, Riverside in 2016. The idea is quite clear and simple: given a window size, the distance between this subsequence and other sub-sequences of the same length is calculated, and the distance to the most similar sequence (the one with the minimum distance) is labeled as the mp value of this sub-sequence. By sliding the window, we can calculate the mp value of the entire sequence. Among them, larger mp values can be considered as a greater possibility that this sub-sequence is an outlier because the distance between this subsequence and the most similar sequence is relatively large.</p> Demo <p>The matrixprofile package has optimized the calculation efficiency, such as standardizing the subsequence in distance calculation, requiring only the calculation of dot products, and avoiding the calculation of Euclidean distance.</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#6-trying-it-out","title":"6 Trying it Out","text":"<p>The use of matrixprofile is straightforward:</p> <pre><code>import matrixprofile as mp\nprofile= mp.compute(data,windows=window_size,n_jobs=8)\ndiscords=mp.discover.discords(profile,k=1)\nstart_index=discords['discords'][0]\n</code></pre> <p>We use the time series we looked at the beginning as an example. Through identification by human eye, we found that the outlier is located near the 5500th observation value. Let's see how to use matrixprofile:</p> <p>First, we need to determine the window (subsequence) length. We use the Fourier transform to obtain the period (the point with the largest amplitude in the frequency domain). After calculation, matrixprofile tells us that the starting point of the sub-sequence with the maximum mp value is 5500, and the entire sequence of mp values is shown in the figure below:</p> mp series <p>It can be seen that this sub-sequence is clearly different from other sub-sequences in distance. We have successfully found an abnormal sequence that is completely consistent with human eye recognition, and we can simply assume that the outlier point is the midpoint of this sub-sequence. What needs to be done next is to traverse all time series, find the outlier value, and submit it. Through matrixprofile, a simple and straightforward algorithm, we successfully reached the 88th percentile of the leaderboard (the first one is 100%).</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-16-Timeseries-algo/#7-conclusion","title":"7 Conclusion","text":"<p>For time series with strong periodicity like this, the goal of anomaly detection is to find the sub-sequence with significantly greater differences. It can be seen that matrixprofile has achieved good results. Of course, there are more complex and fancy algorithms, such as frequency spectrum-related algorithms, waiting to be explored further.</p>","tags":["time series","machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/","title":"Reflections on \"Rules of Machine Learning\" (Part 1)","text":"<p>Info</p> <p>Author: Void, published on 2021-07-26, reading time: about 10 minutes, link to article on WeChat Official Account: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#1-introduction","title":"1 Introduction","text":"<p>The title of \"Rules of Machine Learning\" caught me off guard the first time I heard it. Who dares to name their article that, and claim to have all the answers? Upon seeing the author and source, okay, it's written by a respected Google expert. So let's see what this ambitious article can teach us. As the article is quite long (divided into 3 parts, with 43 rules), this is part 1 of the series (including the first phase). This article is based on my limited experience and knowledge, with some added personal insights based on my translation. Comments and discussions are welcome.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#2-overview","title":"2 Overview","text":"<p>The article begins with an overview:</p> <pre><code>To make great products:\ndo machine learning like the great engineer you are, not like the great machine learning expert you aren\u2019t.\n</code></pre> <p>In practical work, the top priority is the engineering implementation: defining the problem clearly, and having a solid pipeline for solving it. Only after that do fancy algorithms come into play to improve performance.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#3-before-using-machine-learning","title":"3 Before using machine learning","text":"<pre><code>Rule #1: Don\u2019t be afraid to launch a product without machine learning.\n</code></pre> <p>Simple models and direct rules are always your baseline. They may not be perfect, but they are effective when you have nothing else.</p> <pre><code>Rule #2: First, design and implement metrics\n</code></pre> <p>Design good evaluation metrics, and keep records.</p> <pre><code>Rule #3: Choose machine learning over a complex heuristic\n</code></pre> <p>When your rules become too complex, use machine learning. The magic of machine learning lies in its ability to learn complex relationships, and updates to the model are relatively simple.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#4-your-first-pipeline","title":"4 Your first pipeline","text":"<pre><code>Rule #4: Keep the first model simple and get the infrastructure right.\n</code></pre> <p>Have a solid baseline, because everything that follows will be built on it.</p> <pre><code>Rule #5: Test the infrastructure independently from the machine learning\n</code></pre> <p>Even though the infrastructure is probably already provided, you can still examine it with a critical eye to deepen your understanding of it, and even possibly discover ancestral bugs.</p> <pre><code>Rule #6: Be careful about dropped data when copying pipelines.\n</code></pre> <p>Different scenarios may have different requirements for data (e.g. some need historical data, while others only need the latest data). In addition, pay close attention to the data and check for small details you may have missed (such as multiple records with the same key when joining), as they may affect the final results and differ from what you expected.</p> <pre><code>Rule #7: Turn heuristics into features, or handle them externally.\n</code></pre> <p>Effective rules that already exist can become features for the model, or can be used directly (as in black and white lists).</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#5-monitoring","title":"5 Monitoring","text":"<pre><code>Rule #8: Know the freshness requirements of your system.\n</code></pre> <p>Monitor the performance of the model according to its importance.</p> <pre><code>Rule #9: Detect problems before exporting models.\n</code></pre> <p>Try to discover all problems before the model goes live.</p> <pre><code>Rule #10: Watch for silent failures.\n</code></pre> <p>Monitor the model's dependencies, such as the data and features behind it, for missing or abnormal conditions beyond its evaluation metrics. This is actually quite tricky, as there will always be problematic data, and you may wonder how it will affect the model.</p> <pre><code>Rule #11: Give feature column owners and documentation.\n</code></pre> <p>Create good documentation; this is a common problem, even for big companies.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#6-your-first-objective","title":"6 Your first objective","text":"<pre><code>Rule #12: Don\u2019t overthink which objective you choose to directly optimize.\n</code></pre> <p>Don't get bogged down in optimizing specific objectives. In my understanding, optimizing objectives can be more or less important. For instance, catching bad actors can be more beneficial than falsely accusing innocent people in some scenarios. Therefore, the model should focus on the catch rate. It is difficult for a new model to outperform existing solutions in various dimensions.</p> <pre><code>Rule #13: Choose a simple, observable and attributable metric for your first objective.\n</code></pre> <p>Choose a simple, observable, and attributable evaluation metric for your model. Leave complex and indirect metrics to policy analysts.</p> <pre><code>Rule #14: Starting with an interpretable model makes debugging easier.\n</code></pre> <p>Start with an interpretable model for easy debugging. Don't immediately use fancy algorithms, as they will only increase the difficulty of problem discovery.</p> <pre><code>Rule #15: Separate Spam Filtering and Quality Ranking in a Policy Layer.\n</code></pre> <p>Different tasks have different backgrounds, so don't rely on a model that performs well in Task A to perform well in Task B.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-22-notes-of-rules-of-ML/#7-conclusion","title":"7 Conclusion","text":"<p>These 15 rules mainly focus on specific steps before modeling, and provide a good general direction for building models. These rules are surely the result of many past pitfall experiences, and are valuable lessons to keep in mind. The next part will cover more specific modeling content, discussing rules related to feature engineering and optimizing models, so stay tuned.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/","title":"Reflections on \"Rules of Machine Learning\" (Part 2)","text":"<p>Info</p> <p>Author: Void, published on 2021-07-22, time to read: about 10 minutes, link to WeChat public account article: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#1-introduction","title":"1 Introduction","text":"<p>This is the second part of the reflection on \"Rules of Machine Learning\" by Martin Zinkevich, which mainly covers specific modeling aspects, including feature engineering, analysis, and optimization.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#2-feature-engineering","title":"2 Feature Engineering","text":"<p>After the initial system is set up in stage one, the second stage is to add as many effective features as possible. At this point, improving the model performance is relatively easy.</p> <pre><code>Rule #16: Plan to launch and iterate.\n</code></pre> <p>Prepare well for continuous iteration.</p> <pre><code>Rule #17: Start with directly observed and reported features as opposed to learned features.\n</code></pre> <p>Start with simple and intuitive features. The so-called learned features can be scores from other models. Adding such features will increase dependency. If one day some model retires, this feature will not be available anymore. However, this does not mean that such features cannot be used at all.</p> <pre><code>Rule #18: Explore with features of content that generalize across contexts.\n</code></pre> <p>Use cross-scenario features. For example, customer data on Product A can be beneficial for modeling Product B. At the same time, this can also solve the cold start problem.</p> <pre><code>Rule #19: Use very specific features when you can.\n</code></pre> <p>If the data volume is large enough, use as many simple features as possible instead of a few complex features. Do not be afraid of using sparse ID features.</p> <pre><code>Rule #20: Combine and modify existing features to create new features in human-understandable ways.\n</code></pre> <p>Feature engineering should have a certain meaning. Discretizing continuous features or the interaction of categorical features should have some business meaning instead of being mixed up randomly. Feature combination can be tried with Shap. Shap can give the impact of feature interaction on label to guide feature combination.</p> <pre><code>Rule #21: The number of feature weights you can learn in a linear model is roughly proportional to the amount of data you have.\n</code></pre> <p>The number of features should be matched with the sample quantity (supported by statistical theory).</p> <ul> <li>Thousands of data correspond to dozens of features</li> <li>Tens of millions of data correspond to hundreds of thousands of features</li> </ul> <p>It seems that it is off by two orders of magnitude.</p> <pre><code>Rule #22: Clean up features you are no longer using.\n</code></pre> <p>Remove unused features. If unnecessary, do not add entities. This also conforms to the principle of Occam's Razor. Removing such features can not only make the model more clean but also improve the model performance. In addition, features with too low coverage may not be unusable. If a feature has a coverage rate of only 1%, but all of them are positive samples, it can still be a very effective feature.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#3-human-analysis-of-machine-learning-systems","title":"3 Human Analysis of Machine Learning Systems","text":"<pre><code>Rule #23: You are not a typical end user.\n</code></pre> <p>As a model developer, you are not a truly objective end user. Let real end users or other colleagues check the model performance.</p> <pre><code>Rule #24: Measure the delta between models.\n</code></pre> <p>Compare the performance of new and old models. Generally speaking, we expect the performance of the new model to be better than that of the old model. Checking performance differences can give you insights into what has changed in the model.</p> <pre><code>Rule #25: When choosing models, utilitarian performance trumps predictive power.\n</code></pre> <p>When choosing models, the performance of utility metrics is more important than predictive power. For example, when we use the model score cutoff to reject bad transactions, the accuracy of sorting is more important than the predicted value itself. Often these two are consistent. But we can also adjust the model based on our specific needs, such as giving higher weights to samples with higher scores (higher ranking).</p> <pre><code>Rule #26: Look for patterns in the measured errors, and create new features.\n</code></pre> <p>Construct new features through case studies. Multi-similar features can be constructed, and then the model can select effective features.</p> <pre><code>Rule #27: Try to quantify observed undesirable behavior.\n</code></pre> <p>Quantify observed negative phenomena. For example, if you think that the sorting accuracy of the model is not enough, how to define the sorting accuracy? Only by providing clear quantitative indicators can further optimization be made.</p> <pre><code>Rule #28: Be aware that identical short-term behavior does not imply identical long-term behavior.\n</code></pre> <p>The effect of model test does not mean long-term generalization ability. It is a headache whether the model has really learned patterns or just overfitting the samples.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-07-24-notes-of-rules-of-ML2.0/#4-differences-between-training-and-online-launch","title":"4 Differences Between Training and Online Launch","text":"<p>There are often differences between training and online launch, and the best or rare way is to monitor.</p> <pre><code>Rule #29: The best way to make sure that you train like you serve is to save the set of features used at serving time, and then pipe those features to a log to use them at training time.\n</code></pre> <p>The best method is to log real online data as training data. This can greatly reduce the differences between the two.</p> <p>``` Rule</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/","title":"Summary of Tianchi Zero-based Financial Risk Control Competition","text":"<p>Info</p> <p>Author: Jeremy, posted on 2021-08-08, reading time: about 12 minutes, WeChat public account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#1-background","title":"1 Background","text":"<p>Last September, I participated in the Zero-based Introduction to Financial Risk Control-Loan Default Prediction Competition hosted by Tianchi. The competition was set against the background of personal credit in financial risk control. Participants were required to predict the possibility of default based on the information of loan applicants to determine whether to pass the loan. This is a typical classification problem.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-08-Loan-Default-Competition-Review/#2-data","title":"2 Data","text":"<p>The competition data comes from loan records of a certain credit platform, with a total volume of 1.2 million. The training set, Test set A, and Test set B each have 800,000, 200,000, and 200,000 data. The original data contains 47 columns of variable information, mainly including: loan information (amount, interest rate, loan grade, etc.), borrower information (employment information, income information, debt ratio, FICO (a credit score), loan record, etc.), and anonymous feature information of borrower behavior counts. You can visit the competition official website\"competition official website\" to query the complete field table, or click Read the original article to view the article on our blog.</p> Field Description id Unique credit certificate identification assigned to the loan list loanAmnt Loan amount term Loan term (year) interestRate Loan interest rate installment Installment payment amount grade The level of the loan subGrade The subordinate level of the loan level employmentTitle Employment title employmentLength Employment length (years) homeOwnership The housing ownership status provided by the borrower at","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/","title":"Kaggle Tips","text":"<p>Info</p> <p>Author: Void, Published on 2021-07-20, Reading time: about 10 minutes, WeChat official account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#1-introduction","title":"1 Introduction","text":"<p>As the most famous data science competition platform (no doubt about it), Kaggle provides various high-quality competitions and has formed a friendly and open-source community atmosphere. Many experts generously share their knowledge and experience. This article summarizes some useful tips seen in the Kaggle treasure trove.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#2-tips","title":"2 Tips","text":"<p>Chris Deotte is an active expert in the Kaggle community and a Grandmaster in Competitions, Datasets, Notebooks, and Discussion. He is ranked #1 in the world in the Discussion section (ranked by the number of medals earned in discussion threads). From his discussion threads, we can always gain many experience and knowledge.</p> <p>He has an article about feature engineering:</p> <ul> <li>Label encoding should be done with the training set and the test set together. This is mainly to prevent new categories from appearing in the test set. It should be noted that if label processing is involved, such as WOE, the training set should be processed first, and the validation set should use the dictionary to find the corresponding values to prevent data leakage.</li> <li>Handling missing values. For tree models, samples with missing values are divided into left and right subtrees based on gain. One way to handle missing values is to fill them with -999, which allows these samples to participate in node splitting. Whether this approach can improve model performance needs to be confirmed by validation results.</li> <li>Since Kaggle competition questions often encounter the problem of data size being too large, we need to reduce the memory occupancy of data. There is a classic memory_reduce function on Kaggle that can reduce data size well.</li> <li>For categorical variables in tree models, they can be treated as categories or numbers after label encoding. Which method is better still needs to be confirmed by validation results.</li> <li>Splitting one feature into multiple features. For example, splitting the amount into integer and decimal parts. Not sure if it's useful.</li> <li>Feature combination. Combining categorical variables or performing addition, subtraction, multiplication, and division on numerical variables.</li> <li>Frequency Encoding (and various encodings).</li> <li>Some statistical measures after Group by.</li> <li>Normalization. Generally, normalization is not a big problem (it is necessary for neural networks, and trends in data can also be removed).</li> <li>Eliminating the influence of extreme values.</li> </ul> <p>In the IEEE-CIS Fraud Detection competition, Chris also won first place. His experience sharing about this competition includes:</p> <ul> <li>The key to the competition is to identify the client's UID. However, ID variables such as UID cannot be directly used as features because many new UIDs appear in the test set.</li> <li>CatBoost models perform well in tree models.</li> <li>Temporal consistency of variables: Chris used the data in the first month to train a model for each variable and then looked at the performance of the model in the last month. If the performance is poor, it means that this variable may only work in the past, and these variables should be discarded.</li> <li>Numerical variables with low variance are often useless. Sklearn.feature_selection has VarianceThreshold to perform feature selection.</li> </ul> <p>Chris also participated in some image and NLP-related competitions, which are not summarized here as they are not closely related to his main business.</p> <p>CPMP is also a Grandmaster in Discussion and has an article on tips to avoid overfitting.</p> <ul> <li>The more the validation set is used, the easier it is to overfit to the validation set, such as the public LB (leaderboard) and fixed k-fold CV in competitions. A good method is to use random k-fold CV.</li> <li>He recommends a paper on model validation and model selection.</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-10-Kaggle-tips/#3-conclusion","title":"3 Conclusion","text":"<p>Although some of these knowledge and experiences are targeted at competition tricks, they still have certain guiding significance for daily modeling and are worth our thinking and trying. </p> <p>Thanks to the spirit of these experts who are willing to share, it is truly fortunate to be able to absorb knowledge and nutrition from the Kaggle community. </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-28-Decision-Tree/","title":"Notes on Decision Tree Learning","text":"<p>Info</p> <p>Author: Vincent\uff0cPublished on August 28th, 2021, Reading time: about 6 minutes. WeChat official account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#1-introduction","title":"1 Introduction","text":"<p>Decision tree is a very classic machine learning model that can be used to solve many classification and regression problems in daily work. Many more advanced machine learning models are also based on decision trees. To solidify the foundation and use decision trees correctly, today we will review some of the most important technical details of decision trees.</p> Decision tree example for iris plant classification","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#2-important-algorithm-details","title":"2 Important algorithm details","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#21-how-to-make-predictions","title":"2.1 How to make predictions","text":"<p>In the example, the decision tree with a depth of 2 shows the process and conclusion of making decisions. For 150 sample points, the decision tree divides the data into two parts at the root node based on whether the petal length is less than 2.45 centimeters. The sample with a petal length of less than 2.45 centimeters is classified as Setosa, and the data with a petal width greater than 2.45 centimeters continues to be divided according to whether the petal width is less than 1.75 centimeters. The part less than the threshold is considered Versicolor, and the part greater than the threshold is considered virginica.</p> <p>The samples in the figure represent the number of samples in this category. For example, the sample in the left leaf node with a depth of 1 has 50 <code>samples</code>, which means that there are 50 samples with a petal length less than 2.45 centimeters. The <code>value</code> represents the distribution of the training data in the current node. For example, the green node on the left of depth 2 represents that there are 0 setosa, 49 versicolor, and 5 virginica in the current node, with a total of 54 <code>samples</code>.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-08-28-Decision-Tree/#22-basis-for-prediction","title":"2.2 Basis for prediction","text":"<p>In the decision tree example, there is also an important indicator called <code>Gini impurity</code>, which measures the impurity of the current node intuitively. When all the samples in a node belong to the same category, the node has the highest purity and the Gini impurity is 0. The <code>Gini</code> is defined as follows:</p> Gini impurity <p>Where \\(P_{i,k}\\) is the proportion of the k-th class of samples in i nodes. For example, the <code>Gini</code> of the right node with a depth of 2 in the example is \\(1-(0/46)^{2}-(1/46)^{2}-(45/46)^{2} ~= 0.043\\). Using the most commonly used Python machine learning library <code>Scikit-Learn(v0.24.2)</code> as an example, when implementing the Classification and Regression Tree (CART), the decision tree chooses the splitting node and threshold based on Gini impurity. The optimization objective (loss function) is shown below:</p> &lt;img src=\"https://cdn.jsdelivr.net/gh/BulletTech2021/Pics/2021-8-29/1630206173092-CART","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/","title":"Kaggle Jane Street Competition","text":"<p>Info</p> <p>Author: Void, posted on September 2, 2021, Read time: About 10 minutes, WeChat Official Account Article Link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#1-introduction","title":"1 Introduction","text":"<p>There are many hedge fund-sponsored competitions on Kaggle, which may have become a new type of competition, or they may really want to get some ideas from Kaggler. This time, we will learn about the recently completed Jane Street-sponsored competition.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#2-competition-introduction","title":"2 Competition Introduction","text":"<p>This competition is a classification problem. For each data point (a trading opportunity), we need to give an action (whether to take action). If we execute the trade, the corresponding profit is return * weight, added up to each day:</p> \\[ p_{i}=\\sum_{j}\\left(\\text { weight }_{i j} * \\operatorname{resp}_{i j} * \\operatorname{action}_{i j}\\right) \\] <p>In the investment field, many people pursue a high Sharpe ratio (considering both returns and risks). Its calculation is as follows:</p> \\[ t=\\frac{\\sum p_{i}}{\\sqrt{\\sum p_{i}^{2}}} * \\sqrt{\\frac{250}{|i|}} \\] <p>Our final evaluation metric is:</p> \\[ u=\\min (\\max (t, 0), 6) \\sum p_{i} \\]","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#3-specific-code","title":"3 Specific Code","text":"<p>Similarly, let's take a look at the open-source high-scoring code together.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#31-import-packages","title":"3.1 Import Packages","text":"<p>As the dataset is large, the code uses datatable to perform data reading, which claims to be a highly efficient multi-threaded data processing tool that outperforms Pandas.</p> <pre><code>import datatable as dtable\ntrain = dtable.fread('/kaggle/input/jane-street-market-prediction/train.csv').to_pandas()\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#32-feature-engineering","title":"3.2 Feature Engineering","text":"<p>As the provided features are still anonymous, the code artificially divides the features into four types based on the distribution of each feature: Linear, Noisy, Negative, and Hybrid. The final feature is constructed by adding the mean of each class of features to all the original features.</p> <pre><code>train['f_Linear']=train[f_Linear].mean(axis=1)\ntrain['f_Noisy']=train[f_Noisy].mean(axis=1)\ntrain['f_Negative']=train[f_Negative].mean(axis=1)\ntrain['f_Hybrid']=train[f_Hybrid].mean(axis=1)\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#33-label-determination","title":"3.3 Label Determination","text":"<p>The training set does not provide us with direct labels, i.e., whether to take action. It provides the returns for five different time windows. The code constructs the label by determining whether there are greater than three positive returns, i.e., executing trades (action = 1).</p> <pre><code>resp_cols = ['resp', 'resp_1', 'resp_2', 'resp_3', 'resp_4']\ny = np.stack([(train[c] &gt; 0).astype('int') for c in resp_cols]).T\n\ntrain['action'] = (y.mean(axis=1) &gt; 0.5).astype('int')\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#34-model-training","title":"3.4 Model Training","text":"<p>Regarding the model part, the solution uses an XGBoost model and performs parameter optimization using HyperOpt. For cross-validation, it uses PurgedGroupTimeSeriesSplit, which is suitable for this type of time series problem. It can be seen very intuitively from the figure below. The validation set always comes after the training set, with a small gap in between.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-02-Kaggle-janestreet/#4-conclusion","title":"4 Conclusion","text":"<p>It can be seen that this open-source solution is not complicated, and there is still a lot of room for improvement, such as analyzing the meaning of features, using neural network models, optimizing the evaluation metric given in the problem, and so on. However, in the financially noisy world, whether these methods are effective is still a question mark.  </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/","title":"Tips for Tuning Neural Networks","text":"<p>Info</p> <p>Author: Void, publish date: 2021-09-10, reading time: approximately 10 minutes, WeChat official account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#1-introduction","title":"1 Introduction","text":"<p>Recently, I learned some tips for tuning neural networks from a Zhihu expert and found a blog post by deep learning expert Andrej Kapathy, \"A Recipe for Training Neural Networks\". Combining these articles with my own experiences, I would like to share some small tips for tuning neural networks.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#2-loss-curve-analysis","title":"2 Loss Curve Analysis","text":"<p>With visualization tools like Tensorboard and MLflow, the loss curve during training is easy to observe. The shape of the curve can often intuitively reflect the status of model training.</p> <ul> <li>Typically, the loss curve drops rapidly at the beginning and gradually levels off. If the curve is close to linear, the learning rate may be too small and the loss drop is insufficient.</li> <li>If the curve fluctuates too much, it may be due to a small batch size. The batch size is not always better when larger. When the batch size is small, the gradient direction calculated for each batch is not so accurate, and the variation between batches is larger, which may lead to escaping from the saddle point. The batch size can be adjusted as a hyperparameter. Empirically, the batch size can be the square root of the data size.</li> <li>If there is a large difference between the training set and validation set curves, the model may be overfitting the training set. Conversely, if the difference is too small, the model may be underfitting.</li> <li>The point where the loss is the minimum is not necessarily the optimal point for the evaluation index. For example, in a binary classification problem, the point with the minimum loss is not necessarily the point with the maximum AUC. An effective method is to print the model performance for each epoch.</li> <li>In actual usage, I have also encountered the situation where the validation loss rises all the way, but strangely, the selected model performs well on the test set, and it does not seem to be caused by overfitting. This phenomenon has also been discussed on Zhihu, and the consensus is that the validation loss does not completely reflect the quality of the final model.</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#3-learning-rate-adjustment","title":"3 Learning Rate Adjustment","text":"<p>For neural networks, adjusting the learning rate has a high priority in tuning. The order of tuning can be learning rate, epoch number, batch size, and learning rate decay parameter.</p> <ul> <li>Warm up can be used to adjust the learning rate.</li> <li>The learning rate decay parameter often varies with different models and tasks.</li> <li>The parameter search is generally performed in 10-fold intervals.</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#4-dropout-layer","title":"4 Dropout Layer","text":"<p>The dropout layer can effectively reduce overfitting. On the other hand, it can also be considered as a way of model ensemble, which is recommended for use.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#5-optimizer","title":"5 Optimizer","text":"<p>The Adam optimizer is a stable optimizer for parameters, including inappropriate learning rates.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#6-ensemble","title":"6 Ensemble","text":"<p>We can even use different random number seeds to ensemble models.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#7-swish-activation-function","title":"7 Swish Activation Function","text":"<p>The Swish activation function has been proposed for a long time, but it frequently appears in high-scoring solutions on Kaggle recently. Its form is: f(x) = x \u00b7 sigmoid(x), which is a smooth and non-monotonic function. In its paper, the author points out that the Swish activation function is superior to other activation functions, ReLU, etc., when the number of layers in the neural network is over 40. In shallow neural networks, whether it improves the model result still needs our own experimentation.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#8-batch-normalization","title":"8 Batch Normalization","text":"<p>During normalization with batch normalization, each independent sample sees information from other samples in the same batch, which has a certain regularization effect. The zero-mean also makes the input in the saturation region of the activation function, accelerating the convergence speed.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-10-params-tuning-tricks/#9-summary","title":"9 Summary","text":"<p>Tuning has scientific and artistic elements. In actual usage, you may want to try the tips above. Some tips may be suitable for your model and task, helping your model perform better.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/","title":"Summary of Feature Engineering in Financial Risk Control","text":"<p>Info</p> <p>Author: Jeremy, published on September 25, 2021, reading time: about 8 minutes, WeChat public account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#1-introduction","title":"1 Introduction","text":"<p>Recently, I summarized the data processing and modeling process of a credit default risk prediction competition I participated in, and found that my understanding of business feature engineering is still shallow. Incidentally, there was also a financial risk control competition on Kaggle, namely the Home Credit Default Risk Competition, in which many experts shared their feature engineering methods, and there were many places worth learning and referring to upon careful study.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#2-problem-and-data-introduction","title":"2 Problem and Data Introduction","text":"<p>This competition is also a classic supervised binary classification problem in which we need to predict the probability of loan default by the applicant based on their application information, bureau credit records of the applicant (Bureau), and their credit history with the institution. Since the task is to predict before lending, the main focus of features to be mined is whether the customer is fraudulent or not, and for non-fraudulent customers, whether they have the ability to repay.</p> Data table relationship diagram <p>The data of the competition is distributed in several tables, and we need to do appropriate table join operations:</p> <ul> <li>Application table: loan application information, main table, one row represents one loan application ID.</li> <li>Bureau balance table: Bureau credit records, each row is monthly data of an applicant, with up to 96 months of records for one ID.</li> <li>Application history table: Historical loan application information of the same user, including credit line, term, interest rate, approval status, etc.</li> <li>Repayment table: Historical repayment behavior records of the same user.</li> <li>Credit card balance record table: credit card consumption behavior record data of users with credit cards.</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#3-feature-engineering","title":"3 Feature Engineering","text":"<p>The main idea of feature engineering is to construct as many features as possible, and then reduce the number of features using feature selection indicators or models.</p> <p>For the automatic data engineering step, some contestants almost completely rely on automatic feature engineering, such as constructing polynomial features, while others use open-source data engineering packages such as Featuretools.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#31-recent-features","title":"3.1 Recent Features","text":"<p>Sometimes the time information in the data is in timestamp format, which can be manually converted into numerical information, such as calculating the time of the last credit card usage, the last contact time, and the last overdue time.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#32-statistical-features","title":"3.2 Statistical Features","text":"<p>One loan application ID corresponds to Bureau credit records and credit card usage data of the applicant, with multiple rows of records in other tables corresponding to one ID. For these variables, statistical features such as mean, maximum/minimum value, total value, and frequency are often considered.</p> <pre><code>def agg_numeric(df, group_var, df_name):\n\"\"\"\n    Aggregates the numeric values in a dataframe. This can\n    be used to create features for each instance of the grouping variable.\n    \"\"\"\n    # Remove id variables other than grouping variable\n    for col in df:\n        if col != group_var and 'SK_ID' in col:\n            df = df.drop(columns = col)\n\n    group_ids = df[group_var]\n    numeric_df = df.select_dtypes('number')\n    numeric_df[group_var] = group_ids\n\n    # Group by the specified variable and calculate the statistics\n    agg = numeric_df.groupby(group_var).agg(['count', 'mean', 'max', 'min', 'sum']).reset_index()\n\n    # Need to create new column names\n    columns = [group_var]\n\n    # Iterate through the variables names\n    for var in agg.columns.levels[0]:\n        # Skip the grouping variable\n        if var != group_var:\n            # Iterate through the stat names\n            for stat in agg.columns.levels[1][:-1]:\n                # Make a new column name for the variable and stat\n                columns.append('%s_%s_%s' % (df_name, var, stat))\n\n    agg.columns = columns\n    return agg\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#33-time-series-features","title":"3.3 Time Series Features","text":"<p>Calculating time series features in different time windows can help identify abnormal user consumption behavior. Common time series features include:</p> <ul> <li>Maximum value - minimum value</li> <li>Current value/N-month average value</li> <li>Continuous increase/decrease within N months</li> <li>Maximum consecutive increase/decrease in the number of months</li> </ul> <p>For example, if a user's current monthly consumption amount is much higher than the monthly average consumption amount in the past 12 months, it may indicate that the customer has deliberately overdrawn their credit limit or engaged in credit card fraud, and the user's risk should be increased.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#34-feature-selection","title":"3.4 Feature Selection","text":"<p>According to the form of feature selection, it can be divided into three categories:</p> <ul> <li>Filter: Evaluating each feature according to its divergence or correlation, setting a threshold or selecting a number of features to be screened, common indicators include Pearson correlation coefficient, chi-square test, mutual information, etc.</li> <li>Wrapper: Based on the target function (often a prediction performance score), select or exclude a certain number of features each time, common methods include recursive feature elimination.</li> <li>Embedded: First train some machine learning models (usually tree models), obtain the weight coefficients of each feature, and select features based on the coefficients in descending order (similar to filter, but the coefficients are obtained through training).</li> </ul> <p>To ensure the interpretability of the model, feature dimensionality reduction methods such as PCA for transforming features are generally not used in risk control modeling. Most feature selection methods first remove collinear features using filter methods, and then use embedded methods to calculate feature importance to sort them.</p> <p>In Introduction to Feature Selection, the author finally selected 342 variables from 1465 variables and put them into the LightGBM model. The AUC of the testing set only decreased from 0.783 to 0.782, while the baseline LightGBM model without feature engineering was 0.735.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-09-25-Feature-engineering/#4-conclusion","title":"4 Conclusion","text":"<p>The biggest feeling after studying the feature engineering ideas of the Kaggle experts is that the amount of work is huge. Some companies choose to directly merge the feature expansion step in the ETL of the data warehouse, thereby reducing the cycle and cost of modeling. For individuals, understanding the ETL process in the data warehouse may be one of the means to improve business understanding.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/","title":"Summary of KDD Cup2021 Time Series Anomaly Detection Competition","text":"<p>Info</p> <p>Author: Void, Published on 2021-10-30, Reading time: about 10 minutes, WeChat article link: </p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#1-introduction","title":"1 Introduction","text":"<p>In our previous article on time series anomaly detection, we introduced the KDD Cup2021 time series anomaly detection competition. The competition required us to identify the unique anomaly point in each of the 250 time series. Recently, the competition announced the solution of the top-scoring teams. Today, let's take a look at these high-scoring solutions and learn from them.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#2-background-introduction","title":"2 Background Introduction","text":"<p>The first place went to the team from DeepBlue Technology. The company has some AI robot products and is also keen on participating in various competitions. Their solution is <code>TsaDetect</code>: An efficient and flexible time series anomaly detection framework. Overall, they integrated several time series anomaly detection algorithms and achieved good results.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#3-finding-period","title":"3 Finding Period","text":"<p>Since the time series provided in this competition are very regular and have clear cycles, the anomalies in each sequence can generally be considered as anomalous cycles. Therefore, the first problem we need to solve is to find the period of the time series. In the competition, we used the Fourier transform to find the period. So, what is the Fourier transform?</p> <p>Firstly, the Fourier series concept refers to the decomposition of any periodic function into sine functions of different periods (or different frequencies, where the frequency is equal to the reciprocal of the period), and then adds up these sine functions. Therefore, the different frequencies constitute the frequency spectrum of the sequence. The horizontal axis is the frequency, and the vertical axis is the amplitude. </p> <p>Generally, in the frequency spectrum, the frequency at which the amplitude is the largest is the frequency of the original sequence, because at this frequency, the sine function of this frequency and amplitude includes the peak and valley of the original sequence. We can determine the period of the original sequence in this way.</p> <p>We can plot the frequency spectrum of the sequence in Python using the following code:</p> <pre><code>import scipy\nimport matplotlib.pyplot as plt\n\nX = scipy.fft.fft(this.values.reshape((-1,))) # Fourier transformed values\nfreqs = scipy.fft.fftfreq(len(this.values),1)\nfig=plt.figure(figsize=(20,12))\nplt.plot(freqs,np.abs(X))# np.abs is amplitude\n</code></pre> <p>Let's use the following sequence provided by the competition to try it out:</p> <p>Unfortunately, this method did not work well on this sequence.</p> <p>It can be said that using Fourier transform to find the period is a traditional way of finding the period, but it is not suitable for some sequences. </p> <p>Now, let's take a look at how the high-scoring solution did it. Given a period length (gap distance), find the peak value of each period, then calculate the peak interval between them. The final score equals std (peak intervals) / sqrt (gap distance). By traversing different period lengths, the minimum score can be obtained, and this period length is the period of the sequence. Intuitively, the more stable the distance between peak values \u200b\u200bis, the longer the period length (preferentially larger scale period), and the more likely this period will be the period of the original sequence. This method also seems to be scientific.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#4-anomaly-detection-algorithm","title":"4 Anomaly Detection Algorithm","text":"<p>After finding the period, the next step is to use different time series anomaly detection algorithms. The high-scoring solution mainly used Fourier filtering algorithm, Matrix Profile algorithm, and regression-based algorithms.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#41-fourier-filter-algorithm","title":"4.1 Fourier Filter Algorithm","text":"<p>The Fourier filter algorithm refers to performing Fourier transform on the original sequence and removing some frequency components in the frequency domain. Then transform the sequence back to the time domain by taking the inverse Fourier transform. Finally, compare the transformed sequence with the original sequence to obtain the residual, and find the anomaly point based on the residual. The high-scoring team used high-pass, low-pass filtering, as well as smoothing, and all of them can successfully locate the anomaly points. It is worth mentioning that the anomaly points of this sequence are actually difficult to identify by the human eye.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#42-matrix-profile-algorithm","title":"4.2 Matrix Profile Algorithm","text":"<p>We have introduced the Matrix Profile algorithm in the previous article. The specific idea is to calculate the Euclidean distance between each interval and other intervals to obtain the anomalous interval.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#43-regression-based-algorithms","title":"4.3 Regression-based Algorithms","text":"<p>The regression-based algorithm is to use a model to solve a regression problem to predict the value of a certain point. Then in the test set, calculate the residual between the predicted value and the true value, and find the point with the maximum residual as the anomaly point. The high-scoring solution attempted different algorithms, and ultimately chose GBDT and CNN algorithms. It is worth mentioning that X can take the data on both sides of the predicted value. Moreover, the area around the anomaly point may also be anomalous. To address this issue, there is a gap between X and the predicted value.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#5-model-ensemble","title":"5 Model Ensemble","text":"<p>With some good basic models, the high-scoring solution finally used weighted ensemble. In terms of weight setting, they used the confidence of each model. The calculation of the confidence of each model is the maximum residual divided by the second maximum residual. Intuitively, the larger this value, the more confident this model is when identifying the point with the maximum residual as the anomaly point. This applies to the task setting where there is only one anomaly point.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2021-10-30-kdd-cup2021/#6-conclusion","title":"6 Conclusion","text":"<p>It can be seen that the high-scoring solution also uses some more traditional time series anomaly detection algorithms. However, what is worth learning is that the solution pays great attention to the details of each step, whether it is at the beginning to determine the period length or to choose different effective algorithms, or to set weighted weights at the end. The high-scoring team has their own thinking and experience, which is worth learning from.</p>","tags":["machine learning","time series"]},{"location":"en/Main_Course/Machine_Learning/2022-01-22-Permutation-importance/","title":"Permutation Importance for Feature Selection","text":"<p>Info</p> <p>Author: Vincent, Published on 2021-06-06, Reading time: about 6 minutes, WeChat official account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#1-introduction","title":"1 Introduction","text":"<p>In previous articles, some common feature selection techniques have been introduced. In this article, we will continue to focus on this topic and explain a new method for assessing feature importance: Permutation Importance. Before continuing reading, it is recommended to review relevant previous knowledge:</p> <ul> <li>Decision Tree Learning Notes</li> <li>How to Do Feature Selection</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#2-algorithm-deconstruction","title":"2 Algorithm Deconstruction","text":"<p>Permutation Importance is suitable for tabular data, and its assessment of feature importance depends on the extent to which the model performance score decreases when the feature is randomly rearranged. Its mathematical expression can be represented as:</p> <ul> <li>Input: model m after training, training set (or validation set, or test set) D</li> <li>Performance score s of model m on dataset D</li> <li>For each feature j of dataset D</li> <li>For each iteration k of K repeated experiments, randomly permute feature j to construct a contaminated dataset \\(Dc_{k,j}\\)</li> <li>Calculate the performance score \\(s_{k,j}\\) of model m on dataset \\(Dc_{k,j}\\)</li> <li>Feature j's importance score \\(i_{j}\\) can be expressed as</li> </ul> \\[ i_{j} = s - \\frac{1}{K}\\sum_{k=1}^{K}s_{k,j} \\]","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#3-example-code","title":"3 Example Code","text":"<pre><code>from sklearn.datasets import load_diabetes\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import Ridge\nfrom sklearn.inspection import permutation_importance\ndiabetes = load_diabetes()\nX_train, X_val, y_train, y_val = train_test_split(\n    diabetes.data, diabetes.target, random_state=0)\n\nmodel = Ridge(alpha=1e-2).fit(X_train, y_train)\nmodel.score(X_val, y_val)\n\n\nscoring = ['r2', 'neg_mean_absolute_percentage_error', 'neg_mean_squared_error']\n# The scoring parameter can include multiple calculation indicators at the same time. This is more efficient than using permutation_importance repeatedly, because the predicted value can be used to calculate different indicators.\nr_multi = permutation_importance(model, X_val, y_val, n_repeats=30, random_state=0, scoring=scoring)\n\nfor metric in r_multi:\n    print(f\"{metric}\")\n    r = r_multi[metric]\n    for i in r.importances_mean.argsort()[::-1]:\n        if r.importances_mean[i] - 2 * r.importances_std[i] &gt; 0:\n            print(f\"    {diabetes.feature_names[i]:&lt;8}\"\n                  f\"{r.importances_mean[i]:.3f}\"\n                  f\" +/- {r.importances_std[i]:.3f}\")\n</code></pre> <p>The output is:</p> <pre><code>r2\n  s5      0.204 +/- 0.050\n  bmi     0.176 +/- 0.048\n  bp      0.088 +/- 0.033\n  sex     0.056 +/- 0.023\nneg_mean_absolute_percentage_error\n  s5      0.081 +/- 0.020\n  bmi     0.064 +/- 0.015\n  bp      0.029 +/- 0.010\nneg_mean_squared_error\n  s5      1013.903 +/- 246.460\n  bmi     872.694 +/- 240.296\n  bp      438.681 +/- 163.025\n  sex     277.382 +/- 115.126\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-22-Permutation-importance/#4-conclusion","title":"4 Conclusion","text":"<p>Compared with tree models, feature importance is usually judged based on the decrease in impurity, which is usually based on the <code>training set</code>. When the model is overfitting, the importance of features is misleading. In this case, seemingly important features may not have satisfactory predictive power for new data encountered by the model online.</p> <p>At the same time, feature importance based on reduction in impurity is easily affected by high-cardinality features, so numerical variables often rank higher. In contrast, Permutation Importance has no bias towards model features and is not limited to specific model types, so it has a wide range of applications. Please note that if the features have strong multicollinearity, it is recommended to take only one important feature. The method can be viewed in this example.</p> <p>At the same time, <code>Scikit Learn</code> also provides an intuitive example to demonstrate the difference between feature importance based on impurity reduction and Permutation Importance.</p> <p>Hope this sharing is helpful to you, and welcome to leave comments for discussion!</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/","title":"Introduction to Ensemble Learning","text":"<p>Info</p> <p>Author: Tina, Published on June 6th, 2021, Reading Time: Approximately 6 Minutes, WeChat Official Account Article Link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#1-introduction","title":"1 Introduction","text":"<p>Ensemble Learning is a common and important concept in machine learning, which refers to completing learning tasks by building multiple machine learners. Today, we will introduce some common methods of Ensemble Learning, such as <code>Voting Classifiers</code>, <code>Bagging</code>, and <code>Boosting</code>.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#2-ensemble-methods","title":"2 Ensemble Methods","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#21-voting-classifiers","title":"2.1 Voting Classifiers","text":"<p>As shown in the figure below, the basic principle of <code>Voting Classifiers</code> is based on the same training set, using different model algorithms to fit the data, and then aggregating the final results to obtain the final result.</p> Voting Classifier Prediction <p>Its code implementation is shown as follows: <pre><code>## RandomForest, Logistic Regression and SVC\n## participate in ensemble learning\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\n\nlog_clf = LogisticRegression()\nrnd_clf =  RandomForestClassifier()\nsvm_clf = SVC()\n##aggregate three algorithms as Voting Classifier\nvoting_clf = VotingClassifier(\n    estimators=[('lr',log_clf),('rf',rnd_clf),('svc',svm_clf )],\n    voting= 'hard'\n)\n\nvoting_clf.fit(X_tran,y_train)\n</code></pre></p> <p>After the training is completed, you can view the performance of each classifier on the test set:</p> <pre><code>## Look at each classifier's accuracy on the test set:\nfrom sklearn.metrics import accuracy_score\nfor clf in (log_cf,rnd_clf,svm_clf,voting_clf):\n    y_pred = clf.predict(X_test)\n    print(clf.__class__.name__,accuracy_score(y_test,y_pred))\n#### Output:\n### LogisticRegression 0.864\n### RandomForestClassifier 0.872\n### SVC 0.888\n### VotingClassifier 0.896\n</code></pre> <p>It should be noted that the ensemble classifier may not perform well in all cases. For example, when the majority of \"weak learners\" make up the ensemble classifier and the model with good performance make up the minority, the performance of the Ensemble Learning may not be as good as that of a single classifier when taking the \"major votes\" as the prediction result.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#22-bagging-and-pasting","title":"2.2 Bagging and Pasting","text":"<p>Ensemble Learning can also be implemented by fitting different sub-datasets with the same model algorithm.</p> <p><code>Bagging (bootstrapping aggregating)</code> means sampling with replacement, while <code>pasting</code> means sampling without replacement. As shown in the figure below, Ensemble Learning can obtain multiple prediction results through multiple sampling, and then combine all the results together. Generally, the maximum frequency prediction value or the average value is selected as the final learning result.</p> Bagging Training <p>Its code implementation is shown as follows:</p> <pre><code>from sklearn.ensemble import BaggingClassifier\nfrom sklearn.tree import DecisionTreeClassifier\n## with 500 trees, n_jobs = -1\n## means using all processors\n##to fit and predict in parallel.\nbag_clf = BaggingClassifier(\n    DecisionTreeClassifier(), n_estimators=500,\n    max_samples=100, bootstrap=True, n_jobs = -1\n)\n\nbag_clf.fit(X_train,y_pred)\ny_pred = bag_clf.predict(X_test)\n</code></pre> <p>In <code>bagging</code>, there may be situations where the data is fitted by multiple classifiers at the same time. Then there will be some data that has not been trained, which is the <code>out-of-bag (OOB)</code> part of the data. This part of data is used to evaluate the performance of the model in the end.</p> <p>In <code>Scikit-Learn</code>, you can directly set <code>oob_score=True</code> to achieve:</p> <pre><code>bag_clf = BaggingClassifier(\n    DecisionTreeClassifier(), n_estimators=500,\n    max_samples=100, bootstrap=True, n_jobs = -1, oob_score = True\n)\nbag_clf.fit(X_train,y_pred)\nbga_clf.oob_score_\n###0.93066666666664\n\n### To verify by accuracy score on test set\n\nfrom sklearn.metrics import accuracy_score\ny_pred = bag_clf(X_test)\naccuracy_score(y_test,y_pred)\n\n###0.936000000000005\n</code></pre>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#23-boosting","title":"2.3 Boosting","text":"<p><code>Boosting</code> is a way of combining multiple \"weak learners\" into an ensemble model. Unlike the previous methods, Boosting trains classifiers in sequence and corrects the previous classifiers' misclassifications in each iteration. The most common methods include <code>Adaptive Boosting (AdaBoost)</code> and <code>Gradient Boosting</code>.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#231-adaboost","title":"2.3.1 AdaBoost","text":"<p>During the evolution of the classifier in <code>AdaBoost</code>, more attention is paid to training the under-fitted data set. As shown in the figure below, when building such classifiers, the subsequent classifiers continually learn and update the weights of the previous classifiers during training to improve the fitting effect of the data.</p> AdaBoost sequential training <p>Its code implementation is shown as follows: <pre><code>from sklearn.ensemble import AdaBoostClassifier\n## 200 decision stumps with 0.5 learning rate using the\n## Stagewise Additive Modeling Multiclass Exponential loss function\nada_clf = AdaBoostClassifier(\n    DecisionTreeClassifier(max_depth =1),n_estimator = 200,\n    algorithm = \"SAMME.R\",learning_rate =0.5\n)\n\nada_clf.fit(X_train,y_train)\n</code></pre> By reducing the number of <code>n_estimator</code>, overfitting of <code>AdaBoost Ensemble</code> can be controlled.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-28-Ensemble-Learning/#232-gradient-boosting","title":"2.3.2 Gradient Boosting","text":"<p>Like <code>AdaBoosting</code>, Gradient Boosting also learns data sets in sequence to continuously iterate to generate a robust ensemble model. However, the difference is that Gradient Boosting fits new data to reduce the residual error of the previous classifier, rather than updating the weight of previous classifiers.</p> <p>We can take <code>Gradient Boosted Regression Trees(GBRT)</code> as an example to learn the implementation method of the code:</p> <pre><code>from sklearn.tree import DecisionTreeRegressor\n\ntree_reg1 = DecisionTreeRegressor(max_depth=2)\ntree_reg1.fit(X,y)\n### residual errors\ny2 = y-tree_reg1.predict(X)\n## Train the second regressor on residual errors made by the first one\ntree_reg2 = DecisionTreeRegressor(max_depth=2)\ntree_reg2.fit(X,y2)\n## Train the third regressor on the residual errors made by the second one\n y3 = y2 - tree_reg2.predict(X)\n tree_reg3 = DecisionTreeRegressor(max_depth=2)\n tree_reg3.fit(X,y3)\n## The ensemble model contains three trees, it can make predictions on a\n## new instance by adding up the predictions of all trees\n y_pred = sum(tree.predict(X_new) for tree in (tree_reg1, tree_reg2,tree_reg3))\n</code></pre> <p>We can also directly use the method of <code>GradientBoostingRegressor</code> to achieve the above effect:</p> <pre><code>from sklearn.ensemble import GradientBoostingRegressor\n\ngbrt = GradientBoostingRegressor(max_depth = 2,n_estimators = 3, learning_rate=1.0)\ngbrt.fit(X,y)\n</code></pre> <p>To find the best</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/","title":"Top Solutions for Kaggle Quantitative Competitions","text":"<p>Info</p> <p>Author: Void, Published on 2022-01-30, Reading time: about 10 minutes, WeChat Public Account Article Link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#1-introduction","title":"1 Introduction","text":"<p>Recently, quantitative competitions have emerged one after another on Kaggle. There is Jane Street's competition predicting trades and maximizing profits, the Optiver competition predicting realized volatility just ended. There are also ongoing competitions, such as G-Research's competition for forecasting cryptocurrency returns and Jiu-Kun's competition for predicting returns by domestic quantitative private equity firms. Maybe these institutions have really gained many insights from Kaggle and earned a lot of money, which makes them so enthusiastic about holding such competitions. Unlike previous interpretations of solutions released during the competition:</p> <ul> <li>Want to Experience Quantitative Trading</li> <li>Copying Homework</li> </ul> <p>This article will interpret the final top solutions for the Jane Street Market Prediction and Optiver Realized Volatility Prediction competitions.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#2-competition-overview","title":"2 Competition Overview","text":"<p>Let's briefly review the two competitions:</p> <ul> <li>Jane Street requires us to provide trading signals to maximize profits.</li> <li>Optiver requires us to predict the volatility of high-frequency financial data (stocks).</li> </ul> <p>During the Private Leaderboard phase of both competitions, actual financial data is regularly used to update the rankings of the solutions. Although financial markets are difficult to predict, miraculously, high-scoring teams can keep themselves at the top of the leaderboard, making people have to agree on the effectiveness of their solutions. Let's take a look at their winning solutions together.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#3-solution-interpretation","title":"3 Solution Interpretation","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#31-jane-street-top-1-solution-from-cats-trading","title":"3.1 Jane Street Top 1 solution from Cats Trading...","text":"<p>The winning solution used an XGBoost model and a neural network (Supervised Autoencoder with MLP) model with an autoencoder, of which the latter single model can also maintain first place. The model structure is shown below:</p> <pre><code>def create_ae_mlp(num_columns, num_labels, hidden_units, dropout_rates, ls = 1e-2, lr = 1e-3):\n\n    inp = tf.keras.layers.Input(shape = (num_columns, ))\n    x0 = tf.keras.layers.BatchNormalization()(inp)\n\n    encoder = tf.keras.layers.GaussianNoise(dropout_rates[0])(x0)\n    encoder = tf.keras.layers.Dense(hidden_units[0])(encoder)\n    encoder = tf.keras.layers.BatchNormalization()(encoder)\n    encoder = tf.keras.layers.Activation('swish')(encoder)\n\n    decoder = tf.keras.layers.Dropout(dropout_rates[1])(encoder)\n    decoder = tf.keras.layers.Dense(num_columns, name = 'decoder')(decoder)\n\n    x_ae = tf.keras.layers.Dense(hidden_units[1])(decoder)\n    x_ae = tf.keras.layers.BatchNormalization()(x_ae)\n    x_ae = tf.keras.layers.Activation('swish')(x_ae)\n    x_ae = tf.keras.layers.Dropout(dropout_rates[2])(x_ae)\n\n    out_ae = tf.keras.layers.Dense(num_labels, activation = 'sigmoid', name = 'ae_action')(x_ae)\n\n    x = tf.keras.layers.Concatenate()([x0, encoder])\n    x = tf.keras.layers.BatchNormalization()(x)\n    x = tf.keras.layers.Dropout(dropout_rates[3])(x)\n\n    for i in range(2, len(hidden_units)):\n        x = tf.keras.layers.Dense(hidden_units[i])(x)\n        x = tf.keras.layers.BatchNormalization()(x)\n        x = tf.keras.layers.Activation('swish')(x)\n        x = tf.keras.layers.Dropout(dropout_rates[i + 2])(x)\n\n    out = tf.keras.layers.Dense(num_labels, activation = 'sigmoid', name = 'action')(x)\n\n    model = tf.keras.models.Model(inputs = inp, outputs = [decoder, out_ae, out])\n    model.compile(optimizer = tf.keras.optimizers.Adam(learning_rate = lr),\n                  loss = {'decoder': tf.keras.losses.MeanSquaredError(),\n                          'ae_action': tf.keras.losses.BinaryCrossentropy(label_smoothing = ls),\n                          'action': tf.keras.losses.BinaryCrossentropy(label_smoothing = ls),\n                         },\n                  metrics = {'decoder': tf.keras.metrics.MeanAbsoluteError(name = 'MAE'),\n                             'ae_action': tf.keras.metrics.AUC(name = 'AUC'),\n                             'action': tf.keras.metrics.AUC(name = 'AUC'),\n                            },\n                 )\n\n    return model\n</code></pre> <p>It can be seen that the final loss is the MSE loss of the decoder plus the BCE loss of the autoencoder (whether to trade) plus the BCE loss of the spliced network after the original input and the encoder spliced. Although there were open-source solutions using autoencoders during the competition, Cats Trading... optimized the autoencoder part and the spliced network at the same time, thereby avoiding leakage caused by training the autoencoder first and then using CV(cross-validation).</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-01-30-Kaggle-exp-s2/#32-optiver-top-1-solution-from-nyanp","title":"3.2 Optiver Top 1 solution from nyanp","text":"<p>As mentioned in previous articles, the data provided by the competition mainly includes two categories of trading-related data (prices,</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/","title":"Uplift Model in Causal Inference","text":"<p>Info</p> <p>Author: Echo, published on 2022-02-03, reading time: about 6 minutes, WeChat public account article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#1-background","title":"1 Background","text":"<p>During the Chinese New Year stay-at-home period, when chatting with my friends online, I found that we were all bombarded with the same game advertisement (since there are many ways to have fun, but the way to obtain joy beans is really single). My friend became the game's user after passively watching many 30-second ads. And I was moved by its marketing cost and decided to investigate the marketing strategy behind it.</p> <p>Before we begin, let's review the four quadrants of users.</p> <p>The horizontal and vertical coordinates represent the user's purchase behavior with or without intervention, with intervention as an example of offering coupons: - Persuadables: Intervention-sensitive users who only buy when given a coupon and won't buy if they don't get one. - Sure things: Naturally converted users who will purchase regardless of whether they are offered a coupon. - Lost causes: Granite-hearted users who won't buy whether or not you offer a coupon. - Sleeping dogs: South-north style users who would buy without a coupon, and offering a coupon would instead deter them.</p> <p>The purpose of offering coupons in the production environment is to increase the final conversion rate. The commonly used response model generally models whether or not to buy a product as the dependent variable to predict the probability of a user buying after giving them a coupon. However, this model focuses on correlation, only looking at whether the independent variable is correlated with the dependent variable, and cannot distinguish whether a user's purchase behavior is caused by the distribution of coupons. Therefore, it cannot identify the natural conversion crowd either and is unable to identify the utility of the coupons. Given that marketing incurs a cost, intervening in the intervention-sensitive user can reflect the role of the marketing activity, so a more effective estimate is to model the causal effect (increment) of an individual's behavior (e.g., purchase) regarding a certain treatment (intervention) with an increase model (Uplift Model). According to the three levels of causal relationships pointed out by Turing Award winner Judea Pearl, it is known that this is a counterfactual causal inference problem. Interested friends can refer to \"The Book of Why: The New Science of Cause and Effect\" for more detailed explanation.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#2-theoretical-basis","title":"2 Theoretical Basis","text":"<p>Let X be the user characteristics (e.g., gender, age, income), T be the treatment (with or without intervention, 1 for with, 0 for without), and Y be the dependent variable's result (e.g., click-through rate/conversion rate). Uplift Model aims to predict ITE (Individual Treatment Effect), which can be expressed as the difference in the conversion probability of a user when the intervention is given or not given, namely the difference between the treated and control groups' potential outcomes of independent samples. The objective of the Uplift Model is to maximize \\(\\tau_{i}\\). Considering that it is impossible to know the results of receiving and not receiving coupons for the same user at the same time (the counterfactual element), the model is thus heavily dependent on the assumption of conditional independence CIA(Conditional Independent Assumption), which requires that user characteristics and intervention policies are mutually independent.</p> \\[ \\left\\{Y_{i}(1), Y_{i}(0)\\right\\} \\perp T_{i} \\mid X_{i} \\] <p>In actual applications, a random experiment can obtain samples of the experimental and control groups using intervention strategies, and the feature distributions of the two sample groups are consistent. Only under the CIA hypothesis, the expected value estimate of the causal effect of all samples can represent the overall users without bias. The conditional average intervention effect CATE(Conditional Average Treatment Effect) can be obtained, which is expressed as:</p> \\[ \\tau\\left(X_{i}\\right)=E\\left[Y_{i}(1) \\mid X_{i}\\right]-E\\left[Y_{i}(0) \\mid X_{i}\\right]=E\\left[Y_{i}^{o b s} \\mid X_{i}=x, T=1\\right]-E\\left[Y_{i}^{o b s} \\mid X_{i}=x, T=0\\right] \\] <p>where \\(Y_{i}^{o b s}=T_{i} Y_{i}(1)+\\left(1-T_{i}\\right) Y_{i}(0)\\).</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#3-model","title":"3 Model","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#31-modified-tree-model","title":"3.1 Modified Tree Model","text":"<p>The traditional tree model's split rule is information gain. The objective is to maximize the difference in information before and after the split. The aim is to hope that the downstream nodes after feature splitting can distinguish people with higher and lower uplift. In other words, it is hoped that the positive and negative sample distributions between the experimental group and the control group inside the downstream nodes after splitting are more disparate than those of the upstream nodes. This difference can be measured by distance, such as KL divergence, Euclidean distance, chi-square distance, etc. The advantage of this method is that it directly models uplift more accurately. The disadvantage is that the model requires higher cost for reconfiguration.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-02-03-Uplift-Model/#32-difference","title":"3.2 Difference","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/","title":"Summary of Machine Learning Learning Resources (Continuously Updated)","text":"<p>Info</p> <p>Author: Vincent, published on June 6, 2021, read time: about 6 minutes, WeChat article link: </p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#1-overview","title":"1 Overview","text":"<p>The purpose of this article is to summarize the machine learning reference materials that I usually use, facilitate my own review and update at any time, and also share with friends who need it. This article will be updated from time to time to ensure the relevance of the contents.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#2-online-courses","title":"2 Online Courses","text":"<ul> <li>Standford CS 229: Machine Learning - Bilibili</li> <li>Stanford Seminar CS25: Transformers United - YouTube</li> <li>\u674e\u6c90\u5b66AI - Bilibili</li> <li>TensorFlow Developer Certificate Course - Zero to Mastery</li> <li>Intro to TensorFlow for Deep Learning - Udacity</li> <li>Machine Learning Crash Course - Google</li> <li>Machine Learning for Beginners - Microsoft</li> <li>Data Science for Beginners - Microsoft</li> <li>Kaggle courses</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#3-technical-blogs-e-books","title":"3 Technical Blogs &amp; E-Books","text":"","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#31-technical-blogs","title":"3.1 Technical Blogs","text":"<ul> <li>Kaggle Winner's Blog</li> <li>Visualizing machine learning one concept at a time - Jay Alammar</li> <li>Han Xiao tech blog</li> <li>Google AI</li> <li>Open AI</li> <li>The Unofficial Google Data Science Blog</li> <li>Andrej Karpathy blog</li> <li>Surge AI blog</li> <li>Paper with Code</li> <li>Diving into data</li> <li>Cloudera Blog</li> <li>Cookiecutter Data Science</li> <li>Hugging Face Chinese Blog</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#32-e-books","title":"3.2 E-Books","text":"<ul> <li>TensorFlow Developer Certificate Learning E-book</li> <li>\u7b80\u5355\u7c97\u66b4 TensorFlow 2 | A Concise Handbook of TensorFlow 2</li> <li>30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2</li> <li>Machine Learning Interviews Book</li> <li>\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 - Amazon</li> <li>HuggingFace Course</li> <li>Forecasting: Principles and Practice - 3rd Edition</li> <li>Rules of Machine Learning</li> <li>Machine Learning Glossary</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#4-github-resources","title":"4 GitHub Resources","text":"<ul> <li>Data-Science-For-Beginners - Microsoft</li> <li>ML-For-Beginners - Microsoft</li> <li>Hands-on Machine Learning with Scikit-Learn, Keras and TensorFlow</li> <li>TensorFlow In Practice</li> <li>TensorFlow Examples</li> <li>Deep Learning Tuning Playbook</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#5-notion-notes","title":"5 Notion Notes","text":"<ul> <li>TensorFlow in Practice on Coursera Notes</li> <li>MIT Introduction to Deep Learning Notes</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#6-competition-experience","title":"6 Competition Experience","text":"<ul> <li>2021 Kaggle All Event TOP Solution Summary</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#61-exploratory-data-analysis","title":"6.1 Exploratory Data Analysis","text":"<ul> <li>Exploratory Data Analysis with Pandas</li> <li>Comprehensive data exploration with Python</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#62-feature-engineering","title":"6.2 Feature Engineering","text":"<ul> <li>Feature Engineering Techniques</li> <li>IEEE - FE for Local test</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#63-tabular-data-modeling","title":"6.3 Tabular Data Modeling","text":"<ul> <li>Tabular Data Binary Classification: All Tips and Tricks from 5 Kaggle Competitions</li> <li>Data Science for tabular data: Advanced Techniques</li> <li>Tabular Classification - Tips and Tricks</li> <li>Feature Ranking RFE, Random Forest, linear models</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#64-time-series-modeling","title":"6.4 Time Series Modeling","text":"<ul> <li>Time Series Analysis in Python</li> <li>Deep Learning for Time Series Forecasting</li> <li>Electricity price forecasting with DNNs (+ EDA)</li> </ul>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-06-05-ML-Reference/#7-summary","title":"7 Summary","text":"<p>This article will be continuously updated, and PRs are welcome to add resources.</p>","tags":["machine learning"]},{"location":"en/Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/","title":"AMEX - Default Prediction Kaggle Competition Summary","text":"<p>Info</p> <p>Author: Yuanzidanqiflying, Published on 2021-06-06, Reading Time: About 6 Minutes, WeChat Official Account Article Link: </p>","tags":["machine learning","python"]},{"location":"en/Main_Course/Machine_Learning/2022-08-30-AMEX-Kaggle-Summary/#1-overview","title":"1 Overview","text":"<p>The American financial services company American Express (AMEX) held a data science competition on Kaggle, requiring the participants to predict whether the cardholder will be overdue in the future based on credit card billing data. All features have been desensitized, and AMEX provides an explanation of the feature prefix:</p> <pre><code>D_* = Variables related to overdue.\nS_* = Variables related to consumption.\nP_* = Repayment information.\nB_* = Debt information.\nR_* = Variables related to risk.\n</code></pre> <p>The data in the competition is a demonstration (values are fictitious, for reference only):</p> <p>| customer_ID | S_2 | P_2 | ... | B_2 | D_41 | target | |---|---|---|---|</p>","tags":["machine learning","python"]},{"location":"en/Main_Course/One_Day_Build/2021-06-21-Mining/","title":"Using Graphics Cards to Achieve Daily Manner Freedom, You Can Too!","text":"<p>Info</p> <p>Author: Jeremy, published on July 10, 2021, Reading time: about 10 minutes, WeChat Official Account article link: </p> <p>After the last introduction to blockchain article was published, many friends expressed interest in mining. Coincidentally, I also tried mining a while ago to see how much profit it can generate. To satisfy everyone's curiosity, today I want to use mining Ethereum as an example, and teach you how to use the graphics card at hand to mine.</p>","tags":["blockchain"]},{"location":"en/Main_Course/One_Day_Build/2021-06-21-Mining/#is-mining-really-profitable","title":"Is mining really profitable?","text":"<p>I imagine this is the most concerning question for everyone, so here's the conclusion: if you have a decent graphics card (Nvidia 16 series or above) that you bought at the original price, there is certainly some profit to be made. According to the current price of Ethereum (2000-3000 USD/coin), and if you try not to let the graphics card run at high temperatures for long periods of time, you can roughly recoup the cost of the graphics card in about 6 months after deducting the electricity bill. Although the price of graphics cards is still far higher than</p>","tags":["blockchain"]},{"location":"en/Main_Course/One_Day_Build/2021-10-21-flaskbb/","title":"Building a forum based on FlaskBB","text":"<p>Info</p> <p>Author: Void, published on October 21, 2021, Reading time: about 6 minutes, WeChat Official Account article link: </p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-21-flaskbb/#1-introduction","title":"1 Introduction","text":"<p>Although a forum may sound like a term that's a bit outdated, we may have all used it to some extent. Whether it's a forum for new graduates looking for a job, the \"BeiDa Unmanned\" BBS in universities, or the 3DM forum for finding gaming resources, these forums have brought us convenience in terms of exchanging information (chitchat) and sharing resources (LZ is a good person) in our daily lives.</p> <p>Setting up a forum for yourself, inviting friends to chat and chat, should be an interesting thing to do. This article will demonstrate how to build your own forum based on the open-source FlaskBB.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-21-flaskbb/#2-deploying-the-flaskbb-forum","title":"2 Deploying the FlaskBB Forum","text":"<p>FlaskBB is an open-source forum software based on Python Flask. Its GitHub Repo and documentation provide a fairly detailed installation method. We first clone its Repo.</p> <p>To avoid affecting the existing Python environment, the official recommendation is to install the package and run FlaskBB in a virtual environment. We can use virtualenv to create a virtual environment and activate it. In the virtual environment, we switch to the FlaskBB folder and install the required packages:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>As an optional step, we can install some development packages (in requirements-dev.txt) as well as Redis for ease of development. Of course, basic packages can satisfy the requirements for running the forum.</p> <p>After installing the required packages, we need to perform some basic configuration of FlaskBB (in a question-and-answer format). We run the following code:</p> <pre><code>flaskbb makeconfig\n</code></pre> <p>There are many optional items inside, such as using Redis, sending alert emails to the administrator's mailbox, etc., which can be configured as needed. For simplicity, I have selected the most basic configuration for all options. It should be noted that the SERVER_NAME should include the port number.</p> <p>After the configuration is complete, since we did not select Redis, we will use SQLite to store data. We need to run the following command:</p> <pre><code>flaskbb install\n</code></pre> <p>It will ask us to create an administrator account, including the account name, email, and password. It is worth noting that this step may result in a Redis URL error. We can manually modify the Redis URL to REDIS_URL = \"redis://\" in the flaskbb.cfg file generated earlier.</p> <p>Finally, all we need to do is run:</p> <pre><code>flaskbb --config flaskbb.cfg run\n</code></pre> <p>We open 0.0.0.0:5000 and can see that the forum is up and running.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-21-flaskbb/#3-using-the-forum","title":"3 Using the Forum","text":"<p>Our forum has taken shape. First, we log into the forum through the login interface. We can see the following sections in the forum:</p> <ul> <li>Portal: including news, trending topics, and some statistics.</li> <li>Forum: the forum itself, including posts.</li> <li>Memberlist: forum members.</li> <li>Search: search function.</li> </ul> <p>In the Portal section, we may see the following prompt.</p> <p>We click on the Management in the drop-down menu next to \"login in\" (which should be the username) and select Plugins, then install Portal (flaskbb-plugin-portal).</p> <p>Now, we can see that the Portal has returned to normal.</p> <p>We can continue to experience the forum's features. We can smoothly edit and reply, and the user experience is basically the same as that of a mature forum.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-21-flaskbb/#4-conclusion","title":"4 Conclusion","text":"<p>Through FlaskBB, we have already had a forum with a fairly high level. We just need to make some changes and designs to meet our own needs on top of it. The overall code is based on the lightweight framework Flask, and modifications to it are not particularly complex. In the next article, we will talk about how to modify the code to make our forum brand new.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-29-flaskbb2/","title":"Interpreting FlaskBB Source Code","text":"<p>Info</p> <p>Author: Void, published on October 29, 2021, Reading time: About 6 minutes, WeChat public account article link: </p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-29-flaskbb2/#1-introduction","title":"1 Introduction","text":"<p>Last time, we talked about FlaskBB being a powerful open-source forum and successfully ran it locally. This time, we will interpret the source code of FlaskBB with you.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-29-flaskbb2/#2-directory-structure","title":"2 Directory Structure","text":"<p>First, let's take a look at its directory structure.</p> <p>In the root directory, you can see common dependency-related files (such as requirements.txt, setup.py, etc.), as well as the flaskbb.cfg generated by flaskbb makeconfig. The tests folder stores code related to automated testing. For a product-level application, automatic testing is essential.  Finally, there is the flaskbb main folder.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-29-flaskbb2/#3-source-code-interpretation","title":"3 Source Code Interpretation","text":"<p>Let's take a look at the create_app function in the main program app.py of FlaskBB:</p> <pre><code>def create_app(config=None, instance_path=None):\n\n    app = Flask(\n        \"flaskbb\", instance_path=instance_path, instance_relative_config=True\n    )\n\n    # instance folders are not automatically created by flask\n    if not os.path.exists(app.instance_path):\n        os.makedirs(app.instance_path)\n\n    configure_app(app, config)\n    configure_celery_app(app, celery)\n    configure_extensions(app)\n    load_plugins(app)\n    configure_blueprints(app)\n    configure_template_filters(app)\n    configure_context_processors(app)\n    configure_before_handlers(app)\n    configure_errorhandlers(app)\n    configure_migrations(app)\n    configure_translations(app)\n    app.pluggy.hook.flaskbb_additional_setup(app=app, pluggy=app.pluggy)\n\n    return app\n</code></pre> <p>In configure_app, FlaskBB first loads the configuration information. Then, configure_extensions initializes the relevant Flask extensions used. configure_blueprints initializes the Blueprint, including user, forum, auth, and management. These four categories are mounted on different URLs, they are the four most important sections of the entire structure. We also have configure_errorhandlers, which deals with errors, configure_template_filters which adds filters to Jinja2 templates, and other modules.</p> <p>After looking at the most important app.py, we can see that there are four folders, user, forum, auth, and management, all in the same directory. Let's see how these four major sections are constructed.</p> <p>We open the models.py file in the user folder. This file defines the relationship between users and groups, etc. Here, we need to mention the concept of Object-Relational Mapping (ORM). Simply put, ORM refers to using a programming language to define the database.</p> <pre><code>class User(db.Model, UserMixin, CRUDMixin):\n    __tablename__ = \"users\"\n\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(200), unique=True, nullable=False)\n    email = db.Column(db.String(200), unique=True, nullable=False)\n    _password = db.Column('password', db.String(120), nullable=False)\n</code></pre> <p>The definition of fields seems straightforward, but how do we define relationships? For example, the one-to-many relationship between users and topics. A user may start multiple topics. Under the User class, we can see the following code.</p> <pre><code>topics = db.relationship(\n    \"Topic\",\n    backref=\"user\",\n    primaryjoin=\"User.id == Topic.user_id\",\n    lazy=\"dynamic\"\n)\n</code></pre> <p>This definition will create the topics field in User and the user field in Topic. The condition for the join query is User.id == Topic.user_id.  The code also defines the usual operations, such as deletion and saving.</p> <p>The four major modules all have three sub-modules: models, views, and forms. The overall structure is very clear. Similar to most Flask projects, html templates are still placed under the templates folder, and js, css, images, etc. are placed under the static folder. The tests folder mentioned earlier stores modules related to automated testing.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-10-29-flaskbb2/#4-conclusion","title":"4 Conclusion","text":"<p>Through the FlaskBB source code, we learned the structure of a mature, product-level project and the content of different modules. Overall, its code is very neat, standardized, and readable. Based on this, we can modify the content according to our needs to make it a truly useful forum product.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/","title":"Intelligent Ticket Booking for Train 12306","text":"<p>Info</p> <p>Author: Void, released on 2021-11-10, reading time: about 6 minutes, WeChat article link: </p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/#1-introduction","title":"1. Introduction","text":"<p>During holidays, train tickets for going home or popular scenic spots are often sold out very quickly. In addition to relying on luck and speed to wait, we can also use a scientific method for intelligent ticket booking.</p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/#2-project-introduction","title":"2. Project Introduction","text":"<p>Today's protagonist is the Train 12306 project on GitHub. The overall idea of the project is straightforward. It will continuously check whether there are tickets left for the desired train at the desired time, order them if available, reserve seats, and send users a reminder email to pay on time.</p> <p>We also introduced the use of webdriver to control the browser and perform queries, clicks and other actions in the article Two-minute Build a Taobao Robot. So, what are the difficulties in the 12306 project? </p> <p>We find that when users query too many times, 12306 will require us to click on the captcha.</p> <p>For a real person, identifying these pictures is quite difficult, so how can the program identify them correctly? Here is a teaser, we'll discuss it later.</p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/#3-project-usage","title":"3. Project Usage","text":"<p>The project directory is shown below:</p> <p>The usage of the project is relatively simple. We only need to change the TickerConfig.py configuration file in the root directory. We need to fill in the departure date, train number, departure and arrival cities, passenger information, and your email (for receiving and sending reminder emails). Please note that you need to add the passengers (which doesn't have to be you) to your 12306 account first. In addition, when you set COOKIE_TYPE = 1, the project will use webdriver to control the browser, open the 12306 official website, and let users log in. Therefore, you need to download the driver applicable to your browser and fill in the path in the configuration file. We recommend this method.</p> <p>After filling in, we only need to run the following code to start the ticket grabbing task:</p> <pre><code>python run.py r\n</code></pre> <p>First, we need to log in to the 12306 account in the pop-up browser, then the program will automatically query the remaining tickets. The operation interface during the run is shown below:</p> <p>When someone returns a ticket or new train tickets are released and there are remaining tickets, the program will automatically place an order and send an email to the user. We only need to pay in time.</p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/#4-how-to-identify-the-captcha","title":"4. How to Identify the Captcha","text":"<p>Recognizing captchas effectively is a difficult problem, and the project uses the code in this repo. The overall design idea of the project is:</p> <ul> <li>Borrow Baidu's optical character recognition function and use a convolutional network-based character recognizer to recognize the Chinese characters to be found (in the example, it is an electronic scale and wind chime).</li> <li>Then train an image classifier to recognize which category the image belongs to.</li> <li>Use the result of the image classifier to continue training the character recognizer. The Chinese characters to be recognized must be among the results given by the image classifier.</li> </ul> <p>The technologies involved include deep learning-related convolutional networks, image hash similarity judgment to find similar images. In simple terms, image hash similarity judgment converts the image into a grayscale image, calculates the size relationship between each pixel and the average grayscale value of n pixels, and if it is greater than a certain threshold, it is marked as 1; if it is less than the threshold, it is marked as 0. This comparison result can be converted into an integer. This one integer can then be used to compare the similarity of different images. Interested readers can search for related content and explore further.</p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-10-12306ticket/#5-summary","title":"5. Summary","text":"<p>In my limited (once and only once) use of this project, it helped me successfully book a train ticket. It also strongly reminded me that \"high-tech\" such as deep learning can really have an impact on our daily lives. Various complex algorithms are not just empty theories, but can truly provide value. I hope that interested readers can continue to explore on the road to knowledge, and I also hope that everyone can buy a ticket for their journey.</p>","tags":["python","automation"]},{"location":"en/Main_Course/One_Day_Build/2021-11-27-fund_data/","title":"Obtaining Fund Market Data","text":"<p>Info</p> <p>Author: Void, published on November 27, 2021, estimated reading time: about 6 minutes, WeChat official account article link: </p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-11-27-fund_data/#1-introduction","title":"1 Introduction","text":"<p>As novice investors, we all have a dream of buying funds, buying stocks, navigating the stock market, and reaching the pinnacle of life. As non-professional investors, we often can only obtain information about financial products through apps provided by financial institutions such as Alipay, TianTian Fund, Danjuan Fund, and brokerages. Although the functions of these apps are constantly being improved, there are always times when they cannot meet our needs. For example, we may want to obtain the net value of a fund portfolio or calculate statistical indicators, correlation, volatility, etc. for the funds we purchased. How to obtain data on these financial products has become the first question of our scientific investment. This article will introduce how to use Python to obtain fund market data. The main considerations for selecting funds are: it is more difficult to obtain data for funds and fund portfolios than for stocks, and the audience for investing in funds seems to be slightly larger.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-11-27-fund_data/#2-obtaining-danjuan-fund-data","title":"2 Obtaining Danjuan Fund Data","text":"<p>I mainly purchase some fund portfolios through Danjuan Fund and TianTian Fund. Because of its aesthetics and ease of use, I am more inclined to use Danjuan Fund (not an ad). But its disadvantage is that it cannot efficiently export the net value of the portfolio. With the raw data, I can do some analysis, such as comparing multiple portfolios, calculating statistical indicators, etc.  </p> <p>We can open Danjuan Fund on the mobile app or computer side, and search for the portfolios we are concerned about, such as I Want to be Steady and Happy (for illustration only, not investment advice).</p> <p>The following figure shows its revenue trend.</p> <p>We can click on Net Value and Performance to jump to the net value and performance page.</p> <p>Although we have the data, we cannot easily export it. At this time, we can use the black technology Python to obtain the data we have been longing for. The first thing we need to do is to try to find the source of the data. We open the developer tool on the first page, click Network, and refresh the webpage.</p> <p>We find CSI1014?type=2&amp;day=all in the list of Names, and click on its Response on the right, or double-click it. We can see the net value data we want for each day.</p> <p>At this time, the data format is not very friendly, but we can use Python to obtain the above data and process it into the desired format.</p> <p><pre><code>import pandas as pd\nheader={\"User-Agent\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\"}\nimport requests\n\nurl='https://danjuanapp.com/djapi/plan/v2/growth/CSI1014?type=2&amp;day=all'\nresponse=requests.get(url,headers=header)\nf=pd.read_json(response.content)\nff=f.loc['fund_nav_growth','data']\nnav=pd.Series(index=[i['date'] for i in ff],data=[i['nav'] for i in ff],name='funds')\nnav=nav[nav.index&gt;'2020-01-01']\nnav=nav.astype(float)\nnav.plot(figsize=(20,10))\n</code></pre> In the above code, the url corresponds to the data we just found. We have processed the data into a DataFrame. Then we can easily export the data, or make charts and further analysis.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-11-27-fund_data/#3-summary","title":"3 Summary","text":"<p>We have successfully obtained the historical net value of the fund portfolio through Python crawlers. With the raw data, we can do more scientific analysis for our investment portfolio.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-12-04-renting_data/","title":"Obtaining rental housing data","text":"<p>Info</p> <p>Author: Echo, published on 2021-12-04, Reading time: about 6 minutes, WeChat Official Account article link: </p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-12-04-renting_data/#1-introduction","title":"1 Introduction","text":"<p>Attention all folks who rent or have houses for rent~</p> <p>Food, clothing, shelter, and transportation are the basic needs of life. Clothing and food are easy to deal with - you can buy new clothes and switch to a different restaurant if the food isn't good. But when it comes to housing, the cost of buying or renting a house is relatively high, which is why choosing the right place to live is so important. As a person who cannot currently afford to buy a house, I typically rely on real estate agents to help me find a rental, such as Ziroom, Beike, and Lianjia. Just like how Tieling is the end of the universe, Lianjia is the end of the road for finding a rental...Lianjia dominates the rental market and provides relatively fair information. However, when I scroll through more than ten houses, I can't remember all the information about each one, nor can I compare them visually. So let's get started and use the all-powerful Python to make Lianjia feel like your home, and obtain the information you want from Lianjia's website (this is not an advertisement)!</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-12-04-renting_data/#2-obtaining-housing-data","title":"2 Obtaining Housing Data","text":"<p>In this section, we will focus on the use of XPath and anti-spider techniques. XPath is an expression in the path language used to select nodes from an XML document, which can also be used to search HTML documents.</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2021-12-04-renting_data/#21-determining-the-url","title":"2.1 Determining the URL","text":"<p>Open the rental page on the Lianjia website</p>","tags":["python"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/","title":"Domain Registration and Filing Process","text":"<p>Info</p> <p>Author: Void, published on 2022-01-03, reading time: about 6 minutes, WeChat public account article link: </p>","tags":["server"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/#1-introduction","title":"1 Introduction","text":"<p>Today, it is cost-effective and easy to start your own services or build personal blogs by purchasing a cloud server like xx cloud.</p> <p>After having our own cloud server, we can access our website by its public IP address (e.g. 139.196.74.248). However, this string of numbers is not easy to remember. So, how do we give our website a catchy name? This article will introduce the whole process of domain registration and filing.</p>","tags":["server"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/#2-purchase-of-cloud-server-and-domain-name","title":"2 Purchase of Cloud Server and Domain Name","text":"<p>The purchase of a cloud server doesn't need much explanation. You can choose a configuration that meets your needs on Alibaba Cloud, Tencent Cloud and other various cloud services and purchase it at the right time (promotion). After having your own cloud server, you can follow the documentation of xx cloud to make some simple configurations and start your own services. Via the public IP, we should be able to see our services running successfully.</p> <p>Then we need to register a domain name. We can register a domain name through different websites. Here we take Wanwang, a subsidiary of Alibaba Cloud, as an example:</p> <p>We search the keyword <code>bullettech</code>. Some domain names with certain suffixes have already been registered by others. We can choose a suitable domain name with a proper suffix and place an order to purchase.</p> <p>The settlement page is as follows:</p> <p>You can see some important reminders here. Meanwhile, there are some additional services for us to choose from, such as filing manager service (with assistance by professionals in the filing process), cloud DNS (better resolving the domain name to a digital IP) and so on. In fact, DIY is not complicated and the built-in DNS parsing is already suitable. We didn't purchase any additional services for our own website. Readers can select them according to their needs.</p>","tags":["server"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/#3-domain-filing","title":"3 Domain Filing","text":"<p>After registering the domain name, we need real-name authentication. We can find the entrance to real-name authentication in our xx cloud and start it. Real-name authentication takes some time and will eventually be approved.</p> <p>Then, we can start filing at the ICP of the Ministry of Industry and Information Technology. Similarly, we can find the entrance to ICP filing in xx cloud and start filing. You need to fill in some information, such as the purpose of the website, and fill it in truthfully. Because our website belongs to personal and technological fields, the filing process is relatively simple. Finance-related and certain other websites may require additional processes.</p> <p>It is worth mentioning that the website name also has certain requirements. If it does not meet the requirements (such as containing national or regional words, commercial terms, forums, etc.), the filing may not be approved. The xx cloud will conduct preliminary review of the filing. If there is a problem with the website name, the customer service will communicate with you by phone. The website name itself has little role.</p> <p>After successfully submitting, we just need to wait for the review by the regulatory authority. Usually, the review time is not long. Below is the entire process of ICP filing:</p> <p>After the filing is approved, we also need to place the ICP filing number on the webpage and link it to <code>https://beian.miit.gov.cn</code>, which can be simply realized by HTML.</p>","tags":["server"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/#4-public-security-network-filing","title":"4 Public Security Network Filing","text":"<p>After filing the ICP with the Ministry of Industry and Information Technology, we need to apply for the public security network filing within 30 days after the website is opened by logging in to the <code>National Internet Security Management Service Platform</code>.</p>","tags":["server"]},{"location":"en/Main_Course/One_Day_Build/2022-01-03-domain/#5-conclusion","title":"5 Conclusion","text":"<p>It can be seen that the process of domain registration and filing is not complicated. Through the documentation of xx cloud and online information, our website completed the whole process in a short time and can be accessed by the domain name successfully.</p>","tags":["server"]},{"location":"tags/","title":"\u6587\u7ae0\u6807\u7b7e\u7cfb\u7edf","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u6807\u7b7e\u641c\u7d22\u672c\u7ad9\u6240\u6709\u7684\u6587\u7ae0\uff1a</p>"},{"location":"tags/#analytics","title":"analytics","text":"<ul> <li>\u6d45\u8c08Google Analytics</li> <li>SnowFlake\u67b6\u6784\u6982\u89c8</li> <li>SnowFlake\u6743\u9650\u6982\u89c8</li> <li>\u53cc\u91cd\u5dee\u5206\u5c0f\u4ecb</li> <li>A/B\u6d4b\u8bd5\u5b9e\u6218\u9879\u76ee</li> <li>SQL Tips\uff08\u4e00\uff09</li> <li>\u5229\u7528\u9012\u5f52\u601d\u60f3\u5904\u7406\u534a\u7ed3\u6784\u5316\u6570\u636e</li> <li>SQL Tips\uff08\u4e8c\uff09</li> <li>PySpark\u5c0f\u4ecb</li> <li>\u6d45\u8c08\u6570\u636e\u7684\u641c\u7d22\u548c\u6392\u5e8f</li> <li>\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u9009\u53d6</li> <li>\u65b9\u5dee\u5206\u6790</li> <li>Discussing Google Analytics</li> <li>Overview of SnowFlake Architecture</li> <li>SnowFlake Permission Overview</li> <li>Introduction to Difference-in-Differences</li> <li>A/B Test Practical Case Sharing, Facing Examiner's Questions with Confidence</li> <li>SQL tips</li> <li>Using Recursive Thinking to Process Semi-Structured Data</li> <li>SQL Tips</li> <li>Introduction to PySpark</li> <li>A Brief Discussion on Data Search and Sorting</li> <li>Efficacy Analysis - Selection of Minimum Sample Size n</li> <li>Analysis of Variance (ANOVA)</li> </ul>"},{"location":"tags/#app","title":"app","text":"<ul> <li>\u4e2a\u4eba\u7b14\u8bb0\u5e94\u7528 - Notion</li> <li>\u88c5\u673a\u5fc5\u5907\u4e4b\u5b9e\u7528\u7535\u8111\u8f6f\u4ef6</li> <li>Paste - \u526a\u5207\u677f\u5de5\u5177</li> <li>Copilot\u6d4b\u8bd5\u7248\u672c\u4f53\u9a8c</li> <li>PicGo\u56fe\u5e8a\uff0c\u529f\u80fd\u521a\u521a\u597d</li> <li>iOS Shortcuts\u6377\u5f84</li> <li>\u6709\u8da3\u7684API\u4ecb\u7ecd1.0</li> <li>Apache\u9879\u76ee\u4ecb\u7ecd</li> <li>Z-Library\uff0c\u4f18\u8d28\u79d1\u7814\u7535\u5b50\u4e66\u4e0b\u8f7d\u5e73\u53f0</li> <li>\u514d\u8d39\u5b9e\u9a8c\u5e73\u53f0 - Amazon SageMaker Studio Lab</li> <li>Powerful and Visually Appealing Personal Note App - Notion</li> <li>Let's get rid of my bookmarks - Practical computer software for installing machines</li> <li>Paste - Clipboard Tool</li> <li>2021 07 19 Copilot</li> <li>PicGo Image Hosting, Just Right</li> <li>iOS Shortcuts - The Automation Artifact</li> <li>Interesting API Introduction</li> <li>Introduction to Apache Projects</li> <li>Z-Library, a high-quality platform for downloading scientific e-books</li> <li>Free Experiment Platform - Amazon SageMaker Studio Lab</li> </ul>"},{"location":"tags/#automation","title":"automation","text":"<ul> <li>\u6dd8\u5b9d\u81ea\u52a8\u62a2\u5355</li> <li>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u722c\u866b</li> <li>\u722c\u53d6\u5e76\u4e0b\u8f7dURL\u4e0d\u53d8\u7684pdf\u6587\u4ef6</li> <li>PayPal\u804c\u4f4d\u722c\u866b</li> <li>12306\u667a\u80fd\u8ba2\u7968</li> <li>Build a Taobao Robotic Purchasing Tool in Two Minutes</li> <li>WeChat Mini Program Spider</li> <li>Crawl and download PDF files with unchanged URLs</li> <li>Python Web Scraping Application - Scraping PayPal Job Positions</li> <li>Intelligent Ticket Booking for Train 12306</li> </ul>"},{"location":"tags/#blockchain","title":"blockchain","text":"<ul> <li>Python\u5b9e\u73b0\u7b80\u5355\u533a\u5757\u94fe\u8d27\u5e01</li> <li>\u5229\u7528\u663e\u5361\u5b9e\u73b0\u5496\u5561\u81ea\u7531</li> <li>Using Graphics Cards to Achieve Daily Manner Freedom, You Can Too!</li> </ul>"},{"location":"tags/#bullettech","title":"bullettech","text":"<ul> <li>\u5173\u4e8eBulletTech</li> <li>\u6211\u4eec\u7684\u6545\u4e8b</li> <li>\u201c\u5e74\u7ec8\u201d\u6587\u7ae0\u56de\u987e\u53ca\u65b0\u83dc\u5355\u53d1\u5e03</li> <li>\"Year-end\" Article Review and New Menu Release</li> </ul>"},{"location":"tags/#cnn","title":"cnn","text":"<ul> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#database","title":"database","text":"<ul> <li>SnowFlake\u67b6\u6784\u6982\u89c8</li> <li>SnowFlake\u6743\u9650\u6982\u89c8</li> <li>SQL Tips\uff08\u4e00\uff09</li> <li>SQL Tips\uff08\u4e8c\uff09</li> <li>Overview of SnowFlake Architecture</li> <li>SnowFlake Permission Overview</li> <li>SQL tips</li> <li>SQL Tips</li> </ul>"},{"location":"tags/#deep-learning","title":"deep learning","text":"<ul> <li>Keras\u5404\u79cdCallbacks\u4ecb\u7ecd</li> <li>\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b</li> <li>\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow</li> <li>\u7b97\u6cd5\u4e2d\u7684multi\u5bb6\u65cf</li> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TabNet\u6a21\u578b\u4ecb\u7ecd</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>\u4f7f\u7528TensorFlow Decision Forests\u6784\u5efa\u6811\u6a21\u578b</li> <li>TensorFlow Playground\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Introduction to various Keras Callbacks</li> <li>Customizing Models with tf.keras</li> <li>Installing TensorFlow on Apple Silicon Macs</li> <li>The Multi-Family in Algorithms</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Reading \"30 Days to Eat TensorFlow2\"</li> <li>TensorFlow Recommender System (Part 1)</li> <li>Introduction to TabNet</li> <li>TensorFlow Recommendation System (2)</li> <li>2022 04 16 TF Text Classification</li> <li>Building Tree Models with TensorFlow Decision Forests</li> <li>Introduction to TensorFlow Playground</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#docker","title":"docker","text":"<ul> <li>Docker\u521d\u4f53\u9a8c</li> <li>\u6559\u4f60\u6210\u529f\u5728Win10\u7cfb\u7edf\u4e2d\u8fd0\u884cdocker</li> <li>\u4f7f\u7528GitHub Action\u81ea\u52a8\u63a8\u9001Docker\u955c\u50cf</li> <li>Docker\u4e4b\u6570\u636e\u7684\u6301\u7eed\u6027\u5316</li> <li>Docker\u8e29\u5751\u65e5\u8bb0</li> <li>First Experience with Docker</li> <li>Teaching You to Successfully Run Docker on Win10 System</li> <li>Automatically Build and Push Docker Image with GitHub Action</li> <li>Persisting Data in Docker</li> <li>Notes on Docker Pitfalls</li> </ul>"},{"location":"tags/#experience","title":"experience","text":"<ul> <li>\u5982\u4f55\u4ee5\u6700\u5feb\u7684\u901f\u5ea6\u5199\u51fa\u4e00\u7bc7\u4f18\u7f8e\u7684\u6587\u7ae0</li> <li>How to Write a Beautiful Article at the Fastest Speed</li> </ul>"},{"location":"tags/#git","title":"git","text":"<ul> <li>\u4e00\u884c\u4ee3\u7801\u90fd\u4e0d\u5199\uff0c\u6559\u4f60\u4f7f\u7528GitHub</li> <li>Git\u5e38\u7528\u547d\u4ee4\u4e00\u89c8</li> <li>GitHub\u4e5f\u53ef\u4ee5\u5f88\u597d\u73a9</li> <li>\u7528GitHub\u505a\u4e00\u4efd\u7cbe\u7f8e\u7684\u5728\u7ebf\u7b80\u5386</li> <li>GitHub Action\u6982\u89c8</li> <li>\u4f7f\u7528GitHub Action\u81ea\u52a8\u63a8\u9001Docker\u955c\u50cf</li> <li>How to Use GitHub without Writing a Single Line of Code</li> <li>A List of Common Git Commands</li> <li>Explore GitHub</li> <li>Creating a Beautiful Online Resume using GitHub</li> <li>GitHub Action Overview</li> <li>Automatically Build and Push Docker Image with GitHub Action</li> </ul>"},{"location":"tags/#hardware","title":"hardware","text":"<ul> <li>\u6362\u79cd\u59ff\u52bf\uff0c\u5728\u5bb6\u529e\u516c - \u7f57\u6280MX Keys + M720\u4e3b\u89c2\u8bc4\u6d4b</li> <li>\u521d\u8bc62020\u6b3e12.9\u82f1\u5bf8iPad Pro - \u672a\u6765\u53ef\u671f</li> <li>Apple Watch S5 \u4f7f\u7528\u4e00\u5e74\u611f\u53d7 - \u4e0d\u540e\u6094\uff01</li> <li>M1 Mac mini \u4f7f\u7528\u534a\u5e74\u4f53\u9a8c - Mac\u7684\u65b0\u672a\u6765</li> <li>Working from Home with a Different Posture - Logitech MX Keys + M720 Subjective Review</li> <li>2020 04 05 iPad Pro</li> <li>One Year's Use of Apple Watch S5 - No Regrets!</li> <li>Half-year Experience of M1 Mac mini - The New Future of Mac</li> </ul>"},{"location":"tags/#knowledge-graph","title":"knowledge graph","text":"<ul> <li>\u521d\u8bc6\u56fe\u6570\u636e\u5e93</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e00\uff09 - \u642d\u5efa\u5206\u6790\u73af\u5883</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e8c\uff09 - \u51c6\u5907\u6570\u636e</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u4e09\uff09 - \u8bc6\u522b\u72af\u7f6a\u56e2\u4f19</li> <li>Neo4J\u56fe\u6570\u636e\u5e93\u53cd\u6b3a\u8bc8\u5206\u6790\u5b9e\u6218\uff08\u56db\uff09 - \u98ce\u9669\u8bc4\u5206</li> <li>Introduction to Graph Databases</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (Part 1) - Building Analysis Environment</li> <li>Neo4J Graph Database Anti-Fraud Analysis in Practice (Part 2) - Prepare Data</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (III) - Identifying Criminal Groups</li> <li>Neo4J Graph Database Anti-Fraud Analysis Practice (Part 4) - Risk Scoring</li> </ul>"},{"location":"tags/#machine-learning","title":"machine learning","text":"<ul> <li>\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b</li> <li>\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0a\uff09</li> <li>\u8bfb\u300aRules of Machine Learning\u300b\u6709\u611f\uff08\u4e0b\uff09</li> <li>\u5929\u6c60\u96f6\u57fa\u7840\u91d1\u878d\u98ce\u63a7\u6bd4\u8d5b\u5c0f\u7ed3</li> <li>Kaggle tips</li> <li>Kaggle Optiver</li> <li>\u51b3\u7b56\u6811\u5b66\u4e60\u7b14\u8bb0</li> <li>Kaggle Jane Street</li> <li>\u795e\u7ecf\u7f51\u7edc\u8c03\u53c2\u6280\u5de7</li> <li>\u91d1\u878d\u98ce\u63a7\u7279\u5f81\u5de5\u7a0b</li> <li>\u7279\u5f81\u9009\u62e9\u5c0f\u4ecb</li> <li>KDD Cup2021\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u603b\u7ed3</li> <li>\u7279\u5f81\u9009\u62e9\u4e4bPermutation Importance</li> <li>\u96c6\u6210\u5b66\u4e60\u5c0f\u4ecb</li> <li>Kaggle\u91cf\u5316\u7ade\u8d5bTop\u65b9\u6848</li> <li>\u56e0\u679c\u63a8\u65ad\u4e4bUplift Model</li> <li>Machine Learning\u5b66\u4e60\u8d44\u6599\u6c47\u603b</li> <li>AMEX - Default Prediction Kaggle\u7ade\u8d5b\u7cbe\u534e\u603b\u7ed3</li> <li>Time Series Anomaly Detection</li> <li>Reflections on \"Rules of Machine Learning\" (Part 1)</li> <li>Reflections on \"Rules of Machine Learning\" (Part 2)</li> <li>Summary of Tianchi Zero-based Financial Risk Control Competition</li> <li>Kaggle Tips</li> <li>Notes on Decision Tree Learning</li> <li>Kaggle Jane Street Competition</li> <li>Tips for Tuning Neural Networks</li> <li>Summary of Feature Engineering in Financial Risk Control</li> <li>Summary of KDD Cup2021 Time Series Anomaly Detection Competition</li> <li>Permutation Importance for Feature Selection</li> <li>Introduction to Ensemble Learning</li> <li>Top Solutions for Kaggle Quantitative Competitions</li> <li>Uplift Model in Causal Inference</li> <li>Summary of Machine Learning Learning Resources (Continuously Updated)</li> <li>AMEX - Default Prediction Kaggle Competition Summary</li> </ul>"},{"location":"tags/#nlp","title":"nlp","text":"<ul> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>2022 04 16 TF Text Classification</li> </ul>"},{"location":"tags/#python","title":"python","text":"<ul> <li>\u6709\u8da3\u7684API\u4ecb\u7ecd1.0</li> <li>\u514d\u8d39\u5b9e\u9a8c\u5e73\u53f0 - Amazon SageMaker Studio Lab</li> <li>\u597d\u7528\u7684Python\u5305</li> <li>Python\u5143\u7ec4\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u5217\u8868\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u5b57\u5178\u5e38\u7528\u64cd\u4f5c\u5c0f\u6280\u5de7</li> <li>Python\u95ed\u5305\u6d45\u6790</li> <li>\u8bed\u6cd5\u89e3\u6790\u5de5\u5177sqlparse</li> <li>\u547d\u4ee4\u884c\u4ea4\u4e92\u5de5\u5177argparse</li> <li>Python\u98ce\u683c\u6700\u4f73\u5b9e\u8df5</li> <li>\u6dd8\u5b9d\u81ea\u52a8\u62a2\u5355</li> <li>\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u722c\u866b</li> <li>\u722c\u53d6\u5e76\u4e0b\u8f7dURL\u4e0d\u53d8\u7684pdf\u6587\u4ef6</li> <li>PayPal\u804c\u4f4d\u722c\u866b</li> <li>PySpark\u5c0f\u4ecb</li> <li>\u6d45\u8c08\u6570\u636e\u7684\u641c\u7d22\u548c\u6392\u5e8f</li> <li>\u6700\u5c0f\u6837\u672c\u91cfn\u7684\u9009\u53d6</li> <li>\u65b9\u5dee\u5206\u6790</li> <li>AMEX - Default Prediction Kaggle\u7ade\u8d5b\u7cbe\u534e\u603b\u7ed3</li> <li>\u57fa\u4e8eFlaskBB\u81ea\u5efa\u8bba\u575b</li> <li>\u89e3\u8bfbFlaskBB\u6e90\u7801</li> <li>12306\u667a\u80fd\u8ba2\u7968</li> <li>\u83b7\u53d6\u57fa\u91d1\u884c\u60c5\u6570\u636e</li> <li>\u79df\u623f\u4fe1\u606f\u83b7\u53d6</li> <li>Interesting API Introduction</li> <li>Free Experiment Platform - Amazon SageMaker Studio Lab</li> <li>Useful Python Packages</li> <li>Tips for Common Operations with Python Tuples</li> <li>Tips for Common Operations on Python Lists</li> <li>Tips for Common Operations on Python Dictionaries</li> <li>Understanding Python Closures</li> <li>SQL Parsing Tool: sqlparse</li> <li>Introduction to Python argparse module</li> <li>Build a Taobao Robotic Purchasing Tool in Two Minutes</li> <li>WeChat Mini Program Spider</li> <li>Crawl and download PDF files with unchanged URLs</li> <li>Python Web Scraping Application - Scraping PayPal Job Positions</li> <li>Introduction to PySpark</li> <li>A Brief Discussion on Data Search and Sorting</li> <li>Efficacy Analysis - Selection of Minimum Sample Size n</li> <li>Analysis of Variance (ANOVA)</li> <li>AMEX - Default Prediction Kaggle Competition Summary</li> <li>Building a forum based on FlaskBB</li> <li>Interpreting FlaskBB Source Code</li> <li>Intelligent Ticket Booking for Train 12306</li> <li>Obtaining Fund Market Data</li> <li>Obtaining rental housing data</li> </ul>"},{"location":"tags/#recommendation","title":"recommendation","text":"<ul> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>TensorFlow Recommender System (Part 1)</li> <li>TensorFlow Recommendation System (2)</li> </ul>"},{"location":"tags/#server","title":"server","text":"<ul> <li>\u57df\u540d\u6ce8\u518c\u53ca\u5907\u6848\u5168\u6d41\u7a0b</li> <li>Domain Registration and Filing Process</li> </ul>"},{"location":"tags/#tensorflow","title":"tensorflow","text":"<ul> <li>Keras\u5404\u79cdCallbacks\u4ecb\u7ecd</li> <li>\u4f7f\u7528tf.keras\u81ea\u5b9a\u4e49\u6a21\u578b</li> <li>\u5728Apple Silicon Macs\u4e0a\u5b89\u88c5TensorFlow</li> <li>\u6df1\u5ea6\u5b66\u4e60 101-\u642d\u5efa ResNet \u8bc6\u522b\u9c9c\u82b1\u56fe\u50cf</li> <li>\u8bfb\u300a30\u5929\u5403\u6389\u90a3\u53eaTensorFlow2\u300b</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e00\uff09</li> <li>TabNet\u6a21\u578b\u4ecb\u7ecd</li> <li>TensorFlow\u63a8\u8350\u7cfb\u7edf\uff08\u4e8c\uff09</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u6587\u672c\u5206\u7c7b</li> <li>\u4f7f\u7528TensorFlow Decision Forests\u6784\u5efa\u6811\u6a21\u578b</li> <li>TensorFlow Playground\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u89e3\u91ca\u5668\u7b80\u4ecb</li> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u56fe\u7247\u5206\u7c7b</li> <li>Introduction to various Keras Callbacks</li> <li>Customizing Models with tf.keras</li> <li>Installing TensorFlow on Apple Silicon Macs</li> <li>Deep Learning 101 - Building ResNet for Flower Image Recognition</li> <li>Reading \"30 Days to Eat TensorFlow2\"</li> <li>TensorFlow Recommender System (Part 1)</li> <li>Introduction to TabNet</li> <li>TensorFlow Recommendation System (2)</li> <li>2022 04 16 TF Text Classification</li> <li>Building Tree Models with TensorFlow Decision Forests</li> <li>Introduction to TensorFlow Playground</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Introduction to Convolutional Neural Network Explainer</li> <li>Image Classification with TensorFlow</li> </ul>"},{"location":"tags/#time-series","title":"time series","text":"<ul> <li>\u4f7f\u7528TensorFlow\u8fdb\u884c\u5355\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b</li> <li>\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b</li> <li>KDD Cup2021\u65f6\u95f4\u5e8f\u5217\u5f02\u5e38\u68c0\u6d4b\u7ade\u8d5b\u603b\u7ed3</li> <li>Univariate Time Series Prediction with TensorFlow</li> <li>Time Series Anomaly Detection</li> <li>Summary of KDD Cup2021 Time Series Anomaly Detection Competition</li> </ul>"},{"location":"tags/#usa","title":"usa","text":"<ul> <li>L\u7b7e\u8bc1\u6301\u6709\u8005\u5165\u5883\u7f8e\u56fd\u5907\u5fd8\u5f55</li> <li>\u8003\u53d6\u7f8e\u56fd\u9a7e\u7167\u7cbe\u7b80\u6307\u5357</li> <li>Memo for L Visa Holders to Enter the United States</li> <li>A Simplified Guide to Obtaining a US Driver's License</li> </ul>"}]}